{"version":3,"file":"index.min.js","sources":["src/mode.js","src/node/Node.js","src/style/unit.js","src/util.js","src/node/Xom.js","src/style/font.js","src/style/reset.js","src/style/css.js","src/node/LineBox.js","src/node/Text.js","src/node/LineGroup.js","src/geom/Geom.js","src/node/Dom.js","src/domDiff.js","src/node/Defs.js","src/node/Root.js","src/geom/Line.js","src/geom/Polyline.js","src/geom/Polygon.js","src/geom/Sector.js","src/geom/Rect.js","src/geom/Circle.js","src/geom/Ellipse.js","src/geom/Grid.js","src/index.js"],"sourcesContent":["const CANVAS = 0;\nconst SVG = 1;\n\nlet div;\n\nexport default {\n  CANVAS,\n  SVG,\n  measure(s, style) {\n    if(!div) {\n      div = document.createElement('div');\n      div.style.position = 'absolute';\n      div.style.left = '99999px';\n      div.style.top = '-99999px';\n      div.style.visibility = 'hidden';\n      document.body.appendChild(div);\n    }\n    div.style.fontSize = style.fontSize + 'px';\n    div.innerText = s;\n    let css = window.getComputedStyle(div, null);\n    return parseFloat(css.width);\n  }\n};\n","class Node {\n  constructor() {\n    this.__x = 0;\n    this.__y = 0;\n    this.__ox = 0; // relative/margin:auto/text-align等造成的偏移量\n    this.__oy = 0;\n    this.__tx = 0;\n    this.__ty = 0; // transform2d造成的偏移量\n    this.__width = 0;\n    this.__height = 0;\n    this.__prev = null;\n    this.__next = null;\n    this.__ctx = null; // canvas的context\n    this.__defs = null; // svg的defs\n    this.__parent = null;\n    this.__style = {}; // style被解析后的k-v形式\n    this.__baseLine = 0;\n    this.__virtualDom = {};\n  }\n\n  __offsetX(diff) {\n    this.__ox += diff;\n  }\n\n  __offsetY(diff) {\n    this.__oy += diff;\n  }\n\n  get x() {\n    return this.__x;\n  }\n  get y() {\n    return this.__y;\n  }\n  get ox() {\n    return this.__ox;\n  }\n  get oy() {\n    return this.__oy;\n  }\n  get tx() {\n    return this.__tx;\n  }\n  get ty() {\n    return this.__ty;\n  }\n  get rx() {\n    return this.x + this.ox;\n  }\n  get ry() {\n    return this.y + this.oy;\n  }\n  // svg的translate2d使用css实现\n  get sx() {\n    return this.rx - this.tx;\n  }\n  get sy() {\n    return this.ry - this.ty;\n  }\n  get width() {\n    return this.__width;\n  }\n  get height() {\n    return this.__height;\n  }\n  get outerWidth() {\n    return this.__width;\n  }\n  get outerHeight() {\n    return this.__height;\n  }\n  get prev() {\n    return this.__prev;\n  }\n  get next() {\n    return this.__next;\n  }\n  get parent() {\n    return this.__parent;\n  }\n  get root() {\n    if(this.parent) {\n      return this.parent.root;\n    }\n    return this;\n  }\n  get style() {\n    return this.__style;\n  }\n  get ctx() {\n    return this.__ctx;\n  }\n  get defs() {\n    return this.__defs;\n  }\n  get baseLine() {\n    return this.__baseLine;\n  }\n  get virtualDom() {\n    return this.__virtualDom;\n  }\n}\n\nexport default Node;\n","export default {\n  AUTO: 0,\n  PX: 1,\n  PERCENT: 2,\n};\n","let toString = {}.toString;\nfunction isType(type) {\n  return function(obj) {\n    return toString.call(obj) === '[object ' + type + ']';\n  }\n}\n\nlet isNumber = isType('Number');\n\nfunction joinSourceArray(arr) {\n  var res = '';\n  for(var i = 0, len = arr.length; i < len; i++) {\n    var item = arr[i];\n    if(Array.isArray(item)) {\n      res += joinSourceArray(item);\n    }\n    else {\n      res += stringify(item);\n    }\n  }\n  return res;\n}\n\nfunction stringify(s) {\n  if(isNil(s)) {\n    return '';\n  }\n  return s.toString();\n}\n\nfunction encodeHtml(s, prop) {\n  if(prop) {\n    return s.replace(/\"/g, '&quot;');\n  }\n  return s.replace(/&/g, '&amp;').replace(/</g, '&lt;');\n}\n\nfunction isNil(v) {\n  return v === undefined || v === null;\n}\n\nfunction joinVirtualDom(vd, nd) {\n  let s = '<defs>';\n  nd.forEach(item => {\n    s += joinDef(item);\n  });\n  s += '</defs><g>';\n  vd.bb.forEach(item => {\n    s += joinVd(item);\n  });\n  s += '</g><g>';\n  vd.children.forEach(item => {\n    s += joinVd(item);\n  });\n  s += '</g>';\n  return s;\n}\n\nfunction joinVd(vd) {\n  if(vd.type === 'item') {\n    let s = '';\n    vd.props.forEach(item => {\n      s += ` ${item[0]}=\"${item[1]}\"`;\n    });\n    if(vd.tagName === 'text') {\n      return `<text${s}>${vd.content}</text>`;\n    }\n    return `<${vd.tagName}${s}/>`;\n  }\n  else if(vd.type === 'text') {\n    let s = ``;\n    vd.children.forEach(item => {\n      s += joinVd(item);\n    });\n    return `<g>${s}</g>`;\n  }\n  else if(vd.type === 'dom' || vd.type === 'geom') {\n    let s = `<g transform=\"${joinTransform(vd.transform)}\">`;\n    vd.bb.forEach(item => {\n      s += joinVd(item);\n    });\n    s += '</g><g>';\n    vd.children.forEach(item => {\n      s += joinVd(item);\n    });\n    s += '</g>';\n    return `<g>${s}</g>`;\n  }\n}\n\nfunction joinTransform(transform) {\n  let s = '';\n  transform.forEach(item => {\n    s += `${item[0]}(${item[1]})`;\n  });\n  return s;\n}\n\nfunction joinDef(def) {\n  let s = `<${def.tagName} id=\"${def.uuid}\" gradientUnits=\"userSpaceOnUse\"`;\n  def.props.forEach(item => {\n    s += ` ${item[0]}=\"${item[1]}\"`;\n  });\n  s += '>';\n  def.stop.forEach(item => {\n    s += `<stop stop-color=\"${item[0]}\" offset=\"${item[1] * 100}%\"/>`;\n  });\n  s += `</${def.tagName}>`;\n  return s;\n}\n\nfunction r2d(n) {\n  return n * Math.PI / 180;\n}\n\nfunction rgb2int(color) {\n  let res = [];\n  if(color.charAt(0) === '#') {\n    color = color.slice(1);\n    if(color.length === 3) {\n      res.push(parseInt(color.charAt(0) + color.charAt(0), 16));\n      res.push(parseInt(color.charAt(1) + color.charAt(1), 16));\n      res.push(parseInt(color.charAt(2) + color.charAt(2), 16));\n    } else if(color.length === 6) {\n      res.push(parseInt(color.slice(0, 2), 16));\n      res.push(parseInt(color.slice(2, 4), 16));\n      res.push(parseInt(color.slice(4), 16));\n    }\n  }\n  else {\n    let c = color.match(/rgba?\\s*\\(\\s*(\\d+)\\s*,\\s*(\\d+)\\s*,\\s*(\\d+)(?:\\s*,\\s*([\\d.]+))?\\s*\\)/i);\n    if(c) {\n      res = [parseInt(c[1]), parseInt(c[2]), parseInt(c[3])];\n      if(c[4]) {\n        res[3] = parseFloat(c[4]);\n      }\n\n    }\n  }\n  return res;\n}\n\nfunction arr2hash(arr) {\n  let hash = {};\n  for(let i = 0, len = arr.length; i < len; i++) {\n    let item = arr[i];\n    if(Array.isArray(item)) {\n      hash[item[0]] = item[1];\n    }\n    else {\n      for(let list = Object.keys(item), j = list.length - 1; j >= 0; j--) {\n        let k = list[j];\n        hash[k] = item[k];\n      }\n    }\n  }\n  return hash;\n}\n\nfunction hash2arr(hash) {\n  let arr = [];\n  for(let list = Object.keys(hash), i = 0, len = list.length; i < len; i++) {\n    let k = list[i];\n    arr.push([k, hash[k]]);\n  }\n  return arr;\n}\n\nlet util = {\n  isObject: isType('Object'),\n  isString: isType('String'),\n  isFunction: isType('Function'),\n  isNumber,\n  isBoolean: isType('Boolean'),\n  isDate: isType('Date'),\n  stringify,\n  joinSourceArray(arr) {\n    return joinSourceArray(arr);\n  },\n  encodeHtml,\n  isNil,\n  joinVirtualDom,\n  joinVd,\n  joinTransform,\n  joinDef,\n  r2d,\n  rgb2int,\n  arr2hash,\n  hash2arr,\n};\n\nexport default util;\n","import Node from './Node';\nimport mode from '../mode';\nimport unit from '../style/unit';\nimport util from '../util';\n\nfunction spread(arr) {\n  for(let i = 0, len = arr.length; i < len; i++) {\n    let item = arr[i];\n    if(!Array.isArray(item)) {\n      let temp = [];\n      for(let list = Object.keys(item), j = 0, len = list.length; j < len; j++) {\n        let k = list[j];\n        temp.push([k, item[k]]);\n      }\n      arr.splice(i, 1, ...temp);\n    }\n  }\n  return arr;\n}\n\n/* 获取合适的虚线实体空白宽度ps/pd和数量n\n * 总长total，start边长bs，end边长be，内容长w，\n * 实体长范围[smin,smax]，空白长范围[dmin,dmax]\n */\nfunction getFitDashed(total, bs, be, w, smin, smax, dmin, dmax) {\n  let n = 1;\n  let ps = 1;\n  let pd = 1;\n  // 从最大实体空白长开始尝试\n  outer:\n  for(let i = smax; i >= smin; i--) {\n    for(let j = dmax; j >= dmin; j--) {\n      // 已知实体空白长度，n实体和n-1空白组成total，计算获取n数量\n      let per = i + j;\n      let num = Math.floor((total + j) / per);\n      let k = j;\n      // 可能除不尽，此时扩展空白长\n      if(num * per < j + total) {\n        let free = total - num * i;\n        k = free / (num - 1);\n        if(k > dmax) {\n          continue;\n        }\n      }\n      per = i + k;\n      // bs比实体大才有效，因为小的话必定和第一个实体完整相连\n      if(bs > 1 && bs > i) {\n        let mo = bs % per;\n        if(mo > i) {\n          continue;\n        }\n        if(be > 1) {\n          let mo = (bs + w) % per;\n          if(mo > i) {\n            continue;\n          }\n        }\n      }\n      if(be > 1) {\n        let mo = (bs + w) % per;\n        if(mo > i) {\n          continue;\n        }\n      }\n      if(num > 0) {\n        n = num;\n        ps = i;\n        pd = k;\n      }\n      break outer;\n    }\n  }\n  return {\n    n,\n    ps,\n    pd,\n  };\n}\n\n// dashed时n个实线和n-1虚线默认以3:1宽度组成，dotted则是n和n以1:1组成\nfunction getDashed(style, m1, m2, m3, m4, bw) {\n  let total = m4 - m1;\n  let w = m3 - m2;\n  let bs = m2 - m1;\n  let be = m4 - m3;\n  if(style === 'dotted') {\n    return getFitDashed(total, bs, be, w, bw, bw, Math.max(1, bw * 0.25), bw * 2);\n  }\n  else {\n    let { n, ps, pd } = getFitDashed(total, bs, be, w, bw, bw * 3, Math.max(1, bw * 0.25), bw * 2);\n    if(n === 1) {\n      return getFitDashed(total, bs, be, w, bw, bw, Math.max(1, bw * 0.25), bw * 2);\n    }\n    // 降级为dotted\n    return { n, ps, pd };\n  }\n}\n\nfunction renderBorder(renderMode, points, color, ctx, xom) {\n  if(renderMode === mode.CANVAS) {\n    points.forEach(point => {\n      ctx.beginPath();\n      ctx.fillStyle = color;\n      ctx.moveTo(point[0], point[1]);\n      for(let i = 2, len = point.length; i < len; i += 2) {\n        ctx.lineTo(point[i], point[i + 1]);\n      }\n      ctx.fill();\n      ctx.closePath();\n    });\n  }\n  else if(renderMode === mode.SVG) {\n    let s = '';\n    points.forEach(point => {\n      s += `M ${point[0]} ${point[1]}`;\n      for(let i = 2, len = point.length; i < len; i += 2) {\n        s += `L ${point[i]} ${point[i + 1]} `;\n      }\n    });\n    let item = {\n      type: 'item',\n      tagName: 'path',\n      props: [\n        ['d', s],\n        ['fill', color],\n      ],\n    };\n    xom.addBorder([\n      ['d', s],\n      ['fill', color],\n    ]);\n  }\n}\n\n// 当linear-gradient的值超过[0,1]区间限制时，计算其对应区间1的值\nfunction getCsStartLimit(c1, p1, c2, p2, length) {\n  let [ r1, g1, b1, a1 = 1 ] = c1;\n  let [ r2, g2, b2, a2 = 1 ] = c2;\n  let l1 = Math.abs(p1) * length;\n  let l2 = p2 * length;\n  let p = l1 / (l2 + l1);\n  let r = Math.floor(r1 + (r2 - r1) * p);\n  let g = Math.floor(g1 + (g2 - g1) * p);\n  let b = Math.floor(b1 + (b2 - b1) * p);\n  let a = a1 + (a2 - a1) * p;\n  return [r, g, b, a];\n}\n\nfunction getCsEndLimit(c1, p1, c2, p2, length) {\n  let [ r1, g1, b1, a1 = 1 ] = c1;\n  let [ r2, g2, b2, a2 = 1 ] = c2;\n  let l1 = p1 * length;\n  let l2 = p2 * length;\n  let p = (length - l1) / (l2 - l1);\n  let r = Math.floor(r1 + (r2 - r1) * p);\n  let g = Math.floor(g1 + (g2 - g1) * p);\n  let b = Math.floor(b1 + (b2 - b1) * p);\n  let a = a1 + (a2 - a1) * p;\n  return [r, g, b, a];\n}\n\nfunction getCsLimit(first, last, length) {\n  let c1 = util.rgb2int(first[0]);\n  let c2 = util.rgb2int(last[0]);\n  let [ r1, g1, b1, a1 = 1 ] = c1;\n  let [ r2, g2, b2, a2 = 1 ] = c2;\n  let l1 = Math.abs(first[1]) * length;\n  let l2 = last[1] * length;\n  let p = l1 / (l1 + l2);\n  let r = Math.floor(r1 + (r2 - r1) * p);\n  let g = Math.floor(g1 + (g2 - g1) * p);\n  let b = Math.floor(b1 + (b2 - b1) * p);\n  let a = a1 + (a2 - a1) * p;\n  first[0] = `rgba(${r},${g},${b},${a})`;\n  first[1] = 0;\n  p = (length + l1) / (l1 + l2);\n  r = Math.floor(r1 + (r2 - r1) * p);\n  g = Math.floor(g1 + (g2 - g1) * p);\n  b = Math.floor(b1 + (b2 - b1) * p);\n  a = a1 + (a2 - a1) * p;\n  last[0] = `rgba(${r},${g},${b},${a})`;\n  last[1] = 1;\n}\n\n// 获取color-stop区间范围，去除无用值\nfunction getColorStop(v, length) {\n  let list = [];\n  // 先把已经声明距离的换算成[0,1]以数组形式存入，未声明的原样存入\n  for(let i = 1, len = v.length; i < len; i++) {\n    let item = v[i];\n    // 考虑是否声明了位置\n    let arr = item.trim().split(/\\s+/);\n    if(arr.length > 1) {\n      let c = arr[0];\n      let p = arr[1];\n      if(/%$/.test(p)) {\n        list.push([c, parseFloat(p) * 0.01]);\n      }\n      else {\n        list.push([c, parseFloat(p) / length]);\n      }\n    }\n    else {\n      list.push(arr[0]);\n    }\n  }\n  // 首尾不声明默认为[0, 1]\n  if(list.length > 1) {\n    if(!Array.isArray(list[0])) {\n      list[0] = [list[0], 0];\n    }\n    if(!Array.isArray(list[list.length - 1])) {\n      list[list.length - 1] = [list[list.length - 1], 1];\n    }\n  }\n  else if(!Array.isArray(list[0])) {\n    list[0] = [list[0], 0];\n  }\n  // 不是数组形式的是未声明的，需区间计算，找到连续的未声明的，前后的区间平分\n  let start = list[0][1];\n  for(let i = 1, len = list.length; i < len - 1; i++) {\n    let item = list[i];\n    if(Array.isArray(item)) {\n      start = item[1];\n    }\n    else {\n      let j = i + 1;\n      let end = list[list.length - 1][1];\n      for(; j < len - 1; j++) {\n        let item = list[j];\n        if(Array.isArray(item)) {\n          end = item[1];\n          break;\n        }\n      }\n      let num = j - i + 1;\n      let per = (end - start) / num;\n      for(let k = i;k < j; k++) {\n        let item = list[k];\n        list[k] = [item, start + per * (k + 1 - i)];\n      }\n      i = j;\n    }\n  }\n  // 每个不能小于前面的，canvas/svg不能兼容这种情况，需处理\n  for(let i = 1, len = list.length; i < len; i++) {\n    let item = list[i];\n    let prev = list[i - 1];\n    if(item[1] < prev[1]) {\n      item[1] = prev[1];\n    }\n  }\n  // 0之前的和1之后的要过滤掉\n  for(let i = 0, len = list.length; i < len - 1; i++) {\n    let item = list[i];\n    if(item[1] > 1) {\n      list.splice(i + 1);\n      break;\n    }\n  }\n  for(let i = list.length - 1; i > 0; i--) {\n    let item = list[i];\n    if(item[1] < 0) {\n      list.splice(0, i);\n      break;\n    }\n  }\n  // 可能存在超限情况，如在使用px单位超过len或<len时，canvas会报错超过[0,1]区间，需手动换算至区间内\n  let len = list.length;\n  // 在只有1个的情况下可简化\n  if(len === 1) {\n    list[0][1] = 0;\n  }\n  else {\n    // 全部都在[0,1]之外也可以简化\n    let allBefore = true;\n    let allAfter = true;\n    for(let i = len - 1; i >= 0; i--) {\n      let item = list[i];\n      let p = item[1];\n      if(p > 0) {\n        allBefore = false;\n      }\n      if(p < 1) {\n        allAfter = false;\n      }\n    }\n    if(allBefore) {\n      list.splice(0, len - 1);\n      list[0][1] = 0;\n    }\n    else if(allAfter) {\n      list.splice(1);\n      list[0][1] = 0;\n    }\n    // 部分在区间之外需复杂计算\n    else {\n      let first = list[0];\n      let last = list[len - 1];\n      // 只要2个的情况下就是首尾都落在外面\n      if(len === 2) {\n        if(first[1] < 0 && last[1] > 1) {\n          getCsLimit(first, last, length);\n        }\n      }\n      // 只有1个在外面的情况较为容易\n      else {\n        if(first[1] < 0) {\n          let next = list[1];\n          let c1 = util.rgb2int(first[0]);\n          let c2 = util.rgb2int(next[0]);\n          let c = getCsStartLimit(c1, first[1], c2, next[1], length);\n          first[0] = `rgba(${c[0]},${c[1]},${c[2]},${c[3]})`;\n          first[1] = 0;\n        }\n        if(last[1] > 1) {\n          let prev = list[len - 2];\n          let c1 = util.rgb2int(prev[0]);\n          let c2 = util.rgb2int(last[0]);\n          let c = getCsEndLimit(c1, prev[1], c2, last[1], length);\n          last[0] = `rgba(${c[0]},${c[1]},${c[2]},${c[3]})`;\n          last[1] = 1;\n        }\n      }\n    }\n  }\n  // 防止精度计算溢出[0,1]\n  list.forEach(item => {\n    if(item[1] < 0) {\n      item[1] = 0;\n    }\n    else if(item[1] > 1) {\n      item[1] = 1;\n    }\n  });\n  return list;\n}\n\nclass Xom extends Node {\n  constructor(tagName, props) {\n    super();\n    props = props || [];\n    // 构建工具中都是arr，手写可能出现hash情况\n    if(Array.isArray(props)) {\n      this.props = util.arr2hash(props);\n      this.__props = spread(props);\n    }\n    else {\n      this.props = props;\n      this.__props = util.hash2arr(props);\n    }\n    this.__tagName = tagName;\n    this.__style = this.props.style || {}; // style被解析后的k-v形式\n    this.__listener = {};\n    this.__props.forEach(item => {\n      let k = item[0];\n      if(/^on[a-zA-Z]/.test(k)) {\n        this.__listener[k.slice(2).toLowerCase()] = item[1];\n      }\n    });\n    // margin和padding的宽度\n    this.__mtw = 0;\n    this.__mrw = 0;\n    this.__mbw = 0;\n    this.__mlw = 0;\n    this.__ptw = 0;\n    this.__prw = 0;\n    this.__pbw = 0;\n    this.__plw = 0;\n  }\n\n  __layout(data) {\n    let { w } = data;\n    let { style: {\n      display,\n      width,\n      marginTop,\n      marginRight,\n      marginBottom,\n      marginLeft,\n      paddingTop,\n      paddingRight,\n      paddingBottom,\n      paddingLeft,\n    } } = this;\n    if(display === 'none') {\n      return;\n    }\n    if(width && width.unit !== unit.AUTO) {\n      switch(width.unit) {\n        case unit.PX:\n          w = width.value;\n          break;\n        case unit.PERCENT:\n          w *= width.value * 0.01;\n          break;\n      }\n    }\n    this.__mlw = this.__mpWidth(marginLeft, w);\n    this.__mtw = this.__mpWidth(marginTop, w);\n    this.__mrw = this.__mpWidth(marginRight, w);\n    this.__mbw = this.__mpWidth(marginBottom, w);\n    this.__plw = this.__mpWidth(paddingLeft, w);\n    this.__ptw = this.__mpWidth(paddingTop, w);\n    this.__prw = this.__mpWidth(paddingRight, w);\n    this.__pbw = this.__mpWidth(paddingBottom, w);\n    if(display === 'block') {\n      this.__layoutBlock(data);\n    }\n    else if(display === 'flex') {\n      this.__layoutFlex(data);\n    }\n    else if(display === 'inline') {\n      this.__layoutInline(data);\n    }\n  }\n\n  // 获取margin/padding的实际值\n  __mpWidth(mp, w) {\n    if(mp.unit === unit.PX) {\n      return mp.value;\n    }\n    else if(mp.unit === unit.PERCENT) {\n      return mp.value * w * 0.01;\n    }\n    return 0;\n  }\n\n  render(renderMode) {\n    if(renderMode === mode.SVG) {\n      this.__virtualDom = {\n        bb: [],\n        children: [],\n        transform: [],\n      };\n    }\n    let { ctx, style, width, height, mlw, mtw, plw, ptw, prw, pbw } = this;\n    let {\n      display,\n      position,\n      top,\n      right,\n      bottom,\n      left,\n      backgroundGradient: bgg,\n      backgroundColor: bgc,\n      borderTopWidth,\n      borderTopColor: btc,\n      borderTopStyle: bts,\n      borderRightWidth,\n      borderRightColor: brc,\n      borderRightStyle: brs,\n      borderBottomWidth,\n      borderBottomColor: bbc,\n      borderBottomStyle: bbs,\n      borderLeftWidth,\n      borderLeftColor: blc,\n      borderLeftStyle : bls,\n      transform,\n    } = style;\n    if(display === 'none') {\n      return;\n    }\n    // 除root节点外relative渲染时做偏移，百分比基于父元素，若父元素没有一定高则为0\n    if(position === 'relative' && this.parent) {\n      let { width, height } = this.parent;\n      let h = this.parent.style.height;\n      if(left.unit !== unit.AUTO) {\n        let diff = left.unit === unit.PX ? left.value : left.value * width * 0.01;\n        this.__offsetX(diff);\n      }\n      else if(right.unit !== unit.AUTO) {\n        let diff = right.unit === unit.PX ? right.value : right.value * width * 0.01;\n        this.__offsetX(-diff);\n      }\n      if(top.unit !== unit.AUTO) {\n        let diff = top.unit === unit.PX ? top.value : top.value * height * 0.01 * (h.unit === unit.AUTO ? 0 : 1);\n        this.__offsetY(diff);\n      }\n      else if(bottom.unit !== unit.AUTO) {\n        let diff = bottom.unit === unit.PX ? bottom.value : bottom.value * height * 0.01 * (h.unit === unit.AUTO ? 0 : 1);\n        this.__offsetY(-diff);\n      }\n    }\n    // translate相对于自身\n    if(transform) {\n      let { translateX, translateY } = transform;\n      let svgTf = [];\n      if(translateX) {\n        let diff = translateX.unit === unit.PX ? translateX.value : translateX.value * width * 0.01;\n        this.__tx = diff;\n        // canvas无法实现css的translate2d，直接变换坐标\n        if(renderMode === mode.CANVAS) {\n          this.__offsetX(diff);\n        }\n        else if(renderMode === mode.SVG) {\n          svgTf.push(diff);\n        }\n      }\n      if(translateY) {\n        let diff = translateY.unit === unit.PX ? translateY.value : translateY.value * height * 0.01;\n        this.__ty = diff;\n        if(renderMode === mode.CANVAS) {\n          this.__offsetY(diff);\n        }\n        else if(renderMode === mode.SVG) {\n          svgTf.push(diff);\n        }\n      }\n      if(renderMode === mode.SVG) {\n        this.addTransform(['translate', svgTf.join(',')]);\n      }\n    }\n    // 使用rx和ry渲染位置，考虑了relative和translate影响\n    let { rx: x, ry: y } = this;\n    let btw = borderTopWidth.value;\n    let brw = borderRightWidth.value;\n    let bbw = borderBottomWidth.value;\n    let blw = borderLeftWidth.value;\n    let x1 = x + mlw;\n    let x2 = x1 + blw;\n    let x3 = x2 + width + plw + prw;\n    let x4 = x3 + brw;\n    let y1 = y + mtw;\n    let y2 = y1 + btw;\n    let y3 = y2 + height + ptw + pbw;\n    let y4 = y3 + bbw;\n    let iw = width + plw + prw;\n    let ih = height + ptw + pbw;\n    // 先渲染渐变，没有则背景色\n    if(bgg) {\n      let { k, v } = bgg;\n      if(k === 'linear') {\n        let deg = 180;\n        if(v[0] === 'to top') {\n          deg = 0;\n        }\n        else if(v[0] === 'to top right') {\n          deg = 45;\n        }\n        else if(v[0] === 'to right') {\n          deg = 90;\n        }\n        else if(v[0] === 'to bottom right') {\n          deg = 135;\n        }\n        else if(v[0] === 'to bottom') {\n        }\n        else if(v[0] === 'to bottom left') {\n          deg = 225;\n        }\n        else if(v[0] === 'to left') {\n          deg = 270;\n        }\n        else if(v[0] === 'to top left') {\n          deg = 315;\n        }\n        // 数字角度，没有的话取默认角度\n        else {\n          let match = /([\\d.]+)deg/.exec(v[0]);\n          if(match) {\n            deg = parseFloat(match[1]);\n          }\n          else {\n            v.unshift(null);\n          }\n        }\n        // 需计算角度 https://www.w3cplus.com/css3/do-you-really-understand-css-linear-gradients.html\n        let r = util.r2d(deg);\n        let length = Math.abs(iw * Math.sin(r)) + Math.abs(ih * Math.cos(r));\n        let half = length * 0.5;\n        if(deg >= 360) {\n          deg = deg % 360;\n        }\n        while(deg < 0) {\n          deg += 360;\n        }\n        let cx = x2 + iw * 0.5;\n        let cy = y2 + ih * 0.5;\n        let xx0 = x3;\n        let yy0 = y3;\n        let xx1 = x2;\n        let yy1 = y2;\n        if(deg >= 270) {\n          let r = util.r2d(360 - deg);\n          xx0 = cx + Math.sin(r) * half;\n          yy0 = cy + Math.cos(r) * half;\n          xx1 = cx - Math.sin(r) * half;\n          yy1 = cy - Math.cos(r) * half;\n        }\n        else if(deg >= 180) {\n          let r = util.r2d(deg - 180);\n          xx0 = cx + Math.sin(r) * half;\n          yy0 = cy - Math.cos(r) * half;\n          xx1 = cx - Math.sin(r) * half;\n          yy1 = cy + Math.cos(r) * half;\n        }\n        else if(deg >= 90) {\n          let r = util.r2d(180 - deg);\n          xx0 = cx - Math.sin(r) * half;\n          yy0 = cy - Math.cos(r) * half;\n          xx1 = cx + Math.sin(r) * half;\n          yy1 = cy + Math.cos(r) * half;\n        }\n        else if(deg >= 0) {\n          let r = util.r2d(deg);\n          xx0 = cx - Math.sin(r) * half;\n          yy0 = cy + Math.cos(r) * half;\n          xx1 = cx + Math.sin(r) * half;\n          yy1 = cy - Math.cos(r) * half;\n        }\n        // 计算colorStop\n        let list = getColorStop(v, length);\n        if(renderMode === mode.CANVAS) {\n          let lg = ctx.createLinearGradient(xx0, yy0, xx1, yy1);\n          list.forEach(item => {\n            lg.addColorStop(item[1], item[0]);\n          });\n          ctx.beginPath();\n          ctx.fillStyle = lg;\n          ctx.rect(x2, y2, iw, ih);\n          ctx.fill();\n          ctx.closePath();\n        }\n        else if(renderMode === mode.SVG) {\n          let uuid = this.defs.add({\n            tagName: 'linearGradient',\n            props: [\n              ['x1', xx0],\n              ['y1', yy0],\n              ['x2', xx1],\n              ['y2', yy1]\n            ],\n            stop: list,\n          });\n          this.addBackground([\n            ['x', x2],\n            ['y', y2],\n            ['width', iw],\n            ['height', ih],\n            ['fill', `url(#${uuid})`]\n          ]);\n        }\n      }\n      else if(k === 'radial') {\n        let cx = x2 + iw * 0.5;\n        let cy = y2 + ih * 0.5;\n        let size = 'farthest-corner';\n        let r; // 半径\n        // 申明了形状、圆心、size等\n        if(/circle|ellipse|at|closest|farthest/i.test(v[0])\n          || !/#[0-9a-f]{3,6}/i.test(v[0]) && !/\\brgba?\\(.*\\)/i.test(v[0])) {\n          let i = v[0].indexOf('at');\n          let at;\n          let s;\n          if(i > -1) {\n            at = v[0].slice(i + 2);\n            s = v[0].slice(0, i - 1);\n          }\n          s = /(closest|farthest)-(side|corner)/.exec(s);\n          if(s) {\n            size = s[0];\n          }\n          // 指定宽高后size失效，置null标识\n          else {\n            s = /\\s+(-?[\\d.]+(?:px|%))\\s*(-?[\\d.]+(?:px|%))?/.exec(s);\n            if(s) {\n              size = null;\n              if(s[1].indexOf('px') > -1) {\n                r = parseFloat(s[1]) * 0.5;\n              }\n              else {\n                r = parseFloat(s[1]) * iw * 0.005;\n              }\n            }\n          }\n          if(at) {\n            s = /\\s+(-?[\\d.]+(?:px|%))\\s*(-?[\\d.]+(?:px|%))?/.exec(at);\n            if(s) {\n              if(s[1].indexOf('px') > -1) {\n                cx = x2 + parseFloat(s[1]);\n              }\n              else {\n                cx =  x2 + parseFloat(s[1]) * iw * 0.01;\n              }\n              // y可以省略，此时等同于x\n              let by = s[2] || s[1];\n              if(by.indexOf('px') > -1) {\n                cy = y2 + parseFloat(by);\n              }\n              else {\n                cy = y2 + parseFloat(by) * ih * 0.01;\n              }\n            }\n          }\n        }\n        else {\n          v.unshift(null);\n        }\n        if(size) {\n          if(size === 'closest-side') {\n            // 在边外特殊情况只有end颜色填充\n            if(cx <= x2 || cx >= x3 || cy <= y2 || cy >= y3) {\n              r = 0;\n            }\n            else {\n              let xl;\n              let yl;\n              if(cx < x2 + iw * 0.5) {\n                xl = cx - x2;\n              } else {\n                xl = x3 - cx;\n              }\n              if(cy < y2 + ih * 0.5) {\n                yl = cy - y2;\n              } else {\n                yl = y3 - cy;\n              }\n              r = Math.min(xl, yl);\n            }\n          }\n          else if(size === 'closest-corner') {\n            let xl;\n            let yl;\n            if(cx < x2 + iw * 0.5) {\n              xl = cx - x2;\n            }\n            else {\n              xl = x3 - cx;\n            }\n            if(cy < y2 + ih * 0.5) {\n              yl = cy - y2;\n            }\n            else {\n              yl = y3 - cy;\n            }\n            r = Math.sqrt(Math.pow(xl, 2) + Math.pow(yl, 2));\n          }\n          else if(size === 'farthest-side') {\n            if(cx <= x2) {\n              r = x2 - cx + iw;\n            }\n            else if(cx >= x3) {\n              r = cx - x3 + iw;\n            }\n            else if(cy <= y2) {\n              r = y2 - cy + ih;\n            }\n            else if(cx >= y3) {\n              r = cy - y3 + ih;\n            }\n            else {\n              let xl = Math.max(x3 - cx, cx - x2);\n              let yl = Math.max(y3 - cy, cy - y2);\n              r = Math.max(xl, yl);\n            }\n          }\n          // 默认farthest-corner\n          else {\n            let xl;\n            let yl;\n            if(cx < x2 + iw * 0.5) {\n              xl = x3 - cx;\n            }\n            else {\n              xl = cx - x2;\n            }\n            if(cy < y2 + ih * 0.5) {\n              yl = y3 - cy;\n            }\n            else {\n              yl = cy - y2;\n            }\n            r = Math.sqrt(Math.pow(xl, 2) + Math.pow(yl, 2));\n          }\n        }\n        // 计算colorStop\n        let list = getColorStop(v, r * 2);\n        // 超限情况等同于只显示end的bgc\n        if(r <= 0) {\n          let end = list[list.length - 1];\n          end[1] = 0;\n          list = [end];\n          cx = x2;\n          cy = y2;\n          // 肯定大于最长直径\n          r = iw + ih;\n        }\n        if(renderMode === mode.CANVAS) {\n          let rg = ctx.createRadialGradient(cx, cy, 0, cx, cy, r);\n          list.forEach(item => {\n            rg.addColorStop(item[1], item[0]);\n          });\n          ctx.beginPath();\n          ctx.fillStyle = rg;\n          ctx.rect(x2, y2, iw, ih);\n          ctx.fill();\n          ctx.closePath();\n        }\n        else if(renderMode === mode.SVG) {\n          let uuid = this.defs.add({\n            tagName: 'radialGradient',\n            props: [\n              ['cx', cx],\n              ['cy', cy],\n              ['r', r]\n            ],\n            stop: list,\n          });\n          this.addBackground([\n            ['x', x2],\n            ['y', y2],\n            ['width', iw],\n            ['height', ih],\n            ['fill', `url(#${uuid})`]\n          ]);\n        }\n      }\n    }\n    else if(bgc && bgc !== 'transparent') {\n      if(renderMode === mode.CANVAS) {\n        ctx.beginPath();\n        ctx.fillStyle = bgc;\n        ctx.rect(x2, y2, iw, ih);\n        ctx.fill();\n        ctx.closePath();\n      }\n      else if(renderMode === mode.SVG) {\n        this.addBackground([\n          ['x', x2],\n          ['y', y2],\n          ['width', iw],\n          ['height', ih],\n          ['fill', bgc]\n        ]);\n      }\n    }\n    // 边框需考虑尖角，两条相交边平分45°夹角\n    if(btw > 0 && btc !== 'transparent') {\n      let points = [];\n      if(['dashed', 'dotted'].indexOf(bts) > -1) {\n        // 寻找一个合适的虚线线段长度和之间空白边距长度\n        let { n, ps, pd } = getDashed(bts, x1, x2, x3, x4, btw);\n        if(n <= 1) {\n          points.push([x1, y1, x4, y1, x3, y2, x2, y2]);\n        }\n        else {\n          let deg1 = Math.atan(btw / blw);\n          let deg2 = Math.atan(btw / brw);\n          for(let i = 0; i < n; i++) {\n            // 最后一个可能没有到底，延长之\n            let isLast = i === n - 1;\n            let xx1 = i ? (x1 + ps * i + pd * i) : x1;\n            let xx4 = xx1 + ps;\n            let yy1;\n            let yy2;\n            // 整个和borderLeft重叠\n            if(xx4 < x2) {\n              if(isLast) {\n                points.push([x1, y1, x4, y1, x3, y2, x2, y2]);\n              }\n              else {\n                yy1 = y1 + (xx1 - x1) * Math.tan(deg1);\n                yy2 = y1 + (xx4 - x1) * Math.tan(deg1);\n                points.push([xx1, y1, xx4, y1, xx4, yy2, xx1, yy1]);\n              }\n            }\n            // 整个和borderRight重叠\n            else if(xx1 > x3) {\n              yy1 = y1 + (x4 - xx1) * Math.tan(deg2);\n              yy2 = y1 + (x4 - xx4) * Math.tan(deg2);\n              if(isLast) {\n                points.push([xx1, y1, x4, y1, xx1, yy1]);\n              }\n              else {\n                points.push([xx1, y1, xx4, y1, xx4, yy2, xx1, yy1]);\n              }\n            }\n            // 不被整个重叠的情况再细分\n            else {\n              // 上部分和borderLeft重叠\n              if(xx1 < x2) {\n                yy1 = y1 + (xx1 - x1) * Math.tan(deg1);\n                if(isLast) {\n                  points.push([xx1, y1, x4, y1, x3, y2, x2, y2, xx1, yy1]);\n                }\n                else {\n                  // 下部分和borderRight重叠\n                  if(xx4 > x3) {\n                    points.push([xx1, y1, xx4, y1, x3, y2, x2, y2, xx1, yy1]);\n                  }\n                  // 下部独立\n                  else {\n                    points.push([xx1, y1, xx4, y1, xx4, y2, x2, y2, xx1, yy1]);\n                  }\n                }\n              }\n              // 下部分和borderRight重叠\n              else if(xx4 > x3) {\n                yy1 = y1 + (x4 - xx4) * Math.tan(deg2);\n                // 上部分和borderLeft重叠\n                if(xx1 < x2) {\n                  if(isLast) {\n                    points.push([xx1, y1, x4, y1, x3, y2, x2, y2, xx1, yy1]);\n                  }\n                  else {\n                    points.push([xx1, y1, xx4, y1, xx4, yy1, x3, y2, x2, y2, xx1, yy1]);\n                  }\n                }\n                // 上部独立\n                else {\n                  if(isLast) {\n                    points.push([xx1, y1, x4, y1, x3, y2, xx1, y2]);\n                  }\n                  else {\n                    points.push([xx1, y1, xx4, y1, xx4, yy1, x3, y2, xx1, y2]);\n                  }\n                }\n              }\n              // 完全独立\n              else {\n                if(isLast) {\n                  points.push([xx1, y1, x4, y1, x3, y2, xx1, y2]);\n                }\n                else {\n                  points.push([xx1, y1, xx4, y1, xx4, y2, xx1, y2]);\n                }\n              }\n            }\n          }\n        }\n      }\n      else {\n        points.push([x1, y1, x4, y1, x3, y2, x2, y2]);\n      }\n      renderBorder(renderMode, points, btc, ctx, this);\n    }\n    if(brw > 0 && brc !== 'transparent') {\n      let points = [];\n      if(['dashed', 'dotted'].indexOf(brs) > -1) {\n        // 寻找一个合适的虚线线段长度和之间空白边距长度\n        let { n, ps, pd } = getDashed(brs, y1, y2, y3, y4, brw);\n        if(n <= 1) {\n          points.push([x3, y2, x4, y1, x4, y4, x3, y3]);\n        }\n        else {\n          let deg1 = Math.atan(brw / btw);\n          let deg2 = Math.atan(brw / bbw);\n          for(let i = 0; i < n; i++) {\n            // 最后一个可能没有到底，延长之\n            let isLast = i === n - 1;\n            let yy1 = i ? (y1 + ps * i + pd * i) : y1;\n            let yy4 = yy1 + ps;\n            let xx1;\n            let xx2;\n            // 整个和borderTop重叠\n            if(yy4 < y2) {\n              if(isLast) {\n                points.push([x3, y2, x4, y1, x4, y4, x3, y3]);\n              }\n              else {\n                xx1 = x4 - (yy4 - y1) * Math.tan(deg1);\n                xx2 = x4 - (yy1 - y1) * Math.tan(deg1);\n                points.push([xx1, yy4, xx2, yy1, x4, yy1, x4, yy4]);\n              }\n            }\n            // 整个和borderBottom重叠\n            else if(yy1 > y3) {\n              xx1 = x3 + (yy1 - y3) * Math.tan(deg2);\n              xx2 = x3 + (yy4 - y3) * Math.tan(deg2);\n              if(isLast) {\n                points.push([xx1, yy1, x4, yy1, x4, y4]);\n              }\n              else {\n                points.push([xx1, yy1, x4, yy1, x4, yy4, xx2, yy4]);\n              }\n            }\n            // 不被整个重叠的情况再细分\n            else {\n              // 上部分和borderTop重叠\n              if(yy1 < y2) {\n                xx1 = x3 + (y2 - yy1) * Math.tan(deg1);\n                if(isLast) {\n                  points.push([x3, y2, xx1, yy1, x4, yy1, x4, y4, x3, y4]);\n                }\n                else {\n                  // 下部分和borderBottom重叠\n                  if(yy4 > y3) {\n                    points.push([x3, y2, xx1, yy1, x4, yy1, x4, yy4, xx1, yy4, x3, y3]);\n                  }\n                  // 下部独立\n                  else {\n                    points.push([x3, y2, xx1, yy1, x4, yy1, x4, yy4, x3, yy4]);\n                  }\n                }\n              }\n              // 下部分和borderBottom重叠\n              else if(yy4 > y3) {\n                xx1 = x3 + (yy4 - y3) * Math.tan(deg2);\n                // 上部分和borderTop重叠\n                if(yy1 < y2) {\n                  if(isLast) {\n                    points.push([x3, y2, xx1, yy1, x4, yy1, x4, y4, x3, y3]);\n                  }\n                  else {\n                    points.push([x3, y2, xx1, yy1, x4, yy1, x4, yy4, xx1, yy4, x3, y3]);\n                  }\n                }\n                // 上部独立\n                else {\n                  if(isLast) {\n                    points.push([x3, yy1, x4, yy1, x4, y4, x3, y3]);\n                  }\n                  else {\n                    points.push([x3, yy1, x4, yy1, x4, yy4, xx1, yy4, x3, y3]);\n                  }\n                }\n              }\n              // 完全独立\n              else {\n                if(isLast) {\n                  points.push([x3, yy1, x4, yy1, x4, y4, x3, y3]);\n                }\n                else {\n                  points.push([x3, yy1, x4, yy1, x4, yy4, x3, yy4]);\n                }\n              }\n            }\n          }\n        }\n      }\n      else {\n        points.push([x3, y2, x4, y1, x4, y4, x3, y3]);\n      }\n      renderBorder(renderMode, points, brc, ctx, this);\n    }\n    if(bbw > 0 && bbc !== 'transparent') {\n      let points = [];\n      // 寻找一个合适的虚线线段长度和之间空白边距长度\n      if(['dashed', 'dotted'].indexOf(bbs) > -1) {\n        // 寻找一个合适的虚线线段长度和之间空白边距长度\n        let { n, ps, pd } = getDashed(bbs, x1, x2, x3, x4, bbw);\n        let deg1 = Math.atan(bbw / blw);\n        let deg2 = Math.atan(bbw / brw);\n        for(let i = 0; i < n; i++) {\n          // 最后一个可能没有到底，延长之\n          let isLast = i === n - 1;\n          let xx1 = i ? (x1 + ps * i + pd * i) : x1;\n          let xx4 = xx1 + ps;\n          let yy1;\n          let yy2;\n          // 整个和borderLeft重叠\n          if(xx4 < x2) {\n            if(isLast) {\n              points.push([x1, y4, x2, y3, x3, y3, x4, y4]);\n            }\n            else {\n              yy1 = y4 - (xx1 - x1) * Math.tan(deg1);\n              yy2 = y4 - (xx4 - x1) * Math.tan(deg1);\n              points.push([xx1, yy1, xx4, yy2, xx4, y4, xx1, y4]);\n            }\n          }\n          // 整个和borderRight重叠\n          else if(xx1 > x3) {\n            yy1 = y4 - (xx1 - x1) * Math.tan(deg2);\n            yy2 = y4 - (xx4 - x1) * Math.tan(deg2);\n            if(isLast) {\n              points.push([xx1, yy1, x4, y4, xx1, y4]);\n            }\n            else {\n              points.push([xx1, yy1, xx4, yy2, xx4, y4, xx1, y4]);\n            }\n          }\n          // 不被整个重叠的情况再细分\n          else {\n            // 上部分和borderLeft重叠\n            if(xx1 < x2) {\n              yy1 = y3 + (xx1 - x1) * Math.tan(deg1);\n              if(isLast) {\n                points.push([xx1, yy1, x2, y3, x3, y3, x4, y4, xx1, y4]);\n              }\n              else {\n                // 下部分和borderRight重叠\n                if(xx4 > x3) {\n                  points.push([xx1, yy1, x2, y3, x3, y3, xx4, y4, xx1, y4]);\n                }\n                // 下部独立\n                else {\n                  points.push([xx1, yy1, x2, y3, xx4, y3, xx4, y4, xx1, y4]);\n                }\n              }\n            }\n            // 下部分和borderRight重叠\n            else if(xx4 > x3) {\n              yy1 = y4 - (x4 - xx4) * Math.tan(deg2);\n              // 上部分和borderLeft重叠\n              if(xx1 < x2) {\n                if(isLast) {\n                  points.push([xx1, yy1, x3, y3, x4, y4, xx1, y4]);\n                }\n                else {\n                  points.push([xx1, yy1, x3, y3, xx4, yy1, xx4, y4, xx1, y4]);\n                }\n              }\n              // 上部独立\n              else {\n                if(isLast) {\n                  points.push([xx1, y3, x3, y3, x4, y4, xx1, y4]);\n                }\n                else {\n                  points.push([xx1, y3, x3, y3, xx4, yy1, xx4, y4, xx1, y4]);\n                }\n              }\n            }\n            // 完全独立\n            else {\n              if(isLast) {\n                points.push([xx1, y3, x3, y3, x4, y4, xx1, y4]);\n              }\n              else {\n                points.push([xx1, y3, xx4, y3, xx4, y4, xx1, y4]);\n              }\n            }\n          }\n        }\n      }\n      else {\n        points.push([x1, y4, x2, y3, x3, y3, x4, y4]);\n      }\n      renderBorder(renderMode, points, bbc, ctx, this);\n    }\n    if(blw > 0 && blc !== 'transparent') {\n      let points = [];\n      if(['dashed', 'dotted'].indexOf(bls) > -1) {\n        // 寻找一个合适的虚线线段长度和之间空白边距长度\n        let { n, ps, pd } = getDashed(bls, y1, y2, y3, y4, blw);\n        if(n <= 1) {\n          points.push([x1, y1, x2, y2, x2, y3, x1, y4]);\n        }\n        else {\n          let deg1 = Math.atan(blw / btw);\n          let deg2 = Math.atan(blw / bbw);\n          for(let i = 0; i < n; i++) {\n            // 最后一个可能没有到底，延长之\n            let isLast = i === n - 1;\n            let yy1 = i ? (y1 + ps * i + pd * i) : y1;\n            let yy4 = yy1 + ps;\n            let xx1;\n            let xx2;\n            // 整个和borderTop重叠\n            if(yy4 < y2) {\n              if(isLast) {\n                points.push([x1, y1, x2, y2, x2, y3, x1, y4]);\n              }\n              else {\n                xx1 = x1 + (yy1 - y1) * Math.tan(deg1);\n                xx2 = x1 + (yy4 - y1) * Math.tan(deg1);\n                points.push([x1, yy1, xx1, yy1, xx2, yy4, x1, yy4]);\n              }\n            }\n            // 整个和borderBottom重叠\n            else if(yy1 > y3) {\n              xx1 = x1 + (y4 - yy1) * Math.tan(deg2);\n              xx2 = x1 + (y4 - yy4) * Math.tan(deg2);\n              if(isLast) {\n                points.push([x1, yy1, xx1, yy1, x1, y4]);\n              }\n              else {\n                points.push([x1, yy1, xx1, yy1, xx2, yy4, x1, yy4]);\n              }\n            }\n            // 不被整个重叠的情况再细分\n            else {\n              // 上部分和borderTop重叠\n              if(yy1 < y2) {\n                xx1 = x1 + (yy1 - y1) * Math.tan(deg1);\n                if(isLast) {\n                  points.push([x1, yy1, xx1, yy1, x2, y2, x2, y3, x1, y4]);\n                }\n                else {\n                  // 下部分和borderBottom重叠\n                  if(yy4 > y3) {\n                    points.push([x1, yy1, xx1, yy1, x2, y2, x2, y3, xx1, yy4, x1, yy4]);\n                  }\n                  // 下部独立\n                  else {\n                    points.push([x1, yy1, xx1, yy1, x2, y2, x2, yy4, x1, yy4]);\n                  }\n                }\n              }\n              // 下部分和borderBottom重叠\n              else if(yy4 > y3) {\n                xx1 = x1 + (y4 - yy4) * Math.tan(deg2);\n                // 上部分和borderTop重叠\n                if(yy1 < y2) {\n                  if(isLast) {\n                    points.push([x1, yy1, xx1, yy1, x2, y2, x2, y3, x1, y4]);\n                  }\n                  else {\n                    points.push([x1, yy1, xx1, yy1, x2, y2, x2, y3, xx1, yy4, x1, yy4]);\n                  }\n                }\n                // 上部独立\n                else {\n                  if(isLast) {\n                    points.push([x1, yy1, x2, yy1, x2, y3, x1, y4]);\n                  }\n                  else {\n                    points.push([x1, yy1, x2, yy1, x2, y3, xx1, yy4, x1, yy4]);\n                  }\n                }\n              }\n              // 完全独立\n              else {\n                if(isLast) {\n                  points.push([x1, yy1, x2, yy1, x2, y3, x1, y4]);\n                }\n                else {\n                  points.push([x1, yy1, x2, yy1, x2, yy4, x1, yy4]);\n                }\n              }\n            }\n          }\n        }\n      }\n      else {\n        points.push([x1, y1, x2, y2, x2, y3, x1, y4]);\n      }\n      renderBorder(renderMode, points, blc, ctx, this);\n    }\n  }\n\n  addBorder(props) {\n    this.virtualDom.bb.push({\n      type: 'item',\n      tagName: 'path',\n      props,\n    });\n  }\n\n  addBackground(props) {\n    this.virtualDom.bb.push({\n      type: 'item',\n      tagName: 'rect',\n      props,\n    });\n  }\n\n  addTransform(props) {\n    this.virtualDom.transform.push(props);\n  }\n\n  get tagName() {\n    return this.__tagName;\n  }\n  get mtw() {\n    return this.__mtw;\n  }\n  get mrw() {\n    return this.__mrw;\n  }\n  get mbw() {\n    return this.__mbw;\n  }\n  get mlw() {\n    return this.__mlw;\n  }\n  get ptw() {\n    return this.__ptw;\n  }\n  get prw() {\n    return this.__prw;\n  }\n  get pbw() {\n    return this.__pbw;\n  }\n  get plw() {\n    return this.__plw;\n  }\n  get outerWidth() {\n    let { mlw, mrw, plw, prw, style: {\n      borderLeftWidth,\n      borderRightWidth,\n    } } = this;\n    return this.width\n      + borderLeftWidth.value\n      + borderRightWidth.value\n      + mlw\n      + mrw\n      + plw\n      + prw;\n  }\n  get outerHeight() {\n    let { mtw, mbw, ptw, pbw, style: {\n      borderTopWidth,\n      borderBottomWidth,\n    } } = this;\n    return this.height\n      + borderTopWidth.value\n      + borderBottomWidth.value\n      + mtw\n      + mbw\n      + ptw\n      + pbw;\n  }\n  get listener() {\n    return this.__listener;\n  }\n}\n\nexport default Xom;\n","'use strict';\n\nexport default {\n  arial: {\n    lhr: 1.14990234375, // 默认line-height ratio，(67+1854+434)/2048\n    car: 1.1171875, // content-area ratio，(1854+434)/2048\n    blr: 0.9052734375, // base-line ratio，1854/2048\n    mdr: 0.64599609375, // middle ratio，(1854-1062/2)/2048\n    lgr: 0.03271484375, // line-gap ratio，67/2048\n  },\n};\n","const RESET = {\n  position: 'static',\n  display: 'block',\n  borderSizing: 'content-box',\n  top: 'auto',\n  right: 'auto',\n  bottom: 'auto',\n  left: 'auto',\n  marginTop: 0,\n  marginRight: 0,\n  marginBottom: 0,\n  marginLeft: 0,\n  paddingTop: 0,\n  paddingRight: 0,\n  paddingBottom: 0,\n  paddingLeft: 0,\n  fontSize: 16,\n  fontFamily: 'arial',\n  color: '#000',\n  fontStyle: 'normal',\n  fontWeight: 400,\n  lineHeight: 'normal',\n  borderTopWidth: 0,\n  borderRightWidth: 0,\n  borderBottomWidth: 0,\n  borderLeftWidth: 0,\n  borderTopColor: '#000',\n  borderRightColor: '#000',\n  borderBottomColor: '#000',\n  borderLeftColor: '#000',\n  borderTopStyle: 'solid',\n  borderRightStyle: 'solid',\n  borderBottomStyle: 'solid',\n  borderLeftStyle: 'solid',\n  borderTopLeftRadius: 0,\n  borderTopRightRadius: 0,\n  borderBottomLeftRadius: 0,\n  borderBottomRightRadius: 0,\n  verticalAlign: 'baseline',\n  width: 'auto',\n  height: 'auto',\n  flexGrow: 0,\n  flexShrink: 1,\n  flexBasis: 'auto',\n  flexDirection: 'row',\n  justifyContent: 'flex-start',\n  alignItems: 'stretch',\n  textAlign: 'left',\n  visibility: 'visible',\n  fill: '#000',\n  stroke: '#000',\n  strokeWidth: 0,\n  strokeDasharray: [],\n};\n\nlet reset = [];\n\nObject.keys(RESET).forEach(k => {\n  let v = RESET[k];\n  reset.push({\n    k,\n    v,\n  });\n});\n\nexport default reset;\n","import unit from './unit';\nimport font from './font';\nimport reset from './reset';\nimport util from '../util';\n\nfunction parserOneBorder(style, direction) {\n  let key = `border${direction}`;\n  if(!style[key]) {\n    return;\n  }\n  let w = /\\b\\d+px\\b/i.exec(style[key]);\n  if(w) {\n    style[key + 'Width'] = w[0];\n  }\n  let s = /\\b(solid|dashed|dotted)\\b/i.exec(style[key]);\n  if(s) {\n    style[key + 'Style'] = s[1];\n  }\n  let c = /#[0-9a-f]{3,6}/i.exec(style[key]);\n  if(c && [4, 7].indexOf(c[0].length) > -1) {\n    style[key + 'Color'] = c[0];\n  }\n  else if(/\\btransparent\\b/i.test(style[key])) {\n    style[key + 'Color'] = 'transparent';\n  }\n  else {\n    c = /rgba?\\(.+\\)/i.exec(style[key]);\n    if(c) {\n      style[key + 'Color'] = c[0];\n    }\n  }\n}\n\nfunction normalize(style) {\n  // 默认reset\n  reset.forEach(item => {\n    if(!style.hasOwnProperty(item.k)) {\n      style[item.k] = item.v;\n    }\n  });\n  // 处理缩写\n  if(style.background) {\n    // 优先gradient，没有再考虑颜色\n    let gradient = /\\b(\\w+)-gradient\\((.+)\\)/.exec(style.background);\n    if(gradient) {\n      style.backgroundGradient = {\n        k: gradient[1],\n        v: gradient[2].split(/\\s*,\\s*/),\n      };\n    }\n    else {\n      let bgc = /#[0-9a-f]{3,6}/i.exec(style.background);\n      if(bgc && [4, 7].indexOf(bgc[0].length) > -1) {\n        style.backgroundColor = bgc[0];\n      } else {\n        bgc = /rgba?\\(.+\\)/i.exec(style.background);\n        if(bgc) {\n          style.backgroundColor = bgc[0];\n        }\n      }\n    }\n  }\n  if(style.flex) {\n    if(style.flex === 'none') {\n      style.flexGrow = 0;\n      style.flexShrink = 0;\n      style.flexBasis = 'auto';\n    }\n    else if(style.flex === 'auto') {\n      style.flexGrow = 1;\n      style.flexShrink = 1;\n      style.flexBasis = 'auto';\n    }\n    else if(/^[\\d.]+$/.test(style.flex)) {\n      style.flexGrow = parseFloat(style.flex);\n      style.flexShrink = 1;\n      style.flexBasis = 0;\n    }\n    else if(/^[\\d.]+px$/.test(style.flex)) {}\n    else if(/^[\\d.]+%$/.test(style.flex)) {}\n    else {\n      style.flexGrow = 0;\n      style.flexShrink = 1;\n      style.flexBasis = 'auto';\n    }\n  }\n  if(style.border) {\n    style.borderTop = style.borderRight = style.borderBottom = style.borderLeft = style.border;\n  }\n  if(style.margin) {\n    let match = style.margin.toString().match(/([\\d.]+(px|%)?)|(auto)/ig);\n    if(match) {\n      if(match.length === 1) {\n        match[3] = match[2] = match[1] = match[0];\n      }\n      else if(match.length === 2) {\n        match[2] = match[0];\n        match[3] = match[1];\n      }\n      else if(match.length === 3) {\n        match[3] = match[1];\n      }\n      style.marginTop = match[0];\n      style.marginRight = match[1];\n      style.marginBottom = match[2];\n      style.marginLeft = match[3];\n    }\n  }\n  if(style.padding) {\n    let match = style.padding.toString().match(/([\\d.]+(px|%)?)|(auto)/ig);\n    if(match) {\n      if(match.length === 1) {\n        match[3] = match[2] = match[1] = match[0];\n      }\n      else if(match.length === 2) {\n        match[2] = match[0];\n        match[3] = match[1];\n      }\n      else if(match.length === 3) {\n        match[3] = match[1];\n      }\n      style.paddingTop = match[0];\n      style.paddingRight = match[1];\n      style.paddingBottom = match[2];\n      style.paddingLeft = match[3];\n    }\n  }\n  if(style.borderRadius) {\n    style.borderTopRightRadius = style.borderTopLeftRadius = style.borderBottomRightRadius = style.borderBottomLeftRadius = style.borderRadius;\n  }\n  if(style.transform) {\n    let match = style.transform.toString().match(/\\w+\\(.+?\\)/g);\n    if(match) {\n      let transform = style.transform = {};\n      match.forEach(item => {\n        let i = item.indexOf('(');\n        let k = item.slice(0, i);\n        let v = item.slice(i + 1, item.length - 1);\n        if(k === 'matrix') {\n          let arr = v.split(/\\s*,\\s*/);\n          arr = arr.map(item => parseFloat(item));\n          if(arr.length > 6) {\n            arr = arr.slice(0, 6);\n          }\n          else if(arr.length < 6) {\n            while(arr.length < 6) {\n              arr.push(0);\n            }\n          }\n          transform.matrix = arr;\n        }\n        else if(k === 'matrix3d') {\n          let arr = v.split(/\\s*,\\s*/);\n          arr = arr.map(item => parseFloat(item));\n          if(arr.length > 9) {\n            arr = arr.slice(0, 9);\n          }\n          else if(arr.length < 9) {\n            while(arr.length < 9) {\n              arr.push(0);\n            }\n          }\n          transform.matrix3d = arr;\n        }\n        else if(k === 'translateX') {\n          transform.translateX = v;\n        }\n        else if(k === 'translateY') {\n          transform.translateY = v;\n        }\n        else if(k === 'translateZ') {\n          transform.translateZ = v;\n        }\n        else if(k === 'translate') {\n          let arr = v.split(/\\s*,\\s*/);\n          transform.translateX = arr[0];\n          transform.translateY = arr[1];\n        }\n        else if(k === 'translate3d') {\n          let arr = v.split(/\\s*,\\s*/);\n          transform.translateX = arr[0];\n          transform.translateY = arr[1];\n          transform.translateZ = arr[2];\n        }\n        else if(k === 'scaleX') {\n          transform.scaleX = parseFloat(v) || 0;\n        }\n        else if(k === 'scaleY') {\n          transform.scaleY = parseFloat(v) || 0;\n        }\n        else if(k === 'scaleZ') {\n          transform.scaleZ = parseFloat(v) || 0;\n        }\n        else if(k === 'scale') {\n          let arr = v.split(/\\s*,\\s*/);\n          transform.scaleX = parseFloat(arr[0]) || 0;\n          transform.scaleY = parseFloat(arr[1]) || 0;\n        }\n        else if(k === 'scale3d') {\n          let arr = v.split(/\\s*,\\s*/);\n          transform.scaleX = parseFloat(arr[0]) || 0;\n          transform.scaleY = parseFloat(arr[1]) || 0;\n          transform.scaleZ = parseFloat(arr[2]) || 0;\n        }\n        else if(k === 'rotateX') {\n          transform.rotateX = parseFloat(v) || 0;\n        }\n        else if(k === 'rotateY') {\n          transform.rotateY = parseFloat(v) || 0;\n        }\n        else if(k === 'rotateZ') {\n          transform.rotateZ = parseFloat(v) || 0;\n        }\n        else if(k === 'rotate') {\n          let arr = v.split(/\\s*,\\s*/);\n          transform.rotateX = parseFloat(arr[0]) || 0;\n          transform.rotateY = parseFloat(arr[1]) || 0;\n        }\n        else if(k === 'rotate3d') {\n          let arr = v.split(/\\s*,\\s*/);\n          transform.rotateX = parseFloat(arr[0]) || 0;\n          transform.rotateY = parseFloat(arr[1]) || 0;\n          transform.rotateZ = parseFloat(arr[2]) || 0;\n        }\n        else if(k === 'skewX') {\n          transform.skewX = parseFloat(v) || 0;\n        }\n        else if(k === 'skewY') {\n          transform.skewY = parseFloat(v) || 0;\n        }\n        else if(k === 'skew') {\n          let arr = v.split(/\\s*,\\s*/);\n          transform.skewX = parseFloat(arr[0]) || 0;\n          transform.skewY = parseFloat(arr[1]) || 0;\n        }\n        else if(k === 'perspective') {\n          transform.perspective = parseFloat(v);\n        }\n      });\n      [\n        'translateX',\n        'translateY',\n        'translateZ',\n      ].forEach(k => {\n        let v = transform[k];\n        // 编译工具前置解析优化跳出\n        if(!util.isNil(v) && v.unit) {\n          return;\n        }\n        if(/%$/.test(v)) {\n          v = parseFloat(v) || 0;\n          transform[k] = {\n            value: v,\n            unit: unit.PERCENT,\n          };\n        }\n        else {\n          v = parseFloat(v) || 0;\n          transform[k] = {\n            value: v,\n            unit: unit.PX,\n          };\n        }\n      });\n    }\n  }\n  parserOneBorder(style, 'Top');\n  parserOneBorder(style, 'Right');\n  parserOneBorder(style, 'Bottom');\n  parserOneBorder(style, 'Left');\n  // 转化不同单位值为对象标准化\n  [\n    'marginTop',\n    'marginRight',\n    'marginBottom',\n    'marginLeft',\n    'paddingTop',\n    'paddingRight',\n    'paddingBottom',\n    'paddingLeft',\n    'borderTopWidth',\n    'borderRightWidth',\n    'borderBottomWidth',\n    'borderLeftWidth',\n    'borderTopLeftRadius',\n    'borderTopRightRadius',\n    'borderBottomLeftRadius',\n    'borderBottomRightRadius',\n    'top',\n    'right',\n    'bottom',\n    'left',\n    'width',\n    'height',\n    'flexBasis',\n  ].forEach(k => {\n    let v = style[k];\n    // 编译工具前置解析优化跳出\n    if(!util.isNil(v) && v.unit) {\n      return;\n    }\n    if(v === 'auto') {\n      style[k] = {\n        unit: unit.AUTO,\n      };\n    }\n    else if(/%$/.test(v)) {\n      // border不支持百分比\n      if(k.indexOf('border') === 0) {\n        style[k] = {\n          value: 0,\n          unit: unit.PX,\n        };\n      }\n      else {\n        v = parseFloat(v) || 0;\n        style[k] = {\n          value: v,\n          unit: unit.PERCENT,\n        };\n      }\n    }\n    else {\n      v = parseFloat(v) || 0;\n      style[k] = {\n        value: v,\n        unit: unit.PX,\n      };\n    }\n  });\n  // 计算lineHeight为px值，最小范围\n  let lineHeight = style.lineHeight;\n  if(lineHeight === 'normal') {\n    lineHeight = {\n      value: style.fontSize * font.arial.lhr,\n      unit: unit.PX,\n    };\n  }\n  else if(/px$/.test(lineHeight)) {\n    lineHeight = parseFloat(lineHeight);\n    lineHeight = {\n      value: Math.max(style.fontSize, lineHeight),\n      unit: unit.PX,\n    };\n  }\n  // 纯数字比例\n  else {\n    lineHeight = parseFloat(lineHeight) || 'normal';\n    // 非法数字\n    if(lineHeight === 'normal') {\n      lineHeight = {\n        value: style.fontSize * font.arial.lhr,\n        unit: unit.PX,\n      };\n    }\n    else {\n      lineHeight = {\n        value: lineHeight * style.fontSize,\n        unit: unit.PX,\n      };\n    }\n  }\n  style.lineHeight = lineHeight;\n}\n\nfunction setFontStyle(style) {\n  let { fontStyle, fontWeight, fontSize, fontFamily } = style;\n  return `${fontStyle} ${fontWeight} ${fontSize}px/${fontSize}px ${fontFamily}`;\n}\n\nfunction getBaseLine(style) {\n  let normal = style.fontSize * font.arial.lhr;\n  return (style.lineHeight.value - normal) * 0.5 + style.fontSize * font.arial.blr;\n}\n\nexport default {\n  normalize,\n  setFontStyle,\n  getBaseLine,\n};\n","import css from '../style/css';\nimport mode from '../mode';\n\nclass LineBox {\n  constructor(parent, x, y, w, content, style) {\n    this.__parent = parent;\n    this.__x = x;\n    this.__y = y;\n    this.__width = w;\n    this.__content = content;\n    this.__style = style;\n    this.__virtualDom = {};\n  }\n\n  render(renderMode, ctx) {\n    let { style, content, x, y, parent: { ox, oy } } = this;\n    y += css.getBaseLine(style);\n    x += ox;\n    y += oy;\n    if(renderMode === mode.CANVAS) {\n      ctx.fillText(content, x, y);\n    }\n    else if(renderMode === mode.SVG) {\n      this.__virtualDom = {\n        type: 'item',\n        tagName: 'text',\n        props: [\n          ['x', x],\n          ['y', y],\n          ['fill', style.color],\n          ['font-size', `${style.fontSize}px`]\n        ],\n        content,\n      };\n    }\n  }\n\n  __offsetX(diff) {\n    this.__x += diff;\n  }\n\n  __offsetY(diff) {\n    this.__y += diff;\n  }\n\n  get x() {\n    return this.__x;\n  }\n  get y() {\n    return this.__y;\n  }\n  get width() {\n    return this.__width;\n  }\n  get content() {\n    return this.__content;\n  }\n  get style() {\n    return this.__style;\n  }\n  get baseLine() {\n    return css.getBaseLine(this.style);\n  }\n  get virtualDom() {\n    return this.__virtualDom;\n  }\n  get parent() {\n    return this.__parent;\n  }\n}\n\nexport default LineBox;\n","import Node from './Node';\nimport LineBox from './LineBox';\nimport css from '../style/css';\nimport mode from '../mode';\n\nconst CHAR_WIDTH_CACHE = {};\n\nclass Text extends Node {\n  constructor(content) {\n    super();\n    this.__content = content.toString();\n    this.__lineBoxes = [];\n    this.__charWidthList = [];\n    this.__charWidth = 0;\n    this.__textWidth = 0;\n  }\n\n  // 预先计算每个字的宽度\n  __measure() {\n    this.__charWidthList = [];\n    let { ctx, content, style, charWidthList, renderMode } = this;\n    if(renderMode === mode.CANVAS) {\n      ctx.font = css.setFontStyle(style);\n    }\n    let cache = CHAR_WIDTH_CACHE[style.fontSize] = CHAR_WIDTH_CACHE[style.fontSize] || {};\n    let length = content.length;\n    let sum = 0;\n    for(let i = 0; i < length; i++) {\n      let char = content.charAt(i);\n      let mw;\n      if(cache.hasOwnProperty(char)) {\n        mw = cache[char];\n      }\n      else if(renderMode === mode.CANVAS) {\n        mw = cache[char] = ctx.measureText(char).width;\n      }\n      else if(renderMode === mode.SVG) {\n        mw = cache[char] = mode.measure(char, style);\n      }\n      charWidthList.push(mw);\n      sum += mw;\n      this.__charWidth = Math.max(this.charWidth, mw);\n    }\n    this.__textWidth = sum;\n  }\n\n  __layout(data, isVirtual) {\n    let { x, y, w, h } = data;\n    this.__x = x;\n    this.__y = y;\n    let maxX = x;\n    let { ctx, content, style, lineBoxes, charWidthList, renderMode } = this;\n    // 顺序尝试分割字符串为lineBox，形成多行\n    let begin = 0;\n    let i = 0;\n    let count = 0;\n    let length = content.length;\n    while(i < length) {\n      count += charWidthList[i];\n      if (count === w) {\n        let lineBox = new LineBox(this, x, y, count, content.slice(begin, i + 1), style);\n        lineBoxes.push(lineBox);\n        maxX = Math.max(maxX, x + count);\n        y += this.style.lineHeight.value;\n        begin = i + 1;\n        i = begin + 1;\n        count = 0;\n      }\n      else if (count > w) {\n        // 宽度不足时无法跳出循环，至少也要塞个字符形成一行\n        if(i === begin) {\n          i = begin + 1;\n        }\n        let lineBox = new LineBox(this, x, y, count - charWidthList[i], content.slice(begin, i), style);\n        lineBoxes.push(lineBox);\n        maxX = Math.max(maxX, x + count - charWidthList[i]);\n        y += this.style.lineHeight.value;\n        begin = i;\n        i = i + 1;\n        count = 0;\n      }\n      else {\n        i++;\n      }\n    }\n    if(begin < length && begin < i) {\n      count = 0;\n      for(i = begin ;i < length; i++) {\n        count += charWidthList[i];\n      }\n      let lineBox = new LineBox(this, x, y, count, content.slice(begin, length), style);\n      lineBoxes.push(lineBox);\n      maxX = Math.max(maxX, x + count);\n      y += style.lineHeight.value;\n    }\n    this.__width = maxX - x;\n    this.__height = y - data.y;\n    if(isVirtual) {\n      this.__lineBoxes = [];\n    }\n    else {\n      let { textAlign } = style;\n      if(['center', 'right'].indexOf(textAlign) > -1) {\n        lineBoxes.forEach(lineBox => {\n          let diff = this.__width - lineBox.width;\n          if(diff > 0) {\n            lineBox.__offsetX(textAlign === 'center' ? diff * 0.5 : diff);\n          }\n        });\n      }\n    }\n  }\n\n  render(renderMode) {\n    const { ctx, style } = this;\n    if(renderMode === mode.CANVAS) {\n      ctx.font = css.setFontStyle(style);\n      ctx.fillStyle = style.color;\n    }\n    this.lineBoxes.forEach(item => {\n      item.render(renderMode, ctx);\n    });\n    if(renderMode === mode.SVG) {\n      this.__virtualDom = {\n        type: 'text',\n        children: this.lineBoxes.map(lineBox => lineBox.virtualDom),\n      };\n    }\n  }\n\n  __tryLayInline(w) {\n    return w - this.textWidth;\n  }\n\n  __calMaxAndMinWidth() {\n    let n = 0;\n    this.charWidthList.forEach(item => {\n      n = Math.max(n, item);\n    });\n    return { max: this.textWidth, min: n };\n  }\n\n  get content() {\n    return this.__content;\n  }\n  set content(v) {\n    this.__content = v;\n  }\n  get lineBoxes() {\n    return this.__lineBoxes;\n  }\n  get charWidthList() {\n    return this.__charWidthList;\n  }\n  get charWidth() {\n    return this.__charWidth;\n  }\n  get textWidth() {\n    return this.__textWidth;\n  }\n  get baseLine() {\n    let last = this.lineBoxes[this.lineBoxes.length - 1];\n    return last.y - this.y + last.baseLine;\n  }\n  get renderMode() {\n    return this.__renderMode;\n  }\n}\n\nexport default Text;\n","class LineGroup {\n  constructor(x, y) {\n    this.__list = [];\n    this.__x = x;\n    this.__y = y;\n    this.__baseLine = 0;\n  }\n\n  add(item) {\n    this.list.push(item);\n  }\n\n  __calBaseLine() {\n    let baseLine = 0;\n    this.list.forEach(item => {\n      baseLine = Math.max(baseLine, item.baseLine);\n    });\n    return baseLine;\n  }\n\n  verticalAlign() {\n    this.__baseLine = this.__calBaseLine();\n    // 仅当有2个和以上时才需要vertical对齐调整\n    if(this.list.length > 1) {\n      this.list.forEach(item => {\n        if(item.baseLine !== this.baseLine) {\n          item.__offsetY(this.baseLine - item.baseLine);\n        }\n      });\n    }\n  }\n\n  horizonAlign(diff) {\n    this.list.forEach(item => {\n      item.__offsetX(diff);\n    });\n  }\n\n  get list() {\n    return this.__list;\n  }\n  get x() {\n    return this.__x;\n  }\n  get y() {\n    return this.__y;\n  }\n  get width() {\n    let width = 0;\n    this.list.forEach(item => {\n      width += item.width;\n    });\n    return width;\n  }\n  get height() {\n    let height = 0;\n    this.list.forEach(item => {\n      height = Math.max(height, item.height);\n    });\n    return height;\n  }\n  get baseLine() {\n    return this.__baseLine;\n  }\n  get size() {\n    return this.__list.length;\n  }\n}\n\nexport default LineGroup;\n","import Xom from '../node/Xom';\nimport css from '../style/css';\nimport unit from '../style/unit';\nimport mode from '../mode';\n\nconst IMPLEMENT = {};\n\nclass Geom extends Xom {\n  constructor(tagName, props) {\n    super(tagName, props);\n  }\n\n  __initStyle() {\n    css.normalize(this.style);\n  }\n\n  __tryLayInline(w, total) {\n    // 无children，直接以style的width为宽度，不定义则为0\n    let { style: { width } } = this;\n    if(width.unit === unit.PX) {\n      return w - width.value;\n    }\n    else if(width.unit === unit.PERCENT) {\n      return w - total * width.value * 0.01;\n    }\n    return w;\n  }\n\n  __calAutoBasis(isDirectionRow, w, h) {\n    let b = 0;\n    let min = 0;\n    let max = 0;\n    let { style } = this;\n    // 计算需考虑style的属性\n    let {\n      width,\n      height,\n      borderTopWidth,\n      borderRightWidth,\n      borderBottomWidth,\n      borderLeftWidth,\n    } = style;\n    let main = isDirectionRow ? width : height;\n    if(main.unit !== unit.AUTO) {\n      b = max += main.value;\n    }\n    // border也得计算在内\n    if(isDirectionRow) {\n      let w = borderRightWidth.value + borderLeftWidth.value;\n      b += w;\n      max += w;\n      min += w;\n    }\n    else {\n      let h = borderTopWidth.value + borderBottomWidth.value;\n      b += h;\n      max += h;\n      min += h;\n    }\n    return { b, min, max };\n  }\n\n  __layoutBlock(data) {\n    let { x, y, w, h } = data;\n    this.__x = x;\n    this.__y = y;\n    this.__width = w;\n    let { style } = this;\n    let {\n      width,\n      height,\n      borderTopWidth,\n      borderRightWidth,\n      borderBottomWidth,\n      borderLeftWidth,\n    } = style;\n    // 除了auto外都是固定高度\n    let fixedHeight;\n    if(width && width.unit !== unit.AUTO) {\n      switch(width.unit) {\n        case unit.PX:\n          w = width.value;\n          break;\n      }\n    }\n    if(height && height.unit !== unit.AUTO) {\n      fixedHeight = true;\n      switch(height.unit) {\n        case unit.PX:\n          h = height.value;\n          break;\n        case unit.PERCENT:\n          h *= height.value * 0.01;\n          break;\n      }\n    }\n    // border影响x和y和尺寸\n    x += borderLeftWidth.value;\n    data.x = x;\n    y += borderTopWidth.value;\n    data.y = y;\n    w -= borderLeftWidth.value + borderRightWidth.value;\n    h -= borderTopWidth.value + borderBottomWidth.value;\n    this.__width = w;\n    this.__height = fixedHeight ? h : 0;\n  }\n\n  __layoutFlex(data) {\n    // 无children所以等同于block\n    this.__layoutBlock(data);\n  }\n\n  __layoutInline(data) {\n    let { x, y, w, h } = data;\n    this.__x = x;\n    this.__y = y;\n    let { style } = this;\n    let {\n      width,\n      height,\n      borderTopWidth,\n      borderRightWidth,\n      borderBottomWidth,\n      borderLeftWidth,\n    } = style;\n    // 除了auto外都是固定高度\n    let fixedWidth;\n    let fixedHeight;\n    if(width && width.unit !== unit.AUTO) {\n      fixedWidth = true;\n      switch(width.unit) {\n        case unit.PX:\n          w = width.value;\n          break;\n      }\n    }\n    if(height && height.unit !== unit.AUTO) {\n      fixedHeight = true;\n      switch(height.unit) {\n        case unit.PX:\n          h = height.value;\n          break;\n      }\n    }\n    // border影响x和y\n    x += borderLeftWidth.value;\n    data.x = x;\n    y += borderTopWidth.value;\n    data.y = y;\n    w -= borderLeftWidth.value + borderRightWidth.value;\n    h -= borderTopWidth.value + borderBottomWidth.value;\n    // 元素的width不能超过父元素w\n    this.__width = fixedWidth ? w : x - data.x;\n    this.__height = fixedHeight ? h : y - data.y;\n  }\n\n  __calAbs() {\n    return 0;\n  }\n\n  __emitEvent(e, force) {\n    let { event: { type }, x, y, covers } = e;\n    let { listener, style, rx, ry, outerWidth, outerHeight } = this;\n    if(style.display === 'none') {\n      return;\n    }\n    let cb;\n    if(listener.hasOwnProperty(type)) {\n      cb = listener[type];\n    }\n    if(force) {\n      cb && cb(e);\n    }\n    else if(x >= rx && y >= ry && x <= rx + outerWidth && y <= ry + outerHeight) {\n      for(let i = 0, len = covers.length; i < len; i++) {\n        let { x: x2, y: y2, w, h: h } = covers[i];\n        if(x >= x2 && y >= y2 && x <= x2 + w && y <= y2 + h) {\n          return;\n        }\n      }\n      if(!e.target) {\n        e.target = this;\n      }\n      covers.push({\n        x,\n        y,\n        w: outerWidth,\n        h: outerHeight,\n      });\n      cb && cb(e);\n    }\n  }\n\n  render(renderMode) {\n    super.render(renderMode);\n    if(renderMode === mode.SVG) {\n      this.__virtualDom = {\n        ...super.virtualDom,\n        type: 'geom',\n      };\n    }\n  }\n\n  get tagName() {\n    return this.__tagName;\n  }\n  get baseLine() {\n    return this.__height;\n  }\n\n  static getImplement(name) {\n    if(!IMPLEMENT.hasOwnProperty(name)) {\n      throw new Error(`Geom has not register: ${name}`);\n    }\n    return IMPLEMENT[name];\n  }\n  static register(name, implement) {\n    if(IMPLEMENT.hasOwnProperty(name)) {\n      throw new Error(`Geom has already register: ${name}`);\n    }\n    IMPLEMENT[name] = implement;\n  }\n}\n\nexport default Geom;\n","import Xom from './Xom';\nimport Text from './Text';\nimport LineGroup from './LineGroup';\nimport Geom from '../geom/Geom';\nimport util from '../util';\nimport css from '../style/css';\nimport unit from '../style/unit';\nimport mode from '../mode';\n\nconst TAG_NAME = {\n  'div': true,\n  'span': true,\n};\nconst INLINE = {\n  'span': true,\n};\n\nclass Dom extends Xom {\n  constructor(tagName, props, children) {\n    super(tagName, props);\n    this.__children = children;\n    this.__flowChildren = []; // 非绝对定位孩子\n    this.__absChildren = []; // 绝对定位孩子\n    this.__lineGroups = []; // 一行inline元素组成的LineGroup对象后的存放列表\n    this.__flowY = 0; // 文档流布局结束后的y坐标，供absolute布局默认位置使用\n  }\n\n  /**\n   * 1. 封装string为Text节点\n   * 2. 打平children中的数组，变成一维\n   * 3. 合并相连的Text节点\n   * 4. 检测inline不能包含block和flex\n   * 5. 设置parent和prev/next和ctx和defs和mode\n   */\n  __traverse(ctx, defs, renderMode) {\n    let list = [];\n    this.__traverseChildren(this.children, list, ctx, defs, renderMode);\n    for(let i = list.length - 1; i > 0; i--) {\n      let item = list[i];\n      if(item instanceof Text) {\n        let prev = list[i - 1];\n        if(prev instanceof Text) {\n          prev.content += item.content;\n          list.splice(i, 1);\n        }\n        else {\n          i--;\n        }\n      }\n    }\n    if(this.style.display === 'inline' && this.parent.style.display !== 'flex') {\n      for(let i = list.length - 1; i >= 0; i--) {\n        let item = list[i];\n        if(item instanceof Dom && item.style.display !== 'inline') {\n          throw new Error('inline can not contain block/flex');\n        }\n      }\n    }\n    let prev = null;\n    list.forEach(item => {\n      item.__ctx = ctx;\n      item.__defs = defs;\n      if(prev) {\n        prev.__next = item;\n      }\n      item.__parent = this;\n      item.__prev = prev;\n      if(item instanceof Text || item.style.position !== 'absolute') {\n        this.__flowChildren.push(item);\n      }\n      else {\n        this.__absChildren.push(item);\n      }\n    });\n    this.__children = list;\n  }\n\n  __traverseChildren(children, list, ctx, defs, renderMode) {\n    if(Array.isArray(children)) {\n      children.forEach(item => {\n        this.__traverseChildren(item, list, ctx, defs, renderMode);\n      });\n    }\n    else if(children instanceof Dom) {\n      list.push(children);\n      children.__traverse(ctx, defs, renderMode);\n    }\n    // 图形没有children\n    else if(children instanceof Geom) {\n      list.push(children);\n    }\n    // 排除掉空的文本\n    else if(!util.isNil(children)) {\n      let text = new Text(children);\n      text.__renderMode = renderMode;\n      list.push(text);\n    }\n  }\n\n  // 合并设置style，包括继承和默认值，修改一些自动值和固定值，测量所有文字的宽度\n  __initStyle() {\n    let style = this.__style;\n    // 仅支持flex/block/inline/none\n    if(!style.display || ['flex', 'block', 'inline', 'none'].indexOf(style.display) === -1) {\n      if(INLINE.hasOwnProperty(this.tagName)) {\n        style.display = 'inline';\n      }\n      else {\n        style.display = 'block';\n      }\n    }\n    // 继承父元素样式\n    let parent = this.parent;\n    if(parent) {\n      let parentStyle = parent.style;\n      ['fontSize', 'fontWeight', 'fontStyle', 'lineHeight', 'wordBreak', 'color', 'textAlign'].forEach(k => {\n        if(!style.hasOwnProperty(k) && parentStyle.hasOwnProperty(k)) {\n          style[k] = parentStyle[k];\n        }\n      });\n    }\n    // 标准化处理，默认值、简写属性\n    css.normalize(style);\n    this.children.forEach(item => {\n      if(item instanceof Xom) {\n        item.__initStyle();\n      }\n      else {\n        item.__style = style;\n        // 文字首先测量所有字符宽度\n        item.__measure();\n      }\n    });\n  }\n\n  // 给定父宽度情况下，尝试行内放下后的剩余宽度，为负数即放不下\n  __tryLayInline(w, total) {\n    let { flowChildren, style: { width } } = this;\n    if(width.unit === unit.PX) {\n      return w - width.value;\n    }\n    else if(width.unit === unit.PERCENT) {\n      return w - total * width.value * 0.01;\n    }\n    for(let i = 0; i < flowChildren.length; i++) {\n      // 当放不下时直接返回，无需继续多余的尝试计算\n      if(w < 0) {\n        return w;\n      }\n      let item = flowChildren[i];\n      if(item instanceof Xom) {\n        w -= item.__tryLayInline(w, total);\n      }\n      else {\n        w -= item.textWidth;\n      }\n    }\n    return w;\n  }\n\n  // 设置y偏移值，递归包括children，此举在flex行元素的child进行justify-content对齐用\n  __offsetX(diff) {\n    super.__offsetX(diff);\n    this.flowChildren.forEach(item => {\n      if(item) {\n        item.__offsetX(diff);\n      }\n    });\n  }\n\n  // 设置y偏移值，递归包括children，此举在初步确定inline布局后设置元素vertical-align用\n  __offsetY(diff) {\n    super.__offsetY(diff);\n    this.flowChildren.forEach(item => {\n      if(item) {\n        item.__offsetY(diff);\n      }\n    });\n  }\n\n  __calAutoBasis(isDirectionRow, w, h, isRecursion) {\n    let b = 0;\n    let min = 0;\n    let max = 0;\n    let { mtw, mrw, mbw, mlw, ptw, prw, pbw, plw, flowChildren, style } = this;\n    // 计算需考虑style的属性\n    let {\n      width,\n      height,\n      borderTopWidth,\n      borderRightWidth,\n      borderBottomWidth,\n      borderLeftWidth,\n    } = style;\n    let main = isDirectionRow ? width : height;\n    if(main.unit === unit.PX) {\n      b = max = main.value;\n      // 递归时children的长度会影响flex元素的最小宽度\n      if(isRecursion) {\n        min = b;\n      }\n    }\n    // 递归children取最大值\n    flowChildren.forEach(item => {\n      if(item instanceof Xom) {\n        let { b: b2, min: min2, max: max2 } = item.__calAutoBasis(isDirectionRow, w, h, true);\n        b = Math.max(b, b2);\n        min = Math.max(min, min2);\n        max = Math.max(max, max2);\n      }\n      else if(isDirectionRow) {\n        min = Math.max(item.charWidth, min);\n        max = Math.max(item.textWidth, max);\n      }\n      else {\n        item.__layout({\n          x: 0,\n          y: 0,\n          w,\n          h,\n        }, true);\n        min = Math.max(min, item.height);\n        max = Math.max(max, item.height);\n      }\n    });\n    // margin/padding/border也得计算在内\n    if(isDirectionRow) {\n      let w = borderRightWidth.value + borderLeftWidth.value + mlw + mrw + plw + prw;\n      b += w;\n      max += w;\n      min += w;\n    }\n    else {\n      let h = borderTopWidth.value + borderBottomWidth.value + mtw + mbw + ptw + pbw;\n      b += h;\n      max += h;\n      min += h;\n    }\n    return { b, min, max };\n  }\n\n  __calAbs(isDirectionRow) {\n    let max = 0;\n    let { mtw, mrw, mbw, mlw, ptw, prw, pbw, plw, flowChildren, style } = this;\n    // 计算需考虑style的属性\n    let {\n      width,\n      height,\n      borderTopWidth,\n      borderRightWidth,\n      borderBottomWidth,\n      borderLeftWidth,\n    } = style;\n    let main = isDirectionRow ? width : height;\n    if(main.unit === unit.PX) {\n      max = main.value;\n    }\n    // 递归children取最大值\n    flowChildren.forEach(item => {\n      if(item instanceof Xom) {\n        let max2 = item.__calAbs(isDirectionRow);\n        max = Math.max(max, max2);\n      }\n      else if(isDirectionRow) {\n        max = Math.max(item.textWidth, max);\n      }\n      else {\n        item.__layout({\n          x: 0,\n          y: 0,\n          w: Infinity,\n          h: Infinity,\n        }, true);\n        max = Math.max(max, item.height);\n      }\n    });\n    // margin/padding/border也得计算在内\n    if(isDirectionRow) {\n      let w = borderRightWidth.value + borderLeftWidth.value + mlw + mrw + plw + prw;\n      max += w;\n    }\n    else {\n      let h = borderTopWidth.value + borderBottomWidth.value + mtw + mbw + ptw + pbw;\n      max += h;\n    }\n    return max;\n  }\n\n  // 本身block布局时计算好所有子元素的基本位置\n  __layoutBlock(data) {\n    let { x, y, w, h } = data;\n    this.__x = x;\n    this.__y = y;\n    this.__width = w;\n    let { flowChildren, style, lineGroups, mlw, mtw, mrw, mbw, plw, ptw, prw, pbw } = this;\n    let {\n      width,\n      height,\n      marginLeft,\n      marginRight,\n      borderTopWidth,\n      borderRightWidth,\n      borderBottomWidth,\n      borderLeftWidth,\n      textAlign,\n    } = style;\n    // 除了auto外都是固定高度\n    let fixedHeight;\n    if(width && width.unit !== unit.AUTO) {\n      switch(width.unit) {\n        case unit.PX:\n          w = width.value;\n          break;\n        case unit.PERCENT:\n          w *= width.value * 0.01;\n          break;\n      }\n    }\n    if(height && height.unit !== unit.AUTO) {\n      fixedHeight = true;\n      switch(height.unit) {\n        case unit.PX:\n          h = height.value;\n          break;\n        case unit.PERCENT:\n          h *= height.value * 0.01;\n          break;\n      }\n    }\n    // margin/padding/border影响x和y和尺寸\n    x += borderLeftWidth.value + mlw + plw;\n    data.x = x;\n    y += borderTopWidth.value + mtw + ptw;\n    data.y = y;\n    if(width.unit === unit.AUTO) {\n      w -= borderLeftWidth.value + borderRightWidth.value + mlw + mrw + plw + prw;\n    }\n    if(height.unit === unit.AUTO) {\n      h -= borderTopWidth.value + borderBottomWidth.value + mtw + mbw + ptw + pbw;\n    }\n    // 递归布局，将inline的节点组成lineGroup一行\n    let lineGroup = new LineGroup(x, y);\n    flowChildren.forEach(item => {\n      if(item instanceof Xom) {\n        if(item.style.display === 'inline') {\n          // inline开头，不用考虑是否放得下直接放\n          if(x === data.x) {\n            lineGroup.add(item);\n            item.__layout({\n              x,\n              y,\n              w,\n              h,\n            });\n            x += item.outerWidth;\n          }\n          else {\n            // 非开头先尝试是否放得下\n            let fw = item.__tryLayInline(w - x, w);\n            // 放得下继续\n            if(fw >= 0) {\n              item.__layout({\n                x,\n                y,\n                w,\n                h,\n              });\n            }\n            // 放不下处理之前的lineGroup，并重新开头\n            else {\n              lineGroups.push(lineGroup);\n              lineGroup.verticalAlign();\n              x = data.x;\n              y += lineGroup.height;\n              item.__layout({\n                x: data.x,\n                y,\n                w,\n                h,\n              });\n              lineGroup = new LineGroup(x, y);\n            }\n            x += item.outerWidth;\n            lineGroup.add(item);\n          }\n        }\n        else {\n          // block先处理之前可能的lineGroup\n          if(lineGroup.size) {\n            lineGroups.push(lineGroup);\n            lineGroup.verticalAlign();\n            y += lineGroup.height;\n            lineGroup = new LineGroup(data.x, y);\n          }\n          item.__layout({\n            x: data.x,\n            y,\n            w,\n            h,\n          });\n          x = data.x;\n          y += item.outerHeight;\n        }\n      }\n      // 文字和inline类似\n      else {\n        // x开头，不用考虑是否放得下直接放\n        if(x === data.x) {\n          lineGroup.add(item);\n          item.__layout({\n            x,\n            y,\n            w,\n            h,\n          });\n          x += item.width;\n        }\n        else {\n          // 非开头先尝试是否放得下\n          let fw = item.__tryLayInline(w - x, w);\n          // 放得下继续\n          if(fw >= 0) {\n            item.__layout({\n              x,\n              y,\n              w,\n              h,\n            });\n          }\n          // 放不下处理之前的lineGroup，并重新开头\n          else {\n            lineGroups.push(lineGroup);\n            lineGroup.verticalAlign();\n            x = data.x;\n            y += lineGroup.height;\n            item.__layout({\n              x: data.x,\n              y,\n              w,\n              h,\n            });\n            lineGroup = new LineGroup(x, y);\n          }\n          x += item.width;\n          lineGroup.add(item);\n        }\n      }\n    });\n    // 结束后处理可能遗留的最后的lineGroup\n    if(lineGroup.size) {\n      lineGroups.push(lineGroup);\n      lineGroup.verticalAlign();\n      y += lineGroup.height;\n    }\n    // text-align\n    if(['center', 'right'].indexOf(textAlign) > -1) {\n      lineGroups.forEach(lineGroup => {\n        let diff = w - lineGroup.width;\n        if(diff > 0) {\n          lineGroup.horizonAlign(textAlign === 'center' ? diff * 0.5 : diff);\n        }\n      });\n    }\n    this.__width = w;\n    this.__height = fixedHeight ? h : y - data.y;\n    this.__flowY = y;\n    // 处理margin:xx auto居中对齐\n    if(marginLeft.unit === unit.AUTO && marginRight.unit === unit.AUTO && width.unit !== unit.AUTO) {\n      let ow = this.outerWidth;\n      if(ow < data.w) {\n        this.__offsetX((data.w - ow) * 0.5);\n      }\n    }\n  }\n\n  // 弹性布局时的计算位置\n  __layoutFlex(data) {\n    let { x, y, w, h } = data;\n    this.__x = x;\n    this.__y = y;\n    this.__width = w;\n    let { flowChildren, style, mlw, mtw, mrw, mbw, plw, ptw, prw, pbw } = this;\n    let {\n      width,\n      height,\n      flexDirection,\n      borderTopWidth,\n      borderRightWidth,\n      borderBottomWidth,\n      borderLeftWidth,\n      justifyContent,\n      alignItems,\n    } = style;\n    // 除了auto外都是固定高度\n    let fixedWidth;\n    let fixedHeight;\n    if(width && width.unit !== unit.AUTO) {\n      fixedWidth = true;\n      switch(width.unit) {\n        case unit.PX:\n          w = width.value;\n          break;\n        case unit.PERCENT:\n          w *= width.value * 0.01;\n          break;\n      }\n    }\n    if(height && height.unit !== unit.AUTO) {\n      fixedHeight = true;\n      switch(height.unit) {\n        case unit.PX:\n          h = height.value;\n          break;\n        case unit.PERCENT:\n          h *= height.value * 0.01;\n          break;\n      }\n    }\n    // margin/padding/border影响x和y和尺寸\n    x += borderLeftWidth.value + mlw + plw;\n    data.x = x;\n    y += borderTopWidth.value + mtw + ptw;\n    data.y = y;\n    if(width.unit === unit.AUTO) {\n      w -= borderLeftWidth.value + borderRightWidth.value + mlw + mrw + plw + prw;\n    }\n    if(height.unit === unit.AUTO) {\n      h -= borderTopWidth.value + borderBottomWidth.value + mtw + mbw + ptw + pbw;\n    }\n    let isDirectionRow = flexDirection === 'row';\n    // column时height可能为auto，此时取消伸展，退化为类似block布局，但所有子元素强制block\n    if(!isDirectionRow && !fixedHeight) {\n      flowChildren.forEach(item => {\n        if(item instanceof Xom) {\n          const { style, style: { display, flexDirection, width }} = item;\n          // column的flex的child如果是inline，变为block\n          if(display === 'inline') {\n            style.display = 'block';\n          }\n          // 竖向flex的child如果是横向flex，宽度自动的话要等同于父flex的宽度\n          else if(display === 'flex' && flexDirection === 'row' && width.unit === unit.AUTO) {\n            width.value = w;\n            width.unit = unit.PX;\n          }\n          item.__layout({\n            x,\n            y,\n            w,\n            h,\n          });\n          y += item.outerHeight;\n        }\n        else {\n          item.__layout({\n            x,\n            y,\n            w,\n            h,\n          });\n          y += item.outerHeight;\n        }\n      });\n      this.__width = w;\n      this.__height = y - data.y;\n      return;\n    }\n    // 计算伸缩基数\n    let growList = [];\n    let shrinkList = [];\n    let basisList = [];\n    let minList = [];\n    let growSum = 0;\n    let shrinkSum = 0;\n    let basisSum = 0;\n    let maxSum = 0;\n    flowChildren.forEach(item => {\n      if(item instanceof Xom) {\n        let { flexGrow, flexShrink, flexBasis } = item.style;\n        growList.push(flexGrow);\n        shrinkList.push(flexShrink);\n        growSum += flexGrow;\n        shrinkSum += flexShrink;\n        let { b, min, max } = item.__calAutoBasis(isDirectionRow, w, h);\n        // 根据basis不同，计算方式不同\n        if(flexBasis.unit === unit.AUTO) {\n          basisList.push(max);\n          basisSum += max;\n        }\n        else if(flexBasis.unit === unit.PX) {\n          b = flexBasis.value;\n          basisList.push(b);\n          basisSum += b;\n        }\n        else if(flexBasis.unit === unit.PERCENT) {\n          b = (isDirectionRow ? w : h) * flexBasis.value;\n          basisList.push(b);\n          basisSum += b;\n        }\n        maxSum += max;\n        minList.push(min);\n      }\n      else {\n        growList.push(0);\n        shrinkList.push(1);\n        shrinkSum += 1;\n        if(isDirectionRow) {\n          basisList.push(item.textWidth);\n          basisSum += item.textWidth;\n          maxSum += item.textWidth;\n          minList.push(item.charWidth);\n        }\n        else {\n          item.__layout({\n            x: 0,\n            y: 0,\n            w,\n            h,\n          }, true);\n          basisList.push(item.height);\n          basisSum += item.height;\n          maxSum += item.height;\n          minList.push(item.height);\n        }\n      }\n    });\n    let maxCross = 0;\n    // 判断是否超出，决定使用grow还是shrink\n    let isOverflow = maxSum > (isDirectionRow ? w : h);\n    flowChildren.forEach((item, i) => {\n      let main;\n      let shrink = shrinkList[i];\n      let grow = growList[i];\n      // 计算主轴长度\n      if(isOverflow) {\n        let overflow = basisSum - (isDirectionRow ? w : h);\n        main = shrink ? (basisList[i] - overflow * shrink / shrinkSum) : basisList[i];\n      }\n      else {\n        let free = (isDirectionRow ? w : h) - basisSum;\n        main = grow ? (basisList[i] + free * grow / growSum) : basisList[i];\n      }\n      // 主轴长度的最小值不能小于元素的最小长度，比如横向时的字符宽度\n      main = Math.max(main, minList[i]);\n      if(item instanceof Xom) {\n        const { style, mlw, mtw, mrw, mbw, plw, ptw, prw, pbw, style: {\n          display,\n          flexDirection,\n          width,\n          height,\n          borderTopWidth,\n          borderRightWidth,\n          borderBottomWidth,\n          borderLeftWidth,\n        }} = item;\n        if(isDirectionRow) {\n          // row的flex的child如果是inline，变为block\n          if(display === 'inline') {\n            style.display = 'block';\n          }\n          // 横向flex的child如果是竖向flex，高度自动的话要等同于父flex的高度\n          else if(display === 'flex' && flexDirection === 'column' && fixedHeight && height.unit === unit.AUTO) {\n            height.value = h;\n            height.unit = unit.PX;\n          }\n          item.__layout({\n            x,\n            y,\n            w: main,\n            h,\n          })\n        }\n        else {\n          // column的flex的child如果是inline，变为block\n          if(display === 'inline') {\n            style.display = 'block';\n          }\n          // 竖向flex的child如果是横向flex，宽度自动的话要等同于父flex的宽度\n          else if(display === 'flex' && flexDirection === 'row' && width.unit === unit.AUTO) {\n            width.value = w;\n            width.unit = unit.PX;\n          }\n          item.__layout({\n            x,\n            y,\n            w,\n            h: main,\n          });\n        }\n        // 重设因伸缩而导致的主轴长度\n        if(isOverflow && shrink) {\n          if(isDirectionRow) {\n            item.__width = main - mlw - mrw - plw - prw - borderLeftWidth.value - borderRightWidth.value;\n          }\n          else {\n            item.__height = main - mtw - mbw - ptw - pbw - borderTopWidth.value - borderBottomWidth.value;\n          }\n        }\n        else if(!isOverflow && grow) {\n          if(isDirectionRow) {\n            item.__width = main - mlw - mrw - plw - prw - borderLeftWidth.value - borderRightWidth.value;\n          }\n          else {\n            item.__height = main - mtw - mbw - ptw - pbw - borderTopWidth.value - borderBottomWidth.value;\n          }\n        }\n      }\n      else {\n        item.__layout({\n          x,\n          y,\n          w: isDirectionRow ? main : w,\n          h: isDirectionRow ? h : main,\n        });\n      }\n      if(isDirectionRow) {\n        x += item.outerWidth;\n        maxCross = Math.max(maxCross, item.outerHeight);\n      }\n      else {\n        y += item.outerHeight;\n        maxCross = Math.max(maxCross, item.outerWidth);\n      }\n    });\n    // 计算主轴剩余时要用真实剩余空间而不能用伸缩剩余空间\n    let diff = isDirectionRow ? w - x + data.x : h - y + data.y;\n    // 主轴侧轴对齐方式\n    if(!isOverflow && growSum === 0 && diff > 0) {\n      let len = flowChildren.length;\n      if(justifyContent === 'flex-end') {\n        for(let i = 0; i < len; i++) {\n          let child = flowChildren[i];\n          isDirectionRow ? child.__offsetX(diff) : child.__offsetY(diff);\n        }\n      }\n      else if(justifyContent === 'center') {\n        let center = diff * 0.5;\n        for(let i = 0; i < len; i++) {\n          let child = flowChildren[i];\n          isDirectionRow ? child.__offsetX(center) : child.__offsetY(center);\n        }\n      }\n      else if(justifyContent === 'space-between') {\n        let between = diff / (len - 1);\n        for(let i = 1; i < len; i++) {\n          let child = flowChildren[i];\n          isDirectionRow ? child.__offsetX(between * i) : child.__offsetY(between * i);\n        }\n      }\n      else if(justifyContent === 'space-around') {\n        let around = diff / (len + 1);\n        for(let i = 0; i < len; i++) {\n          let child = flowChildren[i];\n          isDirectionRow ? child.__offsetX(around * (i + 1)) : child.__offsetY(around * (i + 1));\n        }\n      }\n    }\n    // 子元素侧轴伸展\n    if(isDirectionRow) {\n      // 父元素固定高度，子元素可能超过，侧轴最大长度取固定高度\n      if(fixedHeight) {\n        maxCross = h;\n      }\n      y += maxCross;\n    }\n    else {\n      if(fixedWidth) {\n        maxCross = w;\n      }\n    }\n    // 侧轴对齐\n    if(alignItems === 'stretch') {\n      // 短侧轴的children伸张侧轴长度至相同，超过的不动，固定宽高的也不动\n      flowChildren.forEach(item => {\n        let { style, mlw, mtw, mrw, mbw, ptw, prw, plw, pbw } = item;\n        if(isDirectionRow) {\n          if(style.height.unit === unit.AUTO) {\n            item.__height = maxCross - mtw - mbw - ptw - pbw\n              - style.borderTopWidth.value\n              - style.borderBottomWidth.value;\n          }\n        }\n        else {\n          if(style.width.unit === unit.AUTO) {\n            item.__width = maxCross - mlw - mrw - plw - prw\n              - borderRightWidth.value\n              - borderLeftWidth.value;\n          }\n        }\n      });\n    }\n    else if(alignItems === 'center') {\n      flowChildren.forEach(item => {\n        let diff = maxCross - item.outerHeight;\n        if(diff > 0) {\n          item.__offsetY(diff * 0.5);\n        }\n      });\n    }\n    else if(alignItems === 'flex-end') {\n      flowChildren.forEach(item => {\n        let diff = maxCross - item.outerHeight;\n        if(diff > 0) {\n          item.__offsetY(diff);\n        }\n      });\n    }\n    this.__width = w;\n    this.__height = fixedHeight ? h : y - data.y;\n    this.__flowY = y;\n  }\n\n  // inline比较特殊，先简单顶部对其，后续还需根据vertical和lineHeight计算y偏移\n  __layoutInline(data) {\n    let { x, y, w, h } = data;\n    this.__x = x;\n    this.__y = y;\n    let maxX = x;\n    let { flowChildren, style, lineGroups, mlw, mtw, mrw, mbw, plw, ptw, prw, pbw } = this;\n    let {\n      width,\n      height,\n      marginLeft,\n      marginRight,\n      borderTopWidth,\n      borderRightWidth,\n      borderBottomWidth,\n      borderLeftWidth,\n      textAlign,\n    } = style;\n    // 除了auto外都是固定高度\n    let fixedWidth;\n    let fixedHeight;\n    if(width && width.unit !== unit.AUTO) {\n      fixedWidth = true;\n      switch(width.unit) {\n        case unit.PX:\n          w = width.value;\n          break;\n        case unit.PERCENT:\n          w *= width.value * 0.01;\n          break;\n      }\n    }\n    if(height && height.unit !== unit.AUTO) {\n      fixedHeight = true;\n      switch(height.unit) {\n        case unit.PX:\n          h = height.value;\n          break;\n        case unit.PERCENT:\n          h *= height.value * 0.01;\n          break;\n      }\n    }\n    // margin/padding/border影响x和y和尺寸\n    x += borderLeftWidth.value + mlw + plw;\n    data.x = x;\n    y += borderTopWidth.value + mtw + ptw;\n    data.y = y;\n    if(width.unit === unit.AUTO) {\n      w -= borderLeftWidth.value + borderRightWidth.value + mlw + mrw + plw + prw;\n    }\n    if(height.unit === unit.AUTO) {\n      h -= borderTopWidth.value + borderBottomWidth.value + mtw + mbw + ptw + pbw;\n    }\n    // 递归布局，将inline的节点组成lineGroup一行\n    let lineGroup = new LineGroup(x, y);\n    flowChildren.forEach(item => {\n      if(item instanceof Xom) {\n        // 绝对定位跳过\n        if(item.style.position === 'absolute') {\n          this.absChildren.push(item);\n          return;\n        }\n        item.style.display = 'inline';\n        // inline开头，不用考虑是否放得下直接放\n        if(x === data.x) {\n          lineGroup.add(item);\n          item.__layout({\n            x,\n            y,\n            w,\n            h,\n          });\n          x += item.outerWidth;\n          maxX = Math.max(maxX, x);\n        }\n        else {\n          // 非开头先尝试是否放得下\n          let fw = item.__tryLayInline(w - x, w);\n          // 放得下继续\n          if(fw >= 0) {\n            item.__layout({\n              x,\n              y,\n              w,\n              h,\n            });\n          }\n          // 放不下处理之前的lineGroup，并重新开头\n          else {\n            lineGroups.push(lineGroup);\n            lineGroup.verticalAlign();\n            x = data.x;\n            y += lineGroup.height;\n            item.__layout({\n              x: data.x,\n              y,\n              w,\n              h,\n            });\n            lineGroup = new LineGroup(x, y);\n          }\n          x += item.outerWidth;\n          maxX = Math.max(maxX, x);\n          lineGroup.add(item);\n        }\n      }\n      // inline里的其它只有文本\n      else {\n        if(x === data.x) {\n          lineGroup.add(item);\n          item.__layout({\n            x,\n            y,\n            w,\n            h,\n          });\n          x += item.width;\n          maxX = Math.max(maxX, x);\n        }\n        else {\n          // 非开头先尝试是否放得下\n          let fw = item.__tryLayInline(w - x, w);\n          // 放得下继续\n          if(fw >= 0) {\n            item.__layout({\n              x,\n              y,\n              w,\n              h,\n            });\n          }\n          // 放不下处理之前的lineGroup，并重新开头\n          else {\n            lineGroups.push(lineGroup);\n            lineGroup.verticalAlign();\n            x = data.x;\n            y += lineGroup.height;\n            item.__layout({\n              x: data.x,\n              y,\n              w,\n              h,\n            });\n            lineGroup = new LineGroup(x, y);\n          }\n          x += item.width;\n          maxX = Math.max(maxX, x);\n          lineGroup.add(item);\n        }\n      }\n    });\n    // 结束后处理可能遗留的最后的lineGroup，children为空时可能size为空\n    if(lineGroup.size) {\n      lineGroups.push(lineGroup);\n      lineGroup.verticalAlign();\n      y += lineGroup.height;\n    }\n    // text-align\n    if(['center', 'right'].indexOf(textAlign) > -1) {\n      lineGroups.forEach(lineGroup => {\n        let diff = w - lineGroup.width;\n        if(diff > 0) {\n          lineGroup.horizonAlign(textAlign === 'center' ? diff * 0.5 : diff);\n        }\n      });\n    }\n    // 元素的width不能超过父元素w\n    this.__width = fixedWidth ? w : maxX - data.x;\n    this.__height = fixedHeight ? h : y - data.y;\n    this.__flowY = y;\n    // 处理margin:xx auto居中对齐\n    if(marginLeft.unit === unit.AUTO && marginRight.unit === unit.AUTO && width.unit !== unit.AUTO) {\n      let ow = this.outerWidth;\n      if(ow < data.w) {\n        this.__offsetX((data.w - ow) * 0.5);\n      }\n    }\n  }\n\n  // 只针对绝对定位children布局\n  __layoutAbs(container) {\n    let { x, y, flowY, width, height, children, absChildren, style, mlw, mtw, mrw, mbw, plw, ptw, prw, pbw } = this;\n    let {\n      borderTopWidth,\n      borderLeftWidth,\n    } = style;\n    let pw = width + plw + prw;\n    let ph = height + ptw + pbw;\n    // 递归进行，遇到absolute/relative的设置新容器\n    children.forEach(item => {\n      if(item instanceof Dom) {\n        item.__layoutAbs(['absolute', 'relative'].indexOf(item.style.position) > -1 ? item : container);\n      }\n    });\n    // 对absolute的元素进行相对容器布局\n    absChildren.forEach(item => {\n      let { mtw, mlw, style, style: {\n        left, top, right, bottom, width: width2, height: height2\n      } } = item;\n      let x2, y2, w2, h2;\n      // width优先级高于right高于left，即最高left+right，其次left+width，再次right+width，然后仅申明单个，最次全部auto\n      if(left.unit !== unit.AUTO && right.unit !== unit.AUTO) {\n        x2 = left.unit === unit.PX ? x + mlw + borderLeftWidth.value + left.value : x + mlw + borderLeftWidth.value + width * left.value * 0.01;\n        w2 = right.unit === unit.PX ? x + mlw + borderLeftWidth.value + pw - right.value - x2 : x + mlw + borderLeftWidth.value + pw - width * right.value * 0.01 - x2;\n      }\n      else if(left.unit !== unit.AUTO && width2.unit !== unit.AUTO) {\n        x2 = left.unit === unit.PX ? x + mlw + borderLeftWidth.value + left.value : x + mlw + borderLeftWidth.value + width * left.value * 0.01;\n        w2 = width2.unit === unit.PX ? width2.value : width;\n      }\n      else if(right.unit !== unit.AUTO && width2.unit !== unit.AUTO) {\n        w2 = width2.unit === unit.PX ? width2.value : width;\n        let widthPx = width2.unit === unit.PX ? width2.value : width * width2.value * 0.01;\n        x2 = right.unit === unit.PX ? x + mlw + borderLeftWidth.value + pw - right.value - widthPx : x + mlw + borderLeftWidth.value + pw - width * right.value * 0.01 - widthPx;\n      }\n      else if(left.unit !== unit.AUTO) {\n        x2 = left.unit === unit.PX ? x + left.value : x + mlw + borderLeftWidth.value + width * left.value * 0.01;\n        w2 = item.__calAbs(true);\n      }\n      else if(right.unit !== unit.AUTO) {\n        w2 = item.__calAbs(true);\n        x2 = right.unit === unit.PX ? x + mlw + borderLeftWidth.value + pw - right.value - w2 : x + mlw + borderLeftWidth.value + pw - width * right.value * 0.01 - w2;\n      }\n      else if(width2.unit !== unit.AUTO) {\n        x2 = x + mlw + borderLeftWidth.value;\n        w2 = width2.unit === unit.PX ? width2.value : width;\n      }\n      else {\n        x2 = x + mlw + borderLeftWidth.value;\n        w2 = item.__calAbs(true);\n      }\n      // top/bottom/height优先级同上\n      if(top.unit !== unit.AUTO && bottom.unit !== unit.AUTO) {\n        y2 = top.unit === unit.PX ? y + top.value : y + mtw + borderTopWidth.value + height * top.value * 0.01;\n        h2 = bottom.unit === unit.PX ? y + mtw + borderTopWidth.value + ph - bottom.value - y2 : y + mtw + borderTopWidth.value + ph - height * bottom.value * 0.01 - y2;\n        style.height = {\n          value: h2,\n          unit: unit.PX,\n        };\n      }\n      else if(top.unit !== unit.AUTO && height2.unit !== unit.AUTO) {\n        y2 = top.unit === unit.PX ? y + top.value : y + mtw + borderTopWidth.value + height * top.value * 0.01;\n        h2 = height2.unit === unit.PX ? height2.value : height;\n      }\n      else if(bottom.unit !== unit.AUTO && height2.unit !== unit.AUTO) {\n        h2 = height2.unit === unit.PX ? height2.value : height;\n        let heightPx = height2.unit === unit.PX ? height2.value : height * height2.value * 0.01;\n        y2 = bottom.unit === unit.PX ? y + mtw + borderTopWidth.value + ph - bottom.value - heightPx : y + mtw + borderTopWidth.value + ph - height * bottom.value * 0.01 - heightPx;\n      }\n      else if(top.unit !== unit.AUTO) {\n        y2 = top.unit === unit.PX ? y + top.value : y + mtw + borderTopWidth.value + height * top.value * 0.01;\n        h2 = item.__calAbs();\n      }\n      else if(bottom.unit !== unit.AUTO) {\n        h2 = item.__calAbs();\n        y2 = bottom.unit === unit.PX ? y + mtw + borderTopWidth.value + ph - bottom.value - h2 : y + mtw + borderTopWidth.value + ph - height * bottom.value * 0.01 - h2;\n      }\n      else if(height2.unit !== unit.AUTO) {\n        y2 = flowY + mtw + borderTopWidth.value;\n        h2 = height2.unit === unit.PX ? height2.value : height;\n      }\n      else {\n        y2 = flowY + mtw + borderTopWidth.value;\n        h2 = item.__calAbs();\n      }\n      // absolute时inline强制block\n      if(style.display === 'inline') {\n        style.display = 'block';\n      }\n      item.__layout({\n        x: x2,\n        y: y2,\n        w: w2,\n        h: h2,\n      });\n    });\n  }\n\n  __emitEvent(e, force) {\n    let { event: { type }, x, y, covers } = e;\n    let { listener, children, style, rx, ry, outerWidth, outerHeight } = this;\n    if(style.display === 'none') {\n      return;\n    }\n    let cb;\n    if(listener.hasOwnProperty(type)) {\n      cb = listener[type];\n    }\n    let hasChildEmit;\n    // 先响应absolute/relative高优先级\n    for(let i = children.length - 1; i >= 0; i--) {\n      let child = children[i];\n      if(child instanceof Xom && ['absolute', 'relative'].indexOf(child.style.position) > -1) {\n        if(child.__emitEvent(e, force)) {\n          hasChildEmit = true;\n        }\n      }\n    }\n    // 再看普通流\n    for(let i = children.length - 1; i >= 0; i--) {\n      let child = children[i];\n      if(child instanceof Xom && ['absolute', 'relative'].indexOf(child.style.position) === -1) {\n        if(child.__emitEvent(e, force)) {\n          hasChildEmit = true;\n        }\n      }\n    }\n    if(force) {\n      cb && cb(e);\n      return;\n    }\n    // child触发则parent一定触发\n    if(hasChildEmit) {\n      covers.push({\n        x,\n        y,\n        w: outerWidth,\n        h: outerHeight,\n      });\n      cb && cb(e);\n    }\n    // 否则判断坐标是否位于自己内部，以及没被遮挡\n    else if(x >= rx && y >= ry && x <= rx + outerWidth && y <= ry + outerHeight) {\n      for(let i = 0, len = covers.length; i < len; i++) {\n        let { x: x2, y: y2, w, h: h } = covers[i];\n        if(x >= x2 && y >= y2 && x <= x2 + w && y <= y2 + h) {\n          return;\n        }\n      }\n      if(!e.target) {\n        e.target = this;\n      }\n      covers.push({\n        x,\n        y,\n        w: outerWidth,\n        h: outerHeight,\n      });\n      cb && cb(e);\n    }\n  }\n\n  render(renderMode) {\n    super.render(renderMode);\n    let { style, flowChildren, children } = this;\n    let {\n      display,\n      position,\n      top,\n      right,\n      bottom,\n      left,\n      height: h,\n    } = style;\n    if(display === 'none') {\n      return;\n    }\n    // 先绘制static\n    flowChildren.forEach(item => {\n      if(item instanceof Text || item.style.position === 'static') {\n        item.render(renderMode);\n      }\n    });\n    // 再绘制relative和absolute\n    children.forEach(item => {\n      if((item instanceof Xom) && ['relative', 'absolute'].indexOf(item.style.position) > -1) {\n        item.render(renderMode);\n      }\n    });\n    if(renderMode === mode.SVG) {\n      this.__virtualDom = {\n        ...super.virtualDom,\n        type: 'dom',\n        children: this.children.map(item => item.virtualDom),\n      };\n    }\n  }\n\n  get tagName() {\n    return this.__tagName;\n  }\n  get children() {\n    return this.__children;\n  }\n  get flowChildren() {\n    return this.__flowChildren;\n  }\n  get absChildren() {\n    return this.__absChildren;\n  }\n  get lineGroups() {\n    return this.__lineGroups;\n  }\n  get baseLine() {\n    let len = this.lineGroups.length;\n    if(len) {\n      let last = this.lineGroups[len - 1];\n      return last.y - this.y + last.baseLine;\n    }\n    return this.y;\n  }\n  get flowY() {\n    return this.__flowY;\n  }\n\n  static isValid(s) {\n    return TAG_NAME.hasOwnProperty(s);\n  }\n}\n\nexport default Dom;\n","import util from './util';\n\nfunction diff(elem, ovd, nvd) {\n  let cns = elem.childNodes;\n  diffDefs(cns[0], ovd.defs, nvd.defs);\n  diffBb(cns[1], ovd.bb, nvd.bb);\n  diffD2D(elem, ovd, nvd, true);\n}\n\nfunction diffDefs(elem, od, nd) {\n  let ol = od.length;\n  let nl = nd.length;\n  let i = 0;\n  let cns = elem.childNodes;\n  for(; i < Math.min(ol, nl); i++) {\n    diffDef(cns[i], od[i], nd[i]);\n  }\n}\n\nfunction diffDef(elem, od, nd) {\n  if(od.k !== nd.k) {\n    elem.insertAdjacentHTML('afterend', util.joinDef(nd));\n    elem.parentNode.removeChild(elem);\n  }\n  else {\n    for(let i = 0; i < 4; i++) {\n      if(od.c[i] !== nd.c[i]) {\n        elem.setAttribute(['x1', 'y1', 'x2', 'y2'][i], nd.c[i]);\n      }\n    }\n    let ol = od.v.length;\n    let nl = nd.v.length;\n    let i = 0;\n    let cns = elem.childNodes;\n    for(; i < Math.min(ol, nl); i++) {\n      let o = od.v[i];\n      let n = nd.v[i];\n      if(o[0] !== n[0]) {\n        cns[i].setAttribute('stop-color', n[0]);\n      }\n      if(o[1] !== n[1]) {\n        cns[i].setAttribute('offset', n[1]);\n      }\n    }\n    if(i < ol) {\n      for(; i < ol; i++) {\n        removeAt(elem, cns, i);\n      }\n    }\n    else if(i < nl) {\n      for(; i < nl; i++) {\n        insertAt(elem, cns, i, util.joinDef(nd.v[i]));\n      }\n    }\n  }\n}\n\nfunction diffChild(elem, ovd, nvd) {\n  if(ovd.type === 'dom') {\n    if(nvd.type === 'dom') {\n      diffD2D(elem, ovd, nvd);\n    }\n    else if(nvd.type === 'text') {\n      replaceWith(elem, nvd);\n    }\n    else if(nvd.type === 'geom') {\n      diffD2G(elem, ovd, nvd);\n    }\n  }\n  else if(nvd.type === 'text') {\n    if(nvd.type === 'dom') {\n      replaceWith(elem, nvd);\n    }\n    else if(nvd.type === 'text') {\n      diffT2T(elem, ovd, nvd);\n    }\n    else if(nvd.type === 'geom') {\n      replaceWith(elem, nvd);\n    }\n  }\n  else if(nvd.type === 'geom') {\n    if(nvd.type === 'dom') {\n      diffG2D(elem, ovd, nvd);\n    }\n    else if(nvd.type === 'text') {\n      replaceWith(elem, nvd);\n    }\n    else if(nvd.type === 'geom') {\n      diffG2G(elem, ovd, nvd);\n    }\n  }\n}\n\nfunction diffD2D(elem, ovd, nvd, root) {\n  if(!root) {\n    diffBb(elem.firstChild, ovd.bb, nvd.bb);\n  }\n  let ol = ovd.children.length;\n  let nl = nvd.children.length;\n  let i = 0;\n  let lastChild = elem.lastChild;\n  let cns = lastChild.childNodes;\n  for(; i < Math.min(ol, nl); i++) {\n    diffChild(cns[i], ovd.children[i], nvd.children[i]);\n  }\n  if(i < ol) {\n    for(; i < ol; i++) {\n      removeAt(lastChild, cns, i);\n    }\n  }\n  else if(i < nl) {\n    for(; i < nl; i++) {\n      insertAt(lastChild, cns, i, util.joinVd(nvd.children[i]));\n    }\n  }\n}\n\nfunction diffD2G(elem, ovd, nvd) {\n  diffBb(elem.firstChild, ovd.bb, nvd.bb);\n  replaceWith(elem.lastChild, nvd.content);\n}\n\nfunction diffT2T(elem, ovd, nvd) {\n  let ol = ovd.children.length;\n  let nl = nvd.children.length;\n  let i = 0;\n  for(; i < Math.min(ol, nl); i++) {\n    diffItem(elem, i, ovd.children[i], nvd.children[i], true);\n  }\n  let cns = elem.childNodes;\n  if(i < ol) {\n    for(; i < ol; i++) {\n      removeAt(elem, cns, i);\n    }\n  }\n  else if(i < nl) {\n    for(; i < nl; i++) {\n      insertAt(elem, cns, i, util.joinVd(nvd.children[i]));\n    }\n  }\n}\n\nfunction diffG2D(elem, ovd, nvd) {\n  diffBb(elem.firstChild, ovd.bb, nvd.bb);\n  replaceWith(elem.lastChild, nvd.children);\n}\n\nfunction diffG2G(elem, ovd, nvd) {\n  if(!equalArr(ovd.transform, nvd.transform)) {\n    let transform = util.joinTransform(nvd.transform);\n    if(elem.getAttribute('transform') !== transform) {\n      elem.setAttribute('transform', transform);\n    }\n  }\n  diffBb(elem.firstChild, ovd.bb, nvd.bb);\n  let ol = ovd.content.length;\n  let nl = nvd.content.length;\n  let i = 0;\n  let lastChild = elem.lastChild;\n  let cns = lastChild.childNodes;\n  for(; i < Math.min(ol, nl); i++) {\n    diffItem(lastChild, i, ovd.content[i], nvd.content[i]);\n  }\n  if(i < ol) {\n    for(; i < ol; i++) {\n      removeAt(lastChild, cns, i);\n    }\n  }\n  else if(i < nl) {\n    for(; i < nl; i++) {\n      insertAt(lastChild, cns, i, util.joinVd(nvd.content[i]));\n    }\n  }\n}\n\nfunction diffBb(elem, obb, nbb) {\n  let ol = obb.length;\n  let nl = nbb.length;\n  let i = 0;\n  for(; i < Math.min(ol, nl); i++) {\n    diffItem(elem, i, obb[i], nbb[i]);\n  }\n  let cns = elem.childNodes;\n  if(i < ol) {\n    for(; i < ol; i++) {\n      removeAt(elem, cns, i);\n    }\n  }\n  else if(i < nl) {\n    for(; i < nl; i++) {\n      insertAt(elem, cns, i, util.joinVd(nbb[i]));\n    }\n  }\n}\n\nfunction diffItem(elem, i, ovd, nvd, isText) {\n  let cns = elem.childNodes;\n  if(ovd.tagName !== nvd.tagName) {\n    replaceWith(cns[i], nvd);\n  }\n  else {\n    let op = {};\n    for(let j = 0, len = ovd.props.length; j < len; j++) {\n      let prop = ovd.props[j];\n      let [k, v] = prop;\n      op[k] = v;\n    }\n    for(let j = 0, len = nvd.props.length; j < len; j++) {\n      let prop = nvd.props[j];\n      let [k, v] = prop;\n      // 已有不等更新，没有添加\n      if(op.hasOwnProperty(k)) {\n        if(op[k] !== v) {\n          cns[i].setAttribute(k, v);\n        }\n        delete op[k];\n      }\n      else {\n        cns[i].setAttribute(k, v);\n      }\n    }\n    // 多余的删除\n    for(var k in op) {\n      if(op.hasOwnProperty(k)) {\n        cns[i].removeAttribute(k);\n      }\n    }\n    if(isText && ovd.content !== nvd.content) {\n      cns[i].textContent = nvd.content;\n    }\n  }\n}\n\nfunction replaceWith(elem, vd) {\n  let res;\n  if(Array.isArray(vd)) {\n    res = '';\n    vd.forEach(item => {\n      res += util.joinVd(item);\n    });\n  }\n  else {\n    res = util.joinVd(vd);\n  }\n  elem.insertAdjacentHTML('afterend', res);\n  elem.parentNode.removeChild(elem);\n}\n\nfunction insertAt(elem, cns, index, html) {\n  if(index >= cns.length) {\n    elem.insertAdjacentHTML('beforeend', html);\n  }\n  else {\n    cns[index].insertAdjacentHTML('beforebegin', html);\n  }\n}\n\nfunction removeAt(elem, cns, index) {\n  if(cns[index]) {\n    elem.removeChild(cns[index]);\n  }\n}\n\nfunction equalArr(a, b) {\n  if(a.length !== b.length) {\n    return false;\n  }\n  for(let i = 0, len = a.length; i < len; i++) {\n    if(a[i] !== b[i]) {\n      return false;\n    }\n  }\n  return true;\n}\n\nexport default diff;\n","class Defs {\n  constructor(uuid) {\n    this.id = uuid;\n    this.count = 0;\n    this.list = [];\n  }\n  add(data) {\n    data.uuid = `karas-defs-${this.id}-${this.count++}`;\n    this.list.push(data);\n    return data.uuid;\n  }\n  clear() {\n    this.list = [];\n    this.count = 0;\n  }\n\n  get value() {\n    return this.list;\n  }\n\n  static getInstance(uuid) {\n    return new Defs(uuid);\n  }\n}\n\nexport default Defs;\n","import Dom from '../node/Dom';\nimport util from '../util';\nimport mode from '../mode';\nimport domDiff from '../domDiff';\nimport Defs from './Defs';\n\nfunction getDom(dom) {\n  if(util.isString(dom)) {\n    let o = document.querySelector(dom);\n    if(!o) {\n      throw new Error('can not find dom of selector: ' + dom);\n    }\n    return o;\n  }\n  if(!dom) {\n    throw new Error('can not find dom: ' + dom);\n  }\n  return dom;\n}\n\nfunction renderProp(k, v) {\n  let s = Array.isArray(v) ? util.joinSourceArray(v) : util.stringify(v);\n  if(k === 'className') {\n    k = 'class';\n  }\n  return ' ' + k + '=\"' + util.encodeHtml(s, true) + '\"';\n}\n\nlet uuid = 0;\n\nclass Root extends Dom {\n  constructor(tagName, props, children) {\n    super(tagName, props, children);\n    this.__node = null; // 真实DOM引用\n  }\n\n  __initProps() {\n    if(this.props.width !== undefined) {\n      let value = parseInt(this.props.width);\n      if(!isNaN(value) && value > 0) {\n        this.__width = value;\n      }\n    }\n    if(this.props.height !== undefined) {\n      let value = parseInt(this.props.height);\n      if(!isNaN(value) && value > 0) {\n        this.__height = value;\n      }\n    }\n  }\n\n  __genHtml() {\n    let res = `<${this.tagName}`;\n    // 拼接处理属性\n    for(let i = 0, len = this.__props.length; i < len; i++) {\n      let item = this.__props[i];\n      res += renderProp(item[0], item[1]);\n    }\n    res += `></${this.tagName}>`;\n    return res;\n  }\n\n  __cb(e, force) {\n    if(e.touches && e.touches.length > 1) {\n      return;\n    }\n    let { node } = this;\n    let { x, y, top, right } = node.getBoundingClientRect();\n    x = x || top || 0;\n    y = y || right || 0;\n    let { clientX, clientY } = e.touches ? (e.touches[0] || {}) : e;\n    x = clientX - x;\n    y = clientY - y;\n    this.__emitEvent({\n      event: e,\n      x,\n      y,\n      covers: [],\n    }, force);\n  }\n\n  __initEvent() {\n    let { node } = this;\n    ['click', 'dblclick', 'mousedown', 'mousemove', 'mouseup', 'touchstart', 'touchmove', 'touchend', 'touchcancel'].forEach(type => {\n      node.addEventListener(type, e => {\n        this.__cb(e, ['touchend', 'touchcancel'].indexOf(type) > -1);\n      });\n    });\n  }\n\n  appendTo(dom) {\n    dom = getDom(dom);\n    this.__initProps();\n    // 已有root节点\n    if(dom.nodeName.toUpperCase() === this.tagName.toUpperCase()) {\n      this.__node = dom;\n      if(this.width) {\n        dom.setAttribute('width', this.width);\n      }\n      if(this.height) {\n        dom.setAttribute('height', this.height);\n      }\n    }\n    // 没有canvas/svg节点则生成一个新的\n    else {\n      this.__node = dom.querySelector(this.tagName);\n      if(!this.__node) {\n        dom.innerHTML = this.__genHtml();\n        this.__node = dom.querySelector(this.tagName);\n      }\n    }\n    this.__uuid = this.__node.__uuid || uuid++;\n    this.__defs = Defs.getInstance(this.__uuid);\n    this.__defs.clear();\n    // 没有设置width/height则采用css计算形式\n    if(!this.width || !this.height) {\n      let css = window.getComputedStyle(dom, null);\n      if(!this.width) {\n        this.__width = parseInt(css.getPropertyValue('width'));\n        dom.setAttribute('width', this.width);\n      }\n      if(!this.height) {\n        this.__height = parseInt(css.getPropertyValue('height'));\n        dom.setAttribute('height', this.height);\n      }\n    }\n    // 只有canvas有ctx，svg用真实dom\n    let renderMode;\n    if(this.tagName === 'canvas') {\n      this.__ctx = this.__node.getContext('2d');\n      this.__ctx.clearRect(0, 0, this.width, this.height);\n      renderMode = mode.CANVAS;\n    }\n    else if(this.tagName === 'svg') {\n      renderMode = mode.SVG;\n    }\n    // canvas/svg作为根节点一定是block或flex，不会是inline\n    let { style } = this;\n    if(['flex', 'block'].indexOf(style.display) === -1) {\n      style.display = 'block';\n    }\n    // 同理position不能为absolute\n    if(style.position === 'absolute') {\n      style.position = 'static';\n    }\n    this.__traverse(this.__ctx, this.__defs, renderMode);\n    // canvas的宽高固定初始化\n    style.width = this.width;\n    style.height = this.height;\n    this.__initStyle();\n    this.__layout({\n      x: 0,\n      y: 0,\n      w: this.width,\n      h: this.height,\n    });\n    this.__layoutAbs(this);\n    this.render(renderMode);\n    if(renderMode === mode.SVG) {\n      let nvd = this.virtualDom;\n      let nd = this.__defs.value;\n      nvd.defs = nd;\n      if(this.node.__karasInit) {\n        domDiff(this.node, this.node.__ovd, nvd);\n      } else {\n        this.node.innerHTML = util.joinVirtualDom(nvd, nd);\n      }\n      this.node.__ovd = nvd;\n      this.node.__od = nd;\n    }\n    if(!this.node.__karasInit) {\n      this.node.__karasInit = true;\n      this.__initEvent();\n    }\n  }\n\n  get node() {\n    return this.__node;\n  }\n}\n\nexport default Root;\n","import Geom from './Geom';\nimport mode from '../mode';\n\nclass Line extends Geom {\n  constructor(tagName, props) {\n    super(tagName, props);\n    // start和end表明线段的首尾坐标，control表明控制点坐标\n    this.__start = [];\n    this.__end = [];\n    this.__control = [];\n    if(Array.isArray(this.props.start)) {\n      this.__start = this.props.start;\n    }\n    if(Array.isArray(this.props.end)) {\n      this.__end = this.props.end;\n    }\n    if(Array.isArray(this.props.control)) {\n      this.__control = this.props.control;\n    }\n  }\n\n  render(renderMode) {\n    super.render(renderMode);\n    let { rx: x, ry: y, width, height, mlw, mtw, plw, ptw, style, ctx, start, end, control, virtualDom } = this;\n    if(start.length < 2 || end.length < 2) {\n      return;\n    }\n    let {\n      display,\n      borderTopWidth,\n      borderRightWidth,\n      borderBottomWidth,\n      borderLeftWidth,\n      stroke,\n      strokeWidth,\n      strokeDasharray,\n    } = style;\n    if(display === 'none') {\n      return;\n    }\n    let originX = x + borderLeftWidth.value + mlw + plw;\n    let originY = y + borderTopWidth.value + mtw + ptw;\n    let x1 = originX + start[0] * width;\n    let y1 = originY + start[1] * height;\n    let x2 = originX + end[0] * width;\n    let y2 = originY + end[1] * height;\n    let curve = 0;\n    let cx1, cy1, cx2, cy2;\n    if(Array.isArray(control[0])) {\n      curve++;\n      cx1 = originX + control[0][0] * width;\n      cy1 = originY + control[0][1] * height;\n    }\n    if(Array.isArray(control[1])) {\n      curve++;\n      cx2 = originX + control[1][0] * width;\n      cy2 = originY + control[1][1] * height;\n    }\n    if(renderMode === mode.CANVAS) {\n      ctx.strokeStyle = stroke;\n      ctx.lineWidth = strokeWidth;\n      ctx.setLineDash(strokeDasharray);\n      ctx.beginPath();\n      ctx.moveTo(x1, y1);\n      if(curve === 2) {\n        ctx.bezierCurveTo(cx1, cy1, cx2, cy2, x2, y2);\n      }\n      else if(curve === 1) {\n        ctx.quadraticCurveTo(cx1, cy1, x2, y2);\n      }\n      else {\n        ctx.lineTo(x2, y2);\n      }\n      ctx.stroke();\n      ctx.closePath();\n    }\n    else if(renderMode === mode.SVG) {\n      if(curve === 2) {\n        virtualDom.children.push({\n          type: 'item',\n          tagName: 'path',\n          props: [\n            ['d', `M${x1} ${y1} C${cx1} ${cy1} ${cx2} ${cy2} ${x2} ${y2}`],\n            ['fill', 'none'],\n            ['stroke', stroke],\n            ['stroke-width', strokeWidth],\n            ['stroke-dasharray', strokeDasharray]\n          ],\n        });\n      }\n      else if(curve === 1) {\n        virtualDom.children.push({\n          type: 'item',\n          tagName: 'path',\n          props: [\n            ['d', `M${x1} ${y1} Q${cx1} ${cy1} ${x2} ${y2}`],\n            ['fill', 'none'],\n            ['stroke', stroke],\n            ['stroke-width', strokeWidth],\n            ['stroke-dasharray', strokeDasharray]\n          ],\n        });\n      }\n      else {\n        virtualDom.children.push({\n          type: 'item',\n          tagName: 'line',\n          props: [\n            ['x1', x1],\n            ['y1', y1],\n            ['x2', x2],\n            ['y2', y2],\n            ['stroke', stroke],\n            ['stroke-width', strokeWidth],\n            ['stroke-dasharray', strokeDasharray]\n          ],\n        });\n      }\n    }\n  }\n\n  get start() {\n    return this.__start;\n  }\n  get end() {\n    return this.__end;\n  }\n  get control() {\n    return this.__control;\n  }\n}\n\nexport default Line;\n","import Geom from './Geom';\nimport mode from '../mode';\n\nclass Polyline extends Geom {\n  constructor(tagName, props) {\n    super(tagName, props);\n    // 折线所有点的列表\n    this.__points = [];\n    if(Array.isArray(this.props.points)) {\n      this.__points = this.props.points;\n    }\n    // 原点位置，4个角，默认左下\n    if(['TOP_LEFT', 'TOP_RIGHT', 'BOTTOM_LEFT', 'BOTTOM_RIGHT'].indexOf(this.props.origin) > -1) {\n      this.__origin = this.props.origin;\n    }\n    else {\n      this.__origin = 'BOTTOM_LEFT';\n    }\n  }\n\n  render(renderMode) {\n    super.render(renderMode);\n    let { rx: x, ry: y, width, height, mlw, mtw, plw, ptw, style, ctx, points, origin, virtualDom } = this;\n    if(points.length < 2) {\n      return;\n    }\n    for(let i = 0, len = points.length; i < len; i++) {\n      if(!Array.isArray(points[i]) || points[i].length < 2) {\n        return;\n      }\n    }\n    let {\n      display,\n      borderTopWidth,\n      borderLeftWidth,\n      stroke,\n      strokeWidth,\n      strokeDasharray,\n    } = style;\n    if(display === 'none') {\n      return;\n    }\n    let originX = x + borderLeftWidth.value + mlw + plw;\n    let originY = y + borderTopWidth.value + mtw + ptw;\n    let pts = this.__pts = [];\n    if(origin === 'TOP_LEFT') {\n      points.forEach(item => {\n        pts.push([\n          originX + item[0] * width,\n          originY + item[1] * height\n        ]);\n      });\n    }\n    else if(origin === 'TOP_RIGHT') {\n      points.forEach(item => {\n        pts.push([\n          originX + width - item[0] * width,\n          originY + item[1] * height\n        ]);\n      });\n    }\n    else if(origin === 'BOTTOM_LEFT') {\n      points.forEach(item => {\n        pts.push([\n          originX + item[0] * width,\n          originY + height - item[1] * height\n        ]);\n      });\n    }\n    else if(origin === 'BOTTOM_RIGHT') {\n      points.forEach(item => {\n        pts.push([\n          originX + width - item[0] * width,\n          originY + height - item[1] * height\n        ]);\n      });\n    }\n    if(renderMode === mode.CANVAS) {\n      ctx.strokeStyle = stroke;\n      ctx.lineWidth = strokeWidth;\n      ctx.setLineDash(strokeDasharray);\n      ctx.beginPath();\n      ctx.moveTo(pts[0][0], originY + pts[0][1]);\n      for(let i = 1, len = pts.length; i < len; i++) {\n        let point = pts[i];\n        ctx.lineTo(point[0], point[1]);\n      }\n      if(strokeWidth && stroke !== 'transparent') {\n        ctx.stroke();\n      }\n      ctx.closePath();\n    }\n    else if(renderMode === mode.SVG) {\n      let points = '';\n      for(let i = 0, len = pts.length; i < len; i++) {\n        let point = pts[i];\n        points += `${point[0]},${point[1]} `;\n      }\n      virtualDom.children.push({\n        type: 'item',\n        tagName: 'polyline',\n        props: [\n          ['points', points],\n          ['fill', 'none'],\n          ['stroke', stroke],\n          ['stroke-width', strokeWidth],\n          ['stroke-dasharray', strokeDasharray]\n        ],\n      });\n    }\n  }\n\n  getPointsByX(x) {\n    let min = Infinity;\n    let len = this.__pts.length;\n    let res = [];\n    for(let i = 0; i < len; i++) {\n      let diff = Math.abs(this.__pts[i][0] - x);\n      if(diff < min) {\n        min = diff;\n      }\n    }\n    for(let i = 0; i < len; i++) {\n      let diff = Math.abs(this.__pts[i][0] - x);\n      if(diff === min) {\n        res.push({\n          index: i,\n          x: this.__pts[i][0],\n          y: this.__pts[i][1],\n        });\n      }\n    }\n    return res;\n  }\n\n  get points() {\n    return this.__points;\n  }\n  get origin() {\n    return this.__origin;\n  }\n}\n\nexport default Polyline;\n","import Geom from './Geom';\nimport mode from '../mode';\n\nclass Polygon extends Geom {\n  constructor(tagName, props) {\n    super(tagName, props);\n    // 所有点的列表\n    this.__points = [];\n    if(Array.isArray(this.props.points)) {\n      this.__points = this.props.points;\n    }\n  }\n\n  render(renderMode) {\n    super.render(renderMode);\n    let { rx: x, ry: y, width, height, mlw, mtw, plw, ptw, style, ctx, points, virtualDom } = this;\n    if(points.length < 3) {\n      return;\n    }\n    for(let i = 0, len = points.length; i < len; i++) {\n      if(!Array.isArray(points[i]) || points[i].length < 2) {\n        return;\n      }\n    }\n    let {\n      display,\n      borderTopWidth,\n      borderLeftWidth,\n      stroke,\n      strokeWidth,\n      strokeDasharray,\n      fill,\n    } = style;\n    if(display === 'none') {\n      return;\n    }\n    let originX = x + borderLeftWidth.value + mlw + plw;\n    let originY = y + borderTopWidth.value + mtw + ptw;\n    points.forEach(item => {\n      item[0] = originX + item[0] * width;\n      item[1] = originY + item[1] * height;\n    });\n    if(renderMode === mode.CANVAS) {\n      ctx.strokeStyle = stroke;\n      ctx.lineWidth = strokeWidth;\n      ctx.fillStyle = fill;\n      ctx.setLineDash(strokeDasharray);\n      ctx.beginPath();\n      ctx.moveTo(points[0][0], originY + points[0][1]);\n      for(let i = 1, len = points.length; i < len; i++) {\n        let point = points[i];\n        ctx.lineTo(point[0], point[1]);\n      }\n      ctx.fill();\n      if(strokeWidth && stroke !== 'transparent') {\n        ctx.stroke();\n      }\n      ctx.closePath();\n    }\n    else if(renderMode === mode.SVG) {\n      let points = '';\n      for(let i = 0, len = points.length; i < len; i++) {\n        let point = points[i];\n        points += `${point[0]},${point[1]} `;\n      }\n      virtualDom.children.push({\n        type: 'item',\n        tagName: 'polygon',\n        props: [\n          ['points', points],\n          ['fill', fill],\n          ['stroke', stroke],\n          ['stroke-width', strokeWidth],\n          ['stroke-dasharray', strokeDasharray]\n        ],\n      });\n    }\n  }\n\n  get points() {\n    return this.__points;\n  }\n}\n\nexport default Polygon;\n","import Geom from './Geom';\nimport mode from '../mode';\n\nconst OFFSET = Math.PI * 0.5;\n\nfunction getCoordByDegree(x, y, r, d) {\n  while(d > 360) {\n    d -= 360;\n  }\n  while(d < 0) {\n    d += 360;\n  }\n  if(d >= 0 && d < 90) {\n    return [\n      x + Math.sin(d * Math.PI / 180) * r,\n      y - Math.cos(d * Math.PI / 180) * r\n    ];\n  }\n  else if(d >= 90 && d < 180) {\n    return [\n      x + Math.cos((d - 90) * Math.PI / 180) * r,\n      y + Math.sin((d - 90) * Math.PI / 180) * r,\n    ];\n  }\n  else if(d >= 180 && d < 270) {\n    return [\n      x - Math.cos((270 - d) * Math.PI / 180) * r,\n      y + Math.sin((270 - d) * Math.PI / 180) * r,\n    ];\n  }\n  else {\n    return [\n      x - Math.sin((360 - d) * Math.PI / 180) * r,\n      y - Math.cos((360 - d) * Math.PI / 180) * r,\n    ];\n  }\n}\n\nclass Sector extends Geom {\n  constructor(tagName, props) {\n    super(tagName, props);\n    // 角度\n    this.__start = 0;\n    this.__end = 0;\n    if(this.props.start) {\n      this.__start = parseFloat(this.props.start);\n      if(isNaN(this.start)) {\n        this.__start = 0;\n      }\n    }\n    if(this.props.end) {\n      this.__end = parseFloat(this.props.end);\n      if(isNaN(this.end)) {\n        this.__end = 0;\n      }\n    }\n    // 半径0~1，默认1\n    this.__r = 1;\n    if(this.props.r) {\n      this.__r = parseFloat(this.props.r);\n      if(isNaN(this.r)) {\n        this.__r = 1;\n      }\n    }\n  }\n\n  render(renderMode) {\n    super.render(renderMode);\n    let { rx: x, ry: y, width, height, mlw, mtw, plw, ptw, style, ctx, start, end, r, virtualDom } = this;\n    if(start === end) {\n      return;\n    }\n    let {\n      display,\n      borderTopWidth,\n      borderLeftWidth,\n      stroke,\n      strokeWidth,\n      strokeDasharray,\n      fill,\n    } = style;\n    if(display === 'none') {\n      return;\n    }\n    let originX = x + borderLeftWidth.value + mlw + plw;\n    let originY = y + borderTopWidth.value + mtw + ptw;\n    originX += width * 0.5;\n    originY += height * 0.5;\n    r *= Math.min(width, height) * 0.5;\n    if(renderMode === mode.CANVAS) {\n      ctx.strokeStyle = stroke;\n      ctx.lineWidth = strokeWidth;\n      ctx.fillStyle = fill;\n      ctx.setLineDash(strokeDasharray);\n      ctx.beginPath();\n      ctx.moveTo(originX, originY);\n      ctx.arc(originX, originY, r, start * Math.PI / 180 - OFFSET, end * Math.PI / 180 - OFFSET);\n      ctx.fill();\n      if(strokeWidth && stroke !== 'transparent') {\n        ctx.stroke();\n      }\n      ctx.closePath();\n    }\n    else if(renderMode === mode.SVG) {\n      let x1, y1, x2, y2;\n      [ x1, y1 ] = getCoordByDegree(originX, originY, r, start);\n      [ x2, y2 ] = getCoordByDegree(originX, originY, r, end);\n      let large = (end - start) > 180 ? 1 : 0;\n      virtualDom.children.push({\n        type: 'item',\n        tagName: 'path',\n        props: [\n          ['d', `M${originX} ${originY} L${x1} ${y1} A${r} ${r} 0 ${large} 1 ${x2} ${y2} z`],\n          ['fill', fill],\n          ['stroke', stroke],\n          ['stroke-width', strokeWidth],\n          ['stroke-dasharray', strokeDasharray]\n        ],\n      });\n    }\n  }\n\n  get start() {\n    return this.__start;\n  }\n  get end() {\n    return this.__end;\n  }\n  get r() {\n    return this.__r;\n  }\n}\n\nexport default Sector;\n","import Geom from './Geom';\nimport mode from '../mode';\n\nclass Rect extends Geom {\n  constructor(tagName, props) {\n    super(tagName, props);\n  }\n\n  render(renderMode) {\n    super.render(renderMode);\n    let { rx: x, ry: y, width, height, mlw, mtw, plw, ptw, style, ctx, virtualDom } = this;\n    let {\n      display,\n      borderTopWidth,\n      borderLeftWidth,\n      stroke,\n      strokeWidth,\n      strokeDasharray,\n      fill,\n    } = style;\n    if(display === 'none') {\n      return;\n    }\n    let originX = x + borderLeftWidth.value + mlw + plw;\n    let originY = y + borderTopWidth.value + mtw + ptw;\n    if(renderMode === mode.CANVAS) {\n      ctx.strokeStyle = stroke;\n      ctx.lineWidth = strokeWidth;\n      ctx.fillStyle = fill;\n      ctx.setLineDash(strokeDasharray);\n      ctx.beginPath();\n      ctx.moveTo(originX, originY);\n      ctx.lineTo(originX + width, originY);\n      ctx.lineTo(originX + width, originY + height);\n      ctx.lineTo(originX, originY + height);\n      ctx.fill();\n      if(strokeWidth && stroke !== 'transparent') {\n        ctx.stroke();\n      }\n      ctx.closePath();\n    }\n    else if(renderMode === mode.SVG) {\n      virtualDom.children.push({\n        type: 'item',\n        tagName: 'rect',\n        props: [\n          ['x', x],\n          ['y', y],\n          ['width', width],\n          ['height', height],\n          ['fill', fill],\n          ['stroke', stroke],\n          ['stroke-width', strokeWidth],\n          ['stroke-dasharray', strokeDasharray]\n        ],\n      });\n    }\n  }\n}\n\nexport default Rect;\n","import Geom from './Geom';\nimport mode from '../mode';\n\nclass Circle extends Geom {\n  constructor(tagName, props) {\n    super(tagName, props);\n    // 半径0~1，默认1\n    this.__r = 1;\n    if(this.props.r) {\n      this.__r = parseFloat(this.props.r);\n      if(isNaN(this.r)) {\n        this.__r = 1;\n      }\n    }\n  }\n\n  render(renderMode) {\n    super.render(renderMode);\n    let { rx: x, ry: y, width, height, mlw, mtw, plw, ptw, style, ctx, r, virtualDom } = this;\n    let {\n      display,\n      borderTopWidth,\n      borderLeftWidth,\n      stroke,\n      strokeWidth,\n      strokeDasharray,\n      fill,\n    } = style;\n    if(display === 'none') {\n      return;\n    }\n    let originX = x + borderLeftWidth.value + mlw + plw;\n    let originY = y + borderTopWidth.value + mtw + ptw;\n    originX += width * 0.5;\n    originY += height * 0.5;\n    r *= Math.min(width, height) * 0.5;\n    if(renderMode === mode.CANVAS) {\n      ctx.strokeStyle = stroke;\n      ctx.lineWidth = strokeWidth;\n      ctx.fillStyle = fill;\n      ctx.setLineDash(strokeDasharray);\n      ctx.beginPath();\n      ctx.arc(originX, originY, r, 0, 2 * Math.PI);\n      if(fill !== 'transparent') {\n        ctx.fill();\n      }\n      if(strokeWidth && stroke !== 'transparent') {\n        ctx.stroke();\n      }\n      ctx.closePath();\n    }\n    else if(renderMode === mode.SVG) {\n      virtualDom.children.push({\n        type: 'item',\n        tagName: 'circle',\n        props: [\n          ['cx', originX],\n          ['cy', originY],\n          ['r', r],\n          ['fill', fill],\n          ['stroke', stroke],\n          ['stroke-width', strokeWidth],\n          ['stroke-dasharray', strokeDasharray]\n        ],\n      });\n    }\n  }\n\n  get r() {\n    return this.__r;\n  }\n}\n\nexport default Circle;\n","import Geom from './Geom';\nimport mode from '../mode';\n\nclass Ellipse extends Geom {\n  constructor(tagName, props) {\n    super(tagName, props);\n    // 半径0~1，默认1\n    this.__rx = 1;\n    if(this.props.rx) {\n      this.__rx = parseFloat(this.props.rx);\n      if(isNaN(this.rx)) {\n        this.__rx = 1;\n      }\n    }\n    this.__ry = 1;\n    if(this.props.ry) {\n      this.__ry = parseFloat(this.props.ry);\n      if(isNaN(this.rx)) {\n        this.__ry = 1;\n      }\n    }\n  }\n\n  render(renderMode) {\n    super.render(renderMode);\n    let { rx: x, ry: y, width, height, mlw, mtw, plw, ptw, style, ctx, rx, ry, virtualDom } = this;\n    let {\n      display,\n      borderTopWidth,\n      borderLeftWidth,\n      stroke,\n      strokeWidth,\n      strokeDasharray,\n      fill,\n    } = style;\n    if(display === 'none') {\n      return;\n    }\n    let originX = x + borderLeftWidth.value + mlw + plw;\n    let originY = y + borderTopWidth.value + mtw + ptw;\n    originX += width * 0.5;\n    originY += height * 0.5;\n    rx *= width * 0.5;\n    ry *= height * 0.5;\n    if(renderMode === mode.CANVAS) {\n      ctx.strokeStyle = stroke;\n      ctx.lineWidth = strokeWidth;\n      ctx.fillStyle = fill;\n      ctx.setLineDash(strokeDasharray);\n      ctx.beginPath();\n      ctx.moveTo(originX, originY);\n      ctx.ellipse && ctx.ellipse(originX, originY, rx, ry, 0, 0, 2 * Math.PI);\n      ctx.fill();\n      if(strokeWidth && stroke !== 'transparent') {\n        ctx.stroke();\n      }\n      ctx.closePath();\n    }\n    else if(renderMode === mode.SVG) {\n      virtualDom.children.push({\n        type: 'item',\n        tagName: 'ellipse',\n        props: [\n          ['cx', originX],\n          ['cy', originY],\n          ['rx', rx],\n          ['ry', ry],\n          ['fill', fill],\n          ['stroke', stroke],\n          ['stroke-width', strokeWidth],\n          ['stroke-dasharray', strokeDasharray]\n        ],\n      });\n    }\n  }\n\n  get rx() {\n    return this.__rx;\n  }\n  get ry() {\n    return this.__ry;\n  }\n}\n\nexport default Ellipse;\n","import Geom from './Geom';\nimport mode from '../mode';\n\nclass Grid extends Geom {\n  constructor(tagName, props) {\n    super(tagName, props);\n    // x,y被分为几格\n    this.__nx = 0;\n    if(this.props.nx) {\n      this.__nx = parseFloat(this.props.nx);\n      if(isNaN(this.nx)) {\n        this.__nx = 0;\n      }\n    }\n    this.__ny = 0;\n    if(this.props.ny) {\n      this.__ny = parseFloat(this.props.ny);\n      if(isNaN(this.ny)) {\n        this.__ny = 0;\n      }\n    }\n  }\n\n  render(renderMode) {\n    super.render(renderMode);\n    let { rx: x, ry: y, width, height, mlw, mtw, plw, ptw, style, ctx, nx, ny, virtualDom } = this;\n    if(width <= 0 || height <= 0) {\n      return;\n    }\n    if(nx < 3 && ny < 3) {\n      return;\n    }\n    let {\n      display,\n      borderTopWidth,\n      borderLeftWidth,\n      stroke,\n      strokeWidth,\n      strokeDasharray,\n    } = style;\n    if(display === 'none') {\n      return;\n    }\n    let originX = x + borderLeftWidth.value + mlw + plw;\n    let originY = y + borderTopWidth.value + mtw + ptw;\n    let endX = originX + width;\n    let endY = originY + height;\n    let lx = [];\n    let ly = [];\n    if(nx >= 3) {\n      let per = width / (nx - 1);\n      for(let i = 0; i < nx; i++) {\n        ly.push(originX + i * per);\n      }\n    }\n    if(ny >= 3) {\n      let per = height / (ny - 1);\n      for(let i = 0; i < ny; i++) {\n        lx.push(originY + i * per);\n      }\n    }\n    if(renderMode === mode.CANVAS) {\n      ctx.strokeStyle = stroke;\n      ctx.lineWidth = strokeWidth;\n      ctx.setLineDash(strokeDasharray);\n      ctx.beginPath();\n      lx.forEach(item => {\n        ctx.moveTo(originX, item);\n        ctx.lineTo(endX, item);\n      });\n      ly.forEach(item => {\n        ctx.moveTo(item, originY);\n        ctx.lineTo(item, endY);\n      });\n      if(strokeWidth && stroke !== 'transparent') {\n        ctx.stroke();\n      }\n      ctx.closePath();\n    }\n    else if(renderMode === mode.SVG) {\n      lx.forEach(item => {\n        virtualDom.children.push({\n          type: 'item',\n          tagName: 'line',\n          props: [\n            ['x1', originX],\n            ['y1', item],\n            ['x2', endX],\n            ['y2', item],\n            ['stroke', stroke],\n            ['stroke-width', strokeWidth],\n            ['stroke-dasharray', strokeDasharray]\n          ],\n        });\n      });\n      ly.forEach(item => {\n        virtualDom.children.push({\n          type: 'item',\n          tagName: 'line',\n          props: [\n            ['x1', item],\n            ['y1', originY],\n            ['x2', item],\n            ['y2', endY],\n            ['stroke', stroke],\n            ['stroke-width', strokeWidth],\n            ['stroke-dasharray', strokeDasharray]\n          ],\n        });\n      });\n    }\n  }\n\n  get nx() {\n    return this.__nx;\n  }\n  get ny() {\n    return this.__ny;\n  }\n  get dash() {\n    return this.__dash;\n  }\n}\n\nexport default Grid;\n","import Dom from './node/Dom';\nimport Root from './node/Root';\nimport mode from './mode';\nimport Geom from './geom/Geom';\nimport Line from './geom/Line';\nimport Polyline from './geom/Polyline';\nimport Polygon from './geom/Polygon';\nimport Sector from './geom/Sector';\nimport Rect from './geom/Rect';\nimport Circle from './geom/Circle';\nimport Ellipse from './geom/Ellipse';\nimport Grid from './geom/Grid';\n\nGeom.register('$line', Line);\nGeom.register('$polyline', Polyline);\nGeom.register('$polygon', Polygon);\nGeom.register('$sector', Sector);\nGeom.register('$rect', Rect);\nGeom.register('$circle', Circle);\nGeom.register('$ellipse', Ellipse);\nGeom.register('$grid', Grid);\n\nlet karas = {\n  render(root, dom) {\n    if(!(root instanceof Root)) {\n      throw new Error('render root muse be canvas or svg');\n    }\n    if(dom) {\n      root.appendTo(dom);\n    }\n    return root;\n  },\n  createVd(tagName, props, children) {\n    if(['canvas', 'svg'].indexOf(tagName) > -1) {\n      return new Root(tagName, props, children);\n    }\n    if(Dom.isValid(tagName)) {\n      return new Dom(tagName, props, children);\n    }\n    throw new Error('can not use marker: ' + tagName);\n  },\n  createGm(tagName, props) {\n    let klass = Geom.getImplement(tagName);\n    return new klass(tagName, props);\n  },\n  createCp(cp, props) {\n    return new cp(props);\n  },\n  Geom,\n  mode,\n};\n\nif(typeof window != 'undefined') {\n  window.karas = karas;\n}\n\nexport default karas;\n"],"names":["div","Node","__x","__y","__ox","__oy","__tx","__ty","__width","__height","__prev","__next","__ctx","__defs","__parent","__style","__baseLine","__virtualDom","diff","this","x","ox","y","oy","rx","tx","ry","ty","parent","root","CANVAS","SVG","measure","s","style","document","createElement","position","left","top","visibility","body","appendChild","fontSize","innerText","css","window","getComputedStyle","parseFloat","width","toString","isType","type","obj","call","isNumber","stringify","isNil","v","joinVd","vd","props","forEach","item","tagName","content","children","joinTransform","transform","bb","joinDef","def","uuid","stop","util","isObject","isString","isFunction","isBoolean","isDate","joinSourceArray","arr","res","i","len","length","Array","isArray","encodeHtml","prop","replace","joinVirtualDom","nd","r2d","n","Math","PI","rgb2int","color","charAt","slice","push","parseInt","c","match","arr2hash","hash","list","Object","keys","j","k","hash2arr","getFitDashed","total","bs","be","w","smin","smax","dmin","dmax","ps","pd","outer","per","num","floor","getDashed","m1","m2","m3","m4","bw","max","renderBorder","renderMode","points","ctx","xom","mode","point","beginPath","fillStyle","moveTo","lineTo","fill","closePath","addBorder","getColorStop","trim","split","p","test","start","end","prev","splice","allBefore","allAfter","first","last","c1","c2","r1","g1","b1","a1","r2","g2","b2","a2","l1","abs","l2","r","g","b","a","getCsLimit","next","p1","p2","getCsStartLimit","getCsEndLimit","Xom","__props","temp","spread","__tagName","_this","__listener","toLowerCase","__mtw","__mrw","__mbw","__mlw","__ptw","__prw","__pbw","__plw","data","display","marginTop","marginRight","marginBottom","marginLeft","paddingTop","paddingRight","paddingBottom","paddingLeft","unit","value","__mpWidth","__layoutBlock","__layoutFlex","__layoutInline","mp","height","mlw","mtw","plw","ptw","prw","pbw","right","bottom","bgg","backgroundGradient","bgc","backgroundColor","borderTopWidth","btc","borderTopColor","bts","borderTopStyle","borderRightWidth","brc","borderRightColor","brs","borderRightStyle","borderBottomWidth","bbc","borderBottomColor","bbs","borderBottomStyle","borderLeftWidth","blc","borderLeftColor","bls","borderLeftStyle","h","__offsetX","__offsetY","translateX","translateY","svgTf","addTransform","join","btw","brw","bbw","blw","x1","x2","x3","x4","y1","y2","y3","y4","iw","ih","deg","exec","unshift","sin","cos","half","cx","cy","xx0","yy0","xx1","yy1","lg","createLinearGradient","addColorStop","rect","defs","add","addBackground","xl","yl","size","at","indexOf","by","min","sqrt","pow","rg","createRadialGradient","deg1","atan","deg2","isLast","xx4","yy2","tan","yy4","xx2","virtualDom","mrw","mbw","lhr","car","blr","mdr","lgr","RESET","borderSizing","fontFamily","fontStyle","fontWeight","lineHeight","borderTopLeftRadius","borderTopRightRadius","borderBottomLeftRadius","borderBottomRightRadius","verticalAlign","flexGrow","flexShrink","flexBasis","flexDirection","justifyContent","alignItems","textAlign","stroke","strokeWidth","strokeDasharray","reset","parserOneBorder","direction","key","normalize","hasOwnProperty","background","gradient","flex","border","borderTop","borderRight","borderBottom","borderLeft","margin","padding","borderRadius","map","matrix","matrix3d","translateZ","scaleX","scaleY","scaleZ","rotateX","rotateY","rotateZ","skewX","skewY","perspective","font","setFontStyle","getBaseLine","normal","LineBox","__content","fillText","CHAR_WIDTH_CACHE","Text","__lineBoxes","__charWidthList","__charWidth","__textWidth","charWidthList","cache","sum","char","mw","measureText","charWidth","isVirtual","maxX","lineBoxes","begin","count","lineBox","_this2","render","textWidth","baseLine","__renderMode","LineGroup","__list","__calBaseLine","IMPLEMENT","Geom","isDirectionRow","main","fixedHeight","fixedWidth","e","force","cb","event","covers","listener","outerWidth","outerHeight","target","name","Error","implement","TAG_NAME","INLINE","Dom","__children","__flowChildren","__absChildren","__lineGroups","__flowY","__traverseChildren","_this3","__traverse","text","parentStyle","__initStyle","__measure","flowChildren","__tryLayInline","isRecursion","__calAutoBasis","min2","max2","__layout","__calAbs","Infinity","lineGroups","lineGroup","horizonAlign","ow","growList","shrinkList","basisList","minList","growSum","shrinkSum","basisSum","maxSum","maxCross","isOverflow","shrink","grow","overflow","free","child","center","between","around","_this4","absChildren","container","flowY","pw","ph","__layoutAbs","w2","h2","width2","height2","widthPx","heightPx","hasChildEmit","__emitEvent","elem","ovd","nvd","cns","childNodes","od","ol","nl","diffDef","diffDefs","diffBb","diffD2D","insertAdjacentHTML","parentNode","removeChild","setAttribute","o","removeAt","insertAt","diffChild","replaceWith","firstChild","lastChild","diffD2G","diffItem","diffT2T","diffG2D","equalArr","getAttribute","diffG2G","obb","nbb","isText","op","removeAttribute","textContent","index","html","Defs","id","Root","__node","undefined","isNaN","touches","node","getBoundingClientRect","clientX","clientY","addEventListener","__cb","dom","querySelector","getDom","__initProps","nodeName","toUpperCase","innerHTML","__genHtml","__uuid","getInstance","clear","getPropertyValue","getContext","clearRect","__karasInit","domDiff","__ovd","__od","__initEvent","Line","__start","__end","__control","control","cx1","cy1","cx2","cy2","originX","originY","curve","strokeStyle","lineWidth","setLineDash","bezierCurveTo","quadraticCurveTo","Polyline","__points","origin","__origin","pts","__pts","Polygon","OFFSET","getCoordByDegree","d","Sector","__r","arc","large","Rect","Circle","Ellipse","__rx","__ry","ellipse","Grid","__nx","nx","__ny","ny","endX","endY","lx","ly","__dash","register","karas","appendTo","createVd","isValid","createGm","getImplement","createCp","cp"],"mappings":"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"}