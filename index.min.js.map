{"version":3,"file":"index.min.js","sources":["src/mode.js","src/node/Node.js","src/style/unit.js","src/util.js","src/node/Xom.js","src/style/font.js","src/style/reset.js","src/style/css.js","src/node/LineBox.js","src/node/Text.js","src/node/LineGroup.js","src/geom/Geom.js","src/node/Dom.js","src/domDiff.js","src/node/Defs.js","src/node/Root.js","src/geom/Line.js","src/geom/Polyline.js","src/geom/Polygon.js","src/geom/Sector.js","src/geom/Rect.js","src/geom/Circle.js","src/geom/Ellipse.js","src/geom/Grid.js","src/index.js"],"sourcesContent":["const CANVAS = 0;\nconst SVG = 1;\n\nlet div;\n\nexport default {\n  CANVAS,\n  SVG,\n  measure(s, style) {\n    if(!div) {\n      div = document.createElement('div');\n      div.style.position = 'absolute';\n      div.style.left = '99999px';\n      div.style.top = '-99999px';\n      div.style.visibility = 'hidden';\n      document.body.appendChild(div);\n    }\n    div.style.fontSize = style.fontSize + 'px';\n    div.innerText = s;\n    let css = window.getComputedStyle(div, null);\n    return parseFloat(css.width);\n  }\n};\n","class Node {\n  constructor() {\n    this.__x = 0;\n    this.__y = 0;\n    this.__ox = 0; // relative/transform2d/margin:auto/text-align等造成的偏移量\n    this.__oy = 0;\n    this.__width = 0;\n    this.__height = 0;\n    this.__prev = null;\n    this.__next = null;\n    this.__ctx = null; // canvas的context\n    this.__defs = null; // svg的defs\n    this.__parent = null;\n    this.__style = {}; // style被解析后的k-v形式\n    this.__baseLine = 0;\n    this.__virtualDom = {};\n  }\n\n  __offsetX(diff) {\n    this.__ox += diff;\n  }\n\n  __offsetY(diff) {\n    this.__oy += diff;\n  }\n\n  get x() {\n    return this.__x;\n  }\n  get y() {\n    return this.__y;\n  }\n  get ox() {\n    return this.__ox;\n  }\n  get oy() {\n    return this.__oy;\n  }\n  get rx() {\n    return this.x + this.ox;\n  }\n  get ry() {\n    return this.y + this.oy;\n  }\n  get width() {\n    return this.__width;\n  }\n  get height() {\n    return this.__height;\n  }\n  get outerWidth() {\n    return this.__width;\n  }\n  get outerHeight() {\n    return this.__height;\n  }\n  get prev() {\n    return this.__prev;\n  }\n  get next() {\n    return this.__next;\n  }\n  get parent() {\n    return this.__parent;\n  }\n  get root() {\n    if(this.parent) {\n      return this.parent.root;\n    }\n    return this;\n  }\n  get style() {\n    return this.__style;\n  }\n  get ctx() {\n    return this.__ctx;\n  }\n  get defs() {\n    return this.__defs;\n  }\n  get baseLine() {\n    return this.__baseLine;\n  }\n  get virtualDom() {\n    return this.__virtualDom;\n  }\n}\n\nexport default Node;\n","export default {\n  AUTO: 0,\n  PX: 1,\n  PERCENT: 2,\n};\n","let toString = {}.toString;\nfunction isType(type) {\n  return function(obj) {\n    return toString.call(obj) === '[object ' + type + ']';\n  }\n}\n\nlet isNumber = isType('Number');\n\nfunction joinSourceArray(arr) {\n  var res = '';\n  for(var i = 0, len = arr.length; i < len; i++) {\n    var item = arr[i];\n    if(Array.isArray(item)) {\n      res += joinSourceArray(item);\n    }\n    else {\n      res += stringify(item);\n    }\n  }\n  return res;\n}\n\nfunction stringify(s) {\n  if(isNil(s)) {\n    return '';\n  }\n  return s.toString();\n}\n\nfunction encodeHtml(s, prop) {\n  if(prop) {\n    return s.replace(/\"/g, '&quot;');\n  }\n  return s.replace(/&/g, '&amp;').replace(/</g, '&lt;');\n}\n\nfunction isNil(v) {\n  return v === undefined || v === null;\n}\n\nfunction joinVirtualDom(vd, nd) {\n  let s = '<defs>';\n  nd.forEach(item => {\n    s += joinDef(item);\n  });\n  s += '</defs><g>';\n  vd.bb.forEach(item => {\n    s += joinVd(item);\n  });\n  s += '</g><g>';\n  vd.children.forEach(item => {\n    s += joinVd(item);\n  });\n  s += '</g>';\n  return s;\n}\n\nfunction joinVd(vd) {\n  if(vd.type === 'item') {\n    let s = '';\n    vd.props.forEach(item => {\n      s += ` ${item[0]}=\"${item[1]}\"`;\n    });\n    if(vd.tagName === 'text') {\n      return `<text${s}>${vd.content}</text>`;\n    }\n    return `<${vd.tagName}${s}/>`;\n  }\n  else if(vd.type === 'text') {\n    let s = ``;\n    vd.children.forEach(item => {\n      s += joinVd(item);\n    });\n    return `<g>${s}</g>`;\n  }\n  else if(vd.type === 'dom') {\n    let s = '<g>';\n    vd.bb.forEach(item => {\n      s += joinVd(item);\n    });\n    s += '</g><g>';\n    vd.children.forEach(item => {\n      s += joinVd(item);\n    });\n    s += '</g>';\n    return `<g>${s}</g>`;\n  }\n  else if(vd.type === 'geom') {\n    let s = '<g>';\n    vd.bb.forEach(item => {\n      s += joinVd(item);\n    });\n    s += '</g><g>';\n    vd.content.forEach(item => {\n      s += joinVd(item);\n    });\n    s += '</g>';\n    return `<g>${s}</g>`;\n  }\n}\n\nfunction joinDef(item) {\n  let s = `<${item.k} id=\"${item.uuid}\" x1=\"${item.c[0]}\" y1=\"${item.c[1]}\" x2=\"${item.c[2]}\" y2=\"${item.c[3]}\">`;\n  if(item.k === 'linearGradient') {\n    item.v.forEach(item2 => {\n      s += `<stop stop-color=\"${item2[0]}\" offset=\"${item2[1] * 100}%\"/>`;\n    });\n  }\n  s += `</${item.k}>`;\n  return s;\n}\n\nfunction r2d(n) {\n  return n * Math.PI / 180;\n}\n\nfunction rgb2int(color) {\n  let res = [];\n  if(color.charAt(0) === '#') {\n    color = color.slice(1);\n    if(color.length === 3) {\n      res.push(parseInt(color.charAt(0) + color.charAt(0), 16));\n      res.push(parseInt(color.charAt(1) + color.charAt(1), 16));\n      res.push(parseInt(color.charAt(2) + color.charAt(2), 16));\n    } else if(color.length === 6) {\n      res.push(parseInt(color.slice(0, 2), 16));\n      res.push(parseInt(color.slice(2, 4), 16));\n      res.push(parseInt(color.slice(4), 16));\n    }\n  }\n  else {\n    let c = color.match(/rgba?\\s*\\(\\s*(\\d+)\\s*,\\s*(\\d+)\\s*,\\s*(\\d+)(?:\\s*,\\s*([\\d.]+))?\\s*\\)/i);\n    if(c) {\n      res = [parseInt(c[1]), parseInt(c[2]), parseInt(c[3])];\n      if(c[4]) {\n        res[3] = parseFloat(c[4]);\n      }\n\n    }\n  }\n  return res;\n}\n\nlet util = {\n  isObject: isType('Object'),\n  isString: isType('String'),\n  isFunction: isType('Function'),\n  isNumber,\n  isBoolean: isType('Boolean'),\n  isDate: isType('Date'),\n  stringify,\n  joinSourceArray(arr) {\n    return joinSourceArray(arr);\n  },\n  encodeHtml,\n  isNil,\n  joinVirtualDom,\n  joinVd,\n  joinDef,\n  r2d,\n  rgb2int,\n};\n\nexport default util;\n","import Node from './Node';\nimport mode from '../mode';\nimport unit from '../style/unit';\nimport util from '../util';\n\nfunction arr2hash(arr) {\n  let hash = {};\n  for(let i = 0, len = arr.length; i < len; i++) {\n    let item = arr[i];\n    if(Array.isArray(item)) {\n      hash[item[0]] = item[1];\n    }\n    else {\n      for(let list = Object.keys(item), j = list.length - 1; j >= 0; j--) {\n        let k = list[j];\n        hash[k] = item[k];\n      }\n    }\n  }\n  return hash;\n}\n\nfunction hash2arr(hash) {\n  let arr = [];\n  for(let list = Object.keys(hash), i = 0, len = list.length; i < len; i++) {\n    let k = list[i];\n    arr.push([k, hash[k]]);\n  }\n  return arr;\n}\n\nfunction spread(arr) {\n  for(let i = 0, len = arr.length; i < len; i++) {\n    let item = arr[i];\n    if(!Array.isArray(item)) {\n      let temp = [];\n      for(let list = Object.keys(item), j = 0, len = list.length; j < len; j++) {\n        let k = list[j];\n        temp.push([k, item[k]]);\n      }\n      arr.splice(i, 1, ...temp);\n    }\n  }\n  return arr;\n}\n\n/* 获取合适的虚线实体空白宽度ps/pd和数量n\n * 总长total，start边长bs，end边长be，内容长w，\n * 实体长范围[smin,smax]，空白长范围[dmin,dmax]\n */\nfunction getFitDashed(total, bs, be, w, smin, smax, dmin, dmax) {\n  let n = 1;\n  let ps = 1;\n  let pd = 1;\n  // 从最大实体空白长开始尝试\n  outer:\n  for(let i = smax; i >= smin; i--) {\n    for(let j = dmax; j >= dmin; j--) {\n      // 已知实体空白长度，n实体和n-1空白组成total，计算获取n数量\n      let per = i + j;\n      let num = Math.floor((total + j) / per);\n      let k = j;\n      // 可能除不尽，此时扩展空白长\n      if(num * per < j + total) {\n        let free = total - num * i;\n        k = free / (num - 1);\n        if(k > dmax) {\n          continue;\n        }\n      }\n      per = i + k;\n      // bs比实体大才有效，因为小的话必定和第一个实体完整相连\n      if(bs > 1 && bs > i) {\n        let mo = bs % per;\n        if(mo > i) {\n          continue;\n        }\n        if(be > 1) {\n          let mo = (bs + w) % per;\n          if(mo > i) {\n            continue;\n          }\n        }\n      }\n      if(be > 1) {\n        let mo = (bs + w) % per;\n        if(mo > i) {\n          continue;\n        }\n      }\n      if(num > 0) {\n        n = num;\n        ps = i;\n        pd = k;\n      }\n      break outer;\n    }\n  }\n  return {\n    n,\n    ps,\n    pd,\n  };\n}\n\n// dashed时n个实线和n-1虚线默认以3:1宽度组成，dotted则是n和n以1:1组成\nfunction getDashed(style, m1, m2, m3, m4, bw) {\n  let total = m4 - m1;\n  let w = m3 - m2;\n  let bs = m2 - m1;\n  let be = m4 - m3;\n  if(style === 'dotted') {\n    return getFitDashed(total, bs, be, w, bw, bw, Math.max(1, bw * 0.25), bw * 2);\n  }\n  else {\n    let { n, ps, pd } = getFitDashed(total, bs, be, w, bw, bw * 3, Math.max(1, bw * 0.25), bw * 2);\n    if(n === 1) {\n      return getFitDashed(total, bs, be, w, bw, bw, Math.max(1, bw * 0.25), bw * 2);\n    }\n    // 降级为dotted\n    return { n, ps, pd };\n  }\n}\n\nfunction renderBorder(renderMode, points, color, ctx, virtualDom) {\n  if(renderMode === mode.CANVAS) {\n    points.forEach(point => {\n      ctx.beginPath();\n      ctx.fillStyle = color;\n      ctx.moveTo(point[0], point[1]);\n      for(let i = 2, len = point.length; i < len; i += 2) {\n        ctx.lineTo(point[i], point[i + 1]);\n      }\n      ctx.fill();\n      ctx.closePath();\n    });\n  }\n  else if(renderMode === mode.SVG) {\n    let s = '';\n    points.forEach(point => {\n      s += `M ${point[0]} ${point[1]}`;\n      for(let i = 2, len = point.length; i < len; i += 2) {\n        s += `L ${point[i]} ${point[i + 1]} `;\n      }\n    });\n    let item = {\n      type: 'item',\n      tagName: 'path',\n      props: [\n        ['d', s],\n        ['fill', color],\n      ],\n    };\n    virtualDom.bb.push(item);\n  }\n}\n\n// 当linear-gradient的值超过[0,1]区间限制时，计算其对应区间1的值\nfunction getLgStartLimit(c1, p1, c2, p2, length) {\n  let [ r1, g1, b1, a1 = 1 ] = c1;\n  let [ r2, g2, b2, a2 = 1 ] = c2;\n  let l1 = Math.abs(p1) * length;\n  let l2 = p2 * length;\n  let p = l1 / (l2 + l1);\n  let r = Math.floor(r1 + (r2 - r1) * p);\n  let g = Math.floor(g1 + (g2 - g1) * p);\n  let b = Math.floor(b1 + (b2 - b1) * p);\n  let a = a1 + (a2 - a1) * p;\n  return [r, g, b, a];\n}\n\nfunction getLgEndLimit(c1, p1, c2, p2, length) {\n  let [ r1, g1, b1, a1 = 1 ] = c1;\n  let [ r2, g2, b2, a2 = 1 ] = c2;\n  let l1 = p1 * length;\n  let l2 = p2 * length;\n  let p = (length - l1) / (l2 - l1);\n  let r = Math.floor(r1 + (r2 - r1) * p);\n  let g = Math.floor(g1 + (g2 - g1) * p);\n  let b = Math.floor(b1 + (b2 - b1) * p);\n  let a = a1 + (a2 - a1) * p;\n  return [r, g, b, a];\n}\n\nfunction getLgLimit(first, last, length) {\n  let c1 = util.rgb2int(first[0]);\n  let c2 = util.rgb2int(last[0]);\n  let [ r1, g1, b1, a1 = 1 ] = c1;\n  let [ r2, g2, b2, a2 = 1 ] = c2;\n  let l1 = Math.abs(first[1]) * length;\n  let l2 = last[1] * length;\n  let p = l1 / (l1 + l2);\n  let r = Math.floor(r1 + (r2 - r1) * p);\n  let g = Math.floor(g1 + (g2 - g1) * p);\n  let b = Math.floor(b1 + (b2 - b1) * p);\n  let a = a1 + (a2 - a1) * p;\n  first[0] = `rgba(${r},${g},${b},${a})`;\n  first[1] = 0;\n  p = (length + l1) / (l1 + l2);\n  r = Math.floor(r1 + (r2 - r1) * p);\n  g = Math.floor(g1 + (g2 - g1) * p);\n  b = Math.floor(b1 + (b2 - b1) * p);\n  a = a1 + (a2 - a1) * p;\n  last[0] = `rgba(${r},${g},${b},${a})`;\n  last[1] = 1;\n}\n\nclass Xom extends Node {\n  constructor(tagName, props) {\n    super();\n    props = props || [];\n    // 构建工具中都是arr，手写可能出现hash情况\n    if(Array.isArray(props)) {\n      this.props = arr2hash(props);\n      this.__props = spread(props);\n    }\n    else {\n      this.props = props;\n      this.__props = hash2arr(props);\n    }\n    this.__tagName = tagName;\n    this.__style = this.props.style || {}; // style被解析后的k-v形式\n    this.__listener = {};\n    this.__props.forEach(item => {\n      let k = item[0];\n      if(/^on[a-zA-Z]/.test(k)) {\n        this.__listener[k.slice(2).toLowerCase()] = item[1];\n      }\n    });\n    // margin和padding的宽度\n    this.__mtw = 0;\n    this.__mrw = 0;\n    this.__mbw = 0;\n    this.__mlw = 0;\n    this.__ptw = 0;\n    this.__prw = 0;\n    this.__pbw = 0;\n    this.__plw = 0;\n  }\n\n  __layout(data) {\n    let { w } = data;\n    let { style: {\n      display,\n      width,\n      marginTop,\n      marginRight,\n      marginBottom,\n      marginLeft,\n      paddingTop,\n      paddingRight,\n      paddingBottom,\n      paddingLeft,\n    } } = this;\n    if(display === 'none') {\n      return;\n    }\n    if(width && width.unit !== unit.AUTO) {\n      switch(width.unit) {\n        case unit.PX:\n          w = width.value;\n          break;\n        case unit.PERCENT:\n          w *= width.value * 0.01;\n          break;\n      }\n    }\n    this.__mlw = this.__mpWidth(marginLeft, w);\n    this.__mtw = this.__mpWidth(marginTop, w);\n    this.__mrw = this.__mpWidth(marginRight, w);\n    this.__mbw = this.__mpWidth(marginBottom, w);\n    this.__plw = this.__mpWidth(paddingLeft, w);\n    this.__ptw = this.__mpWidth(paddingTop, w);\n    this.__prw = this.__mpWidth(paddingRight, w);\n    this.__pbw = this.__mpWidth(paddingBottom, w);\n    if(display === 'block') {\n      this.__layoutBlock(data);\n    }\n    else if(display === 'flex') {\n      this.__layoutFlex(data);\n    }\n    else if(display === 'inline') {\n      this.__layoutInline(data);\n    }\n  }\n\n  // 获取margin/padding的实际值\n  __mpWidth(mp, w) {\n    if(mp.unit === unit.PX) {\n      return mp.value;\n    }\n    else if(mp.unit === unit.PERCENT) {\n      return mp.value * w * 0.01;\n    }\n    return 0;\n  }\n\n  render(renderMode) {\n    this.__virtualDom = {\n      bb: [],\n    };\n    let { ctx, style, width, height, mlw, mtw, plw, ptw, prw, pbw, virtualDom } = this;\n    let {\n      display,\n      position,\n      top,\n      right,\n      bottom,\n      left,\n      backgroundGradient: bgg,\n      backgroundColor: bgc,\n      borderTopWidth,\n      borderTopColor: btc,\n      borderTopStyle: bts,\n      borderRightWidth,\n      borderRightColor: brc,\n      borderRightStyle: brs,\n      borderBottomWidth,\n      borderBottomColor: bbc,\n      borderBottomStyle: bbs,\n      borderLeftWidth,\n      borderLeftColor: blc,\n      borderLeftStyle : bls,\n      transform,\n    } = style;\n    if(display === 'none') {\n      return;\n    }\n    // 除root节点外relative渲染时做偏移，百分比基于父元素，若父元素没有一定高则为0\n    if(position === 'relative' && this.parent) {\n      let { width, height } = this.parent;\n      let h = this.parent.style.height;\n      if(left.unit !== unit.AUTO) {\n        let diff = left.unit === unit.PX ? left.value : left.value * width * 0.01;\n        this.__offsetX(diff);\n      }\n      else if(right.unit !== unit.AUTO) {\n        let diff = right.unit === unit.PX ? right.value : right.value * width * 0.01;\n        this.__offsetX(-diff);\n      }\n      if(top.unit !== unit.AUTO) {\n        let diff = top.unit === unit.PX ? top.value : top.value * height * 0.01 * (h.unit === unit.AUTO ? 0 : 1);\n        this.__offsetY(diff);\n      }\n      else if(bottom.unit !== unit.AUTO) {\n        let diff = bottom.unit === unit.PX ? bottom.value : bottom.value * height * 0.01 * (h.unit === unit.AUTO ? 0 : 1);\n        this.__offsetY(-diff);\n      }\n    }\n    // translate相对于自身\n    if(transform) {\n      let { translateX, translateY } = transform;\n      if(translateX) {\n        let diff = translateX.unit === unit.PX ? translateX.value : translateX.value * width * 0.01;\n        this.__offsetX(diff);\n      }\n      if(translateY) {\n        let diff = translateY.unit === unit.PX ? translateY.value : translateY.value * height * 0.01;\n        this.__offsetY(diff);\n      }\n    }\n    // 使用rx和ry渲染位置，考虑了relative和translate影响\n    let { rx: x, ry: y } = this;\n    let btw = borderTopWidth.value;\n    let brw = borderRightWidth.value;\n    let bbw = borderBottomWidth.value;\n    let blw = borderLeftWidth.value;\n    let x1 = x + mlw;\n    let x2 = x1 + blw;\n    let x3 = x2 + width + plw + prw;\n    let x4 = x3 + brw;\n    let y1 = y + mtw;\n    let y2 = y1 + btw;\n    let y3 = y2 + height + ptw + pbw;\n    let y4 = y3 + bbw;\n    // 先渲染渐变，没有则背景色\n    if(bgg) {\n      let w = width + plw + prw;\n      let h = height + ptw + pbw;\n      let { k, v } = bgg;\n      if(k === 'linear') {\n        let deg = 180;\n        if(v[0] === 'to top') {\n          deg = 0;\n        }\n        else if(v[0] === 'to top right') {\n          deg = 45;\n        }\n        else if(v[0] === 'to right') {\n          deg = 90;\n        }\n        else if(v[0] === 'to bottom right') {\n          deg = 135;\n        }\n        // else if(v[0] === 'to bottom') {\n        // }\n        else if(v[0] === 'to bottom left') {\n          deg = 225;\n        }\n        else if(v[0] === 'to left') {\n          deg = 270;\n        }\n        else if(v[0] === 'to top left') {\n          deg = 315;\n        }\n        // 数字角度，没有的话取默认角度\n        else {\n          let match = /([\\d.]+)deg/.exec(v[0]);\n          if(match) {\n            deg = parseFloat(match[1]);\n          }\n          else {\n            v.unshift(deg);\n          }\n        }\n        // 需计算角度 https://www.w3cplus.com/css3/do-you-really-understand-css-linear-gradients.html\n        let r = util.r2d(deg);\n        let length = Math.abs(w * Math.sin(r)) + Math.abs(h * Math.cos(r));\n        let half = length * 0.5;\n        if(deg >= 360) {\n          deg = deg % 360;\n        }\n        while(deg < 0) {\n          deg += 360;\n        }\n        let cx = x2 + w * 0.5;\n        let cy = y2 + h * 0.5;\n        let xx0 = x3;\n        let yy0 = y3;\n        let xx1 = x2;\n        let yy1 = y2;\n        if(deg > 270) {\n          let r = util.r2d(360 - deg);\n          xx0 = cx + Math.sin(r) * half;\n          yy0 = cy + Math.cos(r) * half;\n          xx1 = cx - Math.sin(r) * half;\n          yy1 = cy - Math.cos(r) * half;\n        }\n        else if(deg > 180) {\n          let r = util.r2d(deg - 180);\n          xx0 = cx + Math.sin(r) * half;\n          yy0 = cy - Math.cos(r) * half;\n          xx1 = cx - Math.sin(r) * half;\n          yy1 = cy + Math.cos(r) * half;\n        }\n        else if(deg > 90) {\n          let r = util.r2d(180 - deg);\n          xx0 = cx - Math.sin(r) * half;\n          yy0 = cy - Math.cos(r) * half;\n          xx1 = cx + Math.sin(r) * half;\n          yy1 = cy + Math.cos(r) * half;\n        }\n        else if(deg > 0) {\n          let r = util.r2d(deg);\n          xx0 = cx - Math.sin(r) * half;\n          yy0 = cy + Math.cos(r) * half;\n          xx1 = cx + Math.sin(r) * half;\n          yy1 = cy - Math.cos(r) * half;\n        }\n        // 计算colorStop\n        let list = [];\n        // 先把已经声明距离的换算成[0,1]以数组形式存入，未声明的原样存入\n        for(let i = 1, len = v.length; i < len; i++) {\n          let item = v[i];\n          // 考虑是否声明了位置\n          let arr = item.trim().split(/\\s+/);\n          if(arr.length > 1) {\n            let c = arr[0];\n            let p = arr[1];\n            if(/%$/.test(p)) {\n              list.push([c, parseFloat(p) * 0.01]);\n            }\n            else {\n              list.push([c, parseFloat(p) / length]);\n            }\n          }\n          else {\n            list.push(arr[0]);\n          }\n        }\n        // 首尾默认为[0, 1]\n        if(list.length > 1) {\n          if(!Array.isArray(list[0])) {\n            list[0] = [list[0], 0];\n          }\n          if(!Array.isArray(list[list.length - 1])) {\n            list[list.length - 1] = [list[list.length - 1], 1];\n          }\n        }\n        else if(!Array.isArray(list[0])) {\n          list[0] = [list[0], 0];\n        }\n        // 不是数组形式的是未声明的，需区间计算，找到连续的未声明的，前后的区间平分\n        let start = list[0][1];\n        for(let i = 0, len = list.length; i < len - 1; i++) {\n          let item = list[i];\n          if(Array.isArray(item)) {\n            start = item[1];\n          }\n          else {\n            let j = i + 1;\n            let end = list[list.length - 1][1];\n            for(; j < len; j++) {\n              let item = list[j];\n              if(Array.isArray(item)) {\n                end = item[1];\n                break;\n              }\n            }\n            let num = j - i + 1;\n            let per = (end - start) / num;\n            for(let k = i; k < j; k++) {\n              let item = list[k];\n              list[k] = [item, start + per * (k + 1 - i)];\n            }\n            // 第一个要特殊处理下\n            if(i === 0) {\n              list[0][1] = 0;\n            }\n            i = k;\n          }\n        }\n        if(renderMode === mode.CANVAS) {\n          // 每个不能小于前面的，canvas不能兼容这种情况，需处理\n          for(let i = 1, len = list.length; i < len; i++) {\n            let item = list[i];\n            let prev = list[i - 1];\n            if(item[1] < prev[1]) {\n              item[1] = prev[1];\n            }\n          }\n          // 0之前的和1之后的要过滤掉\n          for(let i = 0, len = list.length; i < len - 1; i++) {\n            let item = list[i];\n            if(item[1] > 1) {\n              list.splice(i + 1);\n              break;\n            }\n          }\n          for(let i = list.length - 1; i > 0; i--) {\n            let item = list[i];\n            if(item[1] < 0) {\n              list.splice(0, i);\n              break;\n            }\n          }\n          // 可能存在超限情况，如在使用px单位超过len或<len时，canvas会报错超过[0,1]区间，需手动换算至区间内\n          let len = list.length;\n          // 在只有1个的情况下可简化\n          if(len === 1) {\n            list[0][1] = 0;\n          }\n          else {\n            // 全部都在[0,1]之外也可以简化\n            let allBefore = true;\n            let allAfter = true;\n            for(let i = len - 1; i >= 0; i--) {\n              let item = list[i];\n              let p = item[1];\n              if(p > 0) {\n                allBefore = false;\n              }\n              if(p < 1) {\n                allAfter = false;\n              }\n            }\n            if(allBefore) {\n              list.splice(0, len - 1);\n              list[0][1] = 0;\n            }\n            else if(allAfter) {\n              list.splice(1);\n              list[0][1] = 0;\n            }\n            // 部分在区间之外需复杂计算\n            else {\n              let first = list[0];\n              let last = list[len - 1];\n              // 只要2个的情况下就是首尾都落在外面\n              if(len === 2) {\n                getLgLimit(first, last, length);\n              }\n              // 只有1个在外面的情况较为容易\n              else {\n                if(first[1] < 0) {\n                  let next = list[1];\n                  let c1 = util.rgb2int(first[0]);\n                  let c2 = util.rgb2int(next[0]);\n                  let c = getLgStartLimit(c1, first[1], c2, next[1], length);\n                  first[0] = `rgba(${c[0]},${c[1]},${c[2]},${c[3]})`;\n                  first[1] = 0;\n                }\n                if(last[1] > 1) {\n                  let prev = list[len - 2];\n                  let c1 = util.rgb2int(prev[0]);\n                  let c2 = util.rgb2int(last[0]);\n                  let c = getLgEndLimit(c1, prev[1], c2, last[1], length);\n                  last[0] = `rgba(${c[0]},${c[1]},${c[2]},${c[3]})`;\n                  last[1] = 1;\n                }\n              }\n            }\n          }\n          let lg = ctx.createLinearGradient(xx0, yy0, xx1, yy1);\n          list.forEach(item => {\n            lg.addColorStop(item[1], item[0]);\n          });\n          ctx.beginPath();\n          ctx.fillStyle = lg;\n          ctx.rect(x2, y2, w, h);\n          ctx.fill();\n          ctx.closePath();\n        }\n        else {\n          let root = this.root;\n          let uuid = this.defs.add({\n            k: 'linearGradient',\n            c: [(xx0 - x2) / w, (yy0 - y2) / h, (xx1 - x2) / w, (yy1 - y2) / h],\n            // c: [xx0, yy0, xx1, yy1],\n            v: list,\n          });\n          virtualDom.bb.push({\n            type: 'item',\n            tagName: 'rect',\n            props: [\n              ['x', x2],\n              ['y', y2],\n              ['width', w],\n              ['height', h],\n              ['fill', `url(#${uuid})`]\n            ],\n          });\n        }\n      }\n      else if(k === 'radial-gradient') {}\n    }\n    else if(bgc && bgc !== 'transparent') {\n      let w = width + plw + prw;\n      let h = height + ptw + pbw;\n      if(renderMode === mode.CANVAS) {\n        ctx.beginPath();\n        ctx.fillStyle = bgc;\n        ctx.rect(x2, y2, w, h);\n        ctx.fill();\n        ctx.closePath();\n      }\n      else if(renderMode === mode.SVG) {\n        virtualDom.bb.push({\n          type: 'item',\n          tagName: 'rect',\n          props: [\n            ['x', x2],\n            ['y', y2],\n            ['width', w],\n            ['height', h],\n            ['fill', bgc]\n          ],\n        });\n      }\n    }\n    // 边框需考虑尖角，两条相交边平分45°夹角\n    if(btw > 0 && btc !== 'transparent') {\n      let points = [];\n      if(['dashed', 'dotted'].indexOf(bts) > -1) {\n        // 寻找一个合适的虚线线段长度和之间空白边距长度\n        let { n, ps, pd } = getDashed(bts, x1, x2, x3, x4, btw);\n        if(n <= 1) {\n          points.push([x1, y1, x4, y1, x3, y2, x2, y2]);\n        }\n        else {\n          let deg1 = Math.atan(btw / blw);\n          let deg2 = Math.atan(btw / brw);\n          for(let i = 0; i < n; i++) {\n            // 最后一个可能没有到底，延长之\n            let isLast = i === n - 1;\n            let xx1 = i ? (x1 + ps * i + pd * i) : x1;\n            let xx4 = xx1 + ps;\n            let yy1;\n            let yy2;\n            // 整个和borderLeft重叠\n            if(xx4 < x2) {\n              if(isLast) {\n                points.push([x1, y1, x4, y1, x3, y2, x2, y2]);\n              }\n              else {\n                yy1 = y1 + (xx1 - x1) * Math.tan(deg1);\n                yy2 = y1 + (xx4 - x1) * Math.tan(deg1);\n                points.push([xx1, y1, xx4, y1, xx4, yy2, xx1, yy1]);\n              }\n            }\n            // 整个和borderRight重叠\n            else if(xx1 > x3) {\n              yy1 = y1 + (x4 - xx1) * Math.tan(deg2);\n              yy2 = y1 + (x4 - xx4) * Math.tan(deg2);\n              if(isLast) {\n                points.push([xx1, y1, x4, y1, xx1, yy1]);\n              }\n              else {\n                points.push([xx1, y1, xx4, y1, xx4, yy2, xx1, yy1]);\n              }\n            }\n            // 不被整个重叠的情况再细分\n            else {\n              // 上部分和borderLeft重叠\n              if(xx1 < x2) {\n                yy1 = y1 + (xx1 - x1) * Math.tan(deg1);\n                if(isLast) {\n                  points.push([xx1, y1, x4, y1, x3, y2, x2, y2, xx1, yy1]);\n                }\n                else {\n                  // 下部分和borderRight重叠\n                  if(xx4 > x3) {\n                    points.push([xx1, y1, xx4, y1, x3, y2, x2, y2, xx1, yy1]);\n                  }\n                  // 下部独立\n                  else {\n                    points.push([xx1, y1, xx4, y1, xx4, y2, x2, y2, xx1, yy1]);\n                  }\n                }\n              }\n              // 下部分和borderRight重叠\n              else if(xx4 > x3) {\n                yy1 = y1 + (x4 - xx4) * Math.tan(deg2);\n                // 上部分和borderLeft重叠\n                if(xx1 < x2) {\n                  if(isLast) {\n                    points.push([xx1, y1, x4, y1, x3, y2, x2, y2, xx1, yy1]);\n                  }\n                  else {\n                    points.push([xx1, y1, xx4, y1, xx4, yy1, x3, y2, x2, y2, xx1, yy1]);\n                  }\n                }\n                // 上部独立\n                else {\n                  if(isLast) {\n                    points.push([xx1, y1, x4, y1, x3, y2, xx1, y2]);\n                  }\n                  else {\n                    points.push([xx1, y1, xx4, y1, xx4, yy1, x3, y2, xx1, y2]);\n                  }\n                }\n              }\n              // 完全独立\n              else {\n                if(isLast) {\n                  points.push([xx1, y1, x4, y1, x3, y2, xx1, y2]);\n                }\n                else {\n                  points.push([xx1, y1, xx4, y1, xx4, y2, xx1, y2]);\n                }\n              }\n            }\n          }\n        }\n      }\n      else {\n        points.push([x1, y1, x4, y1, x3, y2, x2, y2]);\n      }\n      renderBorder(renderMode, points, btc, ctx, virtualDom);\n    }\n    if(brw > 0 && brc !== 'transparent') {\n      let points = [];\n      if(['dashed', 'dotted'].indexOf(brs) > -1) {\n        // 寻找一个合适的虚线线段长度和之间空白边距长度\n        let { n, ps, pd } = getDashed(brs, y1, y2, y3, y4, brw);\n        if(n <= 1) {\n          points.push([x3, y2, x4, y1, x4, y4, x3, y3]);\n        }\n        else {\n          let deg1 = Math.atan(brw / btw);\n          let deg2 = Math.atan(brw / bbw);\n          for(let i = 0; i < n; i++) {\n            // 最后一个可能没有到底，延长之\n            let isLast = i === n - 1;\n            let yy1 = i ? (y1 + ps * i + pd * i) : y1;\n            let yy4 = yy1 + ps;\n            let xx1;\n            let xx2;\n            // 整个和borderTop重叠\n            if(yy4 < y2) {\n              if(isLast) {\n                points.push([x3, y2, x4, y1, x4, y4, x3, y3]);\n              }\n              else {\n                xx1 = x4 - (yy4 - y1) * Math.tan(deg1);\n                xx2 = x4 - (yy1 - y1) * Math.tan(deg1);\n                points.push([xx1, yy4, xx2, yy1, x4, yy1, x4, yy4]);\n              }\n            }\n            // 整个和borderBottom重叠\n            else if(yy1 > y3) {\n              xx1 = x3 + (yy1 - y3) * Math.tan(deg2);\n              xx2 = x3 + (yy4 - y3) * Math.tan(deg2);\n              if(isLast) {\n                points.push([xx1, yy1, x4, yy1, x4, y4]);\n              }\n              else {\n                points.push([xx1, yy1, x4, yy1, x4, yy4, xx2, yy4]);\n              }\n            }\n            // 不被整个重叠的情况再细分\n            else {\n              // 上部分和borderTop重叠\n              if(yy1 < y2) {\n                xx1 = x3 + (y2 - yy1) * Math.tan(deg1);\n                if(isLast) {\n                  points.push([x3, y2, xx1, yy1, x4, yy1, x4, y4, x3, y4]);\n                }\n                else {\n                  // 下部分和borderBottom重叠\n                  if(yy4 > y3) {\n                    points.push([x3, y2, xx1, yy1, x4, yy1, x4, yy4, xx1, yy4, x3, y3]);\n                  }\n                  // 下部独立\n                  else {\n                    points.push([x3, y2, xx1, yy1, x4, yy1, x4, yy4, x3, yy4]);\n                  }\n                }\n              }\n              // 下部分和borderBottom重叠\n              else if(yy4 > y3) {\n                xx1 = x3 + (yy4 - y3) * Math.tan(deg2);\n                // 上部分和borderTop重叠\n                if(yy1 < y2) {\n                  if(isLast) {\n                    points.push([x3, y2, xx1, yy1, x4, yy1, x4, y4, x3, y3]);\n                  }\n                  else {\n                    points.push([x3, y2, xx1, yy1, x4, yy1, x4, yy4, xx1, yy4, x3, y3]);\n                  }\n                }\n                // 上部独立\n                else {\n                  if(isLast) {\n                    points.push([x3, yy1, x4, yy1, x4, y4, x3, y3]);\n                  }\n                  else {\n                    points.push([x3, yy1, x4, yy1, x4, yy4, xx1, yy4, x3, y3]);\n                  }\n                }\n              }\n              // 完全独立\n              else {\n                if(isLast) {\n                  points.push([x3, yy1, x4, yy1, x4, y4, x3, y3]);\n                }\n                else {\n                  points.push([x3, yy1, x4, yy1, x4, yy4, x3, yy4]);\n                }\n              }\n            }\n          }\n        }\n      }\n      else {\n        points.push([x3, y2, x4, y1, x4, y4, x3, y3]);\n      }\n      renderBorder(renderMode, points, brc, ctx, virtualDom);\n    }\n    if(bbw > 0 && bbc !== 'transparent') {\n      let points = [];\n      // 寻找一个合适的虚线线段长度和之间空白边距长度\n      if(['dashed', 'dotted'].indexOf(bbs) > -1) {\n        // 寻找一个合适的虚线线段长度和之间空白边距长度\n        let { n, ps, pd } = getDashed(bbs, x1, x2, x3, x4, bbw);\n        let deg1 = Math.atan(bbw / blw);\n        let deg2 = Math.atan(bbw / brw);\n        for(let i = 0; i < n; i++) {\n          // 最后一个可能没有到底，延长之\n          let isLast = i === n - 1;\n          let xx1 = i ? (x1 + ps * i + pd * i) : x1;\n          let xx4 = xx1 + ps;\n          let yy1;\n          let yy2;\n          // 整个和borderLeft重叠\n          if(xx4 < x2) {\n            if(isLast) {\n              points.push([x1, y4, x2, y3, x3, y3, x4, y4]);\n            }\n            else {\n              yy1 = y4 - (xx1 - x1) * Math.tan(deg1);\n              yy2 = y4 - (xx4 - x1) * Math.tan(deg1);\n              points.push([xx1, yy1, xx4, yy2, xx4, y4, xx1, y4]);\n            }\n          }\n          // 整个和borderRight重叠\n          else if(xx1 > x3) {\n            yy1 = y4 - (xx1 - x1) * Math.tan(deg2);\n            yy2 = y4 - (xx4 - x1) * Math.tan(deg2);\n            if(isLast) {\n              points.push([xx1, yy1, x4, y4, xx1, y4]);\n            }\n            else {\n              points.push([xx1, yy1, xx4, yy2, xx4, y4, xx1, y4]);\n            }\n          }\n          // 不被整个重叠的情况再细分\n          else {\n            // 上部分和borderLeft重叠\n            if(xx1 < x2) {\n              yy1 = y3 + (xx1 - x1) * Math.tan(deg1);\n              if(isLast) {\n                points.push([xx1, yy1, x2, y3, x3, y3, x4, y4, xx1, y4]);\n              }\n              else {\n                // 下部分和borderRight重叠\n                if(xx4 > x3) {\n                  points.push([xx1, yy1, x2, y3, x3, y3, xx4, y4, xx1, y4]);\n                }\n                // 下部独立\n                else {\n                  points.push([xx1, yy1, x2, y3, xx4, y3, xx4, y4, xx1, y4]);\n                }\n              }\n            }\n            // 下部分和borderRight重叠\n            else if(xx4 > x3) {\n              yy1 = y4 - (x4 - xx4) * Math.tan(deg2);\n              // 上部分和borderLeft重叠\n              if(xx1 < x2) {\n                if(isLast) {\n                  points.push([xx1, yy1, x3, y3, x4, y4, xx1, y4]);\n                }\n                else {\n                  points.push([xx1, yy1, x3, y3, xx4, yy1, xx4, y4, xx1, y4]);\n                }\n              }\n              // 上部独立\n              else {\n                if(isLast) {\n                  points.push([xx1, y3, x3, y3, x4, y4, xx1, y4]);\n                }\n                else {\n                  points.push([xx1, y3, x3, y3, xx4, yy1, xx4, y4, xx1, y4]);\n                }\n              }\n            }\n            // 完全独立\n            else {\n              if(isLast) {\n                points.push([xx1, y3, x3, y3, x4, y4, xx1, y4]);\n              }\n              else {\n                points.push([xx1, y3, xx4, y3, xx4, y4, xx1, y4]);\n              }\n            }\n          }\n        }\n      }\n      else {\n        points.push([x1, y4, x2, y3, x3, y3, x4, y4]);\n      }\n      renderBorder(renderMode, points, bbc, ctx, virtualDom);\n    }\n    if(blw > 0 && blc !== 'transparent') {\n      let points = [];\n      if(['dashed', 'dotted'].indexOf(bls) > -1) {\n        // 寻找一个合适的虚线线段长度和之间空白边距长度\n        let { n, ps, pd } = getDashed(bls, y1, y2, y3, y4, blw);\n        if(n <= 1) {\n          points.push([x1, y1, x2, y2, x2, y3, x1, y4]);\n        }\n        else {\n          let deg1 = Math.atan(blw / btw);\n          let deg2 = Math.atan(blw / bbw);\n          for(let i = 0; i < n; i++) {\n            // 最后一个可能没有到底，延长之\n            let isLast = i === n - 1;\n            let yy1 = i ? (y1 + ps * i + pd * i) : y1;\n            let yy4 = yy1 + ps;\n            let xx1;\n            let xx2;\n            // 整个和borderTop重叠\n            if(yy4 < y2) {\n              if(isLast) {\n                points.push([x1, y1, x2, y2, x2, y3, x1, y4]);\n              }\n              else {\n                xx1 = x1 + (yy1 - y1) * Math.tan(deg1);\n                xx2 = x1 + (yy4 - y1) * Math.tan(deg1);\n                points.push([x1, yy1, xx1, yy1, xx2, yy4, x1, yy4]);\n              }\n            }\n            // 整个和borderBottom重叠\n            else if(yy1 > y3) {\n              xx1 = x1 + (y4 - yy1) * Math.tan(deg2);\n              xx2 = x1 + (y4 - yy4) * Math.tan(deg2);\n              if(isLast) {\n                points.push([x1, yy1, xx1, yy1, x1, y4]);\n              }\n              else {\n                points.push([x1, yy1, xx1, yy1, xx2, yy4, x1, yy4]);\n              }\n            }\n            // 不被整个重叠的情况再细分\n            else {\n              // 上部分和borderTop重叠\n              if(yy1 < y2) {\n                xx1 = x1 + (yy1 - y1) * Math.tan(deg1);\n                if(isLast) {\n                  points.push([x1, yy1, xx1, yy1, x2, y2, x2, y3, x1, y4]);\n                }\n                else {\n                  // 下部分和borderBottom重叠\n                  if(yy4 > y3) {\n                    points.push([x1, yy1, xx1, yy1, x2, y2, x2, y3, xx1, yy4, x1, yy4]);\n                  }\n                  // 下部独立\n                  else {\n                    points.push([x1, yy1, xx1, yy1, x2, y2, x2, yy4, x1, yy4]);\n                  }\n                }\n              }\n              // 下部分和borderBottom重叠\n              else if(yy4 > y3) {\n                xx1 = x1 + (y4 - yy4) * Math.tan(deg2);\n                // 上部分和borderTop重叠\n                if(yy1 < y2) {\n                  if(isLast) {\n                    points.push([x1, yy1, xx1, yy1, x2, y2, x2, y3, x1, y4]);\n                  }\n                  else {\n                    points.push([x1, yy1, xx1, yy1, x2, y2, x2, y3, xx1, yy4, x1, yy4]);\n                  }\n                }\n                // 上部独立\n                else {\n                  if(isLast) {\n                    points.push([x1, yy1, x2, yy1, x2, y3, x1, y4]);\n                  }\n                  else {\n                    points.push([x1, yy1, x2, yy1, x2, y3, xx1, yy4, x1, yy4]);\n                  }\n                }\n              }\n              // 完全独立\n              else {\n                if(isLast) {\n                  points.push([x1, yy1, x2, yy1, x2, y3, x1, y4]);\n                }\n                else {\n                  points.push([x1, yy1, x2, yy1, x2, yy4, x1, yy4]);\n                }\n              }\n            }\n          }\n        }\n      }\n      else {\n        points.push([x1, y1, x2, y2, x2, y3, x1, y4]);\n      }\n      renderBorder(renderMode, points, blc, ctx, virtualDom);\n    }\n  }\n\n  get tagName() {\n    return this.__tagName;\n  }\n  get mtw() {\n    return this.__mtw;\n  }\n  get mrw() {\n    return this.__mrw;\n  }\n  get mbw() {\n    return this.__mbw;\n  }\n  get mlw() {\n    return this.__mlw;\n  }\n  get ptw() {\n    return this.__ptw;\n  }\n  get prw() {\n    return this.__prw;\n  }\n  get pbw() {\n    return this.__pbw;\n  }\n  get plw() {\n    return this.__plw;\n  }\n  get outerWidth() {\n    let { mlw, mrw, plw, prw, style: {\n      borderLeftWidth,\n      borderRightWidth,\n    } } = this;\n    return this.width\n      + borderLeftWidth.value\n      + borderRightWidth.value\n      + mlw\n      + mrw\n      + plw\n      + prw;\n  }\n  get outerHeight() {\n    let { mtw, mbw, ptw, pbw, style: {\n      borderTopWidth,\n      borderBottomWidth,\n    } } = this;\n    return this.height\n      + borderTopWidth.value\n      + borderBottomWidth.value\n      + mtw\n      + mbw\n      + ptw\n      + pbw;\n  }\n  get listener() {\n    return this.__listener;\n  }\n}\n\nexport default Xom;\n","'use strict';\n\nexport default {\n  arial: {\n    lhr: 1.14990234375, // 默认line-height ratio，(67+1854+434)/2048\n    car: 1.1171875, // content-area ratio，(1854+434)/2048\n    blr: 0.9052734375, // base-line ratio，1854/2048\n    mdr: 0.64599609375, // middle ratio，(1854-1062/2)/2048\n    lgr: 0.03271484375, // line-gap ratio，67/2048\n  },\n};\n","const RESET = {\n  position: 'static',\n  display: 'block',\n  borderSizing: 'content-box',\n  top: 'auto',\n  right: 'auto',\n  bottom: 'auto',\n  left: 'auto',\n  marginTop: 0,\n  marginRight: 0,\n  marginBottom: 0,\n  marginLeft: 0,\n  paddingTop: 0,\n  paddingRight: 0,\n  paddingBottom: 0,\n  paddingLeft: 0,\n  fontSize: 16,\n  fontFamily: 'arial',\n  color: '#000',\n  fontStyle: 'normal',\n  fontWeight: 400,\n  lineHeight: 'normal',\n  borderTopWidth: 0,\n  borderRightWidth: 0,\n  borderBottomWidth: 0,\n  borderLeftWidth: 0,\n  borderTopColor: '#000',\n  borderRightColor: '#000',\n  borderBottomColor: '#000',\n  borderLeftColor: '#000',\n  borderTopStyle: 'solid',\n  borderRightStyle: 'solid',\n  borderBottomStyle: 'solid',\n  borderLeftStyle: 'solid',\n  borderTopLeftRadius: 0,\n  borderTopRightRadius: 0,\n  borderBottomLeftRadius: 0,\n  borderBottomRightRadius: 0,\n  verticalAlign: 'baseline',\n  width: 'auto',\n  height: 'auto',\n  flexGrow: 0,\n  flexShrink: 1,\n  flexBasis: 'auto',\n  flexDirection: 'row',\n  justifyContent: 'flex-start',\n  alignItems: 'stretch',\n  textAlign: 'left',\n  visibility: 'visible',\n  fill: '#000',\n  stroke: '#000',\n  strokeWidth: 0,\n  strokeDasharray: [],\n};\n\nlet reset = [];\n\nObject.keys(RESET).forEach(k => {\n  let v = RESET[k];\n  reset.push({\n    k,\n    v,\n  });\n});\n\nexport default reset;\n","import unit from './unit';\nimport font from './font';\nimport reset from './reset';\nimport util from '../util';\n\nfunction parserOneBorder(style, direction) {\n  let key = `border${direction}`;\n  if(!style[key]) {\n    return;\n  }\n  let w = /\\b\\d+px\\b/i.exec(style[key]);\n  if(w) {\n    style[key + 'Width'] = w[0];\n  }\n  let s = /\\b(solid|dashed|dotted)\\b/i.exec(style[key]);\n  if(s) {\n    style[key + 'Style'] = s[1];\n  }\n  let c = /#[0-9a-f]{3,6}/i.exec(style[key]);\n  if(c && [4, 7].indexOf(c[0].length) > -1) {\n    style[key + 'Color'] = c[0];\n  }\n  else if(/\\btransparent\\b/i.test(style[key])) {\n    style[key + 'Color'] = 'transparent';\n  }\n  else {\n    c = /rgba?\\(.+\\)/i.exec(style[key]);\n    if(c) {\n      style[key + 'Color'] = c[0];\n    }\n  }\n}\n\nfunction normalize(style) {\n  // 默认reset\n  reset.forEach(item => {\n    if(!style.hasOwnProperty(item.k)) {\n      style[item.k] = item.v;\n    }\n  });\n  // 处理缩写\n  if(style.background) {\n    // 优先gradient，没有再考虑颜色\n    let gradient = /\\b(\\w+)-gradient\\((.+)\\)/.exec(style.background);\n    if(gradient) {\n      style.backgroundGradient = {\n        k: gradient[1],\n        v: gradient[2].split(/\\s*,\\s*/),\n      };\n    }\n    else {\n      let bgc = /#[0-9a-f]{3,6}/i.exec(style.background);\n      if(bgc && [4, 7].indexOf(bgc[0].length) > -1) {\n        style.backgroundColor = bgc[0];\n      } else {\n        bgc = /rgba?\\(.+\\)/i.exec(style.background);\n        if(bgc) {\n          style.backgroundColor = bgc[0];\n        }\n      }\n    }\n  }\n  if(style.flex) {\n    if(style.flex === 'none') {\n      style.flexGrow = 0;\n      style.flexShrink = 0;\n      style.flexBasis = 'auto';\n    }\n    else if(style.flex === 'auto') {\n      style.flexGrow = 1;\n      style.flexShrink = 1;\n      style.flexBasis = 'auto';\n    }\n    else if(/^[\\d.]+$/.test(style.flex)) {\n      style.flexGrow = parseFloat(style.flex);\n      style.flexShrink = 1;\n      style.flexBasis = 0;\n    }\n    else if(/^[\\d.]+px$/.test(style.flex)) {}\n    else if(/^[\\d.]+%$/.test(style.flex)) {}\n    else {\n      style.flexGrow = 0;\n      style.flexShrink = 1;\n      style.flexBasis = 'auto';\n    }\n  }\n  if(style.border) {\n    style.borderTop = style.borderRight = style.borderBottom = style.borderLeft = style.border;\n  }\n  if(style.margin) {\n    let match = style.margin.toString().match(/([\\d.]+(px|%)?)|(auto)/ig);\n    if(match) {\n      if(match.length === 1) {\n        match[3] = match[2] = match[1] = match[0];\n      }\n      else if(match.length === 2) {\n        match[2] = match[0];\n        match[3] = match[1];\n      }\n      else if(match.length === 3) {\n        match[3] = match[1];\n      }\n      style.marginTop = match[0];\n      style.marginRight = match[1];\n      style.marginBottom = match[2];\n      style.marginLeft = match[3];\n    }\n  }\n  if(style.padding) {\n    let match = style.padding.toString().match(/([\\d.]+(px|%)?)|(auto)/ig);\n    if(match) {\n      if(match.length === 1) {\n        match[3] = match[2] = match[1] = match[0];\n      }\n      else if(match.length === 2) {\n        match[2] = match[0];\n        match[3] = match[1];\n      }\n      else if(match.length === 3) {\n        match[3] = match[1];\n      }\n      style.paddingTop = match[0];\n      style.paddingRight = match[1];\n      style.paddingBottom = match[2];\n      style.paddingLeft = match[3];\n    }\n  }\n  if(style.borderRadius) {\n    style.borderTopRightRadius = style.borderTopLeftRadius = style.borderBottomRightRadius = style.borderBottomLeftRadius = style.borderRadius;\n  }\n  if(style.transform) {\n    let match = style.transform.toString().match(/\\w+\\(.+?\\)/g);\n    if(match) {\n      let transform = style.transform = {};\n      match.forEach(item => {\n        let i = item.indexOf('(');\n        let k = item.slice(0, i);\n        let v = item.slice(i + 1, item.length - 1);\n        if(k === 'matrix') {\n          let arr = v.split(/\\s*,\\s*/);\n          arr = arr.map(item => parseFloat(item));\n          if(arr.length > 6) {\n            arr = arr.slice(0, 6);\n          }\n          else if(arr.length < 6) {\n            while(arr.length < 6) {\n              arr.push(0);\n            }\n          }\n          transform.matrix = arr;\n        }\n        else if(k === 'matrix3d') {\n          let arr = v.split(/\\s*,\\s*/);\n          arr = arr.map(item => parseFloat(item));\n          if(arr.length > 9) {\n            arr = arr.slice(0, 9);\n          }\n          else if(arr.length < 9) {\n            while(arr.length < 9) {\n              arr.push(0);\n            }\n          }\n          transform.matrix3d = arr;\n        }\n        else if(k === 'translateX') {\n          transform.translateX = v;\n        }\n        else if(k === 'translateY') {\n          transform.translateY = v;\n        }\n        else if(k === 'translateZ') {\n          transform.translateZ = v;\n        }\n        else if(k === 'translate') {\n          let arr = v.split(/\\s*,\\s*/);\n          transform.translateX = arr[0];\n          transform.translateY = arr[1];\n        }\n        else if(k === 'translate3d') {\n          let arr = v.split(/\\s*,\\s*/);\n          transform.translateX = arr[0];\n          transform.translateY = arr[1];\n          transform.translateZ = arr[2];\n        }\n        else if(k === 'scaleX') {\n          transform.scaleX = parseFloat(v) || 0;\n        }\n        else if(k === 'scaleY') {\n          transform.scaleY = parseFloat(v) || 0;\n        }\n        else if(k === 'scaleZ') {\n          transform.scaleZ = parseFloat(v) || 0;\n        }\n        else if(k === 'scale') {\n          let arr = v.split(/\\s*,\\s*/);\n          transform.scaleX = parseFloat(arr[0]) || 0;\n          transform.scaleY = parseFloat(arr[1]) || 0;\n        }\n        else if(k === 'scale3d') {\n          let arr = v.split(/\\s*,\\s*/);\n          transform.scaleX = parseFloat(arr[0]) || 0;\n          transform.scaleY = parseFloat(arr[1]) || 0;\n          transform.scaleZ = parseFloat(arr[2]) || 0;\n        }\n        else if(k === 'rotateX') {\n          transform.rotateX = parseFloat(v) || 0;\n        }\n        else if(k === 'rotateY') {\n          transform.rotateY = parseFloat(v) || 0;\n        }\n        else if(k === 'rotateZ') {\n          transform.rotateZ = parseFloat(v) || 0;\n        }\n        else if(k === 'rotate') {\n          let arr = v.split(/\\s*,\\s*/);\n          transform.rotateX = parseFloat(arr[0]) || 0;\n          transform.rotateY = parseFloat(arr[1]) || 0;\n        }\n        else if(k === 'rotate3d') {\n          let arr = v.split(/\\s*,\\s*/);\n          transform.rotateX = parseFloat(arr[0]) || 0;\n          transform.rotateY = parseFloat(arr[1]) || 0;\n          transform.rotateZ = parseFloat(arr[2]) || 0;\n        }\n        else if(k === 'skewX') {\n          transform.skewX = parseFloat(v) || 0;\n        }\n        else if(k === 'skewY') {\n          transform.skewY = parseFloat(v) || 0;\n        }\n        else if(k === 'skew') {\n          let arr = v.split(/\\s*,\\s*/);\n          transform.skewX = parseFloat(arr[0]) || 0;\n          transform.skewY = parseFloat(arr[1]) || 0;\n        }\n        else if(k === 'perspective') {\n          transform.perspective = parseFloat(v);\n        }\n      });\n      [\n        'translateX',\n        'translateY',\n        'translateZ',\n      ].forEach(k => {\n        let v = transform[k];\n        // 编译工具前置解析优化跳出\n        if(!util.isNil(v) && v.unit) {\n          return;\n        }\n        if(/%$/.test(v)) {\n          v = parseFloat(v) || 0;\n          transform[k] = {\n            value: v,\n            unit: unit.PERCENT,\n          };\n        }\n        else {\n          v = parseFloat(v) || 0;\n          transform[k] = {\n            value: v,\n            unit: unit.PX,\n          };\n        }\n      });\n    }\n  }\n  parserOneBorder(style, 'Top');\n  parserOneBorder(style, 'Right');\n  parserOneBorder(style, 'Bottom');\n  parserOneBorder(style, 'Left');\n  // 转化不同单位值为对象标准化\n  [\n    'marginTop',\n    'marginRight',\n    'marginBottom',\n    'marginLeft',\n    'paddingTop',\n    'paddingRight',\n    'paddingBottom',\n    'paddingLeft',\n    'borderTopWidth',\n    'borderRightWidth',\n    'borderBottomWidth',\n    'borderLeftWidth',\n    'borderTopLeftRadius',\n    'borderTopRightRadius',\n    'borderBottomLeftRadius',\n    'borderBottomRightRadius',\n    'top',\n    'right',\n    'bottom',\n    'left',\n    'width',\n    'height',\n    'flexBasis',\n  ].forEach(k => {\n    let v = style[k];\n    // 编译工具前置解析优化跳出\n    if(!util.isNil(v) && v.unit) {\n      return;\n    }\n    if(v === 'auto') {\n      style[k] = {\n        unit: unit.AUTO,\n      };\n    }\n    else if(/%$/.test(v)) {\n      // border不支持百分比\n      if(k.indexOf('border') === 0) {\n        style[k] = {\n          value: 0,\n          unit: unit.PX,\n        };\n      }\n      else {\n        v = parseFloat(v) || 0;\n        style[k] = {\n          value: v,\n          unit: unit.PERCENT,\n        };\n      }\n    }\n    else {\n      v = parseFloat(v) || 0;\n      style[k] = {\n        value: v,\n        unit: unit.PX,\n      };\n    }\n  });\n  // 计算lineHeight为px值，最小范围\n  let lineHeight = style.lineHeight;\n  if(lineHeight === 'normal') {\n    lineHeight = {\n      value: style.fontSize * font.arial.lhr,\n      unit: unit.PX,\n    };\n  }\n  else if(/px$/.test(lineHeight)) {\n    lineHeight = parseFloat(lineHeight);\n    lineHeight = {\n      value: Math.max(style.fontSize, lineHeight),\n      unit: unit.PX,\n    };\n  }\n  // 纯数字比例\n  else {\n    lineHeight = parseFloat(lineHeight) || 'normal';\n    // 非法数字\n    if(lineHeight === 'normal') {\n      lineHeight = {\n        value: style.fontSize * font.arial.lhr,\n        unit: unit.PX,\n      };\n    }\n    else {\n      lineHeight = {\n        value: lineHeight * style.fontSize,\n        unit: unit.PX,\n      };\n    }\n  }\n  style.lineHeight = lineHeight;\n}\n\nfunction setFontStyle(style) {\n  let { fontStyle, fontWeight, fontSize, fontFamily } = style;\n  return `${fontStyle} ${fontWeight} ${fontSize}px/${fontSize}px ${fontFamily}`;\n}\n\nfunction getBaseLine(style) {\n  let normal = style.fontSize * font.arial.lhr;\n  return (style.lineHeight.value - normal) * 0.5 + style.fontSize * font.arial.blr;\n}\n\nexport default {\n  normalize,\n  setFontStyle,\n  getBaseLine,\n};\n","import css from '../style/css';\nimport mode from '../mode';\n\nclass LineBox {\n  constructor(parent, x, y, w, content, style) {\n    this.__parent = parent;\n    this.__x = x;\n    this.__y = y;\n    this.__width = w;\n    this.__content = content;\n    this.__style = style;\n    this.__virtualDom = {};\n  }\n\n  render(renderMode, ctx) {\n    let { style, content, x, y, parent: { ox, oy } } = this;\n    y += css.getBaseLine(style);\n    x += ox;\n    y += oy;\n    if(renderMode === mode.CANVAS) {\n      ctx.fillText(content, x, y);\n    }\n    else if(renderMode === mode.SVG) {\n      this.__virtualDom = {\n        type: 'item',\n        tagName: 'text',\n        props: [\n          ['x', x],\n          ['y', y],\n          ['fill', style.color],\n          ['font-size', `${style.fontSize}px`]\n        ],\n        content,\n      };\n    }\n  }\n\n  __offsetX(diff) {\n    this.__x += diff;\n  }\n\n  __offsetY(diff) {\n    this.__y += diff;\n  }\n\n  get x() {\n    return this.__x;\n  }\n  get y() {\n    return this.__y;\n  }\n  get width() {\n    return this.__width;\n  }\n  get content() {\n    return this.__content;\n  }\n  get style() {\n    return this.__style;\n  }\n  get baseLine() {\n    return css.getBaseLine(this.style);\n  }\n  get virtualDom() {\n    return this.__virtualDom;\n  }\n  get parent() {\n    return this.__parent;\n  }\n}\n\nexport default LineBox;\n","import Node from './Node';\nimport LineBox from './LineBox';\nimport css from '../style/css';\nimport mode from '../mode';\n\nconst CHAR_WIDTH_CACHE = {};\n\nclass Text extends Node {\n  constructor(content) {\n    super();\n    this.__content = content.toString();\n    this.__lineBoxes = [];\n    this.__charWidthList = [];\n    this.__charWidth = 0;\n    this.__textWidth = 0;\n  }\n\n  // 预先计算每个字的宽度\n  __measure() {\n    this.__charWidthList = [];\n    let { ctx, content, style, charWidthList, renderMode } = this;\n    if(renderMode === mode.CANVAS) {\n      ctx.font = css.setFontStyle(style);\n    }\n    let cache = CHAR_WIDTH_CACHE[style.fontSize] = CHAR_WIDTH_CACHE[style.fontSize] || {};\n    let length = content.length;\n    let sum = 0;\n    for(let i = 0; i < length; i++) {\n      let char = content.charAt(i);\n      let mw;\n      if(cache.hasOwnProperty(char)) {\n        mw = cache[char];\n      }\n      else if(renderMode === mode.CANVAS) {\n        mw = cache[char] = ctx.measureText(char).width;\n      }\n      else if(renderMode === mode.SVG) {\n        mw = cache[char] = mode.measure(char, style);\n      }\n      charWidthList.push(mw);\n      sum += mw;\n      this.__charWidth = Math.max(this.charWidth, mw);\n    }\n    this.__textWidth = sum;\n  }\n\n  __layout(data, isVirtual) {\n    let { x, y, w, h } = data;\n    this.__x = x;\n    this.__y = y;\n    let maxX = x;\n    let { ctx, content, style, lineBoxes, charWidthList, renderMode } = this;\n    // 顺序尝试分割字符串为lineBox，形成多行\n    let begin = 0;\n    let i = 0;\n    let count = 0;\n    let length = content.length;\n    while(i < length) {\n      count += charWidthList[i];\n      if (count === w) {\n        let lineBox = new LineBox(this, x, y, count, content.slice(begin, i + 1), style);\n        lineBoxes.push(lineBox);\n        maxX = Math.max(maxX, x + count);\n        y += this.style.lineHeight.value;\n        begin = i + 1;\n        i = begin + 1;\n        count = 0;\n      }\n      else if (count > w) {\n        // 宽度不足时无法跳出循环，至少也要塞个字符形成一行\n        if(i === begin) {\n          i = begin + 1;\n        }\n        let lineBox = new LineBox(this, x, y, count - charWidthList[i], content.slice(begin, i), style);\n        lineBoxes.push(lineBox);\n        maxX = Math.max(maxX, x + count - charWidthList[i]);\n        y += this.style.lineHeight.value;\n        begin = i;\n        i = i + 1;\n        count = 0;\n      }\n      else {\n        i++;\n      }\n    }\n    if(begin < length && begin < i) {\n      count = 0;\n      for(i = begin ;i < length; i++) {\n        count += charWidthList[i];\n      }\n      let lineBox = new LineBox(this, x, y, count, content.slice(begin, length), style);\n      lineBoxes.push(lineBox);\n      maxX = Math.max(maxX, x + count);\n      y += style.lineHeight.value;\n    }\n    this.__width = maxX - x;\n    this.__height = y - data.y;\n    if(isVirtual) {\n      this.__lineBoxes = [];\n    }\n    else {\n      let { textAlign } = style;\n      if(['center', 'right'].indexOf(textAlign) > -1) {\n        lineBoxes.forEach(lineBox => {\n          let diff = this.__width - lineBox.width;\n          if(diff > 0) {\n            lineBox.__offsetX(textAlign === 'center' ? diff * 0.5 : diff);\n          }\n        });\n      }\n    }\n  }\n\n  render(renderMode) {\n    const { ctx, style } = this;\n    if(renderMode === mode.CANVAS) {\n      ctx.font = css.setFontStyle(style);\n      ctx.fillStyle = style.color;\n    }\n    this.lineBoxes.forEach(item => {\n      item.render(renderMode, ctx);\n    });\n    if(renderMode === mode.SVG) {\n      this.__virtualDom = {\n        type: 'text',\n        children: this.lineBoxes.map(lineBox => lineBox.virtualDom),\n      };\n    }\n  }\n\n  __tryLayInline(w) {\n    return w - this.textWidth;\n  }\n\n  __calMaxAndMinWidth() {\n    let n = 0;\n    this.charWidthList.forEach(item => {\n      n = Math.max(n, item);\n    });\n    return { max: this.textWidth, min: n };\n  }\n\n  get content() {\n    return this.__content;\n  }\n  set content(v) {\n    this.__content = v;\n  }\n  get lineBoxes() {\n    return this.__lineBoxes;\n  }\n  get charWidthList() {\n    return this.__charWidthList;\n  }\n  get charWidth() {\n    return this.__charWidth;\n  }\n  get textWidth() {\n    return this.__textWidth;\n  }\n  get baseLine() {\n    let last = this.lineBoxes[this.lineBoxes.length - 1];\n    return last.y - this.y + last.baseLine;\n  }\n  get renderMode() {\n    return this.__renderMode;\n  }\n}\n\nexport default Text;\n","class LineGroup {\n  constructor(x, y) {\n    this.__list = [];\n    this.__x = x;\n    this.__y = y;\n    this.__baseLine = 0;\n  }\n\n  add(item) {\n    this.list.push(item);\n  }\n\n  __calBaseLine() {\n    let baseLine = 0;\n    this.list.forEach(item => {\n      baseLine = Math.max(baseLine, item.baseLine);\n    });\n    return baseLine;\n  }\n\n  verticalAlign() {\n    this.__baseLine = this.__calBaseLine();\n    // 仅当有2个和以上时才需要vertical对齐调整\n    if(this.list.length > 1) {\n      this.list.forEach(item => {\n        if(item.baseLine !== this.baseLine) {\n          item.__offsetY(this.baseLine - item.baseLine);\n        }\n      });\n    }\n  }\n\n  horizonAlign(diff) {\n    this.list.forEach(item => {\n      item.__offsetX(diff);\n    });\n  }\n\n  get list() {\n    return this.__list;\n  }\n  get x() {\n    return this.__x;\n  }\n  get y() {\n    return this.__y;\n  }\n  get width() {\n    let width = 0;\n    this.list.forEach(item => {\n      width += item.width;\n    });\n    return width;\n  }\n  get height() {\n    let height = 0;\n    this.list.forEach(item => {\n      height = Math.max(height, item.height);\n    });\n    return height;\n  }\n  get baseLine() {\n    return this.__baseLine;\n  }\n  get size() {\n    return this.__list.length;\n  }\n}\n\nexport default LineGroup;\n","import Xom from '../node/Xom';\nimport css from '../style/css';\nimport unit from '../style/unit';\nimport mode from '../mode';\n\nconst IMPLEMENT = {};\n\nclass Geom extends Xom {\n  constructor(tagName, props) {\n    super(tagName, props);\n  }\n\n  __initStyle() {\n    css.normalize(this.style);\n  }\n\n  __tryLayInline(w, total) {\n    // 无children，直接以style的width为宽度，不定义则为0\n    let { style: { width } } = this;\n    if(width.unit === unit.PX) {\n      return w - width.value;\n    }\n    else if(width.unit === unit.PERCENT) {\n      return w - total * width.value * 0.01;\n    }\n    return w;\n  }\n\n  __calAutoBasis(isDirectionRow, w, h) {\n    let b = 0;\n    let min = 0;\n    let max = 0;\n    let { style } = this;\n    // 计算需考虑style的属性\n    let {\n      width,\n      height,\n      borderTopWidth,\n      borderRightWidth,\n      borderBottomWidth,\n      borderLeftWidth,\n    } = style;\n    let main = isDirectionRow ? width : height;\n    if(main.unit !== unit.AUTO) {\n      b = max += main.value;\n    }\n    // border也得计算在内\n    if(isDirectionRow) {\n      let w = borderRightWidth.value + borderLeftWidth.value;\n      b += w;\n      max += w;\n      min += w;\n    }\n    else {\n      let h = borderTopWidth.value + borderBottomWidth.value;\n      b += h;\n      max += h;\n      min += h;\n    }\n    return { b, min, max };\n  }\n\n  __layoutBlock(data) {\n    let { x, y, w, h } = data;\n    this.__x = x;\n    this.__y = y;\n    this.__width = w;\n    let { style } = this;\n    let {\n      width,\n      height,\n      borderTopWidth,\n      borderRightWidth,\n      borderBottomWidth,\n      borderLeftWidth,\n    } = style;\n    // 除了auto外都是固定高度\n    let fixedHeight;\n    if(width && width.unit !== unit.AUTO) {\n      switch(width.unit) {\n        case unit.PX:\n          w = width.value;\n          break;\n      }\n    }\n    if(height && height.unit !== unit.AUTO) {\n      fixedHeight = true;\n      switch(height.unit) {\n        case unit.PX:\n          h = height.value;\n          break;\n        case unit.PERCENT:\n          h *= height.value * 0.01;\n          break;\n      }\n    }\n    // border影响x和y和尺寸\n    x += borderLeftWidth.value;\n    data.x = x;\n    y += borderTopWidth.value;\n    data.y = y;\n    w -= borderLeftWidth.value + borderRightWidth.value;\n    h -= borderTopWidth.value + borderBottomWidth.value;\n    this.__width = w;\n    this.__height = fixedHeight ? h : 0;\n  }\n\n  __layoutFlex(data) {\n    // 无children所以等同于block\n    this.__layoutBlock(data);\n  }\n\n  __layoutInline(data) {\n    let { x, y, w, h } = data;\n    this.__x = x;\n    this.__y = y;\n    let { style } = this;\n    let {\n      width,\n      height,\n      borderTopWidth,\n      borderRightWidth,\n      borderBottomWidth,\n      borderLeftWidth,\n    } = style;\n    // 除了auto外都是固定高度\n    let fixedWidth;\n    let fixedHeight;\n    if(width && width.unit !== unit.AUTO) {\n      fixedWidth = true;\n      switch(width.unit) {\n        case unit.PX:\n          w = width.value;\n          break;\n      }\n    }\n    if(height && height.unit !== unit.AUTO) {\n      fixedHeight = true;\n      switch(height.unit) {\n        case unit.PX:\n          h = height.value;\n          break;\n      }\n    }\n    // border影响x和y\n    x += borderLeftWidth.value;\n    data.x = x;\n    y += borderTopWidth.value;\n    data.y = y;\n    w -= borderLeftWidth.value + borderRightWidth.value;\n    h -= borderTopWidth.value + borderBottomWidth.value;\n    // 元素的width不能超过父元素w\n    this.__width = fixedWidth ? w : x - data.x;\n    this.__height = fixedHeight ? h : y - data.y;\n  }\n\n  __calAbs() {\n    return 0;\n  }\n\n  __emitEvent(e, force) {\n    let { event: { type }, x, y, covers } = e;\n    let { listener, style, rx, ry, outerWidth, outerHeight } = this;\n    if(style.display === 'none') {\n      return;\n    }\n    let cb;\n    if(listener.hasOwnProperty(type)) {\n      cb = listener[type];\n    }\n    if(force) {\n      cb && cb(e);\n    }\n    else if(x >= rx && y >= ry && x <= rx + outerWidth && y <= ry + outerHeight) {\n      for(let i = 0, len = covers.length; i < len; i++) {\n        let { x: x2, y: y2, w, h: h } = covers[i];\n        if(x >= x2 && y >= y2 && x <= x2 + w && y <= y2 + h) {\n          return;\n        }\n      }\n      if(!e.target) {\n        e.target = this;\n      }\n      covers.push({\n        x,\n        y,\n        w: outerWidth,\n        h: outerHeight,\n      });\n      cb && cb(e);\n    }\n  }\n\n  render(renderMode) {\n    super.render(renderMode);\n    if(renderMode === mode.SVG) {\n      this.__virtualDom = {\n        ...super.virtualDom,\n        type: 'geom',\n        content: [],\n      };\n    }\n  }\n\n  get tagName() {\n    return this.__tagName;\n  }\n  get baseLine() {\n    return this.__height;\n  }\n\n  static getImplement(name) {\n    if(!IMPLEMENT.hasOwnProperty(name)) {\n      throw new Error(`Geom has not register: ${name}`);\n    }\n    return IMPLEMENT[name];\n  }\n  static register(name, implement) {\n    if(IMPLEMENT.hasOwnProperty(name)) {\n      throw new Error(`Geom has already register: ${name}`);\n    }\n    IMPLEMENT[name] = implement;\n  }\n}\n\nexport default Geom;\n","import Xom from './Xom';\nimport Text from './Text';\nimport LineGroup from './LineGroup';\nimport Geom from '../geom/Geom';\nimport util from '../util';\nimport css from '../style/css';\nimport unit from '../style/unit';\nimport mode from '../mode';\n\nconst TAG_NAME = {\n  'div': true,\n  'span': true,\n};\nconst INLINE = {\n  'span': true,\n};\n\nclass Dom extends Xom {\n  constructor(tagName, props, children) {\n    super(tagName, props);\n    this.__children = children;\n    this.__flowChildren = []; // 非绝对定位孩子\n    this.__absChildren = []; // 绝对定位孩子\n    this.__lineGroups = []; // 一行inline元素组成的LineGroup对象后的存放列表\n    this.__flowY = 0; // 文档流布局结束后的y坐标，供absolute布局默认位置使用\n  }\n\n  /**\n   * 1. 封装string为Text节点\n   * 2. 打平children中的数组，变成一维\n   * 3. 合并相连的Text节点\n   * 4. 检测inline不能包含block和flex\n   * 5. 设置parent和prev/next和ctx和defs和mode\n   */\n  __traverse(ctx, defs, renderMode) {\n    let list = [];\n    this.__traverseChildren(this.children, list, ctx, defs, renderMode);\n    for(let i = list.length - 1; i > 0; i--) {\n      let item = list[i];\n      if(item instanceof Text) {\n        let prev = list[i - 1];\n        if(prev instanceof Text) {\n          prev.content += item.content;\n          list.splice(i, 1);\n        }\n        else {\n          i--;\n        }\n      }\n    }\n    if(this.style.display === 'inline' && this.parent.style.display !== 'flex') {\n      for(let i = list.length - 1; i >= 0; i--) {\n        let item = list[i];\n        if(item instanceof Dom && item.style.display !== 'inline') {\n          throw new Error('inline can not contain block/flex');\n        }\n      }\n    }\n    let prev = null;\n    list.forEach(item => {\n      item.__ctx = ctx;\n      item.__defs = defs;\n      if(prev) {\n        prev.__next = item;\n      }\n      item.__parent = this;\n      item.__prev = prev;\n      if(item instanceof Text || item.style.position !== 'absolute') {\n        this.__flowChildren.push(item);\n      }\n      else {\n        this.__absChildren.push(item);\n      }\n    });\n    this.__children = list;\n  }\n\n  __traverseChildren(children, list, ctx, defs, renderMode) {\n    if(Array.isArray(children)) {\n      children.forEach(item => {\n        this.__traverseChildren(item, list, ctx, defs, renderMode);\n      });\n    }\n    else if(children instanceof Dom) {\n      list.push(children);\n      children.__traverse(ctx, defs, renderMode);\n    }\n    // 图形没有children\n    else if(children instanceof Geom) {\n      list.push(children);\n    }\n    // 排除掉空的文本\n    else if(!util.isNil(children)) {\n      let text = new Text(children);\n      text.__renderMode = renderMode;\n      list.push(text);\n    }\n  }\n\n  // 合并设置style，包括继承和默认值，修改一些自动值和固定值，测量所有文字的宽度\n  __initStyle() {\n    let style = this.__style;\n    // 仅支持flex/block/inline/none\n    if(!style.display || ['flex', 'block', 'inline', 'none'].indexOf(style.display) === -1) {\n      if(INLINE.hasOwnProperty(this.tagName)) {\n        style.display = 'inline';\n      }\n      else {\n        style.display = 'block';\n      }\n    }\n    // 继承父元素样式\n    let parent = this.parent;\n    if(parent) {\n      let parentStyle = parent.style;\n      ['fontSize', 'fontWeight', 'fontStyle', 'lineHeight', 'wordBreak', 'color', 'textAlign'].forEach(k => {\n        if(!style.hasOwnProperty(k) && parentStyle.hasOwnProperty(k)) {\n          style[k] = parentStyle[k];\n        }\n      });\n    }\n    // 标准化处理，默认值、简写属性\n    css.normalize(style);\n    this.children.forEach(item => {\n      if(item instanceof Xom) {\n        item.__initStyle();\n      }\n      else {\n        item.__style = style;\n        // 文字首先测量所有字符宽度\n        item.__measure();\n      }\n    });\n  }\n\n  // 给定父宽度情况下，尝试行内放下后的剩余宽度，为负数即放不下\n  __tryLayInline(w, total) {\n    let { flowChildren, style: { width } } = this;\n    if(width.unit === unit.PX) {\n      return w - width.value;\n    }\n    else if(width.unit === unit.PERCENT) {\n      return w - total * width.value * 0.01;\n    }\n    for(let i = 0; i < flowChildren.length; i++) {\n      // 当放不下时直接返回，无需继续多余的尝试计算\n      if(w < 0) {\n        return w;\n      }\n      let item = flowChildren[i];\n      if(item instanceof Xom) {\n        w -= item.__tryLayInline(w, total);\n      }\n      else {\n        w -= item.textWidth;\n      }\n    }\n    return w;\n  }\n\n  // 设置y偏移值，递归包括children，此举在flex行元素的child进行justify-content对齐用\n  __offsetX(diff) {\n    super.__offsetX(diff);\n    this.flowChildren.forEach(item => {\n      if(item) {\n        item.__offsetX(diff);\n      }\n    });\n  }\n\n  // 设置y偏移值，递归包括children，此举在初步确定inline布局后设置元素vertical-align用\n  __offsetY(diff) {\n    super.__offsetY(diff);\n    this.flowChildren.forEach(item => {\n      if(item) {\n        item.__offsetY(diff);\n      }\n    });\n  }\n\n  __calAutoBasis(isDirectionRow, w, h, isRecursion) {\n    let b = 0;\n    let min = 0;\n    let max = 0;\n    let { mtw, mrw, mbw, mlw, ptw, prw, pbw, plw, flowChildren, style } = this;\n    // 计算需考虑style的属性\n    let {\n      width,\n      height,\n      borderTopWidth,\n      borderRightWidth,\n      borderBottomWidth,\n      borderLeftWidth,\n    } = style;\n    let main = isDirectionRow ? width : height;\n    if(main.unit === unit.PX) {\n      b = max = main.value;\n      // 递归时children的长度会影响flex元素的最小宽度\n      if(isRecursion) {\n        min = b;\n      }\n    }\n    // 递归children取最大值\n    flowChildren.forEach(item => {\n      if(item instanceof Xom) {\n        let { b: b2, min: min2, max: max2 } = item.__calAutoBasis(isDirectionRow, w, h, true);\n        b = Math.max(b, b2);\n        min = Math.max(min, min2);\n        max = Math.max(max, max2);\n      }\n      else if(isDirectionRow) {\n        min = Math.max(item.charWidth, min);\n        max = Math.max(item.textWidth, max);\n      }\n      else {\n        item.__layout({\n          x: 0,\n          y: 0,\n          w,\n          h,\n        }, true);\n        min = Math.max(min, item.height);\n        max = Math.max(max, item.height);\n      }\n    });\n    // margin/padding/border也得计算在内\n    if(isDirectionRow) {\n      let w = borderRightWidth.value + borderLeftWidth.value + mlw + mrw + plw + prw;\n      b += w;\n      max += w;\n      min += w;\n    }\n    else {\n      let h = borderTopWidth.value + borderBottomWidth.value + mtw + mbw + ptw + pbw;\n      b += h;\n      max += h;\n      min += h;\n    }\n    return { b, min, max };\n  }\n\n  __calAbs(isDirectionRow) {\n    let max = 0;\n    let { mtw, mrw, mbw, mlw, ptw, prw, pbw, plw, flowChildren, style } = this;\n    // 计算需考虑style的属性\n    let {\n      width,\n      height,\n      borderTopWidth,\n      borderRightWidth,\n      borderBottomWidth,\n      borderLeftWidth,\n    } = style;\n    let main = isDirectionRow ? width : height;\n    if(main.unit === unit.PX) {\n      max = main.value;\n    }\n    // 递归children取最大值\n    flowChildren.forEach(item => {\n      if(item instanceof Xom) {\n        let max2 = item.__calAbs(isDirectionRow);\n        max = Math.max(max, max2);\n      }\n      else if(isDirectionRow) {\n        max = Math.max(item.textWidth, max);\n      }\n      else {\n        item.__layout({\n          x: 0,\n          y: 0,\n          w: Infinity,\n          h: Infinity,\n        }, true);\n        max = Math.max(max, item.height);\n      }\n    });\n    // margin/padding/border也得计算在内\n    if(isDirectionRow) {\n      let w = borderRightWidth.value + borderLeftWidth.value + mlw + mrw + plw + prw;\n      max += w;\n    }\n    else {\n      let h = borderTopWidth.value + borderBottomWidth.value + mtw + mbw + ptw + pbw;\n      max += h;\n    }\n    return max;\n  }\n\n  // 本身block布局时计算好所有子元素的基本位置\n  __layoutBlock(data) {\n    let { x, y, w, h } = data;\n    this.__x = x;\n    this.__y = y;\n    this.__width = w;\n    let { flowChildren, style, lineGroups, mlw, mtw, mrw, mbw, plw, ptw, prw, pbw } = this;\n    let {\n      width,\n      height,\n      marginLeft,\n      marginRight,\n      borderTopWidth,\n      borderRightWidth,\n      borderBottomWidth,\n      borderLeftWidth,\n      textAlign,\n    } = style;\n    // 除了auto外都是固定高度\n    let fixedHeight;\n    if(width && width.unit !== unit.AUTO) {\n      switch(width.unit) {\n        case unit.PX:\n          w = width.value;\n          break;\n        case unit.PERCENT:\n          w *= width.value * 0.01;\n          break;\n      }\n    }\n    if(height && height.unit !== unit.AUTO) {\n      fixedHeight = true;\n      switch(height.unit) {\n        case unit.PX:\n          h = height.value;\n          break;\n        case unit.PERCENT:\n          h *= height.value * 0.01;\n          break;\n      }\n    }\n    // margin/padding/border影响x和y和尺寸\n    x += borderLeftWidth.value + mlw + plw;\n    data.x = x;\n    y += borderTopWidth.value + mtw + ptw;\n    data.y = y;\n    if(width.unit === unit.AUTO) {\n      w -= borderLeftWidth.value + borderRightWidth.value + mlw + mrw + plw + prw;\n    }\n    if(height.unit === unit.AUTO) {\n      h -= borderTopWidth.value + borderBottomWidth.value + mtw + mbw + ptw + pbw;\n    }\n    // 递归布局，将inline的节点组成lineGroup一行\n    let lineGroup = new LineGroup(x, y);\n    flowChildren.forEach(item => {\n      if(item instanceof Xom) {\n        if(item.style.display === 'inline') {\n          // inline开头，不用考虑是否放得下直接放\n          if(x === data.x) {\n            lineGroup.add(item);\n            item.__layout({\n              x,\n              y,\n              w,\n              h,\n            });\n            x += item.outerWidth;\n          }\n          else {\n            // 非开头先尝试是否放得下\n            let fw = item.__tryLayInline(w - x, w);\n            // 放得下继续\n            if(fw >= 0) {\n              item.__layout({\n                x,\n                y,\n                w,\n                h,\n              });\n            }\n            // 放不下处理之前的lineGroup，并重新开头\n            else {\n              lineGroups.push(lineGroup);\n              lineGroup.verticalAlign();\n              x = data.x;\n              y += lineGroup.height;\n              item.__layout({\n                x: data.x,\n                y,\n                w,\n                h,\n              });\n              lineGroup = new LineGroup(x, y);\n            }\n            x += item.outerWidth;\n            lineGroup.add(item);\n          }\n        }\n        else {\n          // block先处理之前可能的lineGroup\n          if(lineGroup.size) {\n            lineGroups.push(lineGroup);\n            lineGroup.verticalAlign();\n            y += lineGroup.height;\n            lineGroup = new LineGroup(data.x, y);\n          }\n          item.__layout({\n            x: data.x,\n            y,\n            w,\n            h,\n          });\n          x = data.x;\n          y += item.outerHeight;\n        }\n      }\n      // 文字和inline类似\n      else {\n        // x开头，不用考虑是否放得下直接放\n        if(x === data.x) {\n          lineGroup.add(item);\n          item.__layout({\n            x,\n            y,\n            w,\n            h,\n          });\n          x += item.width;\n        }\n        else {\n          // 非开头先尝试是否放得下\n          let fw = item.__tryLayInline(w - x, w);\n          // 放得下继续\n          if(fw >= 0) {\n            item.__layout({\n              x,\n              y,\n              w,\n              h,\n            });\n          }\n          // 放不下处理之前的lineGroup，并重新开头\n          else {\n            lineGroups.push(lineGroup);\n            lineGroup.verticalAlign();\n            x = data.x;\n            y += lineGroup.height;\n            item.__layout({\n              x: data.x,\n              y,\n              w,\n              h,\n            });\n            lineGroup = new LineGroup(x, y);\n          }\n          x += item.width;\n          lineGroup.add(item);\n        }\n      }\n    });\n    // 结束后处理可能遗留的最后的lineGroup\n    if(lineGroup.size) {\n      lineGroups.push(lineGroup);\n      lineGroup.verticalAlign();\n      y += lineGroup.height;\n    }\n    // text-align\n    if(['center', 'right'].indexOf(textAlign) > -1) {\n      lineGroups.forEach(lineGroup => {\n        let diff = w - lineGroup.width;\n        if(diff > 0) {\n          lineGroup.horizonAlign(textAlign === 'center' ? diff * 0.5 : diff);\n        }\n      });\n    }\n    this.__width = w;\n    this.__height = fixedHeight ? h : y - data.y;\n    this.__flowY = y;\n    // 处理margin:xx auto居中对齐\n    if(marginLeft.unit === unit.AUTO && marginRight.unit === unit.AUTO && width.unit !== unit.AUTO) {\n      let ow = this.outerWidth;\n      if(ow < data.w) {\n        this.__offsetX((data.w - ow) * 0.5);\n      }\n    }\n  }\n\n  // 弹性布局时的计算位置\n  __layoutFlex(data) {\n    let { x, y, w, h } = data;\n    this.__x = x;\n    this.__y = y;\n    this.__width = w;\n    let { flowChildren, style, mlw, mtw, mrw, mbw, plw, ptw, prw, pbw } = this;\n    let {\n      width,\n      height,\n      flexDirection,\n      borderTopWidth,\n      borderRightWidth,\n      borderBottomWidth,\n      borderLeftWidth,\n      justifyContent,\n      alignItems,\n    } = style;\n    // 除了auto外都是固定高度\n    let fixedWidth;\n    let fixedHeight;\n    if(width && width.unit !== unit.AUTO) {\n      fixedWidth = true;\n      switch(width.unit) {\n        case unit.PX:\n          w = width.value;\n          break;\n        case unit.PERCENT:\n          w *= width.value * 0.01;\n          break;\n      }\n    }\n    if(height && height.unit !== unit.AUTO) {\n      fixedHeight = true;\n      switch(height.unit) {\n        case unit.PX:\n          h = height.value;\n          break;\n        case unit.PERCENT:\n          h *= height.value * 0.01;\n          break;\n      }\n    }\n    // margin/padding/border影响x和y和尺寸\n    x += borderLeftWidth.value + mlw + plw;\n    data.x = x;\n    y += borderTopWidth.value + mtw + ptw;\n    data.y = y;\n    if(width.unit === unit.AUTO) {\n      w -= borderLeftWidth.value + borderRightWidth.value + mlw + mrw + plw + prw;\n    }\n    if(height.unit === unit.AUTO) {\n      h -= borderTopWidth.value + borderBottomWidth.value + mtw + mbw + ptw + pbw;\n    }\n    let isDirectionRow = flexDirection === 'row';\n    // column时height可能为auto，此时取消伸展，退化为类似block布局，但所有子元素强制block\n    if(!isDirectionRow && !fixedHeight) {\n      flowChildren.forEach(item => {\n        if(item instanceof Xom) {\n          const { style, style: { display, flexDirection, width }} = item;\n          // column的flex的child如果是inline，变为block\n          if(display === 'inline') {\n            style.display = 'block';\n          }\n          // 竖向flex的child如果是横向flex，宽度自动的话要等同于父flex的宽度\n          else if(display === 'flex' && flexDirection === 'row' && width.unit === unit.AUTO) {\n            width.value = w;\n            width.unit = unit.PX;\n          }\n          item.__layout({\n            x,\n            y,\n            w,\n            h,\n          });\n          y += item.outerHeight;\n        }\n        else {\n          item.__layout({\n            x,\n            y,\n            w,\n            h,\n          });\n          y += item.outerHeight;\n        }\n      });\n      this.__width = w;\n      this.__height = y - data.y;\n      return;\n    }\n    // 计算伸缩基数\n    let growList = [];\n    let shrinkList = [];\n    let basisList = [];\n    let minList = [];\n    let growSum = 0;\n    let shrinkSum = 0;\n    let basisSum = 0;\n    let maxSum = 0;\n    flowChildren.forEach(item => {\n      if(item instanceof Xom) {\n        let { flexGrow, flexShrink, flexBasis } = item.style;\n        growList.push(flexGrow);\n        shrinkList.push(flexShrink);\n        growSum += flexGrow;\n        shrinkSum += flexShrink;\n        let { b, min, max } = item.__calAutoBasis(isDirectionRow, w, h);\n        // 根据basis不同，计算方式不同\n        if(flexBasis.unit === unit.AUTO) {\n          basisList.push(max);\n          basisSum += max;\n        }\n        else if(flexBasis.unit === unit.PX) {\n          b = flexBasis.value;\n          basisList.push(b);\n          basisSum += b;\n        }\n        else if(flexBasis.unit === unit.PERCENT) {\n          b = (isDirectionRow ? w : h) * flexBasis.value;\n          basisList.push(b);\n          basisSum += b;\n        }\n        maxSum += max;\n        minList.push(min);\n      }\n      else {\n        growList.push(0);\n        shrinkList.push(1);\n        shrinkSum += 1;\n        if(isDirectionRow) {\n          basisList.push(item.textWidth);\n          basisSum += item.textWidth;\n          maxSum += item.textWidth;\n          minList.push(item.charWidth);\n        }\n        else {\n          item.__layout({\n            x: 0,\n            y: 0,\n            w,\n            h,\n          }, true);\n          basisList.push(item.height);\n          basisSum += item.height;\n          maxSum += item.height;\n          minList.push(item.height);\n        }\n      }\n    });\n    let maxCross = 0;\n    // 判断是否超出，决定使用grow还是shrink\n    let isOverflow = maxSum > (isDirectionRow ? w : h);\n    flowChildren.forEach((item, i) => {\n      let main;\n      let shrink = shrinkList[i];\n      let grow = growList[i];\n      // 计算主轴长度\n      if(isOverflow) {\n        let overflow = basisSum - (isDirectionRow ? w : h);\n        main = shrink ? (basisList[i] - overflow * shrink / shrinkSum) : basisList[i];\n      }\n      else {\n        let free = (isDirectionRow ? w : h) - basisSum;\n        main = grow ? (basisList[i] + free * grow / growSum) : basisList[i];\n      }\n      // 主轴长度的最小值不能小于元素的最小长度，比如横向时的字符宽度\n      main = Math.max(main, minList[i]);\n      if(item instanceof Xom) {\n        const { style, mlw, mtw, mrw, mbw, plw, ptw, prw, pbw, style: {\n          display,\n          flexDirection,\n          width,\n          height,\n          borderTopWidth,\n          borderRightWidth,\n          borderBottomWidth,\n          borderLeftWidth,\n        }} = item;\n        if(isDirectionRow) {\n          // row的flex的child如果是inline，变为block\n          if(display === 'inline') {\n            style.display = 'block';\n          }\n          // 横向flex的child如果是竖向flex，高度自动的话要等同于父flex的高度\n          else if(display === 'flex' && flexDirection === 'column' && fixedHeight && height.unit === unit.AUTO) {\n            height.value = h;\n            height.unit = unit.PX;\n          }\n          item.__layout({\n            x,\n            y,\n            w: main,\n            h,\n          })\n        }\n        else {\n          // column的flex的child如果是inline，变为block\n          if(display === 'inline') {\n            style.display = 'block';\n          }\n          // 竖向flex的child如果是横向flex，宽度自动的话要等同于父flex的宽度\n          else if(display === 'flex' && flexDirection === 'row' && width.unit === unit.AUTO) {\n            width.value = w;\n            width.unit = unit.PX;\n          }\n          item.__layout({\n            x,\n            y,\n            w,\n            h: main,\n          });\n        }\n        // 重设因伸缩而导致的主轴长度\n        if(isOverflow && shrink) {\n          if(isDirectionRow) {\n            item.__width = main - mlw - mrw - plw - prw - borderLeftWidth.value - borderRightWidth.value;\n          }\n          else {\n            item.__height = main - mtw - mbw - ptw - pbw - borderTopWidth.value - borderBottomWidth.value;\n          }\n        }\n        else if(!isOverflow && grow) {\n          if(isDirectionRow) {\n            item.__width = main - mlw - mrw - plw - prw - borderLeftWidth.value - borderRightWidth.value;\n          }\n          else {\n            item.__height = main - mtw - mbw - ptw - pbw - borderTopWidth.value - borderBottomWidth.value;\n          }\n        }\n      }\n      else {\n        item.__layout({\n          x,\n          y,\n          w: isDirectionRow ? main : w,\n          h: isDirectionRow ? h : main,\n        });\n      }\n      if(isDirectionRow) {\n        x += item.outerWidth;\n        maxCross = Math.max(maxCross, item.outerHeight);\n      }\n      else {\n        y += item.outerHeight;\n        maxCross = Math.max(maxCross, item.outerWidth);\n      }\n    });\n    // 计算主轴剩余时要用真实剩余空间而不能用伸缩剩余空间\n    let diff = isDirectionRow ? w - x + data.x : h - y + data.y;\n    // 主轴侧轴对齐方式\n    if(!isOverflow && growSum === 0 && diff > 0) {\n      let len = flowChildren.length;\n      if(justifyContent === 'flex-end') {\n        for(let i = 0; i < len; i++) {\n          let child = flowChildren[i];\n          isDirectionRow ? child.__offsetX(diff) : child.__offsetY(diff);\n        }\n      }\n      else if(justifyContent === 'center') {\n        let center = diff * 0.5;\n        for(let i = 0; i < len; i++) {\n          let child = flowChildren[i];\n          isDirectionRow ? child.__offsetX(center) : child.__offsetY(center);\n        }\n      }\n      else if(justifyContent === 'space-between') {\n        let between = diff / (len - 1);\n        for(let i = 1; i < len; i++) {\n          let child = flowChildren[i];\n          isDirectionRow ? child.__offsetX(between * i) : child.__offsetY(between * i);\n        }\n      }\n      else if(justifyContent === 'space-around') {\n        let around = diff / (len + 1);\n        for(let i = 0; i < len; i++) {\n          let child = flowChildren[i];\n          isDirectionRow ? child.__offsetX(around * (i + 1)) : child.__offsetY(around * (i + 1));\n        }\n      }\n    }\n    // 子元素侧轴伸展\n    if(isDirectionRow) {\n      // 父元素固定高度，子元素可能超过，侧轴最大长度取固定高度\n      if(fixedHeight) {\n        maxCross = h;\n      }\n      y += maxCross;\n    }\n    else {\n      if(fixedWidth) {\n        maxCross = w;\n      }\n    }\n    // 侧轴对齐\n    if(alignItems === 'stretch') {\n      // 短侧轴的children伸张侧轴长度至相同，超过的不动，固定宽高的也不动\n      flowChildren.forEach(item => {\n        let { style, mlw, mtw, mrw, mbw, ptw, prw, plw, pbw } = item;\n        if(isDirectionRow) {\n          if(style.height.unit === unit.AUTO) {\n            item.__height = maxCross - mtw - mbw - ptw - pbw\n              - style.borderTopWidth.value\n              - style.borderBottomWidth.value;\n          }\n        }\n        else {\n          if(style.width.unit === unit.AUTO) {\n            item.__width = maxCross - mlw - mrw - plw - prw\n              - borderRightWidth.value\n              - borderLeftWidth.value;\n          }\n        }\n      });\n    }\n    else if(alignItems === 'center') {\n      flowChildren.forEach(item => {\n        let diff = maxCross - item.outerHeight;\n        if(diff > 0) {\n          item.__offsetY(diff * 0.5);\n        }\n      });\n    }\n    else if(alignItems === 'flex-end') {\n      flowChildren.forEach(item => {\n        let diff = maxCross - item.outerHeight;\n        if(diff > 0) {\n          item.__offsetY(diff);\n        }\n      });\n    }\n    this.__width = w;\n    this.__height = fixedHeight ? h : y - data.y;\n    this.__flowY = y;\n  }\n\n  // inline比较特殊，先简单顶部对其，后续还需根据vertical和lineHeight计算y偏移\n  __layoutInline(data) {\n    let { x, y, w, h } = data;\n    this.__x = x;\n    this.__y = y;\n    let maxX = x;\n    let { flowChildren, style, lineGroups, mlw, mtw, mrw, mbw, plw, ptw, prw, pbw } = this;\n    let {\n      width,\n      height,\n      marginLeft,\n      marginRight,\n      borderTopWidth,\n      borderRightWidth,\n      borderBottomWidth,\n      borderLeftWidth,\n      textAlign,\n    } = style;\n    // 除了auto外都是固定高度\n    let fixedWidth;\n    let fixedHeight;\n    if(width && width.unit !== unit.AUTO) {\n      fixedWidth = true;\n      switch(width.unit) {\n        case unit.PX:\n          w = width.value;\n          break;\n        case unit.PERCENT:\n          w *= width.value * 0.01;\n          break;\n      }\n    }\n    if(height && height.unit !== unit.AUTO) {\n      fixedHeight = true;\n      switch(height.unit) {\n        case unit.PX:\n          h = height.value;\n          break;\n        case unit.PERCENT:\n          h *= height.value * 0.01;\n          break;\n      }\n    }\n    // margin/padding/border影响x和y和尺寸\n    x += borderLeftWidth.value + mlw + plw;\n    data.x = x;\n    y += borderTopWidth.value + mtw + ptw;\n    data.y = y;\n    if(width.unit === unit.AUTO) {\n      w -= borderLeftWidth.value + borderRightWidth.value + mlw + mrw + plw + prw;\n    }\n    if(height.unit === unit.AUTO) {\n      h -= borderTopWidth.value + borderBottomWidth.value + mtw + mbw + ptw + pbw;\n    }\n    // 递归布局，将inline的节点组成lineGroup一行\n    let lineGroup = new LineGroup(x, y);\n    flowChildren.forEach(item => {\n      if(item instanceof Xom) {\n        // 绝对定位跳过\n        if(item.style.position === 'absolute') {\n          this.absChildren.push(item);\n          return;\n        }\n        item.style.display = 'inline';\n        // inline开头，不用考虑是否放得下直接放\n        if(x === data.x) {\n          lineGroup.add(item);\n          item.__layout({\n            x,\n            y,\n            w,\n            h,\n          });\n          x += item.outerWidth;\n          maxX = Math.max(maxX, x);\n        }\n        else {\n          // 非开头先尝试是否放得下\n          let fw = item.__tryLayInline(w - x, w);\n          // 放得下继续\n          if(fw >= 0) {\n            item.__layout({\n              x,\n              y,\n              w,\n              h,\n            });\n          }\n          // 放不下处理之前的lineGroup，并重新开头\n          else {\n            lineGroups.push(lineGroup);\n            lineGroup.verticalAlign();\n            x = data.x;\n            y += lineGroup.height;\n            item.__layout({\n              x: data.x,\n              y,\n              w,\n              h,\n            });\n            lineGroup = new LineGroup(x, y);\n          }\n          x += item.outerWidth;\n          maxX = Math.max(maxX, x);\n          lineGroup.add(item);\n        }\n      }\n      // inline里的其它只有文本\n      else {\n        if(x === data.x) {\n          lineGroup.add(item);\n          item.__layout({\n            x,\n            y,\n            w,\n            h,\n          });\n          x += item.width;\n          maxX = Math.max(maxX, x);\n        }\n        else {\n          // 非开头先尝试是否放得下\n          let fw = item.__tryLayInline(w - x, w);\n          // 放得下继续\n          if(fw >= 0) {\n            item.__layout({\n              x,\n              y,\n              w,\n              h,\n            });\n          }\n          // 放不下处理之前的lineGroup，并重新开头\n          else {\n            lineGroups.push(lineGroup);\n            lineGroup.verticalAlign();\n            x = data.x;\n            y += lineGroup.height;\n            item.__layout({\n              x: data.x,\n              y,\n              w,\n              h,\n            });\n            lineGroup = new LineGroup(x, y);\n          }\n          x += item.width;\n          maxX = Math.max(maxX, x);\n          lineGroup.add(item);\n        }\n      }\n    });\n    // 结束后处理可能遗留的最后的lineGroup，children为空时可能size为空\n    if(lineGroup.size) {\n      lineGroups.push(lineGroup);\n      lineGroup.verticalAlign();\n      y += lineGroup.height;\n    }\n    // text-align\n    if(['center', 'right'].indexOf(textAlign) > -1) {\n      lineGroups.forEach(lineGroup => {\n        let diff = w - lineGroup.width;\n        if(diff > 0) {\n          lineGroup.horizonAlign(textAlign === 'center' ? diff * 0.5 : diff);\n        }\n      });\n    }\n    // 元素的width不能超过父元素w\n    this.__width = fixedWidth ? w : maxX - data.x;\n    this.__height = fixedHeight ? h : y - data.y;\n    this.__flowY = y;\n    // 处理margin:xx auto居中对齐\n    if(marginLeft.unit === unit.AUTO && marginRight.unit === unit.AUTO && width.unit !== unit.AUTO) {\n      let ow = this.outerWidth;\n      if(ow < data.w) {\n        this.__offsetX((data.w - ow) * 0.5);\n      }\n    }\n  }\n\n  // 只针对绝对定位children布局\n  __layoutAbs(container) {\n    let { x, y, flowY, width, height, children, absChildren, style, mlw, mtw, mrw, mbw, plw, ptw, prw, pbw } = this;\n    let {\n      borderTopWidth,\n      borderLeftWidth,\n    } = style;\n    let pw = width + plw + prw;\n    let ph = height + ptw + pbw;\n    // 递归进行，遇到absolute/relative的设置新容器\n    children.forEach(item => {\n      if(item instanceof Dom) {\n        item.__layoutAbs(['absolute', 'relative'].indexOf(item.style.position) > -1 ? item : container);\n      }\n    });\n    // 对absolute的元素进行相对容器布局\n    absChildren.forEach(item => {\n      let { mtw, mlw, style, style: {\n        left, top, right, bottom, width: width2, height: height2\n      } } = item;\n      let x2, y2, w2, h2;\n      // width优先级高于right高于left，即最高left+right，其次left+width，再次right+width，然后仅申明单个，最次全部auto\n      if(left.unit !== unit.AUTO && right.unit !== unit.AUTO) {\n        x2 = left.unit === unit.PX ? x + mlw + borderLeftWidth.value + left.value : x + mlw + borderLeftWidth.value + width * left.value * 0.01;\n        w2 = right.unit === unit.PX ? x + mlw + borderLeftWidth.value + pw - right.value - x2 : x + mlw + borderLeftWidth.value + pw - width * right.value * 0.01 - x2;\n      }\n      else if(left.unit !== unit.AUTO && width2.unit !== unit.AUTO) {\n        x2 = left.unit === unit.PX ? x + mlw + borderLeftWidth.value + left.value : x + mlw + borderLeftWidth.value + width * left.value * 0.01;\n        w2 = width2.unit === unit.PX ? width2.value : width;\n      }\n      else if(right.unit !== unit.AUTO && width2.unit !== unit.AUTO) {\n        w2 = width2.unit === unit.PX ? width2.value : width;\n        let widthPx = width2.unit === unit.PX ? width2.value : width * width2.value * 0.01;\n        x2 = right.unit === unit.PX ? x + mlw + borderLeftWidth.value + pw - right.value - widthPx : x + mlw + borderLeftWidth.value + pw - width * right.value * 0.01 - widthPx;\n      }\n      else if(left.unit !== unit.AUTO) {\n        x2 = left.unit === unit.PX ? x + left.value : x + mlw + borderLeftWidth.value + width * left.value * 0.01;\n        w2 = item.__calAbs(true);\n      }\n      else if(right.unit !== unit.AUTO) {\n        w2 = item.__calAbs(true);\n        x2 = right.unit === unit.PX ? x + mlw + borderLeftWidth.value + pw - right.value - w2 : x + mlw + borderLeftWidth.value + pw - width * right.value * 0.01 - w2;\n      }\n      else if(width2.unit !== unit.AUTO) {\n        x2 = x + mlw + borderLeftWidth.value;\n        w2 = width2.unit === unit.PX ? width2.value : width;\n      }\n      else {\n        x2 = x + mlw + borderLeftWidth.value;\n        w2 = item.__calAbs(true);\n      }\n      // top/bottom/height优先级同上\n      if(top.unit !== unit.AUTO && bottom.unit !== unit.AUTO) {\n        y2 = top.unit === unit.PX ? y + top.value : y + mtw + borderTopWidth.value + height * top.value * 0.01;\n        h2 = bottom.unit === unit.PX ? y + mtw + borderTopWidth.value + ph - bottom.value - y2 : y + mtw + borderTopWidth.value + ph - height * bottom.value * 0.01 - y2;\n        style.height = {\n          value: h2,\n          unit: unit.PX,\n        };\n      }\n      else if(top.unit !== unit.AUTO && height2.unit !== unit.AUTO) {\n        y2 = top.unit === unit.PX ? y + top.value : y + mtw + borderTopWidth.value + height * top.value * 0.01;\n        h2 = height2.unit === unit.PX ? height2.value : height;\n      }\n      else if(bottom.unit !== unit.AUTO && height2.unit !== unit.AUTO) {\n        h2 = height2.unit === unit.PX ? height2.value : height;\n        let heightPx = height2.unit === unit.PX ? height2.value : height * height2.value * 0.01;\n        y2 = bottom.unit === unit.PX ? y + mtw + borderTopWidth.value + ph - bottom.value - heightPx : y + mtw + borderTopWidth.value + ph - height * bottom.value * 0.01 - heightPx;\n      }\n      else if(top.unit !== unit.AUTO) {\n        y2 = top.unit === unit.PX ? y + top.value : y + mtw + borderTopWidth.value + height * top.value * 0.01;\n        h2 = item.__calAbs();\n      }\n      else if(bottom.unit !== unit.AUTO) {\n        h2 = item.__calAbs();\n        y2 = bottom.unit === unit.PX ? y + mtw + borderTopWidth.value + ph - bottom.value - h2 : y + mtw + borderTopWidth.value + ph - height * bottom.value * 0.01 - h2;\n      }\n      else if(height2.unit !== unit.AUTO) {\n        y2 = flowY + mtw + borderTopWidth.value;\n        h2 = height2.unit === unit.PX ? height2.value : height;\n      }\n      else {\n        y2 = flowY + mtw + borderTopWidth.value;\n        h2 = item.__calAbs();\n      }\n      // absolute时inline强制block\n      if(style.display === 'inline') {\n        style.display = 'block';\n      }\n      item.__layout({\n        x: x2,\n        y: y2,\n        w: w2,\n        h: h2,\n      });\n    });\n  }\n\n  __emitEvent(e, force) {\n    let { event: { type }, x, y, covers } = e;\n    let { listener, children, style, rx, ry, outerWidth, outerHeight } = this;\n    if(style.display === 'none') {\n      return;\n    }\n    let cb;\n    if(listener.hasOwnProperty(type)) {\n      cb = listener[type];\n    }\n    let hasChildEmit;\n    // 先响应absolute/relative高优先级\n    for(let i = children.length - 1; i >= 0; i--) {\n      let child = children[i];\n      if(child instanceof Xom && ['absolute', 'relative'].indexOf(child.style.position) > -1) {\n        if(child.__emitEvent(e, force)) {\n          hasChildEmit = true;\n        }\n      }\n    }\n    // 再看普通流\n    for(let i = children.length - 1; i >= 0; i--) {\n      let child = children[i];\n      if(child instanceof Xom && ['absolute', 'relative'].indexOf(child.style.position) === -1) {\n        if(child.__emitEvent(e, force)) {\n          hasChildEmit = true;\n        }\n      }\n    }\n    if(force) {\n      cb && cb(e);\n      return;\n    }\n    // child触发则parent一定触发\n    if(hasChildEmit) {\n      covers.push({\n        x,\n        y,\n        w: outerWidth,\n        h: outerHeight,\n      });\n      cb && cb(e);\n    }\n    // 否则判断坐标是否位于自己内部，以及没被遮挡\n    else if(x >= rx && y >= ry && x <= rx + outerWidth && y <= ry + outerHeight) {\n      for(let i = 0, len = covers.length; i < len; i++) {\n        let { x: x2, y: y2, w, h: h } = covers[i];\n        if(x >= x2 && y >= y2 && x <= x2 + w && y <= y2 + h) {\n          return;\n        }\n      }\n      if(!e.target) {\n        e.target = this;\n      }\n      covers.push({\n        x,\n        y,\n        w: outerWidth,\n        h: outerHeight,\n      });\n      cb && cb(e);\n    }\n  }\n\n  render(renderMode) {\n    super.render(renderMode);\n    let { style, flowChildren, children } = this;\n    let {\n      display,\n      position,\n      top,\n      right,\n      bottom,\n      left,\n      height: h,\n    } = style;\n    if(display === 'none') {\n      return;\n    }\n    // 先绘制static\n    flowChildren.forEach(item => {\n      if(item instanceof Text || item.style.position === 'static') {\n        item.render(renderMode);\n      }\n    });\n    // 再绘制relative和absolute\n    children.forEach(item => {\n      if((item instanceof Xom) && ['relative', 'absolute'].indexOf(item.style.position) > -1) {\n        item.render(renderMode);\n      }\n    });\n    if(renderMode === mode.SVG) {\n      this.__virtualDom = {\n        ...super.virtualDom,\n        type: 'dom',\n        children: this.children.map(item => item.virtualDom),\n      };\n    }\n  }\n\n  get tagName() {\n    return this.__tagName;\n  }\n  get children() {\n    return this.__children;\n  }\n  get flowChildren() {\n    return this.__flowChildren;\n  }\n  get absChildren() {\n    return this.__absChildren;\n  }\n  get lineGroups() {\n    return this.__lineGroups;\n  }\n  get baseLine() {\n    let len = this.lineGroups.length;\n    if(len) {\n      let last = this.lineGroups[len - 1];\n      return last.y - this.y + last.baseLine;\n    }\n    return this.y;\n  }\n  get flowY() {\n    return this.__flowY;\n  }\n\n  static isValid(s) {\n    return TAG_NAME.hasOwnProperty(s);\n  }\n}\n\nexport default Dom;\n","import util from './util';\n\nfunction diff(elem, ovd, nvd, od, nd) {\n  let cns = elem.childNodes;\n  diffDefs(cns[0], od, nd);\n  diffBb(cns[1], ovd.bb, nvd.bb);\n  diffD2D(elem, ovd, nvd, true);\n}\n\nfunction diffDefs(elem, od, nd) {\n  let ol = od.length;\n  let nl = nd.length;\n  let i = 0;\n  let cns = elem.childNodes;\n  for(; i < Math.min(ol, nl); i++) {\n    diffDef(cns[i], od[i], nd[i]);\n  }\n}\n\nfunction diffDef(elem, od, nd) {\n  if(od.k !== nd.k) {\n    elem.insertAdjacentHTML('afterend', util.joinDef(nd));\n    elem.parentNode.removeChild(elem);\n  }\n  else {\n    for(let i = 0; i < 4; i++) {\n      if(od.c[i] !== nd.c[i]) {\n        elem.setAttribute(['x1', 'y1', 'x2', 'y2'][i], nd.c[i]);\n      }\n    }\n    let ol = od.v.length;\n    let nl = nd.v.length;\n    let i = 0;\n    let cns = elem.childNodes;\n    for(; i < Math.min(ol, nl); i++) {\n      let o = od.v[i];\n      let n = nd.v[i];\n      if(o[0] !== n[0]) {\n        cns[i].setAttribute('stop-color', n[0]);\n      }\n      if(o[1] !== n[1]) {\n        cns[i].setAttribute('offset', n[1]);\n      }\n    }\n    if(i < ol) {\n      for(; i < ol; i++) {\n        removeAt(elem, cns, i);\n      }\n    }\n    else if(i < nl) {\n      for(; i < nl; i++) {\n        insertAt(elem, cns, i, util.joinDef(nd.v[i]));\n      }\n    }\n  }\n}\n\nfunction diffChild(elem, ovd, nvd) {\n  if(ovd.type === 'dom') {\n    if(nvd.type === 'dom') {\n      diffD2D(elem, ovd, nvd);\n    }\n    else if(nvd.type === 'text') {\n      replaceWith(elem, nvd);\n    }\n    else if(nvd.type === 'geom') {\n      diffD2G(elem, ovd, nvd);\n    }\n  }\n  else if(nvd.type === 'text') {\n    if(nvd.type === 'dom') {\n      replaceWith(elem, nvd);\n    }\n    else if(nvd.type === 'text') {\n      diffT2T(elem, ovd, nvd);\n    }\n    else if(nvd.type === 'geom') {\n      replaceWith(elem, nvd);\n    }\n  }\n  else if(nvd.type === 'geom') {\n    if(nvd.type === 'dom') {\n      diffG2D(elem, ovd, nvd);\n    }\n    else if(nvd.type === 'text') {\n      replaceWith(elem, nvd);\n    }\n    else if(nvd.type === 'geom') {\n      diffG2G(elem, ovd, nvd);\n    }\n  }\n}\n\nfunction diffD2D(elem, ovd, nvd, root) {\n  if(!root) {\n    diffBb(elem.firstChild, ovd.bb, nvd.bb);\n  }\n  let ol = ovd.children.length;\n  let nl = nvd.children.length;\n  let i = 0;\n  let lastChild = elem.lastChild;\n  let cns = lastChild.childNodes;\n  for(; i < Math.min(ol, nl); i++) {\n    diffChild(cns[i], ovd.children[i], nvd.children[i]);\n  }\n  if(i < ol) {\n    for(; i < ol; i++) {\n      removeAt(lastChild, cns, i);\n    }\n  }\n  else if(i < nl) {\n    for(; i < nl; i++) {\n      insertAt(lastChild, cns, i, util.joinVd(nvd.children[i]));\n    }\n  }\n}\n\nfunction diffD2G(elem, ovd, nvd) {\n  diffBb(elem.firstChild, ovd.bb, nvd.bb);\n  replaceWith(elem.lastChild, nvd.content);\n}\n\nfunction diffT2T(elem, ovd, nvd) {\n  let ol = ovd.children.length;\n  let nl = nvd.children.length;\n  let i = 0;\n  for(; i < Math.min(ol, nl); i++) {\n    diffItem(elem, i, ovd.children[i], nvd.children[i], true);\n  }\n  let cns = elem.childNodes;\n  if(i < ol) {\n    for(; i < ol; i++) {\n      removeAt(elem, cns, i);\n    }\n  }\n  else if(i < nl) {\n    for(; i < nl; i++) {\n      insertAt(elem, cns, i, util.joinVd(nvd.children[i]));\n    }\n  }\n}\n\nfunction diffG2D(elem, ovd, nvd) {\n  diffBb(elem.firstChild, ovd.bb, nvd.bb);\n  replaceWith(elem.lastChild, nvd.children);\n}\n\nfunction diffG2G(elem, ovd, nvd) {\n  diffBb(elem.firstChild, ovd.bb, nvd.bb);\n  let ol = ovd.content.length;\n  let nl = nvd.content.length;\n  let i = 0;\n  let lastChild = elem.lastChild;\n  let cns = lastChild.childNodes;\n  for(; i < Math.min(ol, nl); i++) {\n    diffItem(lastChild, i, ovd.content[i], nvd.content[i]);\n  }\n  if(i < ol) {\n    for(; i < ol; i++) {\n      removeAt(lastChild, cns, i);\n    }\n  }\n  else if(i < nl) {\n    for(; i < nl; i++) {\n      insertAt(lastChild, cns, i, util.joinVd(nvd.content[i]));\n    }\n  }\n}\n\nfunction diffBb(elem, obb, nbb) {\n  let ol = obb.length;\n  let nl = nbb.length;\n  let i = 0;\n  for(; i < Math.min(ol, nl); i++) {\n    diffItem(elem, i, obb[i], nbb[i]);\n  }\n  let cns = elem.childNodes;\n  if(i < ol) {\n    for(; i < ol; i++) {\n      removeAt(elem, cns, i);\n    }\n  }\n  else if(i < nl) {\n    for(; i < nl; i++) {\n      insertAt(elem, cns, i, util.joinVd(nbb[i]));\n    }\n  }\n}\n\nfunction diffItem(elem, i, ovd, nvd, isText) {\n  let cns = elem.childNodes;\n  if(ovd.tagName !== nvd.tagName) {\n    replaceWith(cns[i], nvd);\n  }\n  else {\n    let op = {};\n    for(let j = 0, len = ovd.props.length; j < len; j++) {\n      let prop = ovd.props[j];\n      let [k, v] = prop;\n      op[k] = v;\n    }\n    for(let j = 0, len = nvd.props.length; j < len; j++) {\n      let prop = nvd.props[j];\n      let [k, v] = prop;\n      // 已有不等更新，没有添加\n      if(op.hasOwnProperty(k)) {\n        if(op[k] !== v) {\n          cns[i].setAttribute(k, v);\n        }\n        delete op[k];\n      }\n      else {\n        cns[i].setAttribute(k, v);\n      }\n    }\n    // 多余的删除\n    for(var k in op) {\n      if(op.hasOwnProperty(k)) {\n        cns[i].removeAttribute(k);\n      }\n    }\n    if(isText && ovd.content !== nvd.content) {\n      cns[i].textContent = nvd.content;\n    }\n  }\n}\n\nfunction replaceWith(elem, vd) {\n  let res;\n  if(Array.isArray(vd)) {\n    res = '';\n    vd.forEach(item => {\n      res += util.joinVd(item);\n    });\n  }\n  else {\n    res = util.joinVd(vd);\n  }\n  elem.insertAdjacentHTML('afterend', res);\n  elem.parentNode.removeChild(elem);\n}\n\nfunction insertAt(elem, cns, index, html) {\n  if(index >= cns.length) {\n    elem.insertAdjacentHTML('beforeend', html);\n  }\n  else {\n    cns[index].insertAdjacentHTML('beforebegin', html);\n  }\n}\n\nfunction removeAt(elem, cns, index) {\n  if(cns[index]) {\n    elem.removeChild(cns[index]);\n  }\n}\n\nexport default diff;\n","class Defs {\n  constructor(uuid) {\n    this.id = uuid++;\n    this.count = 0;\n    this.list = [];\n  }\n  add(data) {\n    data.uuid = `__karas-defs-${this.id}-${this.count++}`;\n    this.list.push(data);\n    return data.uuid;\n  }\n  clear() {\n    this.list = [];\n    this.count = 0;\n  }\n\n  get value() {\n    return this.list;\n  }\n\n  static getInstance(uuid) {\n    return new Defs(uuid);\n  }\n}\n\nexport default Defs;\n","import Dom from '../node/Dom';\nimport util from '../util';\nimport mode from '../mode';\nimport domDiff from '../domDiff';\nimport Defs from './Defs';\n\nfunction getDom(dom) {\n  if(util.isString(dom)) {\n    let o = document.querySelector(dom);\n    if(!o) {\n      throw new Error('can not find dom of selector: ' + dom);\n    }\n    return o;\n  }\n  if(!dom) {\n    throw new Error('can not find dom: ' + dom);\n  }\n  return dom;\n}\n\nfunction renderProp(k, v) {\n  let s = Array.isArray(v) ? util.joinSourceArray(v) : util.stringify(v);\n  if(k === 'className') {\n    k = 'class';\n  }\n  return ' ' + k + '=\"' + util.encodeHtml(s, true) + '\"';\n}\n\nlet uuid = 1;\n\nclass Root extends Dom {\n  constructor(tagName, props, children) {\n    super(tagName, props, children);\n    this.__node = null; // 真实DOM引用\n  }\n\n  __initProps() {\n    if(this.props.width !== undefined) {\n      let value = parseInt(this.props.width);\n      if(!isNaN(value) && value > 0) {\n        this.__width = value;\n      }\n    }\n    if(this.props.height !== undefined) {\n      let value = parseInt(this.props.height);\n      if(!isNaN(value) && value > 0) {\n        this.__height = value;\n      }\n    }\n  }\n\n  __genHtml() {\n    let res = `<${this.tagName}`;\n    // 拼接处理属性\n    for(let i = 0, len = this.__props.length; i < len; i++) {\n      let item = this.__props[i];\n      res += renderProp(item[0], item[1]);\n    }\n    res += `></${this.tagName}>`;\n    return res;\n  }\n\n  __cb(e, force) {\n    if(e.touches && e.touches.length > 1) {\n      return;\n    }\n    let { node } = this;\n    let { x, y, top, right } = node.getBoundingClientRect();\n    x = x || top || 0;\n    y = y || right || 0;\n    let { clientX, clientY } = e.touches ? (e.touches[0] || {}) : e;\n    x = clientX - x;\n    y = clientY - y;\n    this.__emitEvent({\n      event: e,\n      x,\n      y,\n      covers: [],\n    }, force);\n  }\n\n  __initEvent() {\n    let { node } = this;\n    ['click', 'dblclick', 'mousedown', 'mousemove', 'mouseup', 'touchstart', 'touchmove', 'touchend', 'touchcancel'].forEach(type => {\n      node.addEventListener(type, e => {\n        this.__cb(e, ['touchend', 'touchcancel'].indexOf(type) > -1);\n      });\n    });\n  }\n\n  appendTo(dom) {\n    dom = getDom(dom);\n    this.__initProps();\n    // 已有root节点\n    if(dom.nodeName.toUpperCase() === this.tagName.toUpperCase()) {\n      this.__node = dom;\n      if(this.width) {\n        dom.setAttribute('width', this.width);\n      }\n      if(this.height) {\n        dom.setAttribute('height', this.height);\n      }\n    }\n    // 没有canvas/svg节点则生成一个新的\n    else {\n      this.__node = dom.querySelector(this.tagName);\n      if(!this.__node) {\n        dom.innerHTML = this.__genHtml();\n        this.__node = dom.querySelector(this.tagName);\n      }\n    }\n    this.__uuid = this.__node.__uuid || uuid++;\n    this.__defs = Defs.getInstance(this.__uuid);\n    this.__defs.clear();\n    // 没有设置width/height则采用css计算形式\n    if(!this.width || !this.height) {\n      let css = window.getComputedStyle(dom, null);\n      if(!this.width) {\n        this.__width = parseInt(css.getPropertyValue('width'));\n        dom.setAttribute('width', this.width);\n      }\n      if(!this.height) {\n        this.__height = parseInt(css.getPropertyValue('height'));\n        dom.setAttribute('height', this.height);\n      }\n    }\n    // 只有canvas有ctx，svg用真实dom\n    let renderMode;\n    if(this.tagName === 'canvas') {\n      this.__ctx = this.__node.getContext('2d');\n      this.__ctx.clearRect(0, 0, this.width, this.height);\n      renderMode = mode.CANVAS;\n    }\n    else if(this.tagName === 'svg') {\n      renderMode = mode.SVG;\n    }\n    // canvas/svg作为根节点一定是block或flex，不会是inline\n    let { style } = this;\n    if(['flex', 'block'].indexOf(style.display) === -1) {\n      style.display = 'block';\n    }\n    // 同理position不能为absolute\n    if(style.position === 'absolute') {\n      style.position = 'static';\n    }\n    this.__traverse(this.__ctx, this.__defs, renderMode);\n    // canvas的宽高固定初始化\n    style.width = this.width;\n    style.height = this.height;\n    this.__initStyle();\n    this.__layout({\n      x: 0,\n      y: 0,\n      w: this.width,\n      h: this.height,\n    });\n    this.__layoutAbs(this);\n    this.render(renderMode);\n    if(renderMode === mode.SVG) {\n      let nvd = this.virtualDom;\n      let nd = this.__defs.value;\n      if(this.node.__karasInit) {\n        domDiff(this.node, this.node.__ovd, nvd, this.node.__od, nd);\n      } else {\n        this.node.innerHTML = util.joinVirtualDom(nvd, nd);\n      }\n      this.node.__ovd = nvd;\n      this.node.__od = nd;\n    }\n    if(!this.node.__karasInit) {\n      this.node.__karasInit = true;\n      this.__initEvent();\n    }\n  }\n\n  get node() {\n    return this.__node;\n  }\n}\n\nexport default Root;\n","import Geom from './Geom';\nimport mode from '../mode';\n\nclass Line extends Geom {\n  constructor(tagName, props) {\n    super(tagName, props);\n    // start和end表明线段的首尾坐标，control表明控制点坐标\n    this.__start = [];\n    this.__end = [];\n    this.__control = [];\n    if(Array.isArray(this.props.start)) {\n      this.__start = this.props.start;\n    }\n    if(Array.isArray(this.props.end)) {\n      this.__end = this.props.end;\n    }\n    if(Array.isArray(this.props.control)) {\n      this.__control = this.props.control;\n    }\n  }\n\n  render(renderMode) {\n    super.render(renderMode);\n    let { rx: x, ry: y, width, height, mlw, mtw, plw, ptw, style, ctx, start, end, control, virtualDom } = this;\n    if(start.length < 2 || end.length < 2) {\n      return;\n    }\n    let {\n      display,\n      borderTopWidth,\n      borderRightWidth,\n      borderBottomWidth,\n      borderLeftWidth,\n      stroke,\n      strokeWidth,\n      strokeDasharray,\n    } = style;\n    if(display === 'none') {\n      return;\n    }\n    let originX = x + borderLeftWidth.value + mlw + plw;\n    let originY = y + borderTopWidth.value + mtw + ptw;\n    let x1 = originX + start[0] * width;\n    let y1 = originY + start[1] * height;\n    let x2 = originX + end[0] * width;\n    let y2 = originY + end[1] * height;\n    let curve = 0;\n    let cx1, cy1, cx2, cy2;\n    if(Array.isArray(control[0])) {\n      curve++;\n      cx1 = originX + control[0][0] * width;\n      cy1 = originY + control[0][1] * height;\n    }\n    if(Array.isArray(control[1])) {\n      curve++;\n      cx2 = originX + control[1][0] * width;\n      cy2 = originY + control[1][1] * height;\n    }\n    if(renderMode === mode.CANVAS) {\n      ctx.strokeStyle = stroke;\n      ctx.lineWidth = strokeWidth;\n      ctx.setLineDash(strokeDasharray);\n      ctx.beginPath();\n      ctx.moveTo(x1, y1);\n      if(curve === 2) {\n        ctx.bezierCurveTo(cx1, cy1, cx2, cy2, x2, y2);\n      }\n      else if(curve === 1) {\n        ctx.quadraticCurveTo(cx1, cy1, x2, y2);\n      }\n      else {\n        ctx.lineTo(x2, y2);\n      }\n      ctx.stroke();\n      ctx.closePath();\n    }\n    else if(renderMode === mode.SVG) {\n      if(curve === 2) {\n        virtualDom.content.push({\n          type: 'item',\n          tagName: 'path',\n          props: [\n            ['d', `M${x1} ${y1} C${cx1} ${cy1} ${cx2} ${cy2} ${x2} ${y2}`],\n            ['fill', 'none'],\n            ['stroke', stroke],\n            ['stroke-width', strokeWidth],\n            ['stroke-dasharray', strokeDasharray]\n          ],\n        });\n      }\n      else if(curve === 1) {\n        virtualDom.content.push({\n          type: 'item',\n          tagName: 'path',\n          props: [\n            ['d', `M${x1} ${y1} Q${cx1} ${cy1} ${x2} ${y2}`],\n            ['fill', 'none'],\n            ['stroke', stroke],\n            ['stroke-width', strokeWidth],\n            ['stroke-dasharray', strokeDasharray]\n          ],\n        });\n      }\n      else {\n        virtualDom.content.push({\n          type: 'item',\n          tagName: 'line',\n          props: [\n            ['x1', x1],\n            ['y1', y1],\n            ['x2', x2],\n            ['y2', y2],\n            ['stroke', stroke],\n            ['stroke-width', strokeWidth],\n            ['stroke-dasharray', strokeDasharray]\n          ],\n        });\n      }\n    }\n  }\n\n  get start() {\n    return this.__start;\n  }\n  get end() {\n    return this.__end;\n  }\n  get control() {\n    return this.__control;\n  }\n}\n\nexport default Line;\n","import Geom from './Geom';\nimport mode from '../mode';\n\nclass Polyline extends Geom {\n  constructor(tagName, props) {\n    super(tagName, props);\n    // 折线所有点的列表\n    this.__points = [];\n    if(Array.isArray(this.props.points)) {\n      this.__points = this.props.points;\n    }\n    // 原点位置，4个角，默认左下\n    if(['TOP_LEFT', 'TOP_RIGHT', 'BOTTOM_LEFT', 'BOTTOM_RIGHT'].indexOf(this.props.origin) > -1) {\n      this.__origin = this.props.origin;\n    }\n    else {\n      this.__origin = 'BOTTOM_LEFT';\n    }\n  }\n\n  render(renderMode) {\n    super.render(renderMode);\n    let { rx: x, ry: y, width, height, mlw, mtw, plw, ptw, style, ctx, points, origin, virtualDom } = this;\n    if(points.length < 2) {\n      return;\n    }\n    for(let i = 0, len = points.length; i < len; i++) {\n      if(!Array.isArray(points[i]) || points[i].length < 2) {\n        return;\n      }\n    }\n    let {\n      display,\n      borderTopWidth,\n      borderLeftWidth,\n      stroke,\n      strokeWidth,\n      strokeDasharray,\n    } = style;\n    if(display === 'none') {\n      return;\n    }\n    let originX = x + borderLeftWidth.value + mlw + plw;\n    let originY = y + borderTopWidth.value + mtw + ptw;\n    let pts = this.__pts = [];\n    if(origin === 'TOP_LEFT') {\n      points.forEach(item => {\n        pts.push([\n          originX + item[0] * width,\n          originY + item[1] * height\n        ]);\n      });\n    }\n    else if(origin === 'TOP_RIGHT') {\n      points.forEach(item => {\n        pts.push([\n          originX + width - item[0] * width,\n          originY + item[1] * height\n        ]);\n      });\n    }\n    else if(origin === 'BOTTOM_LEFT') {\n      points.forEach(item => {\n        pts.push([\n          originX + item[0] * width,\n          originY + height - item[1] * height\n        ]);\n      });\n    }\n    else if(origin === 'BOTTOM_RIGHT') {\n      points.forEach(item => {\n        pts.push([\n          originX + width - item[0] * width,\n          originY + height - item[1] * height\n        ]);\n      });\n    }\n    if(renderMode === mode.CANVAS) {\n      ctx.strokeStyle = stroke;\n      ctx.lineWidth = strokeWidth;\n      ctx.setLineDash(strokeDasharray);\n      ctx.beginPath();\n      ctx.moveTo(pts[0][0], originY + pts[0][1]);\n      for(let i = 1, len = pts.length; i < len; i++) {\n        let point = pts[i];\n        ctx.lineTo(point[0], point[1]);\n      }\n      if(strokeWidth && stroke !== 'transparent') {\n        ctx.stroke();\n      }\n      ctx.closePath();\n    }\n    else if(renderMode === mode.SVG) {\n      let points = '';\n      for(let i = 0, len = pts.length; i < len; i++) {\n        let point = pts[i];\n        points += `${point[0]},${point[1]} `;\n      }\n      virtualDom.content.push({\n        type: 'item',\n        tagName: 'polyline',\n        props: [\n          ['points', points],\n          ['fill', 'none'],\n          ['stroke', stroke],\n          ['stroke-width', strokeWidth],\n          ['stroke-dasharray', strokeDasharray]\n        ],\n      });\n    }\n  }\n\n  getPointsByX(x) {\n    let min = Infinity;\n    let len = this.__pts.length;\n    let res = [];\n    for(let i = 0; i < len; i++) {\n      let diff = Math.abs(this.__pts[i][0] - x);\n      if(diff < min) {\n        min = diff;\n      }\n    }\n    for(let i = 0; i < len; i++) {\n      let diff = Math.abs(this.__pts[i][0] - x);\n      if(diff === min) {\n        res.push({\n          index: i,\n          x: this.__pts[i][0],\n          y: this.__pts[i][1],\n        });\n      }\n    }\n    return res;\n  }\n\n  get points() {\n    return this.__points;\n  }\n  get origin() {\n    return this.__origin;\n  }\n}\n\nexport default Polyline;\n","import Geom from './Geom';\nimport mode from '../mode';\n\nclass Polygon extends Geom {\n  constructor(tagName, props) {\n    super(tagName, props);\n    // 所有点的列表\n    this.__points = [];\n    if(Array.isArray(this.props.points)) {\n      this.__points = this.props.points;\n    }\n  }\n\n  render(renderMode) {\n    super.render(renderMode);\n    let { rx: x, ry: y, width, height, mlw, mtw, plw, ptw, style, ctx, points, virtualDom } = this;\n    if(points.length < 3) {\n      return;\n    }\n    for(let i = 0, len = points.length; i < len; i++) {\n      if(!Array.isArray(points[i]) || points[i].length < 2) {\n        return;\n      }\n    }\n    let {\n      display,\n      borderTopWidth,\n      borderLeftWidth,\n      stroke,\n      strokeWidth,\n      strokeDasharray,\n      fill,\n    } = style;\n    if(display === 'none') {\n      return;\n    }\n    let originX = x + borderLeftWidth.value + mlw + plw;\n    let originY = y + borderTopWidth.value + mtw + ptw;\n    points.forEach(item => {\n      item[0] = originX + item[0] * width;\n      item[1] = originY + item[1] * height;\n    });\n    if(renderMode === mode.CANVAS) {\n      ctx.strokeStyle = stroke;\n      ctx.lineWidth = strokeWidth;\n      ctx.fillStyle = fill;\n      ctx.setLineDash(strokeDasharray);\n      ctx.beginPath();\n      ctx.moveTo(points[0][0], originY + points[0][1]);\n      for(let i = 1, len = points.length; i < len; i++) {\n        let point = points[i];\n        ctx.lineTo(point[0], point[1]);\n      }\n      ctx.fill();\n      if(strokeWidth && stroke !== 'transparent') {\n        ctx.stroke();\n      }\n      ctx.closePath();\n    }\n    else if(renderMode === mode.SVG) {\n      let points = '';\n      for(let i = 0, len = points.length; i < len; i++) {\n        let point = points[i];\n        points += `${point[0]},${point[1]} `;\n      }\n      virtualDom.content.push({\n        type: 'item',\n        tagName: 'polygon',\n        props: [\n          ['points', points],\n          ['fill', fill],\n          ['stroke', stroke],\n          ['stroke-width', strokeWidth],\n          ['stroke-dasharray', strokeDasharray]\n        ],\n      });\n    }\n  }\n\n  get points() {\n    return this.__points;\n  }\n}\n\nexport default Polygon;\n","import Geom from './Geom';\nimport mode from '../mode';\n\nconst OFFSET = Math.PI * 0.5;\n\nfunction getCoordByDegree(x, y, r, d) {\n  while(d > 360) {\n    d -= 360;\n  }\n  while(d < 0) {\n    d += 360;\n  }\n  if(d >= 0 && d < 90) {\n    return [\n      x + Math.sin(d * Math.PI / 180) * r,\n      y - Math.cos(d * Math.PI / 180) * r\n    ];\n  }\n  else if(d >= 90 && d < 180) {\n    return [\n      x + Math.cos((d - 90) * Math.PI / 180) * r,\n      y + Math.sin((d - 90) * Math.PI / 180) * r,\n    ];\n  }\n  else if(d >= 180 && d < 270) {\n    return [\n      x - Math.cos((270 - d) * Math.PI / 180) * r,\n      y + Math.sin((270 - d) * Math.PI / 180) * r,\n    ];\n  }\n  else {\n    return [\n      x - Math.sin((360 - d) * Math.PI / 180) * r,\n      y - Math.cos((360 - d) * Math.PI / 180) * r,\n    ];\n  }\n}\n\nclass Sector extends Geom {\n  constructor(tagName, props) {\n    super(tagName, props);\n    // 角度\n    this.__start = 0;\n    this.__end = 0;\n    if(this.props.start) {\n      this.__start = parseFloat(this.props.start);\n      if(isNaN(this.start)) {\n        this.__start = 0;\n      }\n    }\n    if(this.props.end) {\n      this.__end = parseFloat(this.props.end);\n      if(isNaN(this.end)) {\n        this.__end = 0;\n      }\n    }\n    // 半径0~1，默认1\n    this.__r = 1;\n    if(this.props.r) {\n      this.__r = parseFloat(this.props.r);\n      if(isNaN(this.r)) {\n        this.__r = 1;\n      }\n    }\n  }\n\n  render(renderMode) {\n    super.render(renderMode);\n    let { rx: x, ry: y, width, height, mlw, mtw, plw, ptw, style, ctx, start, end, r, virtualDom } = this;\n    if(start === end) {\n      return;\n    }\n    let {\n      display,\n      borderTopWidth,\n      borderLeftWidth,\n      stroke,\n      strokeWidth,\n      strokeDasharray,\n      fill,\n    } = style;\n    if(display === 'none') {\n      return;\n    }\n    let originX = x + borderLeftWidth.value + mlw + plw;\n    let originY = y + borderTopWidth.value + mtw + ptw;\n    originX += width * 0.5;\n    originY += height * 0.5;\n    r *= Math.min(width, height) * 0.5;\n    if(renderMode === mode.CANVAS) {\n      ctx.strokeStyle = stroke;\n      ctx.lineWidth = strokeWidth;\n      ctx.fillStyle = fill;\n      ctx.setLineDash(strokeDasharray);\n      ctx.beginPath();\n      ctx.moveTo(originX, originY);\n      ctx.arc(originX, originY, r, start * Math.PI / 180 - OFFSET, end * Math.PI / 180 - OFFSET);\n      ctx.fill();\n      if(strokeWidth && stroke !== 'transparent') {\n        ctx.stroke();\n      }\n      ctx.closePath();\n    }\n    else if(renderMode === mode.SVG) {\n      let x1, y1, x2, y2;\n      [ x1, y1 ] = getCoordByDegree(originX, originY, r, start);\n      [ x2, y2 ] = getCoordByDegree(originX, originY, r, end);\n      let large = (end - start) > 180 ? 1 : 0;\n      virtualDom.content.push({\n        type: 'item',\n        tagName: 'path',\n        props: [\n          ['d', `M${originX} ${originY} L${x1} ${y1} A${r} ${r} 0 ${large} 1 ${x2} ${y2} z`],\n          ['fill', fill],\n          ['stroke', stroke],\n          ['stroke-width', strokeWidth],\n          ['stroke-dasharray', strokeDasharray]\n        ],\n      });\n    }\n  }\n\n  get start() {\n    return this.__start;\n  }\n  get end() {\n    return this.__end;\n  }\n  get r() {\n    return this.__r;\n  }\n}\n\nexport default Sector;\n","import Geom from './Geom';\nimport mode from '../mode';\n\nclass Rect extends Geom {\n  constructor(tagName, props) {\n    super(tagName, props);\n  }\n\n  render(renderMode) {\n    super.render(renderMode);\n    let { rx: x, ry: y, width, height, mlw, mtw, plw, ptw, style, ctx, virtualDom } = this;\n    let {\n      display,\n      borderTopWidth,\n      borderLeftWidth,\n      stroke,\n      strokeWidth,\n      strokeDasharray,\n      fill,\n    } = style;\n    if(display === 'none') {\n      return;\n    }\n    let originX = x + borderLeftWidth.value + mlw + plw;\n    let originY = y + borderTopWidth.value + mtw + ptw;\n    if(renderMode === mode.CANVAS) {\n      ctx.strokeStyle = stroke;\n      ctx.lineWidth = strokeWidth;\n      ctx.fillStyle = fill;\n      ctx.setLineDash(strokeDasharray);\n      ctx.beginPath();\n      ctx.moveTo(originX, originY);\n      ctx.lineTo(originX + width, originY);\n      ctx.lineTo(originX + width, originY + height);\n      ctx.lineTo(originX, originY + height);\n      ctx.fill();\n      if(strokeWidth && stroke !== 'transparent') {\n        ctx.stroke();\n      }\n      ctx.closePath();\n    }\n    else if(renderMode === mode.SVG) {\n      virtualDom.content.push({\n        type: 'item',\n        tagName: 'rect',\n        props: [\n          ['x', x],\n          ['y', y],\n          ['width', width],\n          ['height', height],\n          ['fill', fill],\n          ['stroke', stroke],\n          ['stroke-width', strokeWidth],\n          ['stroke-dasharray', strokeDasharray]\n        ],\n      });\n    }\n  }\n}\n\nexport default Rect;\n","import Geom from './Geom';\nimport mode from '../mode';\n\nclass Circle extends Geom {\n  constructor(tagName, props) {\n    super(tagName, props);\n    // 半径0~1，默认1\n    this.__r = 1;\n    if(this.props.r) {\n      this.__r = parseFloat(this.props.r);\n      if(isNaN(this.r)) {\n        this.__r = 1;\n      }\n    }\n  }\n\n  render(renderMode) {\n    super.render(renderMode);\n    let { rx: x, ry: y, width, height, mlw, mtw, plw, ptw, style, ctx, r, virtualDom } = this;\n    let {\n      display,\n      borderTopWidth,\n      borderLeftWidth,\n      stroke,\n      strokeWidth,\n      strokeDasharray,\n      fill,\n    } = style;\n    if(display === 'none') {\n      return;\n    }\n    let originX = x + borderLeftWidth.value + mlw + plw;\n    let originY = y + borderTopWidth.value + mtw + ptw;\n    originX += width * 0.5;\n    originY += height * 0.5;\n    r *= Math.min(width, height) * 0.5;\n    if(renderMode === mode.CANVAS) {\n      ctx.strokeStyle = stroke;\n      ctx.lineWidth = strokeWidth;\n      ctx.fillStyle = fill;\n      ctx.setLineDash(strokeDasharray);\n      ctx.beginPath();\n      ctx.arc(originX, originY, r, 0, 2 * Math.PI);\n      if(fill !== 'transparent') {\n        ctx.fill();\n      }\n      if(strokeWidth && stroke !== 'transparent') {\n        ctx.stroke();\n      }\n      ctx.closePath();\n    }\n    else if(renderMode === mode.SVG) {\n      virtualDom.content.push({\n        type: 'item',\n        tagName: 'circle',\n        props: [\n          ['cx', originX],\n          ['cy', originY],\n          ['r', r],\n          ['fill', fill],\n          ['stroke', stroke],\n          ['stroke-width', strokeWidth],\n          ['stroke-dasharray', strokeDasharray]\n        ],\n      });\n    }\n  }\n\n  get r() {\n    return this.__r;\n  }\n}\n\nexport default Circle;\n","import Geom from './Geom';\nimport mode from '../mode';\n\nclass Ellipse extends Geom {\n  constructor(tagName, props) {\n    super(tagName, props);\n    // 半径0~1，默认1\n    this.__rx = 1;\n    if(this.props.rx) {\n      this.__rx = parseFloat(this.props.rx);\n      if(isNaN(this.rx)) {\n        this.__rx = 1;\n      }\n    }\n    this.__ry = 1;\n    if(this.props.ry) {\n      this.__ry = parseFloat(this.props.ry);\n      if(isNaN(this.rx)) {\n        this.__ry = 1;\n      }\n    }\n  }\n\n  render(renderMode) {\n    super.render(renderMode);\n    let { rx: x, ry: y, width, height, mlw, mtw, plw, ptw, style, ctx, rx, ry, virtualDom } = this;\n    let {\n      display,\n      borderTopWidth,\n      borderLeftWidth,\n      stroke,\n      strokeWidth,\n      strokeDasharray,\n      fill,\n    } = style;\n    if(display === 'none') {\n      return;\n    }\n    let originX = x + borderLeftWidth.value + mlw + plw;\n    let originY = y + borderTopWidth.value + mtw + ptw;\n    originX += width * 0.5;\n    originY += height * 0.5;\n    rx *= width * 0.5;\n    ry *= height * 0.5;\n    if(renderMode === mode.CANVAS) {\n      ctx.strokeStyle = stroke;\n      ctx.lineWidth = strokeWidth;\n      ctx.fillStyle = fill;\n      ctx.setLineDash(strokeDasharray);\n      ctx.beginPath();\n      ctx.moveTo(originX, originY);\n      ctx.ellipse && ctx.ellipse(originX, originY, rx, ry, 0, 0, 2 * Math.PI);\n      ctx.fill();\n      if(strokeWidth && stroke !== 'transparent') {\n        ctx.stroke();\n      }\n      ctx.closePath();\n    }\n    else if(renderMode === mode.SVG) {\n      virtualDom.content.push({\n        type: 'item',\n        tagName: 'ellipse',\n        props: [\n          ['cx', originX],\n          ['cy', originY],\n          ['rx', rx],\n          ['ry', ry],\n          ['fill', fill],\n          ['stroke', stroke],\n          ['stroke-width', strokeWidth],\n          ['stroke-dasharray', strokeDasharray]\n        ],\n      });\n    }\n  }\n\n  get rx() {\n    return this.__rx;\n  }\n  get ry() {\n    return this.__ry;\n  }\n}\n\nexport default Ellipse;\n","import Geom from './Geom';\nimport mode from '../mode';\n\nclass Grid extends Geom {\n  constructor(tagName, props) {\n    super(tagName, props);\n    // x,y被分为几格\n    this.__nx = 0;\n    if(this.props.nx) {\n      this.__nx = parseFloat(this.props.nx);\n      if(isNaN(this.nx)) {\n        this.__nx = 0;\n      }\n    }\n    this.__ny = 0;\n    if(this.props.ny) {\n      this.__ny = parseFloat(this.props.ny);\n      if(isNaN(this.ny)) {\n        this.__ny = 0;\n      }\n    }\n  }\n\n  render(renderMode) {\n    super.render(renderMode);\n    let { rx: x, ry: y, width, height, mlw, mtw, plw, ptw, style, ctx, nx, ny, virtualDom } = this;\n    if(width <= 0 || height <= 0) {\n      return;\n    }\n    if(nx < 3 && ny < 3) {\n      return;\n    }\n    let {\n      display,\n      borderTopWidth,\n      borderLeftWidth,\n      stroke,\n      strokeWidth,\n      strokeDasharray,\n    } = style;\n    if(display === 'none') {\n      return;\n    }\n    let originX = x + borderLeftWidth.value + mlw + plw;\n    let originY = y + borderTopWidth.value + mtw + ptw;\n    let endX = originX + width;\n    let endY = originY + height;\n    let lx = [];\n    let ly = [];\n    if(nx >= 3) {\n      let per = width / (nx - 1);\n      for(let i = 0; i < nx; i++) {\n        ly.push(originX + i * per);\n      }\n    }\n    if(ny >= 3) {\n      let per = height / (ny - 1);\n      for(let i = 0; i < ny; i++) {\n        lx.push(originY + i * per);\n      }\n    }\n    if(renderMode === mode.CANVAS) {\n      ctx.strokeStyle = stroke;\n      ctx.lineWidth = strokeWidth;\n      ctx.setLineDash(strokeDasharray);\n      ctx.beginPath();\n      lx.forEach(item => {\n        ctx.moveTo(originX, item);\n        ctx.lineTo(endX, item);\n      });\n      ly.forEach(item => {\n        ctx.moveTo(item, originY);\n        ctx.lineTo(item, endY);\n      });\n      if(strokeWidth && stroke !== 'transparent') {\n        ctx.stroke();\n      }\n      ctx.closePath();\n    }\n    else if(renderMode === mode.SVG) {\n      lx.forEach(item => {\n        virtualDom.content.push({\n          type: 'item',\n          tagName: 'line',\n          props: [\n            ['x1', originX],\n            ['y1', item],\n            ['x2', endX],\n            ['y2', item],\n            ['stroke', stroke],\n            ['stroke-width', strokeWidth],\n            ['stroke-dasharray', strokeDasharray]\n          ],\n        });\n      });\n      ly.forEach(item => {\n        virtualDom.content.push({\n          type: 'item',\n          tagName: 'line',\n          props: [\n            ['x1', item],\n            ['y1', originY],\n            ['x2', item],\n            ['y2', endY],\n            ['stroke', stroke],\n            ['stroke-width', strokeWidth],\n            ['stroke-dasharray', strokeDasharray]\n          ],\n        });\n      });\n    }\n  }\n\n  get nx() {\n    return this.__nx;\n  }\n  get ny() {\n    return this.__ny;\n  }\n  get dash() {\n    return this.__dash;\n  }\n}\n\nexport default Grid;\n","import Dom from './node/Dom';\nimport Root from './node/Root';\nimport mode from './mode';\nimport Geom from './geom/Geom';\nimport Line from './geom/Line';\nimport Polyline from './geom/Polyline';\nimport Polygon from './geom/Polygon';\nimport Sector from './geom/Sector';\nimport Rect from './geom/Rect';\nimport Circle from './geom/Circle';\nimport Ellipse from './geom/Ellipse';\nimport Grid from './geom/Grid';\n\nGeom.register('$line', Line);\nGeom.register('$polyline', Polyline);\nGeom.register('$polygon', Polygon);\nGeom.register('$sector', Sector);\nGeom.register('$rect', Rect);\nGeom.register('$circle', Circle);\nGeom.register('$ellipse', Ellipse);\nGeom.register('$grid', Grid);\n\nlet karas = {\n  render(root, dom) {\n    if(!(root instanceof Root)) {\n      throw new Error('render root muse be canvas or svg');\n    }\n    if(dom) {\n      root.appendTo(dom);\n    }\n    return root;\n  },\n  createVd(tagName, props, children) {\n    if(['canvas', 'svg'].indexOf(tagName) > -1) {\n      return new Root(tagName, props, children);\n    }\n    if(Dom.isValid(tagName)) {\n      return new Dom(tagName, props, children);\n    }\n    throw new Error('can not use marker: ' + tagName);\n  },\n  createGm(tagName, props) {\n    let klass = Geom.getImplement(tagName);\n    return new klass(tagName, props);\n  },\n  createCp(cp, props) {\n    return new cp(props);\n  },\n  Geom,\n  mode,\n};\n\nif(typeof window != 'undefined') {\n  window.karas = karas;\n}\n\nexport default karas;\n"],"names":["div","Node","__x","__y","__ox","__oy","__width","__height","__prev","__next","__ctx","__defs","__parent","__style","__baseLine","__virtualDom","diff","this","x","ox","y","oy","parent","root","CANVAS","SVG","measure","s","style","document","createElement","position","left","top","visibility","body","appendChild","fontSize","innerText","css","window","getComputedStyle","parseFloat","width","toString","isType","type","obj","call","isNumber","stringify","isNil","v","joinVd","vd","props","forEach","item","tagName","content","children","bb","joinDef","k","uuid","c","item2","util","isObject","isString","isFunction","isBoolean","isDate","joinSourceArray","arr","res","i","len","length","Array","isArray","encodeHtml","prop","replace","joinVirtualDom","nd","r2d","n","Math","PI","rgb2int","color","charAt","slice","push","parseInt","match","getFitDashed","total","bs","be","w","smin","smax","dmin","dmax","ps","pd","outer","j","per","num","floor","getDashed","m1","m2","m3","m4","bw","max","renderBorder","renderMode","points","ctx","virtualDom","mode","point","beginPath","fillStyle","moveTo","lineTo","fill","closePath","Xom","hash","list","Object","keys","arr2hash","__props","temp","splice","spread","hash2arr","__tagName","_this","__listener","test","toLowerCase","__mtw","__mrw","__mbw","__mlw","__ptw","__prw","__pbw","__plw","data","display","marginTop","marginRight","marginBottom","marginLeft","paddingTop","paddingRight","paddingBottom","paddingLeft","unit","value","__mpWidth","__layoutBlock","__layoutFlex","__layoutInline","mp","height","mlw","mtw","plw","ptw","prw","pbw","right","bottom","bgg","backgroundGradient","bgc","backgroundColor","borderTopWidth","btc","borderTopColor","bts","borderTopStyle","borderRightWidth","brc","borderRightColor","brs","borderRightStyle","borderBottomWidth","bbc","borderBottomColor","bbs","borderBottomStyle","borderLeftWidth","blc","borderLeftColor","bls","borderLeftStyle","transform","h","__offsetX","__offsetY","translateX","translateY","rx","ry","btw","brw","bbw","blw","x1","x2","x3","x4","y1","y2","y3","y4","deg","exec","unshift","r","abs","sin","cos","half","cx","cy","xx0","yy0","xx1","yy1","trim","split","p","start","end","prev","allBefore","allAfter","first","last","c1","c2","r1","g1","b1","a1","r2","g2","b2","a2","l1","l2","g","b","a","getLgLimit","next","p1","p2","getLgStartLimit","getLgEndLimit","lg","createLinearGradient","addColorStop","rect","defs","add","indexOf","deg1","atan","deg2","isLast","xx4","yy2","tan","yy4","xx2","mrw","mbw","lhr","car","blr","mdr","lgr","RESET","borderSizing","fontFamily","fontStyle","fontWeight","lineHeight","borderTopLeftRadius","borderTopRightRadius","borderBottomLeftRadius","borderBottomRightRadius","verticalAlign","flexGrow","flexShrink","flexBasis","flexDirection","justifyContent","alignItems","textAlign","stroke","strokeWidth","strokeDasharray","reset","parserOneBorder","direction","key","normalize","hasOwnProperty","background","gradient","flex","border","borderTop","borderRight","borderBottom","borderLeft","margin","padding","borderRadius","map","matrix","matrix3d","translateZ","scaleX","scaleY","scaleZ","rotateX","rotateY","rotateZ","skewX","skewY","perspective","font","setFontStyle","getBaseLine","normal","LineBox","__content","fillText","CHAR_WIDTH_CACHE","Text","__lineBoxes","__charWidthList","__charWidth","__textWidth","charWidthList","cache","sum","char","mw","measureText","charWidth","isVirtual","maxX","lineBoxes","begin","count","lineBox","_this2","render","textWidth","min","baseLine","__renderMode","LineGroup","__list","__calBaseLine","IMPLEMENT","Geom","isDirectionRow","main","fixedHeight","fixedWidth","e","force","cb","event","covers","listener","outerWidth","outerHeight","target","name","Error","implement","TAG_NAME","INLINE","Dom","__children","__flowChildren","__absChildren","__lineGroups","__flowY","__traverseChildren","_this3","__traverse","text","parentStyle","__initStyle","__measure","flowChildren","__tryLayInline","isRecursion","__calAutoBasis","min2","max2","__layout","__calAbs","Infinity","lineGroups","lineGroup","size","horizonAlign","ow","growList","shrinkList","basisList","minList","growSum","shrinkSum","basisSum","maxSum","maxCross","isOverflow","shrink","grow","overflow","free","child","center","between","around","_this4","absChildren","container","flowY","pw","ph","__layoutAbs","w2","h2","width2","height2","widthPx","heightPx","hasChildEmit","__emitEvent","elem","ovd","nvd","od","cns","childNodes","ol","nl","diffDef","diffDefs","diffBb","diffD2D","insertAdjacentHTML","parentNode","removeChild","setAttribute","o","removeAt","insertAt","diffChild","replaceWith","firstChild","lastChild","diffD2G","diffItem","diffT2T","diffG2D","diffG2G","obb","nbb","isText","op","removeAttribute","textContent","index","html","Defs","id","Root","__node","undefined","isNaN","touches","node","getBoundingClientRect","clientX","clientY","addEventListener","__cb","dom","querySelector","getDom","__initProps","nodeName","toUpperCase","innerHTML","__genHtml","__uuid","getInstance","clear","getPropertyValue","getContext","clearRect","__karasInit","domDiff","__ovd","__od","__initEvent","Line","__start","__end","__control","control","cx1","cy1","cx2","cy2","originX","originY","curve","strokeStyle","lineWidth","setLineDash","bezierCurveTo","quadraticCurveTo","Polyline","__points","origin","__origin","pts","__pts","Polygon","OFFSET","getCoordByDegree","d","Sector","__r","arc","large","Rect","Circle","Ellipse","__rx","__ry","ellipse","Grid","__nx","nx","__ny","ny","endX","endY","lx","ly","__dash","register","karas","appendTo","createVd","isValid","createGm","getImplement","createCp","cp"],"mappings":"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"}