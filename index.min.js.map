{"version":3,"file":"index.min.js","sources":["src/node/mode.js","src/node/Node.js","src/style/unit.js","src/node/Xom.js","src/style/font.js","src/style/reset.js","src/util.js","src/style/css.js","src/node/LineBox.js","src/node/Text.js","src/node/LineGroup.js","src/geom/Geom.js","src/node/Dom.js","src/node/CS.js","src/geom/Line.js","src/geom/Polyline.js","src/geom/Polygon.js","src/geom/Sector.js","src/geom/Rect.js","src/geom/Circle.js","src/geom/Ellipse.js","src/geom/Grid.js","src/index.js"],"sourcesContent":["const CANVAS = 0;\nconst SVG = 1;\n\nlet div;\nlet svgHtml = '';\n\nexport default {\n  CANVAS,\n  SVG,\n  appendHtml(s) {\n    svgHtml += s;\n  },\n  get html() {\n    return svgHtml;\n  },\n  reset() {\n    svgHtml = '';\n  },\n  measure(s, style) {\n    if(!div) {\n      div = document.createElement('div');\n      div.style.position = 'absolute';\n      div.style.left = '99999px';\n      div.style.top = '-99999px';\n      div.style.visibility = 'hidden';\n      document.body.appendChild(div);\n    }\n    div.style.fontSize = style.fontSize + 'px';\n    div.innerText = s;\n    let css = window.getComputedStyle(div, null);\n    return parseFloat(css.width);\n  }\n};\n","import mode from './mode';\n\nclass Node {\n  constructor() {\n    this.__x = 0;\n    this.__y = 0;\n    this.__width = 0;\n    this.__height = 0;\n    this.__prev = null;\n    this.__next = null;\n    this.__ctx = null; // canvas的context\n    this.__parent = null;\n    this.__style = {}; // style被解析后的k-v形式\n    this.__baseLine = 0;\n    this.__mode = mode.CANVAS;\n  }\n\n  __offsetX(diff) {\n    this.__x += diff;\n  }\n\n  __offsetY(diff) {\n    this.__y += diff;\n  }\n\n  get x() {\n    return this.__x;\n  }\n  get y() {\n    return this.__y;\n  }\n  get width() {\n    return this.__width;\n  }\n  get height() {\n    return this.__height;\n  }\n  get outerWidth() {\n    return this.__width;\n  }\n  get outerHeight() {\n    return this.__height;\n  }\n  get prev() {\n    return this.__prev;\n  }\n  get next() {\n    return this.__next;\n  }\n  get parent() {\n    return this.__parent;\n  }\n  get style() {\n    return this.__style;\n  }\n  get ctx() {\n    return this.__ctx;\n  }\n  get baseLine() {\n    return this.__baseLine;\n  }\n  get mode() {\n    return this.__mode;\n  }\n}\n\nexport default Node;\n","export default {\n  AUTO: 0,\n  PX: 1,\n  PERCENT: 2,\n};\n","import Node from './Node';\nimport mode from './mode';\nimport unit from '../style/unit';\n\nfunction arr2hash(arr) {\n  let hash = {};\n  for(let i = 0, len = arr.length; i < len; i++) {\n    let item = arr[i];\n    if(Array.isArray(item)) {\n      hash[item[0]] = item[1];\n    }\n    else {\n      for(let list = Object.keys(item), j = list.length - 1; j >= 0; j--) {\n        let k = list[j];\n        hash[k] = item[k];\n      }\n    }\n  }\n  return hash;\n}\n\nfunction hash2arr(hash) {\n  let arr = [];\n  for(let list = Object.keys(hash), i = 0, len = list.length; i < len; i++) {\n    let k = list[i];\n    arr.push([k, hash[k]]);\n  }\n  return arr;\n}\n\nfunction spread(arr) {\n  for(let i = 0, len = arr.length; i < len; i++) {\n    let item = arr[i];\n    if(!Array.isArray(item)) {\n      let temp = [];\n      for(let list = Object.keys(item), j = 0, len = list.length; j < len; j++) {\n        let k = list[j];\n        temp.push([k, item[k]]);\n      }\n      arr.splice(i, 1, ...temp);\n    }\n  }\n  return arr;\n}\n\nclass Xom extends Node {\n  constructor(tagName, props) {\n    super();\n    props = props || [];\n    // 构建工具中都是arr，手写可能出现hash情况\n    if(Array.isArray(props)) {\n      this.props = arr2hash(props);\n      this.__props = spread(props);\n    }\n    else {\n      this.props = props;\n      this.__props = hash2arr(props);\n    }\n    this.__tagName = tagName;\n    this.__style = this.props.style || {}; // style被解析后的k-v形式\n    this.__listener = {};\n    this.__props.forEach(item => {\n      let k = item[0];\n      if(/^on[a-zA-Z]/.test(k)) {\n        this.__listener[k.slice(2).toLowerCase()] = item[1];\n      }\n    });\n  }\n\n  __preLay(data) {\n    let { style, style: { display } } = this;\n    if(display === 'none') {\n      return;\n    }\n    if(display === 'block') {\n      this.__preLayBlock(data);\n    }\n    else if(display === 'flex') {\n      this.__preLayFlex(data);\n    }\n    else if(display === 'inline') {\n      this.__preLayInline(data);\n    }\n    // relative偏移\n    let { width, height } = this.parent || this;\n    let {\n      position,\n      top,\n      right,\n      bottom,\n      left,\n    } = style;\n    if(position === 'relative') {\n      if(left.unit !== unit.AUTO) {\n        let diff = left.unit === unit.PX ? left.value : left.value * width * 0.01;\n        this.__offsetX(diff);\n      }\n      else if(right.unit !== unit.AUTO) {\n        let diff = right.unit === unit.PX ? right.value : right.value * width * 0.01;\n        this.__offsetX(-diff);\n      }\n      if(top.unit !== unit.AUTO) {\n        let diff = top.unit === unit.PX ? top.value : top.value * height * 0.01;\n        this.__offsetY(diff);\n      }\n      else if(bottom.unit !== unit.AUTO) {\n        let diff = bottom.unit === unit.PX ? bottom.value : bottom.value * height * 0.01;\n        this.__offsetY(-diff);\n      }\n    }\n  }\n\n  render() {\n    let { ctx, style, x, y, width, height } = this;\n    let {\n      display,\n      backgroundColor,\n      borderTopWidth,\n      borderTopColor,\n      borderRightWidth,\n      borderRightColor,\n      borderBottomWidth,\n      borderBottomColor,\n      borderLeftWidth,\n      borderLeftColor,\n      marginTop,\n      marginLeft,\n      paddingTop,\n      paddingRight,\n      paddingBottom,\n      paddingLeft,\n    } = style;\n    if(display === 'none') {\n      return;\n    }\n    if(marginLeft) {\n      x += marginLeft.value;\n    }\n    if(marginTop) {\n      y += marginTop.value;\n    }\n    if(backgroundColor) {\n      let x1 = x;\n      if(borderLeftWidth) {\n        x1 += borderLeftWidth.value;\n      }\n      let y1 = y;\n      if(borderTopWidth) {\n        y1 += borderTopWidth.value;\n      }\n      let w = width + paddingLeft.value + paddingRight.value;\n      let h = height + paddingTop.value + paddingBottom.value;\n      if(this.mode === mode.CANVAS) {\n        ctx.beginPath();\n        ctx.fillStyle = backgroundColor;\n        ctx.rect(x1, y1, w, h);\n        ctx.fill();\n        ctx.closePath();\n      }\n      else if(this.mode === mode.SVG) {\n        mode.appendHtml(`<rect x=\"${x1}\" y=\"${y1}\" width=\"${w}\" height=\"${h}\" fill=\"${backgroundColor}\"/>`);\n      }\n    }\n    if(borderTopWidth.value) {\n      let x1 = x + borderLeftWidth.value;\n      let y1 = y + borderTopWidth.value * 0.5;\n      let x2 = x1 + width;\n      if(paddingLeft) {\n        x2 += paddingLeft.value;\n      }\n      if(paddingRight) {\n        x2 += paddingRight.value;\n      }\n      if(this.mode === mode.CANVAS) {\n        ctx.beginPath();\n        ctx.lineWidth = borderTopWidth.value;\n        ctx.strokeStyle = borderTopColor;\n        ctx.moveTo(x1, y1);\n        ctx.lineTo(x2, y1);\n        ctx.stroke();\n        ctx.closePath();\n      }\n      else if(this.mode === mode.SVG) {\n        mode.appendHtml(`<line x1=\"${x1}\" y1=\"${y1}\" x2=\"${x2}\" y2=\"${y1}\" stroke-width=\"${borderTopWidth.value}\" stroke=\"${borderTopColor}\"/>`);\n      }\n    }\n    if(borderRightWidth.value) {\n      let x1 = x + width + borderLeftWidth.value + borderRightWidth.value * 0.5;\n      let y1 = y;\n      let y2 = y1 + height + borderTopWidth.value + borderBottomWidth.value;\n      if(paddingLeft) {\n        x1 += paddingLeft.value;\n      }\n      if(paddingRight) {\n        x1 += paddingRight.value;\n      }\n      if(paddingTop) {\n        y2 += paddingTop.value;\n      }\n      if(paddingBottom) {\n        y2 += paddingBottom.value;\n      }\n      if(this.mode === mode.CANVAS) {\n        ctx.beginPath();\n        ctx.lineWidth = borderRightWidth.value;\n        ctx.strokeStyle = borderRightColor;\n        ctx.moveTo(x1, y1);\n        ctx.lineTo(x1, y2);\n        ctx.stroke();\n        ctx.closePath();\n      }\n      else if(this.mode === mode.SVG) {\n        mode.appendHtml(`<line x1=\"${x1}\" y1=\"${y1}\" x2=\"${x1}\" y2=\"${y2}\" stroke-width=\"${borderRightWidth.value}\" stroke=\"${borderRightColor}\"/>`);\n      }\n    }\n    if(borderBottomWidth.value) {\n      let x1 = x + borderLeftWidth.value;\n      let y1 = y + height + borderTopWidth.value + borderBottomWidth.value * 0.5;\n      let x2 = x1 + width;\n      if(paddingLeft) {\n        x2 += paddingLeft.value;\n      }\n      if(paddingRight) {\n        x2 += paddingRight.value;\n      }\n      if(paddingTop) {\n        y1 += paddingTop.value;\n      }\n      if(paddingBottom) {\n        y1 += paddingBottom.value;\n      }\n      if(this.mode === mode.CANVAS) {\n        ctx.beginPath();\n        ctx.lineWidth = borderBottomWidth.value;\n        ctx.strokeStyle = borderBottomColor;\n        ctx.moveTo(x1, y1);\n        ctx.lineTo(x2, y1);\n        ctx.stroke();\n        ctx.closePath();\n      }\n      else if(this.mode === mode.SVG) {\n        mode.appendHtml(`<line x1=\"${x1}\" y1=\"${y1}\" x2=\"${x2}\" y2=\"${y1}\" stroke-width=\"${borderBottomWidth.value}\" stroke=\"${borderBottomColor}\"/>`);\n      }\n    }\n    if(borderLeftWidth.value) {\n      let x1 = x + borderLeftWidth.value * 0.5;\n      let y1 = y;\n      let y2 = y1 + height + borderTopWidth.value + borderBottomWidth.value;\n      if(paddingTop) {\n        y2 += paddingTop.value;\n      }\n      if(paddingBottom) {\n        y2 += paddingBottom.value;\n      }\n      if(this.mode === mode.CANVAS) {\n        ctx.beginPath();\n        ctx.lineWidth = borderLeftWidth.value;\n        ctx.strokeStyle = borderLeftColor;\n        ctx.moveTo(x1, y1);\n        ctx.lineTo(x1, y2);\n        ctx.stroke();\n        ctx.closePath();\n      }\n      else if(this.mode === mode.SVG) {\n        mode.appendHtml(`<line x1=\"${x1}\" y1=\"${y1}\" x2=\"${x1}\" y2=\"${y2}\" stroke-width=\"${borderLeftWidth.value}\" stroke=\"${borderLeftColor}\"/>`);\n      }\n    }\n  }\n\n  get tagName() {\n    return this.__tagName;\n  }\n  get outerWidth() {\n    let { style: {\n      borderLeftWidth,\n      borderRightWidth,\n      marginLeft,\n      marginRight,\n      paddingLeft,\n      paddingRight,\n    } } = this;\n    return this.width\n      + borderLeftWidth.value\n      + borderRightWidth.value\n      + marginLeft.value\n      + marginRight.value\n      + paddingLeft.value\n      + paddingRight.value;\n  }\n  get outerHeight() {\n    let { style: {\n      borderTopWidth,\n      borderBottomWidth,\n      marginTop,\n      marginBottom,\n      paddingTop,\n      paddingBottom,\n    } } = this;\n    return this.height\n      + borderTopWidth.value\n      + borderBottomWidth.value\n      + marginTop.value\n      + marginBottom.value\n      + paddingTop.value\n      + paddingBottom.value;\n  }\n  get listener() {\n    return this.__listener;\n  }\n}\n\nexport default Xom;\n","'use strict';\n\nexport default {\n  arial: {\n    lhr: 1.14990234375, // 默认line-height ratio，(67+1854+434)/2048\n    car: 1.1171875, // content-area ratio，(1854+434)/2048\n    blr: 0.9052734375, // base-line ratio，1854/2048\n    mdr: 0.64599609375, // middle ratio，(1854-1062/2)/2048\n    lgr: 0.03271484375, // line-gap ratio，67/2048\n  },\n};\n","const RESET = {\n  position: 'static',\n  display: 'block',\n  borderSizing: 'content-box',\n  top: 'auto',\n  right: 'auto',\n  bottom: 'auto',\n  left: 'auto',\n  marginTop: 0,\n  marginRight: 0,\n  marginBottom: 0,\n  marginLeft: 0,\n  paddingTop: 0,\n  paddingRight: 0,\n  paddingBottom: 0,\n  paddingLeft: 0,\n  fontSize: 16,\n  fontFamily: 'arial',\n  color: '#000',\n  fontStyle: 'normal',\n  fontWeight: 400,\n  lineHeight: 'normal',\n  borderTopWidth: 0,\n  borderRightWidth: 0,\n  borderBottomWidth: 0,\n  borderLeftWidth: 0,\n  borderTopStyle: 'solid',\n  borderRightStyle: 'solid',\n  borderBottomStyle: 'solid',\n  borderLeftStyle: 'solid',\n  verticalAlign: 'baseline',\n  width: 'auto',\n  height: 'auto',\n  flexGrow: 0,\n  flexShrink: 1,\n  flexBasis: 'auto',\n  flexDirection: 'row',\n  justifyContent: 'flex-start',\n  alignItems: 'stretch',\n  textAlign: 'left',\n  visibility: 'visible',\n  fill: '#000',\n  stroke: '#000',\n  strokeWidth: 0,\n  strokeDasharray: [],\n};\n\nlet reset = [];\n\nObject.keys(RESET).forEach(k => {\n  let v = RESET[k];\n  reset.push({\n    k,\n    v,\n  });\n});\n\nexport default reset;\n","let toString = {}.toString;\nfunction isType(type) {\n  return function(obj) {\n    return toString.call(obj) === '[object ' + type + ']';\n  }\n}\n\nlet isNumber = isType('Number');\n\nfunction joinSourceArray(arr) {\n  var res = '';\n  for(var i = 0, len = arr.length; i < len; i++) {\n    var item = arr[i];\n    if(Array.isArray(item)) {\n      res += joinSourceArray(item);\n    }\n    else {\n      res += stringify(item);\n    }\n  }\n  return res;\n}\n\nfunction stringify(s) {\n  if(isNil(s)) {\n    return '';\n  }\n  return s.toString();\n}\n\nfunction encodeHtml(s, prop) {\n  if(prop) {\n    return s.replace(/\"/g, '&quot;');\n  }\n  return s.replace(/&/g, '&amp;').replace(/</g, '&lt;');\n}\n\nfunction isNil(v) {\n  return v === undefined || v === null;\n}\n\nlet util = {\n  isObject: isType('Object'),\n  isString: isType('String'),\n  isFunction: isType('Function'),\n  isNumber,\n  isBoolean: isType('Boolean'),\n  isDate: isType('Date'),\n  stringify,\n  joinSourceArray(arr) {\n    return joinSourceArray(arr);\n  },\n  encodeHtml,\n  isNil,\n};\n\nexport default util;\n","import unit from './unit';\nimport font from './font';\nimport reset from './reset';\nimport util from '../util';\n\nfunction parserOneBorder(style, direction) {\n  let key = `border${direction}`;\n  if(!style[key]) {\n    return;\n  }\n  let w = /\\b\\d+px\\b/i.exec(style[key]);\n  if(w) {\n    style[key + 'Width'] = w[0];\n  }\n  let s = /\\bsolid\\b/i.exec(style[key]);\n  if(s) {\n    style[key + 'Style'] = s[0];\n  }\n  let c = /#[0-9a-f]{3,6}/i.exec(style[key]);\n  if(c && [4, 7].indexOf(c[0].length) > -1) {\n    style[key + 'Color'] = c[0];\n  }\n}\n\nfunction normalize(style) {\n  // 默认reset\n  reset.forEach(item => {\n    if(!style.hasOwnProperty(item.k)) {\n      style[item.k] = item.v;\n    }\n  });\n  // 处理缩写\n  // TODO: 重复声明时优先级\n  if(style.background) {\n    let bgc = /#[0-9a-f]{3,6}/i.exec(style.background);\n    if(bgc && [4, 7].indexOf(bgc[0].length) > -1) {\n      style.backgroundColor = bgc[0];\n    }\n  }\n  if(style.flex) {\n    if(style.flex === 'none') {\n      style.flexGrow = 0;\n      style.flexShrink = 0;\n      style.flexBasis = 'auto';\n    }\n    else if(style.flex === 'auto') {\n      style.flexGrow = 1;\n      style.flexShrink = 1;\n      style.flexBasis = 'auto';\n    }\n    else if(/^[\\d.]+$/.test(style.flex)) {\n      style.flexGrow = parseFloat(style.flex);\n      style.flexShrink = 1;\n      style.flexBasis = 0;\n    }\n    else if(/^[\\d.]+px$/.test(style.flex)) {}\n    else if(/^[\\d.]+%$/.test(style.flex)) {}\n    else {\n      style.flexGrow = 0;\n      style.flexShrink = 1;\n      style.flexBasis = 'auto';\n    }\n  }\n  if(style.border) {\n    style.borderTop = style.borderRight = style.borderBottom = style.borderLeft = style.border;\n  }\n  if(style.margin) {\n    style.marginTop = style.marginRight = style.marginBottom = style.marginLeft = style.margin;\n  }\n  if(style.padding) {\n    style.paddingTop = style.paddingRight = style.paddingBottom = style.paddingLeft = style.padding;\n  }\n  parserOneBorder(style, 'Top');\n  parserOneBorder(style, 'Right');\n  parserOneBorder(style, 'Bottom');\n  parserOneBorder(style, 'Left');\n  // 转化不同单位值为对象标准化\n  [\n    'marginTop',\n    'marginRight',\n    'marginBottom',\n    'marginLeft',\n    'paddingTop',\n    'paddingRight',\n    'paddingBottom',\n    'paddingLeft',\n    'borderTopWidth',\n    'borderRightWidth',\n    'borderBottomWidth',\n    'borderLeftWidth',\n    'top',\n    'right',\n    'bottom',\n    'left',\n    'width',\n    'height',\n    'flexBasis',\n  ].forEach(k => {\n    let v = style[k];\n    // 编译工具前置解析优化跳出\n    if(!util.isNil(v) && v.unit) {\n      return;\n    }\n    if(v === 'auto') {\n      style[k] = {\n        unit: unit.AUTO,\n      };\n    }\n    else if(/%$/.test(v)) {\n      v = parseFloat(v) || 0;\n      style[k] = {\n        value: v,\n        unit: unit.PERCENT,\n      };\n    }\n    else {\n      v = parseFloat(v) || 0;\n      style[k] = {\n        value: v,\n        unit: unit.PX,\n      };\n    }\n  });\n  // 计算lineHeight为px值，最小范围\n  let lineHeight = style.lineHeight;\n  if(lineHeight === 'normal') {\n    lineHeight = {\n      value: style.fontSize * font.arial.lhr,\n      unit: unit.PX,\n    };\n  }\n  else if(/px$/.test(lineHeight)) {\n    lineHeight = parseFloat(lineHeight);\n    lineHeight = {\n      value: Math.max(style.fontSize, lineHeight),\n      unit: unit.PX,\n    };\n  }\n  // 纯数字比例\n  else {\n    lineHeight = parseFloat(lineHeight) || 'normal';\n    // 非法数字\n    if(lineHeight === 'normal') {\n      lineHeight = {\n        value: style.fontSize * font.arial.lhr,\n        unit: unit.PX,\n      };\n    }\n    else {\n      lineHeight = {\n        value: lineHeight * style.fontSize,\n        unit: unit.PX,\n      };\n    }\n  }\n  style.lineHeight = lineHeight;\n}\n\nfunction setFontStyle(style) {\n  let { fontStyle, fontWeight, fontSize, fontFamily } = style;\n  return `${fontStyle} ${fontWeight} ${fontSize}px/${fontSize}px ${fontFamily}`;\n}\n\nfunction getBaseLine(style) {\n  let normal = style.fontSize * font.arial.lhr;\n  return (style.lineHeight.value - normal) * 0.5 + style.fontSize * font.arial.blr;\n}\n\nexport default {\n  normalize,\n  setFontStyle,\n  getBaseLine,\n};\n","import css from '../style/css';\nimport mode from './mode';\n\nclass LineBox {\n  constructor(mode, ctx, x, y, w, content, style) {\n    this.__mode = mode;\n    this.__ctx = ctx;\n    this.__x = x;\n    this.__y = y;\n    this.__width = w;\n    this.__content = content;\n    this.__style = style;\n  }\n\n  render() {\n    let { ctx, style, content, x, y } = this;\n    if(this.mode === mode.CANVAS) {\n      ctx.fillStyle = style.color;\n      ctx.fillText(content, x, y + css.getBaseLine(style));\n    }\n    else if(this.mode === mode.SVG) {\n      mode.appendHtml(`<text x=\"${x}\" y=\"${y + css.getBaseLine(style)}\" fill=\"${style.color}\" font-size=\"${style.fontSize}px\">${content}</text>`);\n    }\n  }\n\n  __offsetX(diff) {\n    this.__x += diff;\n  }\n\n  __offsetY(diff) {\n    this.__y += diff;\n  }\n\n  get ctx() {\n    return this.__ctx;\n  }\n  get x() {\n    return this.__x;\n  }\n  get y() {\n    return this.__y;\n  }\n  get width() {\n    return this.__width;\n  }\n  get content() {\n    return this.__content;\n  }\n  get style() {\n    return this.__style;\n  }\n  get baseLine() {\n    return css.getBaseLine(this.style);\n  }\n  get mode() {\n    return this.__mode;\n  }\n}\n\nexport default LineBox;\n","import Node from './Node';\nimport LineBox from './LineBox';\nimport css from '../style/css';\nimport mode from './mode';\n\nconst CHAR_WIDTH_CACHE = {};\n\nclass Text extends Node {\n  constructor(content) {\n    super();\n    this.__content = content.toString();\n    this.__lineBoxes = [];\n    this.__charWidthList = [];\n    this.__charWidth = 0;\n    this.__textWidth = 0;\n  }\n\n  // 预先计算每个字的宽度\n  __measure() {\n    this.__charWidthList = [];\n    let { ctx, content, style, charWidthList } = this;\n    if(this.mode === mode.CANVAS) {\n      ctx.font = css.setFontStyle(style);\n    }\n    let cache = CHAR_WIDTH_CACHE[style.fontSize] = CHAR_WIDTH_CACHE[style.fontSize] || {};\n    let length = content.length;\n    let sum = 0;\n    for(let i = 0; i < length; i++) {\n      let char = content.charAt(i);\n      let mw;\n      if(cache.hasOwnProperty(char)) {\n        mw = cache[char];\n      }\n      else if(this.mode === mode.CANVAS) {\n        mw = ctx.measureText(char).width;\n      }\n      else if(this.mode === mode.SVG) {\n        mw = mode.measure(char, style);\n      }\n      charWidthList.push(mw);\n      sum += mw;\n      this.__charWidth = Math.max(this.charWidth, mw);\n    }\n    this.__textWidth = sum;\n  }\n\n  __preLay(data, isVirtual) {\n    let { x, y, w, h } = data;\n    this.__x = x;\n    this.__y = y;\n    let maxX = x;\n    let { ctx, content, style, lineBoxes, charWidthList } = this;\n    // 顺序尝试分割字符串为lineBox，形成多行\n    let begin = 0;\n    let i = 0;\n    let count = 0;\n    let length = content.length;\n    while(i < length) {\n      count += charWidthList[i];\n      if (count === w) {\n        let lineBox = new LineBox(this.mode, ctx, x, y, count, content.slice(begin, i + 1), style);\n        lineBoxes.push(lineBox);\n        maxX = Math.max(maxX, x + count);\n        y += this.style.lineHeight.value;\n        begin = i + 1;\n        i = begin + 1;\n        count = 0;\n      }\n      else if (count > w) {\n        // 宽度不足时无法跳出循环，至少也要塞个字符形成一行\n        if(i === begin) {\n          i = begin + 1;\n        }\n        let lineBox = new LineBox(this.mode, ctx, x, y, count - charWidthList[i], content.slice(begin, i), style);\n        lineBoxes.push(lineBox);\n        maxX = Math.max(maxX, x + count - charWidthList[i]);\n        y += this.style.lineHeight.value;\n        begin = i;\n        i = i + 1;\n        count = 0;\n      }\n      else {\n        i++;\n      }\n    }\n    if(begin < length && begin < i) {\n      count = 0;\n      for(i = begin ;i < length; i++) {\n        count += charWidthList[i];\n      }\n      let lineBox = new LineBox(this.mode, ctx, x, y, count, content.slice(begin, length), style);\n      lineBoxes.push(lineBox);\n      maxX = Math.max(maxX, x + count);\n      y += style.lineHeight.value;\n    }\n    this.__width = maxX - x;\n    this.__height = y - data.y;\n    if(isVirtual) {\n      this.__lineBoxes = [];\n    }\n    else {\n      let { textAlign } = style;\n      if(['center', 'right'].indexOf(textAlign) > -1) {\n        lineBoxes.forEach(lineBox => {\n          let diff = this.__width - lineBox.width;\n          if(diff > 0) {\n            lineBox.__offsetX(textAlign === 'center' ? diff * 0.5 : diff);\n          }\n        });\n      }\n    }\n  }\n\n  render() {\n    if(this.mode === mode.CANVAS) {\n      this.ctx.font = css.setFontStyle(this.style);\n    }\n    this.lineBoxes.forEach(item => {\n      item.render();\n    });\n  }\n\n  __tryLayInline(w) {\n    return w - this.textWidth;\n  }\n\n  __offsetX(diff) {\n    super.__offsetX(diff);\n    this.lineBoxes.forEach(item => {\n      item.__offsetX(diff);\n    });\n  }\n\n  __offsetY(diff) {\n    super.__offsetY(diff);\n    this.lineBoxes.forEach(item => {\n      item.__offsetY(diff);\n    });\n  }\n\n  __calMaxAndMinWidth() {\n    let n = 0;\n    this.charWidthList.forEach(item => {\n      n = Math.max(n, item);\n    });\n    return { max: this.textWidth, min: n };\n  }\n\n  get content() {\n    return this.__content;\n  }\n  set content(v) {\n    this.__content = v;\n  }\n  get lineBoxes() {\n    return this.__lineBoxes;\n  }\n  get charWidthList() {\n    return this.__charWidthList;\n  }\n  get charWidth() {\n    return this.__charWidth;\n  }\n  get textWidth() {\n    return this.__textWidth;\n  }\n  get baseLine() {\n    let last = this.lineBoxes[this.lineBoxes.length - 1];\n    return last.y - this.y + last.baseLine;\n  }\n}\n\nexport default Text;\n","class LineGroup {\n  constructor(x, y) {\n    this.__list = [];\n    this.__x = x;\n    this.__y = y;\n    this.__baseLine = 0;\n  }\n\n  add(item) {\n    this.list.push(item);\n  }\n\n  __calBaseLine() {\n    let baseLine = 0;\n    this.list.forEach(item => {\n      baseLine = Math.max(baseLine, item.baseLine);\n    });\n    return baseLine;\n  }\n\n  verticalAlign() {\n    this.__baseLine = this.__calBaseLine();\n    // 仅当有2个和以上时才需要vertical对齐调整\n    if(this.list.length > 1) {\n      this.list.forEach(item => {\n        if(item.baseLine !== this.baseLine) {\n          item.__offsetY(this.baseLine - item.baseLine);\n        }\n      });\n    }\n  }\n\n  horizonAlign(diff) {\n    this.list.forEach(item => {\n      item.__offsetX(diff);\n    });\n  }\n\n  get list() {\n    return this.__list;\n  }\n  get x() {\n    return this.__x;\n  }\n  get y() {\n    return this.__y;\n  }\n  get width() {\n    let width = 0;\n    this.list.forEach(item => {\n      width += item.width;\n    });\n    return width;\n  }\n  get height() {\n    let height = 0;\n    this.list.forEach(item => {\n      height = Math.max(height, item.height);\n    });\n    return height;\n  }\n  get baseLine() {\n    return this.__baseLine;\n  }\n  get size() {\n    return this.__list.length;\n  }\n}\n\nexport default LineGroup;\n","import Xom from '../node/Xom';\nimport css from '../style/css';\nimport unit from '../style/unit';\n\nclass Geom extends Xom {\n  constructor(tagName, props) {\n    super(tagName, props);\n  }\n\n  __initStyle() {\n    css.normalize(this.style);\n  }\n\n  __tryLayInline(w, total) {\n    // 无children，直接以style的width为宽度，不定义则为0\n    let { style: { width } } = this;\n    if(width.unit === unit.PX) {\n      return w - width.value;\n    }\n    else if(width.unit === unit.PERCENT) {\n      return w - total * width.value * 0.01;\n    }\n    return w;\n  }\n\n  __calAutoBasis(isDirectionRow, w, h) {\n    let b = 0;\n    let min = 0;\n    let max = 0;\n    let { style } = this;\n    // 计算需考虑style的属性\n    let {\n      width,\n      height,\n      borderTopWidth,\n      borderRightWidth,\n      borderBottomWidth,\n      borderLeftWidth,\n    } = style;\n    let main = isDirectionRow ? width : height;\n    if(main.unit !== unit.AUTO) {\n      b = max += main.value;\n    }\n    // border也得计算在内\n    if(isDirectionRow) {\n      let w = borderRightWidth.value + borderLeftWidth.value;\n      b += w;\n      max += w;\n      min += w;\n    }\n    else {\n      let h = borderTopWidth.value + borderBottomWidth.value;\n      b += h;\n      max += h;\n      min += h;\n    }\n    return { b, min, max };\n  }\n\n  __preLayBlock(data) {\n    let { x, y, w, h } = data;\n    this.__x = x;\n    this.__y = y;\n    this.__width = w;\n    let { style } = this;\n    let {\n      width,\n      height,\n      borderTopWidth,\n      borderRightWidth,\n      borderBottomWidth,\n      borderLeftWidth,\n    } = style;\n    // 除了auto外都是固定高度\n    let fixedHeight;\n    if(width && width.unit !== unit.AUTO) {\n      switch(width.unit) {\n        case unit.PX:\n          w = width.value;\n          break;\n      }\n    }\n    if(height && height.unit !== unit.AUTO) {\n      fixedHeight = true;\n      switch(height.unit) {\n        case unit.PX:\n          h = height.value;\n          break;\n        case unit.PERCENT:\n          h *= height.value * 0.01;\n          break;\n      }\n    }\n    // border影响x和y和尺寸\n    x += borderLeftWidth.value;\n    data.x = x;\n    y += borderTopWidth.value;\n    data.y = y;\n    w -= borderLeftWidth.value + borderRightWidth.value;\n    h -= borderTopWidth.value + borderBottomWidth.value;\n    this.__width = w;\n    this.__height = fixedHeight ? h : 0;\n  }\n\n  __preLayFlex(data) {\n    // 无children所以等同于block\n    this.__preLayBlock(data);\n  }\n\n  __preLayInline(data) {\n    let { x, y, w, h } = data;\n    this.__x = x;\n    this.__y = y;\n    let { style } = this;\n    let {\n      width,\n      height,\n      borderTopWidth,\n      borderRightWidth,\n      borderBottomWidth,\n      borderLeftWidth,\n    } = style;\n    // 除了auto外都是固定高度\n    let fixedWidth;\n    let fixedHeight;\n    if(width && width.unit !== unit.AUTO) {\n      fixedWidth = true;\n      switch(width.unit) {\n        case unit.PX:\n          w = width.value;\n          break;\n      }\n    }\n    if(height && height.unit !== unit.AUTO) {\n      fixedHeight = true;\n      switch(height.unit) {\n        case unit.PX:\n          h = height.value;\n          break;\n      }\n    }\n    // border影响x和y\n    x += borderLeftWidth.value;\n    data.x = x;\n    y += borderTopWidth.value;\n    data.y = y;\n    w -= borderLeftWidth.value + borderRightWidth.value;\n    h -= borderTopWidth.value + borderBottomWidth.value;\n    // 元素的width不能超过父元素w\n    this.__width = fixedWidth ? w : x - data.x;\n    this.__height = fixedHeight ? h : y - data.y;\n  }\n\n  __calAbs() {\n    return 0;\n  }\n\n  __emitEvent(e, force) {\n    let { event: { type }, x: xe, y: ye, covers } = e;\n    let { listener, style, x, y, outerWidth, outerHeight } = this;\n    if(style.display === 'none') {\n      return;\n    }\n    let cb;\n    if(listener.hasOwnProperty(type)) {\n      cb = listener[type];\n    }\n    if(force) {\n      cb && cb(e);\n      return;\n    }\n    if(xe >= x && ye >= y && xe <= x + outerWidth && ye <= y + outerHeight) {\n      for(let i = 0, len = covers.length; i < len; i++) {\n        let { x: x2, y: y2, w, h: h } = covers[i];\n        if(xe >= x2 && ye >= y2 && xe <= x2 + w && ye <= y2 + h) {\n          return;\n        }\n      }\n      if(!e.target) {\n        e.target = this;\n      }\n      covers.push({\n        x,\n        y,\n        w: outerWidth,\n        h: outerHeight,\n      });\n      cb && cb(e);\n    }\n  }\n\n  render() {\n    super.render();\n  }\n\n  get tagName() {\n    return this.__tagName;\n  }\n  get baseLine() {\n    return this.__height;\n  }\n  get origin() {\n    return this.__origin;\n  }\n}\n\nexport default Geom;\n","import Xom from './Xom';\nimport Text from './Text';\nimport LineGroup from './LineGroup';\nimport Geom from '../geom/Geom';\nimport util from '../util';\nimport css from '../style/css';\nimport unit from '../style/unit';\n\nconst TAG_NAME = {\n  'div': true,\n  'span': true,\n};\nconst INLINE = {\n  'span': true,\n};\n\nclass Dom extends Xom {\n  constructor(tagName, props, children) {\n    super(tagName, props);\n    this.__children = children;\n    this.__flowChildren = []; // 非绝对定位孩子\n    this.__absChildren = []; // 绝对定位孩子\n    this.__lineGroups = []; // 一行inline元素组成的LineGroup对象后的存放列表\n    this.__flowY = 0; // 文档流布局结束后的y坐标，供absolute布局默认位置使用\n  }\n\n  /**\n   * 1. 封装string为Text节点\n   * 2. 打平children中的数组，变成一维\n   * 3. 合并相连的Text节点\n   * 4. 检测inline不能包含block和flex\n   * 5. 设置parent和prev/next和ctx和mode\n   */\n  __traverse(ctx, mode) {\n    let list = [];\n    this.__traverseChildren(this.children, list, ctx, mode);\n    for(let i = list.length - 1; i > 0; i--) {\n      let item = list[i];\n      if(item instanceof Text) {\n        let prev = list[i - 1];\n        if(prev instanceof Text) {\n          prev.content += item.content;\n          list.splice(i, 1);\n        }\n        else {\n          i--;\n        }\n      }\n    }\n    if(this.style.display === 'inline' && this.parent.style.display !== 'flex') {\n      for(let i = list.length - 1; i >= 0; i--) {\n        let item = list[i];\n        if(item instanceof Dom && item.style.display !== 'inline') {\n          throw new Error('inline can not contain block/flex');\n        }\n      }\n    }\n    let prev = null;\n    list.forEach(item => {\n      item.__ctx = ctx;\n      if(prev) {\n        prev.__next = item;\n      }\n      item.__parent = this;\n      item.__prev = prev;\n      if(item instanceof Text || item.style.position !== 'absolute') {\n        this.__flowChildren.push(item);\n      }\n      else {\n        this.__absChildren.push(item);\n      }\n    });\n    this.__children = list;\n  }\n\n  __traverseChildren(children, list, ctx, mode) {\n    if(Array.isArray(children)) {\n      children.forEach(item => {\n        this.__traverseChildren(item, list, ctx, mode);\n      });\n    }\n    else if(children instanceof Dom) {\n      list.push(children);\n      children.__traverse(ctx, mode);\n      children.__mode = mode;\n    }\n    // 图形没有children\n    else if(children instanceof Geom) {\n      list.push(children);\n      children.__mode = mode;\n    }\n    // 排除掉空的文本\n    else if(!util.isNil(children)) {\n      let text = new Text(children);\n      text.__mode = mode;\n      list.push(text);\n    }\n  }\n\n  // 合并设置style，包括继承和默认值，修改一些自动值和固定值，测量所有文字的宽度\n  __initStyle() {\n    let style = this.__style;\n    // 仅支持flex/block/inline/none\n    if(!style.display || ['flex', 'block', 'inline', 'none'].indexOf(style.display) === -1) {\n      if(INLINE.hasOwnProperty(this.tagName)) {\n        style.display = 'inline';\n      }\n      else {\n        style.display = 'block';\n      }\n    }\n    // 继承父元素样式\n    let parent = this.parent;\n    if(parent) {\n      let parentStyle = parent.style;\n      ['fontSize', 'fontWeight', 'fontStyle', 'lineHeight', 'wordBreak', 'color', 'textAlign'].forEach(k => {\n        if(!style.hasOwnProperty(k) && parentStyle.hasOwnProperty(k)) {\n          style[k] = parentStyle[k];\n        }\n      });\n    }\n    // 标准化处理，默认值、简写属性\n    css.normalize(style);\n    this.children.forEach(item => {\n      if(item instanceof Xom) {\n        item.__initStyle();\n      }\n      else {\n        item.__style = style;\n        // 文字首先测量所有字符宽度\n        item.__measure();\n      }\n    });\n  }\n\n  // 给定父宽度情况下，尝试行内放下后的剩余宽度，为负数即放不下\n  __tryLayInline(w, total) {\n    let { flowChildren, style: { width } } = this;\n    if(width.unit === unit.PX) {\n      return w - width.value;\n    }\n    else if(width.unit === unit.PERCENT) {\n      return w - total * width.value * 0.01;\n    }\n    for(let i = 0; i < flowChildren.length; i++) {\n      // 当放不下时直接返回，无需继续多余的尝试计算\n      if(w < 0) {\n        return w;\n      }\n      let item = flowChildren[i];\n      if(item instanceof Xom) {\n        w -= item.__tryLayInline(w, total);\n      }\n      else {\n        w -= item.textWidth;\n      }\n    }\n    return w;\n  }\n\n  // 设置y偏移值，递归包括children，此举在flex行元素的child进行justify-content对齐用\n  __offsetX(diff) {\n    super.__offsetX(diff);\n    this.flowChildren.forEach(item => {\n      if(item) {\n        item.__offsetX(diff);\n      }\n    });\n  }\n\n  // 设置y偏移值，递归包括children，此举在初步确定inline布局后设置元素vertical-align用\n  __offsetY(diff) {\n    super.__offsetY(diff);\n    this.flowChildren.forEach(item => {\n      if(item) {\n        item.__offsetY(diff);\n      }\n    });\n  }\n\n  __calAutoBasis(isDirectionRow, w, h, isRecursion) {\n    let b = 0;\n    let min = 0;\n    let max = 0;\n    let { flowChildren, style } = this;\n    // 计算需考虑style的属性\n    let {\n      width,\n      height,\n      borderTopWidth,\n      borderRightWidth,\n      borderBottomWidth,\n      borderLeftWidth,\n      marginTop,\n      marginRight,\n      marginBottom,\n      marginLeft,\n      paddingTop,\n      paddingRight,\n      paddingBottom,\n      paddingLeft,\n    } = style;\n    let main = isDirectionRow ? width : height;\n    if(main.unit === unit.PX) {\n      b = max = main.value;\n      // 递归时children的长度会影响flex元素的最小宽度\n      if(isRecursion) {\n        min = b;\n      }\n    }\n    // 递归children取最大值\n    flowChildren.forEach(item => {\n      if(item instanceof Xom) {\n        let { b: b2, min: min2, max: max2 } = item.__calAutoBasis(isDirectionRow, w, h, true);\n        b = Math.max(b, b2);\n        min = Math.max(min, min2);\n        max = Math.max(max, max2);\n      }\n      else if(isDirectionRow) {\n        min = Math.max(item.charWidth, min);\n        max = Math.max(item.textWidth, max);\n      }\n      else {\n        item.__preLay({\n          x: 0,\n          y: 0,\n          w,\n          h,\n        }, true);\n        min = Math.max(min, item.height);\n        max = Math.max(max, item.height);\n      }\n    });\n    // margin/padding/border也得计算在内\n    if(isDirectionRow) {\n      let w = borderRightWidth.value + borderLeftWidth.value + marginLeft.value + marginRight.value + paddingLeft.value + paddingRight.value;\n      b += w;\n      max += w;\n      min += w;\n    }\n    else {\n      let h = borderTopWidth.value + borderBottomWidth.value + marginTop.value + marginBottom.value + paddingTop.value + paddingBottom.value;\n      b += h;\n      max += h;\n      min += h;\n    }\n    return { b, min, max };\n  }\n\n  __calAbs(isDirectionRow) {\n    let max = 0;\n    let { flowChildren, style } = this;\n    // 计算需考虑style的属性\n    let {\n      width,\n      height,\n      borderTopWidth,\n      borderRightWidth,\n      borderBottomWidth,\n      borderLeftWidth,\n      marginTop,\n      marginRight,\n      marginBottom,\n      marginLeft,\n      paddingTop,\n      paddingRight,\n      paddingBottom,\n      paddingLeft,\n    } = style;\n    let main = isDirectionRow ? width : height;\n    if(main.unit === unit.PX) {\n      max = main.value;\n    }\n    // 递归children取最大值\n    flowChildren.forEach(item => {\n      if(item instanceof Xom) {\n        let max2 = item.__calAbs(isDirectionRow);\n        max = Math.max(max, max2);\n      }\n      else if(isDirectionRow) {\n        max = Math.max(item.textWidth, max);\n      }\n      else {\n        item.__preLay({\n          x: 0,\n          y: 0,\n          w: Infinity,\n          h: Infinity,\n        }, true);\n        max = Math.max(max, item.height);\n      }\n    });\n    // margin/padding/border也得计算在内\n    if(isDirectionRow) {\n      let w = borderRightWidth.value + borderLeftWidth.value + marginLeft.value + marginRight.value + paddingLeft.value + paddingRight.value;\n      max += w;\n    }\n    else {\n      let h = borderTopWidth.value + borderBottomWidth.value + marginTop.value + marginBottom.value + paddingTop.value + paddingBottom.value;\n      max += h;\n    }\n    return max;\n  }\n\n  // 本身block布局时计算好所有子元素的基本位置\n  __preLayBlock(data) {\n    let { x, y, w, h } = data;\n    this.__x = x;\n    this.__y = y;\n    this.__width = w;\n    let { flowChildren, style, lineGroups } = this;\n    let {\n      width,\n      height,\n      borderTopWidth,\n      borderRightWidth,\n      borderBottomWidth,\n      borderLeftWidth,\n      marginTop,\n      marginRight,\n      marginBottom,\n      marginLeft,\n      paddingTop,\n      paddingRight,\n      paddingBottom,\n      paddingLeft,\n      textAlign,\n    } = style;\n    // 除了auto外都是固定高度\n    let fixedHeight;\n    if(width && width.unit !== unit.AUTO) {\n      switch(width.unit) {\n        case unit.PX:\n          w = width.value;\n          break;\n        case unit.PERCENT:\n          w *= width.value * 0.01;\n          break;\n      }\n    }\n    if(height && height.unit !== unit.AUTO) {\n      fixedHeight = true;\n      switch(height.unit) {\n        case unit.PX:\n          h = height.value;\n          break;\n        case unit.PERCENT:\n          h *= height.value * 0.01;\n          break;\n      }\n    }\n    // margin/padding/border影响x和y和尺寸\n    x += borderLeftWidth.value + marginLeft.value + paddingLeft.value;\n    data.x = x;\n    y += borderTopWidth.value + marginTop.value + paddingTop.value;\n    data.y = y;\n    w -= borderLeftWidth.value + borderRightWidth.value + marginLeft.value + marginRight.value + paddingLeft.value + paddingRight.value;\n    h -= borderTopWidth.value + borderBottomWidth.value + marginTop.value + marginBottom.value + paddingTop.value + paddingBottom.value;\n    // 递归布局，将inline的节点组成lineGroup一行\n    let lineGroup = new LineGroup(x, y);\n    flowChildren.forEach(item => {\n      if(item instanceof Xom) {\n        if(item.style.display === 'inline') {\n          // inline开头，不用考虑是否放得下直接放\n          if(x === data.x) {\n            lineGroup.add(item);\n            item.__preLayInline({\n              x,\n              y,\n              w,\n              h,\n            });\n            x += item.outerWidth;\n          }\n          else {\n            // 非开头先尝试是否放得下\n            let fw = item.__tryLayInline(w - x, w);\n            // 放得下继续\n            if(fw >= 0) {\n              item.__preLayInline({\n                x,\n                y,\n                w,\n                h,\n              });\n            }\n            // 放不下处理之前的lineGroup，并重新开头\n            else {\n              lineGroups.push(lineGroup);\n              lineGroup.verticalAlign();\n              x = data.x;\n              y += lineGroup.height;\n              item.__preLayInline({\n                x: data.x,\n                y,\n                w,\n                h,\n              });\n              lineGroup = new LineGroup(x, y);\n            }\n            x += item.outerWidth;\n            lineGroup.add(item);\n          }\n        }\n        else {\n          // block先处理之前可能的lineGroup\n          if(lineGroup.size) {\n            lineGroups.push(lineGroup);\n            lineGroup.verticalAlign();\n            y += lineGroup.height;\n            lineGroup = new LineGroup(data.x, y);\n          }\n          item.__preLay({\n            x: data.x,\n            y,\n            w,\n            h,\n          });\n          x = data.x;\n          y += item.outerHeight;\n        }\n      }\n      // 文字和inline类似\n      else {\n        // x开头，不用考虑是否放得下直接放\n        if(x === data.x) {\n          lineGroup.add(item);\n          item.__preLay({\n            x,\n            y,\n            w,\n            h,\n          });\n          x += item.width;\n        }\n        else {\n          // 非开头先尝试是否放得下\n          let fw = item.__tryLayInline(w - x, w);\n          // 放得下继续\n          if(fw >= 0) {\n            item.__preLay({\n              x,\n              y,\n              w,\n              h,\n            });\n          }\n          // 放不下处理之前的lineGroup，并重新开头\n          else {\n            lineGroups.push(lineGroup);\n            lineGroup.verticalAlign();\n            x = data.x;\n            y += lineGroup.height;\n            item.__preLay({\n              x: data.x,\n              y,\n              w,\n              h,\n            });\n            lineGroup = new LineGroup(x, y);\n          }\n          x += item.width;\n          lineGroup.add(item);\n        }\n      }\n    });\n    // 结束后处理可能遗留的最后的lineGroup\n    if(lineGroup.size) {\n      lineGroups.push(lineGroup);\n      lineGroup.verticalAlign();\n      y += lineGroup.height;\n    }\n    // text-align\n    if(['center', 'right'].indexOf(textAlign) > -1) {\n      lineGroups.forEach(lineGroup => {\n        let diff = w - lineGroup.width;\n        if(diff > 0) {\n          lineGroup.horizonAlign(textAlign === 'center' ? diff * 0.5 : diff);\n        }\n      });\n    }\n    this.__width = w;\n    this.__height = fixedHeight ? h : y - data.y;\n    this.__flowY = y;\n  }\n\n  // 弹性布局时的计算位置\n  __preLayFlex(data) {\n    let { x, y, w, h } = data;\n    this.__x = x;\n    this.__y = y;\n    this.__width = w;\n    let { flowChildren, style } = this;\n    let {\n      width,\n      height,\n      flexDirection,\n      borderTopWidth,\n      borderRightWidth,\n      borderBottomWidth,\n      borderLeftWidth,\n      marginTop,\n      marginRight,\n      marginBottom,\n      marginLeft,\n      paddingTop,\n      paddingRight,\n      paddingBottom,\n      paddingLeft,\n      justifyContent,\n      alignItems,\n    } = style;\n    // 除了auto外都是固定高度\n    let fixedWidth;\n    let fixedHeight;\n    if(width && width.unit !== unit.AUTO) {\n      fixedWidth = true;\n      switch(width.unit) {\n        case unit.PX:\n          w = width.value;\n          break;\n        case unit.PERCENT:\n          w *= width.value * 0.01;\n          break;\n      }\n    }\n    if(height && height.unit !== unit.AUTO) {\n      fixedHeight = true;\n      switch(height.unit) {\n        case unit.PX:\n          h = height.value;\n          break;\n        case unit.PERCENT:\n          h *= height.value * 0.01;\n          break;\n      }\n    }\n    // margin/padding/border影响x和y和尺寸\n    x += borderLeftWidth.value + marginLeft.value + paddingLeft.value;\n    data.x = x;\n    y += borderTopWidth.value + marginTop.value + paddingTop.value;\n    data.y = y;\n    w -= borderLeftWidth.value + borderRightWidth.value + marginLeft.value + marginRight.value + paddingLeft.value + paddingRight.value;\n    h -= borderTopWidth.value + borderBottomWidth.value + marginTop.value + marginBottom.value + paddingTop.value + paddingBottom.value;\n    let isDirectionRow = flexDirection === 'row';\n    // column时height可能为auto，此时取消伸展，退化为类似block布局，但所有子元素强制block\n    if(!isDirectionRow && !fixedHeight) {\n      flowChildren.forEach(item => {\n        if(item instanceof Xom) {\n          const { style, style: { display, flexDirection, width }} = item;\n          // column的flex的child如果是inline，变为block\n          if(display === 'inline') {\n            style.display = 'block';\n          }\n          // 竖向flex的child如果是横向flex，宽度自动的话要等同于父flex的宽度\n          else if(display === 'flex' && flexDirection === 'row' && width.unit === unit.AUTO) {\n            width.value = w;\n            width.unit = unit.PX;\n          }\n          item.__preLay({\n            x,\n            y,\n            w,\n            h,\n          });\n          y += item.outerHeight;\n        }\n        else {\n          item.__preLay({\n            x,\n            y,\n            w,\n            h,\n          });\n          y += item.outerHeight;\n        }\n      });\n      this.__width = w;\n      this.__height = y - data.y;\n      return;\n    }\n    // 计算伸缩基数\n    let growList = [];\n    let shrinkList = [];\n    let basisList = [];\n    let minList = [];\n    let growSum = 0;\n    let shrinkSum = 0;\n    let basisSum = 0;\n    let maxSum = 0;\n    flowChildren.forEach(item => {\n      if(item instanceof Xom) {\n        let { flexGrow, flexShrink, flexBasis } = item.style;\n        growList.push(flexGrow);\n        shrinkList.push(flexShrink);\n        growSum += flexGrow;\n        shrinkSum += flexShrink;\n        let { b, min, max } = item.__calAutoBasis(isDirectionRow, w, h);\n        // 根据basis不同，计算方式不同\n        if(flexBasis.unit === unit.AUTO) {\n          basisList.push(max);\n          basisSum += max;\n        }\n        else if(flexBasis.unit === unit.PX) {\n          b = flexBasis.value;\n          basisList.push(b);\n          basisSum += b;\n        }\n        else if(flexBasis.unit === unit.PERCENT) {\n          b = (isDirectionRow ? w : h) * flexBasis.value;\n          basisList.push(b);\n          basisSum += b;\n        }\n        maxSum += max;\n        minList.push(min);\n      }\n      else {\n        growList.push(0);\n        shrinkList.push(1);\n        shrinkSum += 1;\n        if(isDirectionRow) {\n          basisList.push(item.textWidth);\n          basisSum += item.textWidth;\n          maxSum += item.textWidth;\n          minList.push(item.charWidth);\n        }\n        else {\n          item.__preLay({\n            x: 0,\n            y: 0,\n            w,\n            h,\n          }, true);\n          basisList.push(item.height);\n          basisSum += item.height;\n          maxSum += item.height;\n          minList.push(item.height);\n        }\n      }\n    });\n    let maxCross = 0;\n    // 判断是否超出，决定使用grow还是shrink\n    let isOverflow = maxSum > (isDirectionRow ? w : h);\n    flowChildren.forEach((item, i) => {\n      let main;\n      let shrink = shrinkList[i];\n      let grow = growList[i];\n      // 计算主轴长度\n      if(isOverflow) {\n        let overflow = basisSum - (isDirectionRow ? w : h);\n        main = shrink ? (basisList[i] - overflow * shrink / shrinkSum) : basisList[i];\n      }\n      else {\n        let free = (isDirectionRow ? w : h) - basisSum;\n        main = grow ? (basisList[i] + free * grow / growSum) : basisList[i];\n      }\n      // 主轴长度的最小值不能小于元素的最小长度，比如横向时的字符宽度\n      main = Math.max(main, minList[i]);\n      if(item instanceof Xom) {\n        const { style, style: {\n          display,\n          flexDirection,\n          width,\n          height,\n          marginTop,\n          marginRight,\n          marginBottom,\n          marginLeft,\n          borderTopWidth,\n          borderRightWidth,\n          borderBottomWidth,\n          borderLeftWidth,\n          paddingTop,\n          paddingRight,\n          paddingBottom,\n          paddingLeft,\n        }} = item;\n        if(isDirectionRow) {\n          // row的flex的child如果是inline，变为block\n          if(display === 'inline') {\n            style.display = 'block';\n          }\n          // 横向flex的child如果是竖向flex，高度自动的话要等同于父flex的高度\n          else if(display === 'flex' && flexDirection === 'column' && fixedHeight && height.unit === unit.AUTO) {\n            height.value = h;\n            height.unit = unit.PX;\n          }\n          item.__preLay({\n            x,\n            y,\n            w: main,\n            h,\n          })\n        }\n        else {\n          // column的flex的child如果是inline，变为block\n          if(display === 'inline') {\n            style.display = 'block';\n          }\n          // 竖向flex的child如果是横向flex，宽度自动的话要等同于父flex的宽度\n          else if(display === 'flex' && flexDirection === 'row' && width.unit === unit.AUTO) {\n            width.value = w;\n            width.unit = unit.PX;\n          }\n          item.__preLay({\n            x,\n            y,\n            w,\n            h: main,\n          });\n        }\n        // 重设因伸缩而导致的主轴长度\n        if(isOverflow && shrink) {\n          if(isDirectionRow) {\n            item.__width = main\n              - marginLeft.value\n              - marginRight.value\n              - borderLeftWidth.value\n              - borderRightWidth.value\n              - paddingLeft.value\n              - paddingRight.value;\n          }\n          else {\n            item.__height = main\n              - marginTop.value\n              - marginBottom.value\n              - borderTopWidth.value\n              - borderBottomWidth.value\n              - paddingTop.value\n              - paddingBottom.value;\n          }\n        }\n        else if(!isOverflow && grow) {\n          if(isDirectionRow) {\n            item.__width = main\n              - marginLeft.value\n              - marginRight.value\n              - borderLeftWidth.value\n              - borderRightWidth.value\n              - paddingLeft.value\n              - paddingRight.value;\n          }\n          else {\n            item.__height = main\n              - marginTop.value\n              - marginBottom.value\n              - borderTopWidth.value\n              - borderBottomWidth.value\n              - paddingTop.value\n              - paddingBottom.value;\n          }\n        }\n      }\n      else {\n        item.__preLay({\n          x,\n          y,\n          w: isDirectionRow ? main : w,\n          h: isDirectionRow ? h : main,\n        });\n      }\n      if(isDirectionRow) {\n        x += item.outerWidth;\n        maxCross = Math.max(maxCross, item.outerHeight);\n      }\n      else {\n        y += item.outerHeight;\n        maxCross = Math.max(maxCross, item.outerWidth);\n      }\n    });\n    // 计算主轴剩余时要用真实剩余空间而不能用伸缩剩余空间\n    let diff = isDirectionRow ? w - x + data.x : h - y + data.y;\n    // 主轴侧轴对齐方式\n    if(!isOverflow && growSum === 0 && diff > 0) {\n      let len = flowChildren.length;\n      if(justifyContent === 'flex-end') {\n        for(let i = 0; i < len; i++) {\n          let child = flowChildren[i];\n          isDirectionRow ? child.__offsetX(diff) : child.__offsetY(diff);\n        }\n      }\n      else if(justifyContent === 'center') {\n        let center = diff * 0.5;\n        for(let i = 0; i < len; i++) {\n          let child = flowChildren[i];\n          isDirectionRow ? child.__offsetX(center) : child.__offsetY(center);\n        }\n      }\n      else if(justifyContent === 'space-between') {\n        let between = diff / (len - 1);\n        for(let i = 1; i < len; i++) {\n          let child = flowChildren[i];\n          isDirectionRow ? child.__offsetX(between * i) : child.__offsetY(between * i);\n        }\n      }\n      else if(justifyContent === 'space-around') {\n        let around = diff / (len + 1);\n        for(let i = 0; i < len; i++) {\n          let child = flowChildren[i];\n          isDirectionRow ? child.__offsetX(around * (i + 1)) : child.__offsetY(around * (i + 1));\n        }\n      }\n    }\n    // 子元素侧轴伸展\n    if(isDirectionRow) {\n      // 父元素固定高度，子元素可能超过，侧轴最大长度取固定高度\n      if(fixedHeight) {\n        maxCross = h;\n      }\n      y += maxCross;\n    }\n    else {\n      if(fixedWidth) {\n        maxCross = w;\n      }\n    }\n    // 侧轴对齐\n    if(alignItems === 'stretch') {\n      // 短侧轴的children伸张侧轴长度至相同，超过的不动，固定宽高的也不动\n      flowChildren.forEach(item => {\n        let { style } = item;\n        if(isDirectionRow) {\n          if(style.height.unit === unit.AUTO) {\n            item.__height = maxCross\n              - style.marginTop.value\n              - style.marginBottom.value\n              - style.paddingTop.value\n              - style.paddingBottom.value\n              - style.borderTopWidth.value\n              - style.borderBottomWidth.value;\n          }\n        }\n        else {\n          if(style.width.unit === unit.AUTO) {\n            item.__width = maxCross\n              - style.marginLeft.value\n              - style.marginRight.value\n              - style.paddingLeft.value\n              - style.paddingRight.value\n              - borderRightWidth.value\n              - borderLeftWidth.value;\n          }\n        }\n      });\n    }\n    else if(alignItems === 'center') {\n      flowChildren.forEach(item => {\n        let diff = maxCross - item.outerHeight;\n        if(diff > 0) {\n          item.__offsetY(diff * 0.5);\n        }\n      });\n    }\n    else if(alignItems === 'flex-end') {\n      flowChildren.forEach(item => {\n        let diff = maxCross - item.outerHeight;\n        if(diff > 0) {\n          item.__offsetY(diff);\n        }\n      });\n    }\n    this.__width = w;\n    this.__height = fixedHeight ? h : y - data.y;\n    this.__flowY = y;\n  }\n\n  // inline比较特殊，先简单顶部对其，后续还需根据vertical和lineHeight计算y偏移\n  __preLayInline(data) {\n    let { x, y, w, h } = data;\n    this.__x = x;\n    this.__y = y;\n    let maxX = x;\n    let { flowChildren, style, lineGroups } = this;\n    let {\n      width,\n      height,\n      borderTopWidth,\n      borderRightWidth,\n      borderBottomWidth,\n      borderLeftWidth,\n      marginTop,\n      marginRight,\n      marginBottom,\n      marginLeft,\n      paddingTop,\n      paddingRight,\n      paddingBottom,\n      paddingLeft,\n      textAlign,\n    } = style;\n    // 除了auto外都是固定高度\n    let fixedWidth;\n    let fixedHeight;\n    if(width && width.unit !== unit.AUTO) {\n      fixedWidth = true;\n      switch(width.unit) {\n        case unit.PX:\n          w = width.value;\n          break;\n        case unit.PERCENT:\n          w *= width.value * 0.01;\n          break;\n      }\n    }\n    if(height && height.unit !== unit.AUTO) {\n      fixedHeight = true;\n      switch(height.unit) {\n        case unit.PX:\n          h = height.value;\n          break;\n        case unit.PERCENT:\n          h *= height.value * 0.01;\n          break;\n      }\n    }\n    // margin/padding/border影响x和y和尺寸\n    x += borderLeftWidth.value + marginLeft.value + paddingLeft.value;\n    data.x = x;\n    y += borderTopWidth.value + marginTop.value + paddingTop.value;\n    data.y = y;\n    w -= borderLeftWidth.value + borderRightWidth.value + marginLeft.value + marginRight.value + paddingLeft.value + paddingRight.value;\n    h -= borderTopWidth.value + borderBottomWidth.value + marginTop.value + marginBottom.value + paddingTop.value + paddingBottom.value;\n    // 递归布局，将inline的节点组成lineGroup一行\n    let lineGroup = new LineGroup(x, y);\n    flowChildren.forEach(item => {\n      if(item instanceof Xom) {\n        // 绝对定位跳过\n        if(item.style.position === 'absolute') {\n          this.absChildren.push(item);\n          return;\n        }\n        // inline开头，不用考虑是否放得下直接放\n        if(x === data.x) {\n          lineGroup.add(item);\n          item.__preLayInline({\n            x,\n            y,\n            w,\n            h,\n          });\n          x += item.outerWidth;\n          maxX = Math.max(maxX, x);\n        }\n        else {\n          // 非开头先尝试是否放得下\n          let fw = item.__tryLayInline(w - x, w);\n          // 放得下继续\n          if(fw >= 0) {\n            item.__preLayInline({\n              x,\n              y,\n              w,\n              h,\n            });\n          }\n          // 放不下处理之前的lineGroup，并重新开头\n          else {\n            lineGroups.push(lineGroup);\n            lineGroup.verticalAlign();\n            x = data.x;\n            y += lineGroup.height;\n            item.__preLayInline({\n              x: data.x,\n              y,\n              w,\n              h,\n            });\n            lineGroup = new LineGroup(x, y);\n          }\n          x += item.outerWidth;\n          maxX = Math.max(maxX, x);\n          lineGroup.add(item);\n        }\n      }\n      // inline里的其它只有文本\n      else {\n        if(x === data.x) {\n          lineGroup.add(item);\n          item.__preLay({\n            x,\n            y,\n            w,\n            h,\n          });\n          x += item.width;\n          maxX = Math.max(maxX, x);\n        }\n        else {\n          // 非开头先尝试是否放得下\n          let fw = item.__tryLayInline(w - x, w);\n          // 放得下继续\n          if(fw >= 0) {\n            item.__preLay({\n              x,\n              y,\n              w,\n              h,\n            });\n          }\n          // 放不下处理之前的lineGroup，并重新开头\n          else {\n            lineGroups.push(lineGroup);\n            lineGroup.verticalAlign();\n            x = data.x;\n            y += lineGroup.height;\n            item.__preLay({\n              x: data.x,\n              y,\n              w,\n              h,\n            });\n            lineGroup = new LineGroup(x, y);\n          }\n          x += item.width;\n          maxX = Math.max(maxX, x);\n          lineGroup.add(item);\n        }\n      }\n    });\n    // 结束后处理可能遗留的最后的lineGroup，children为空时可能size为空\n    if(lineGroup.size) {\n      lineGroups.push(lineGroup);\n      lineGroup.verticalAlign();\n      y += lineGroup.height;\n    }\n    // text-align\n    if(['center', 'right'].indexOf(textAlign) > -1) {\n      lineGroups.forEach(lineGroup => {\n        let diff = w - lineGroup.width;\n        if(diff > 0) {\n          lineGroup.horizonAlign(textAlign === 'center' ? diff * 0.5 : diff);\n        }\n      });\n    }\n    // 元素的width不能超过父元素w\n    this.__width = fixedWidth ? w : maxX - data.x;\n    this.__height = fixedHeight ? h : y - data.y;\n    this.__flowY = y;\n  }\n\n  // 只针对绝对定位children布局\n  __preLayAbs(container) {\n    let { x, y, flowY, width, height, children, absChildren, style } = this;\n    let {\n      marginTop,\n      marginLeft,\n      paddingTop,\n      paddingLeft,\n      paddingRight,\n      paddingBottom,\n      borderTopWidth,\n      borderLeftWidth,\n    } = style;\n    let pw = width + paddingLeft.value + paddingRight.value;\n    let ph = height + paddingTop.value + paddingBottom.value;\n    // 递归进行，遇到absolute/relative的设置新容器\n    children.forEach(item => {\n      if(item instanceof Dom) {\n        item.__preLayAbs(['absolute', 'relative'].indexOf(item.style.position) > -1 ? item : container);\n      }\n    });\n    // 对absolute的元素进行相对容器布局\n    absChildren.forEach(item => {\n      let { style, style: { left, top, right, bottom, width: width2, height: height2 } } = item;\n      let x2, y2, w2, h2;\n      // width优先级高于right高于left，即最高left+right，其次left+width，再次right+width，然后仅申明单个，最次全部auto\n      if(left.unit !== unit.AUTO && right.unit !== unit.AUTO) {\n        x2 = left.unit === unit.PX ? x + marginLeft.value + borderLeftWidth.value + left.value : x + marginLeft.value + borderLeftWidth.value + width * left.value * 0.01;\n        w2 = right.unit === unit.PX ? x + marginLeft.value + borderLeftWidth.value + pw - right.value - x2 : x + marginLeft.value + borderLeftWidth.value + pw - width * right.value * 0.01 - x2;\n      }\n      else if(left.unit !== unit.AUTO && width2.unit !== unit.AUTO) {\n        x2 = left.unit === unit.PX ? x + marginLeft.value + borderLeftWidth.value + left.value : x + marginLeft.value + borderLeftWidth.value + width * left.value * 0.01;\n        w2 = width2.unit === unit.PX ? width2.value : width;\n      }\n      else if(right.unit !== unit.AUTO && width2.unit !== unit.AUTO) {\n        w2 = width2.unit === unit.PX ? width2.value : width;\n        let widthPx = width2.unit === unit.PX ? width2.value : width * width2.value * 0.01;\n        x2 = right.unit === unit.PX ? x + marginLeft.value + borderLeftWidth.value + pw - right.value - widthPx : x + marginLeft.value + borderLeftWidth.value + pw - width * right.value * 0.01 - widthPx;\n      }\n      else if(left.unit !== unit.AUTO) {\n        x2 = left.unit === unit.PX ? x + left.value : x + marginLeft.value + borderLeftWidth.value + width * left.value * 0.01;\n        w2 = item.__calAbs(true);\n      }\n      else if(right.unit !== unit.AUTO) {\n        w2 = item.__calAbs(true);\n        x2 = right.unit === unit.PX ? x + marginLeft.value + borderLeftWidth.value + pw - right.value - w2 : x + marginLeft.value + borderLeftWidth.value + pw - width * right.value * 0.01 - w2;\n      }\n      else if(width2.unit !== unit.AUTO) {\n        x2 = x + marginLeft.value + borderLeftWidth.value;\n        w2 = width2.unit === unit.PX ? width2.value : width;\n      }\n      else {\n        x2 = x + marginLeft.value + borderLeftWidth.value;\n        w2 = item.__calAbs(true);\n      }\n      // top/bottom/height优先级同上\n      if(top.unit !== unit.AUTO && bottom.unit !== unit.AUTO) {\n        y2 = top.unit === unit.PX ? y + top.value : y + marginTop.value + borderTopWidth.value + height * top.value * 0.01;\n        h2 = bottom.unit === unit.PX ? y + marginTop.value + borderTopWidth.value + ph - bottom.value - y2 : y + marginTop.value + borderTopWidth.value + ph - height * bottom.value * 0.01 - y2;\n        style.height = {\n          value: h2,\n          unit: unit.PX,\n        };\n      }\n      else if(top.unit !== unit.AUTO && height2.unit !== unit.AUTO) {\n        y2 = top.unit === unit.PX ? y + top.value : y + marginTop.value + borderTopWidth.value + height * top.value * 0.01;\n        h2 = height2.unit === unit.PX ? height2.value : height;\n      }\n      else if(bottom.unit !== unit.AUTO && height2.unit !== unit.AUTO) {\n        h2 = height2.unit === unit.PX ? height2.value : height;\n        let heightPx = height2.unit === unit.PX ? height2.value : height * height2.value * 0.01;\n        y2 = bottom.unit === unit.PX ? y + marginTop.value + borderTopWidth.value + ph - bottom.value - heightPx : y + marginTop.value + borderTopWidth.value + ph - height * bottom.value * 0.01 - heightPx;\n      }\n      else if(top.unit !== unit.AUTO) {\n        y2 = top.unit === unit.PX ? y + top.value : y + marginTop.value + borderTopWidth.value + height * top.value * 0.01;\n        h2 = item.__calAbs();\n      }\n      else if(bottom.unit !== unit.AUTO) {\n        h2 = item.__calAbs();\n        y2 = bottom.unit === unit.PX ? y + marginTop.value + borderTopWidth.value + ph - bottom.value - h2 : y + marginTop.value + borderTopWidth.value + ph - height * bottom.value * 0.01 - h2;\n      }\n      else if(height2.unit !== unit.AUTO) {\n        y2 = flowY + marginTop.value + borderTopWidth.value;\n        h2 = height2.unit === unit.PX ? height2.value : height;\n      }\n      else {\n        y2 = flowY + marginTop.value + borderTopWidth.value;\n        h2 = item.__calAbs();\n      }\n      // absolute时inline强制block\n      if(style.display === 'inline') {\n        style.display = 'block';\n      }\n      item.__preLay({\n        x: x2,\n        y: y2,\n        w: w2,\n        h: h2,\n      });\n    });\n  }\n\n  __emitEvent(e, force) {\n    let { event: { type }, x: xe, y: ye, covers } = e;\n    let { listener, children, style, x, y, outerWidth, outerHeight } = this;\n    if(style.display === 'none') {\n      return;\n    }\n    let cb;\n    if(listener.hasOwnProperty(type)) {\n      cb = listener[type];\n    }\n    let hasChildEmit;\n    // 先响应absolute/relative高优先级\n    for(let i = children.length - 1; i >= 0; i--) {\n      let child = children[i];\n      if(child instanceof Xom && ['absolute', 'relative'].indexOf(child.style.position) > -1) {\n        if(child.__emitEvent(e, force)) {\n          hasChildEmit = true;\n        }\n      }\n    }\n    // 再看普通流\n    for(let i = children.length - 1; i >= 0; i--) {\n      let child = children[i];\n      if(child instanceof Xom && ['absolute', 'relative'].indexOf(child.style.position) === -1) {\n        if(child.__emitEvent(e, force)) {\n          hasChildEmit = true;\n        }\n      }\n    }\n    if(force) {\n      cb && cb(e);\n      return;\n    }\n    // child触发则parent一定触发\n    if(hasChildEmit) {\n      covers.push({\n        x,\n        y,\n        w: outerWidth,\n        h: outerHeight,\n      });\n      cb && cb(e);\n    }\n    // 否则判断坐标是否位于自己内部，以及没被遮挡\n    else if(xe >= x && ye >= y && xe <= x + outerWidth && ye <= y + outerHeight) {\n      for(let i = 0, len = covers.length; i < len; i++) {\n        let { x: x2, y: y2, w, h: h } = covers[i];\n        if(xe >= x2 && ye >= y2 && xe <= x2 + w && ye <= y2 + h) {\n          return;\n        }\n      }\n      if(!e.target) {\n        e.target = this;\n      }\n      covers.push({\n        x,\n        y,\n        w: outerWidth,\n        h: outerHeight,\n      });\n      cb && cb(e);\n    }\n  }\n\n  render() {\n    super.render();\n    let { style: { display }, flowChildren, children } = this;\n    if(display === 'none') {\n      return;\n    }\n    // 先绘制static\n    flowChildren.forEach(item => {\n      if(item instanceof Text || item.style.position === 'static') {\n        item.render();\n      }\n    });\n    // 再绘制relative和absolute\n    children.forEach(item => {\n      if((item instanceof Xom) && ['relative', 'absolute'].indexOf(item.style.position) > -1) {\n        item.render();\n      }\n    });\n  }\n\n  get tagName() {\n    return this.__tagName;\n  }\n  get children() {\n    return this.__children;\n  }\n  get flowChildren() {\n    return this.__flowChildren;\n  }\n  get absChildren() {\n    return this.__absChildren;\n  }\n  get lineGroups() {\n    return this.__lineGroups;\n  }\n  get baseLine() {\n    let len = this.lineGroups.length;\n    if(len) {\n      let last = this.lineGroups[len - 1];\n      return last.y - this.y + last.baseLine;\n    }\n    return this.y;\n  }\n  get flowY() {\n    return this.__flowY;\n  }\n\n  static isValid(s) {\n    return TAG_NAME.hasOwnProperty(s);\n  }\n}\n\nexport default Dom;\n","import Dom from '../node/Dom';\nimport util from '../util';\nimport mode from './mode';\n\nfunction getDom(dom) {\n  if(util.isString(dom)) {\n    let o = document.querySelector(dom);\n    if(!o) {\n      throw new Error('can not find dom of selector: ' + dom);\n    }\n    return o;\n  }\n  if(!dom) {\n    throw new Error('can not find dom: ' + dom);\n  }\n  return dom;\n}\n\nfunction renderProp(k, v) {\n  let s = Array.isArray(v) ? util.joinSourceArray(v) : util.stringify(v);\n  if(k === 'className') {\n    k = 'class';\n  }\n  return ' ' + k + '=\"' + util.encodeHtml(s, true) + '\"';\n}\n\nclass CS extends Dom {\n  constructor(tagName, props, children) {\n    super(tagName, props, children);\n    this.__node = null; // 真实DOM引用\n  }\n\n  __initProps() {\n    if(this.props.width !== undefined) {\n      let value = parseInt(this.props.width);\n      if(!isNaN(value) && value > 0) {\n        this.__width = value;\n      }\n    }\n    if(this.props.height !== undefined) {\n      let value = parseInt(this.props.height);\n      if(!isNaN(value) && value > 0) {\n        this.__height = value;\n      }\n    }\n  }\n\n  __genHtml() {\n    let res = `<${this.tagName}`;\n    // 拼接处理属性\n    for(let i = 0, len = this.__props.length; i < len; i++) {\n      let item = this.__props[i];\n      res += renderProp(item[0], item[1]);\n    }\n    res += `></${this.tagName}>`;\n    return res;\n  }\n\n  __cb(e, force) {\n    if(e.touches && e.touches.length > 1) {\n      return;\n    }\n    let { node } = this;\n    let { x, y, top, right } = node.getBoundingClientRect();\n    x = x || top || 0;\n    y = y || right || 0;\n    let { clientX, clientY } = e.touches ? (e.touches[0] || {}) : e;\n    x = clientX - x;\n    y = clientY - y;\n    this.__emitEvent({\n      event: e,\n      x,\n      y,\n      covers: [],\n    }, force);\n  }\n\n  __initEvent() {\n    let { node } = this;\n    ['click', 'dblclick', 'mousedown', 'mousemove', 'mouseup', 'touchstart', 'touchmove', 'touchend', 'touchcancel'].forEach(type => {\n      node.addEventListener(type, e => {\n        this.__cb(e, ['touchend', 'touchcancel'].indexOf(type) > -1);\n      });\n    });\n  }\n\n  appendTo(dom) {\n    dom = getDom(dom);\n    this.__initProps();\n    // 已有canvas节点\n    if(dom.nodeName.toUpperCase() === this.tagName.toUpperCase()) {\n      this.__node = dom;\n      if(this.width) {\n        dom.setAttribute('width', this.width);\n      }\n      if(this.height) {\n        dom.setAttribute('height', this.height);\n      }\n    }\n    // 没有canvas节点则生成一个新的\n    else {\n      dom.innerHTML = this.__genHtml();\n      this.__node = dom.querySelector(this.tagName);\n    }\n    // 没有设置width/height则采用css计算形式\n    if(!this.width || !this.height) {\n      let css = window.getComputedStyle(dom, null);\n      if(!this.width) {\n        this.__width = parseInt(css.getPropertyValue('width'));\n        dom.setAttribute('width', this.width);\n      }\n      if(!this.height) {\n        this.__height = parseInt(css.getPropertyValue('height'));\n        dom.setAttribute('height', this.height);\n      }\n    }\n    // 只有canvas有ctx，svg用真实dom\n    if(this.tagName === 'canvas') {\n      this.__ctx = this.__node.getContext('2d');\n      this.__ctx.clearRect(0, 0, this.width, this.height);\n      this.__mode = mode.CANVAS;\n    }\n    else if(this.tagName === 'svg') {\n      this.__mode = mode.SVG;\n    }\n    // canvas/svg作为根节点一定是block或flex，不会是inline\n    let { style } = this;\n    if(['flex', 'block'].indexOf(style.display) === -1) {\n      style.display = 'block';\n    }\n    // 同理position不能为absolute\n    if(style.position === 'absolute') {\n      style.position = 'static';\n    }\n    this.__traverse(this.__ctx, this.__mode);\n    // canvas的宽高固定初始化\n    style.width = this.width;\n    style.height = this.height;\n    this.__initStyle();\n    this.__preLay({\n      x: 0,\n      y: 0,\n      w: this.width,\n      h: this.height,\n    });\n    this.__preLayAbs(this);\n    this.render();\n    if(this.mode === mode.SVG) {\n      this.node.innerHTML = mode.html;\n      mode.reset();\n    }\n    if(!this.node.__initEvent) {\n      this.node.__initEvent = true;\n      this.__initEvent();\n    }\n  }\n\n  get node() {\n    return this.__node;\n  }\n}\n\nexport default CS;\n","import Geom from './Geom';\nimport mode from '../node/mode';\n\nclass Line extends Geom {\n  constructor(props) {\n    super('$line', props);\n    // start和end表明线段的首尾坐标\n    this.__start = [];\n    this.__end = [];\n    if(Array.isArray(this.props.start)) {\n      this.__start = this.props.start;\n    }\n    if(Array.isArray(this.props.end)) {\n      this.__end = this.props.end;\n    }\n    // 原点位置，4个角，默认左下\n    if(['TOP_LEFT', 'TOP_RIGHT', 'BOTTOM_LEFT', 'BOTTOM_RIGHT'].indexOf(this.props.origin) > -1) {\n      this.__origin = this.props.origin;\n    }\n    else {\n      this.__origin = 'BOTTOM_LEFT';\n    }\n  }\n\n  render() {\n    super.render();\n    let { x, y, width, height, style, ctx, start, end, origin } = this;\n    if(start.length < 2 || end.length < 2) {\n      return;\n    }\n    let {\n      display,\n      borderTopWidth,\n      borderRightWidth,\n      borderBottomWidth,\n      borderLeftWidth,\n      marginTop,\n      marginRight,\n      marginBottom,\n      marginLeft,\n      paddingTop,\n      paddingRight,\n      paddingBottom,\n      paddingLeft,\n      stroke,\n      strokeWidth,\n      strokeDasharray,\n    } = style;\n    if(display === 'none') {\n      return;\n    }\n    let x1, y1, x2, y2;\n    let originX = x + borderLeftWidth.value + marginLeft.value + paddingLeft.value;\n    let originY = y + borderTopWidth.value + marginTop.value + paddingTop.value;\n    width -= borderLeftWidth.value + borderRightWidth.value + marginLeft.value + marginRight.value + paddingLeft.value + paddingRight.value;\n    height -= borderTopWidth.value + borderBottomWidth.value + marginTop.value + marginBottom.value + paddingTop.value + paddingBottom.value;\n    if(origin === 'TOP_LEFT') {\n      x1 = originX + start[0] * width;\n      y1 = originY + start[1] * height;\n      x2 = originX + end[0] * width;\n      y2 = originY + end[1] * height;\n    }\n    else if(origin === 'TOP_RIGHT') {\n      x1 = originX + width - start[0] * width;\n      y1 = originY + start[1] * height;\n      x2 = originX + width - end[0] * width;\n      y2 = originY + end[1] * height;\n    }\n    else if(origin === 'BOTTOM_LEFT') {\n      x1 = originX + start[0] * width;\n      y1 = originY + height - start[1] * height;\n      x2 = originX + end[0] * width;\n      y2 = originY + height - end[1] * height;\n    }\n    else if(origin === 'BOTTOM_RIGHT') {\n      x1 = originX + width - start[0] * width;\n      y1 = originY + height - start[1] * height;\n      x2 = originX + width - end[0] * width;\n      y2 = originY + height - end[1] * height;\n    }\n    if(this.mode === mode.CANVAS) {\n      ctx.strokeStyle = stroke;\n      ctx.lineWidth = strokeWidth;\n      ctx.setLineDash(strokeDasharray);\n      ctx.beginPath();\n      ctx.moveTo(x1, y1);\n      ctx.lineTo(x2, y2);\n      ctx.stroke();\n      ctx.closePath();\n    }\n    else if(this.mode === mode.SVG) {\n      mode.appendHtml(`<line x1=\"${x1}\" y1=\"${y1}\" x2=\"${x2}\" y2=\"${y2}\" stroke-width=\"${strokeWidth}\" stroke=\"${stroke}\" stroke-dasharray=\"${strokeDasharray}\"/>`);\n    }\n  }\n\n  get start() {\n    return this.__start;\n  }\n  get end() {\n    return this.__end;\n  }\n}\n\nexport default Line;\n","import Geom from './Geom';\nimport mode from '../node/mode';\n\nclass Polyline extends Geom {\n  constructor(props) {\n    super('$polygon', props);\n    // 折线所有点的列表\n    this.__points = [];\n    if(Array.isArray(this.props.points)) {\n      this.__points = this.props.points;\n    }\n    // 原点位置，4个角，默认左下\n    if(['TOP_LEFT', 'TOP_RIGHT', 'BOTTOM_LEFT', 'BOTTOM_RIGHT'].indexOf(this.props.origin) > -1) {\n      this.__origin = this.props.origin;\n    }\n    else {\n      this.__origin = 'BOTTOM_LEFT';\n    }\n  }\n\n  render() {\n    super.render();\n    let { x, y, width, height, style, ctx, points, origin } = this;\n    if(points.length < 2) {\n      return;\n    }\n    for(let i = 0, len = points.length; i < len; i++) {\n      if(!Array.isArray(points[i]) || points[i].length < 2) {\n        return;\n      }\n    }\n    let {\n      display,\n      borderTopWidth,\n      borderLeftWidth,\n      marginTop,\n      marginLeft,\n      paddingTop,\n      paddingLeft,\n      stroke,\n      strokeWidth,\n      strokeDasharray,\n    } = style;\n    if(display === 'none') {\n      return;\n    }\n    let originX = x + borderLeftWidth.value + marginLeft.value + paddingLeft.value;\n    let originY = y + borderTopWidth.value + marginTop.value + paddingTop.value;\n    let pts = this.__pts = [];\n    if(origin === 'TOP_LEFT') {\n      points.forEach(item => {\n        pts.push([\n          originX + item[0] * width,\n          originY + item[1] * height\n        ]);\n      });\n    }\n    else if(origin === 'TOP_RIGHT') {\n      points.forEach(item => {\n        pts.push([\n          originX + width - item[0] * width,\n          originY + item[1] * height\n        ]);\n      });\n    }\n    else if(origin === 'BOTTOM_LEFT') {\n      points.forEach(item => {\n        pts.push([\n          originX + item[0] * width,\n          originY + height - item[1] * height\n        ]);\n      });\n    }\n    else if(origin === 'BOTTOM_RIGHT') {\n      points.forEach(item => {\n        pts.push([\n          originX + width - item[0] * width,\n          originY + height - item[1] * height\n        ]);\n      });\n    }\n    if(this.mode === mode.CANVAS) {\n      ctx.strokeStyle = stroke;\n      ctx.lineWidth = strokeWidth;\n      ctx.setLineDash(strokeDasharray);\n      ctx.beginPath();\n      ctx.moveTo(pts[0][0], originY + pts[0][1]);\n      for(let i = 1, len = pts.length; i < len; i++) {\n        let point = pts[i];\n        ctx.lineTo(point[0], point[1]);\n      }\n      if(strokeWidth && stroke !== 'transparent') {\n        ctx.stroke();\n      }\n      ctx.closePath();\n    }\n    else if(this.mode === mode.SVG) {\n      let points = '';\n      for(let i = 0, len = pts.length; i < len; i++) {\n        let point = pts[i];\n        points += `${point[0]},${point[1]} `;\n      }\n      mode.appendHtml(`<polyline fill=\"none\" points=\"${points}\" stroke-width=\"${strokeWidth}\" stroke=\"${stroke}\" stroke-dasharray=\"${strokeDasharray}\"/>`);\n    }\n  }\n\n  getPointsByX(x) {\n    let min = Infinity;\n    let len = this.__pts.length;\n    let res = [];\n    for(let i = 0; i < len; i++) {\n      let diff = Math.abs(this.__pts[i][0] - x);\n      if(diff < min) {\n        min = diff;\n      }\n    }\n    for(let i = 0; i < len; i++) {\n      let diff = Math.abs(this.__pts[i][0] - x);\n      if(diff === min) {\n        res.push({\n          index: i,\n          x: this.__pts[i][0],\n          y: this.__pts[i][1],\n        });\n      }\n    }\n    return res;\n  }\n\n  get points() {\n    return this.__points;\n  }\n  get origin() {\n    return this.__origin;\n  }\n}\n\nexport default Polyline;\n","import Geom from './Geom';\nimport mode from '../node/mode';\n\nclass Polygon extends Geom {\n  constructor(props) {\n    super('$polygon', props);\n    // 所有点的列表\n    this.__points = [];\n    if(Array.isArray(this.props.points)) {\n      this.__points = this.props.points;\n    }\n  }\n\n  render() {\n    super.render();\n    let { x, y, width, height, style, ctx, points } = this;\n    if(points.length < 3) {\n      return;\n    }\n    for(let i = 0, len = points.length; i < len; i++) {\n      if(!Array.isArray(points[i]) || points[i].length < 2) {\n        return;\n      }\n    }\n    let {\n      display,\n      borderTopWidth,\n      borderLeftWidth,\n      marginTop,\n      marginLeft,\n      paddingTop,\n      paddingLeft,\n      stroke,\n      strokeWidth,\n      strokeDasharray,\n    } = style;\n    if(display === 'none') {\n      return;\n    }\n    let originX = x + borderLeftWidth.value + marginLeft.value + paddingLeft.value;\n    let originY = y + borderTopWidth.value + marginTop.value + paddingTop.value;\n    points.forEach(item => {\n      item[0] = originX + item[0] * width;\n      item[1] = originY + item[1] * height;\n    });\n    if(this.mode === mode.CANVAS) {\n      ctx.strokeStyle = stroke;\n      ctx.lineWidth = strokeWidth;\n      ctx.setLineDash(strokeDasharray);\n      ctx.beginPath();\n      ctx.moveTo(points[0][0], originY + points[0][1]);\n      for(let i = 1, len = points.length; i < len; i++) {\n        let point = points[i];\n        ctx.lineTo(point[0], point[1]);\n      }\n      ctx.fill();\n      if(strokeWidth && stroke !== 'transparent') {\n        ctx.stroke();\n      }\n      ctx.closePath();\n    }\n    else if(this.mode === mode.SVG) {\n      let points = '';\n      for(let i = 0, len = points.length; i < len; i++) {\n        let point = points[i];\n        points += `${point[0]},${point[1]} `;\n      }\n      mode.appendHtml(`<polyline fill=\"none\" points=\"${points}\" stroke-width=\"${strokeWidth}\" stroke=\"${stroke}\" stroke-dasharray=\"${strokeDasharray}\"/>`);\n    }\n  }\n\n  get points() {\n    return this.__points;\n  }\n}\n\nexport default Polygon;\n","import Geom from './Geom';\nimport mode from '../node/mode';\n\nconst OFFSET = Math.PI * 0.5;\n\nfunction getCoordByDegree(x, y, r, d) {\n  while(d > 360) {\n    d -= 360;\n  }\n  while(d < 0) {\n    d += 360;\n  }\n  if(d >= 0 && d < 90) {\n    return [\n      x + Math.sin(d * Math.PI / 180) * r,\n      y - Math.cos(d * Math.PI / 180) * r\n    ];\n  }\n  else if(d >= 90 && d < 180) {\n    return [\n      x + Math.cos((d - 90) * Math.PI / 180) * r,\n      y + Math.sin((d - 90) * Math.PI / 180) * r,\n    ];\n  }\n  else if(d >= 180 && d < 270) {\n    return [\n      x - Math.cos((270 - d) * Math.PI / 180) * r,\n      y + Math.sin((270 - d) * Math.PI / 180) * r,\n    ];\n  }\n  else {\n    return [\n      x - Math.sin((360 - d) * Math.PI / 180) * r,\n      y - Math.cos((360 - d) * Math.PI / 180) * r,\n    ];\n  }\n}\n\nclass Sector extends Geom {\n  constructor(props) {\n    super('$sector', props);\n    // 角度\n    this.__start = 0;\n    this.__end = 0;\n    if(this.props.start) {\n      this.__start = parseFloat(this.props.start);\n      if(isNaN(this.start)) {\n        this.__start = 0;\n      }\n    }\n    if(this.props.end) {\n      this.__end = parseFloat(this.props.end);\n      if(isNaN(this.end)) {\n        this.__end = 0;\n      }\n    }\n    // 半径0~1，默认1\n    this.__r = 1;\n    if(this.props.r) {\n      this.__r = parseFloat(this.props.r);\n      if(isNaN(this.r)) {\n        this.__r = 1;\n      }\n    }\n  }\n\n  render() {\n    super.render();\n    let { x, y, width, height, style, ctx, start, end, r } = this;\n    if(start === end) {\n      return;\n    }\n    let {\n      display,\n      borderTopWidth,\n      borderLeftWidth,\n      marginTop,\n      marginLeft,\n      paddingTop,\n      paddingLeft,\n      stroke,\n      strokeWidth,\n      strokeDasharray,\n      fill,\n    } = style;\n    if(display === 'none') {\n      return;\n    }\n    let originX = x + borderLeftWidth.value + marginLeft.value + paddingLeft.value;\n    let originY = y + borderTopWidth.value + marginTop.value + paddingTop.value;\n    originX += width * 0.5;\n    originY += height * 0.5;\n    r *= Math.min(width, height) * 0.5;\n    if(this.mode === mode.CANVAS) {\n      ctx.strokeStyle = stroke;\n      ctx.lineWidth = strokeWidth;\n      ctx.fillStyle = fill;\n      ctx.setLineDash(strokeDasharray);\n      ctx.beginPath();\n      ctx.moveTo(originX, originY);\n      ctx.arc(originX, originY, r, start * Math.PI / 180 - OFFSET, end * Math.PI / 180 - OFFSET);\n      ctx.fill();\n      if(strokeWidth && stroke !== 'transparent') {\n        ctx.stroke();\n      }\n      ctx.closePath();\n    }\n    else if(this.mode === mode.SVG) {\n      let x1, y1, x2, y2;\n      [ x1, y1 ] = getCoordByDegree(originX, originY, r, start);\n      [ x2, y2 ] = getCoordByDegree(originX, originY, r, end);\n      let large = (end - start) > 180 ? 1 : 0;\n      mode.appendHtml(`<path d=\"M ${originX} ${originY} L ${x1} ${y1} A${r},${r} 0 ${large} 1 ${x2},${y2} z\" fill=\"${fill}\" stroke-width=\"${strokeWidth}\" stroke=\"${stroke}\" stroke-dasharray=\"${strokeDasharray}\"/>`);\n    }\n  }\n\n  get start() {\n    return this.__start;\n  }\n  get end() {\n    return this.__end;\n  }\n  get r() {\n    return this.__r;\n  }\n}\n\nexport default Sector;\n","import Geom from './Geom';\nimport mode from '../node/mode';\n\nclass Rect extends Geom {\n  constructor(props) {\n    super('$sector', props);\n  }\n\n  render() {\n    super.render();\n    let { x, y, width, height, style, ctx } = this;\n    let {\n      display,\n      borderTopWidth,\n      borderLeftWidth,\n      marginTop,\n      marginLeft,\n      paddingTop,\n      paddingLeft,\n      stroke,\n      strokeWidth,\n      strokeDasharray,\n      fill,\n    } = style;\n    if(display === 'none') {\n      return;\n    }\n    let originX = x + borderLeftWidth.value + marginLeft.value + paddingLeft.value;\n    let originY = y + borderTopWidth.value + marginTop.value + paddingTop.value;\n    if(this.mode === mode.CANVAS) {\n      ctx.strokeStyle = stroke;\n      ctx.lineWidth = strokeWidth;\n      ctx.fillStyle = fill;\n      ctx.setLineDash(strokeDasharray);\n      ctx.beginPath();\n      ctx.moveTo(originX, originY);\n      ctx.lineTo(originX + width, originY);\n      ctx.lineTo(originX + width, originY + height);\n      ctx.lineTo(originX, originY + height);\n      ctx.fill();\n      if(strokeWidth && stroke !== 'transparent') {\n        ctx.stroke();\n      }\n      ctx.closePath();\n    }\n    else if(this.mode === mode.SVG) {\n      mode.appendHtml(`<rect x=\"${x}\" y=\"${y}\" width=\"${width}\" height=\"${height}\" fill=\"${fill}\" stroke-width=\"${strokeWidth}\" stroke=\"${stroke}\" stroke-dasharray=\"${strokeDasharray}\"/>`);\n    }\n  }\n}\n\nexport default Rect;\n","import Geom from './Geom';\nimport mode from '../node/mode';\n\nclass Circle extends Geom {\n  constructor(props) {\n    super('$circle', props);\n    // 半径0~1，默认1\n    this.__r = 1;\n    if(this.props.r) {\n      this.__r = parseFloat(this.props.r);\n      if(isNaN(this.r)) {\n        this.__r = 1;\n      }\n    }\n  }\n\n  render() {\n    super.render();\n    let { x, y, width, height, style, ctx, r } = this;\n    let {\n      display,\n      borderTopWidth,\n      borderLeftWidth,\n      marginTop,\n      marginLeft,\n      paddingTop,\n      paddingLeft,\n      stroke,\n      strokeWidth,\n      strokeDasharray,\n      fill,\n    } = style;\n    if(display === 'none') {\n      return;\n    }\n    let originX = x + borderLeftWidth.value + marginLeft.value + paddingLeft.value;\n    let originY = y + borderTopWidth.value + marginTop.value + paddingTop.value;\n    originX += width * 0.5;\n    originY += height * 0.5;\n    r *= Math.min(width, height) * 0.5;\n    if(this.mode === mode.CANVAS) {\n      ctx.strokeStyle = stroke;\n      ctx.lineWidth = strokeWidth;\n      ctx.fillStyle = fill;\n      ctx.setLineDash(strokeDasharray);\n      ctx.beginPath();\n      ctx.moveTo(originX, originY);\n      ctx.arc(originX, originY, r, 0, 2 * Math.PI);\n      ctx.fill();\n      if(strokeWidth && stroke !== 'transparent') {\n        ctx.stroke();\n      }\n      ctx.closePath();\n    }\n    else if(this.mode === mode.SVG) {\n      mode.appendHtml(`<circle cx=\"${originX}\" cy=\"${originY}\" r=\"${r}\" fill=\"${fill}\" stroke-width=\"${strokeWidth}\" stroke=\"${stroke}\" stroke-dasharray=\"${strokeDasharray}\"/>`);\n    }\n  }\n\n  get r() {\n    return this.__r;\n  }\n}\n\nexport default Circle;\n","import Geom from './Geom';\nimport mode from '../node/mode';\n\nclass Ellipse extends Geom {\n  constructor(props) {\n    super('$ellipse', props);\n    // 半径0~1，默认1\n    this.__rx = 1;\n    if(this.props.rx) {\n      this.__rx = parseFloat(this.props.rx);\n      if(isNaN(this.rx)) {\n        this.__rx = 1;\n      }\n    }\n    this.__ry = 1;\n    if(this.props.ry) {\n      this.__ry = parseFloat(this.props.ry);\n      if(isNaN(this.rx)) {\n        this.__ry = 1;\n      }\n    }\n  }\n\n  render() {\n    super.render();\n    let { x, y, width, height, style, ctx, rx, ry } = this;\n    let {\n      display,\n      borderTopWidth,\n      borderLeftWidth,\n      marginTop,\n      marginLeft,\n      paddingTop,\n      paddingLeft,\n      stroke,\n      strokeWidth,\n      strokeDasharray,\n      fill,\n    } = style;\n    if(display === 'none') {\n      return;\n    }\n    let originX = x + borderLeftWidth.value + marginLeft.value + paddingLeft.value;\n    let originY = y + borderTopWidth.value + marginTop.value + paddingTop.value;\n    originX += width * 0.5;\n    originY += height * 0.5;\n    rx *= width * 0.5;\n    ry *= height * 0.5;\n    if(this.mode === mode.CANVAS) {\n      ctx.strokeStyle = stroke;\n      ctx.lineWidth = strokeWidth;\n      ctx.fillStyle = fill;\n      ctx.setLineDash(strokeDasharray);\n      ctx.beginPath();\n      ctx.moveTo(originX, originY);\n      ctx.ellipse && ctx.ellipse(originX, originY, rx, ry, 0, 0, 2 * Math.PI);\n      ctx.fill();\n      if(strokeWidth && stroke !== 'transparent') {\n        ctx.stroke();\n      }\n      ctx.closePath();\n    }\n    else if(this.mode === mode.SVG) {\n      mode.appendHtml(`<ellipse cx=\"${originX}\" cy=\"${originY}\" rx=\"${rx}\" ry=\"${ry}\" fill=\"${fill}\" stroke-width=\"${strokeWidth}\" stroke=\"${stroke}\" stroke-dasharray=\"${strokeDasharray}\"/>`);\n    }\n  }\n\n  get rx() {\n    return this.__rx;\n  }\n  get ry() {\n    return this.__ry;\n  }\n}\n\nexport default Ellipse;\n","import Geom from './Geom';\nimport mode from '../node/mode';\n\nclass Grid extends Geom {\n  constructor(props) {\n    super('$grid', props);\n    // x,y被分为几格\n    this.__nx = 0;\n    if(this.props.nx) {\n      this.__nx = parseFloat(this.props.nx);\n      if(isNaN(this.nx)) {\n        this.__nx = 0;\n      }\n    }\n    this.__ny = 0;\n    if(this.props.ny) {\n      this.__ny = parseFloat(this.props.ny);\n      if(isNaN(this.ny)) {\n        this.__ny = 0;\n      }\n    }\n  }\n\n  render() {\n    super.render();\n    let { x, y, width, height, style, ctx, nx, ny } = this;\n    if(width <= 0 || height <= 0) {\n      return;\n    }\n    if(nx < 3 && ny < 3) {\n      return;\n    }\n    let {\n      display,\n      borderTopWidth,\n      borderLeftWidth,\n      marginTop,\n      marginLeft,\n      paddingTop,\n      paddingLeft,\n      stroke,\n      strokeWidth,\n      strokeDasharray,\n    } = style;\n    if(display === 'none') {\n      return;\n    }\n    let originX = x + borderLeftWidth.value + marginLeft.value + paddingLeft.value;\n    let originY = y + borderTopWidth.value + marginTop.value + paddingTop.value;\n    let endX = originX + width;\n    let endY = originY + height;\n    let lx = [];\n    let ly = [];\n    if(nx >= 3) {\n      let per = width / (nx - 1);\n      for(let i = 0; i < nx; i++) {\n        ly.push(originX + i * per);\n      }\n    }\n    if(ny >= 3) {\n      let per = height / (ny - 1);\n      for(let i = 0; i < ny; i++) {\n        lx.push(originY + i * per);\n      }\n    }\n    if(this.mode === mode.CANVAS) {\n      ctx.strokeStyle = stroke;\n      ctx.lineWidth = strokeWidth;\n      ctx.setLineDash(strokeDasharray);\n      ctx.beginPath();\n      lx.forEach(item => {\n        ctx.moveTo(originX, item);\n        ctx.lineTo(endX, item);\n      });\n      ly.forEach(item => {\n        ctx.moveTo(item, originY);\n        ctx.lineTo(item, endY);\n      });\n      if(strokeWidth && stroke !== 'transparent') {\n        ctx.stroke();\n      }\n      ctx.closePath();\n    }\n    else if(this.mode === mode.SVG) {\n      lx.forEach(item => {\n        mode.appendHtml(`<line x1=\"${originX}\" y1=\"${item}\" x2=\"${endX}\" y2=\"${item}\" stroke-width=\"${strokeWidth}\" stroke=\"${stroke}\" stroke-dasharray=\"${strokeDasharray}\"/>`);\n      });\n      ly.forEach(item => {\n        mode.appendHtml(`<line x1=\"${item}\" y1=\"${originY}\" x2=\"${item}\" y2=\"${endY}\" stroke-width=\"${strokeWidth}\" stroke=\"${stroke}\" stroke-dasharray=\"${strokeDasharray}\"/>`);\n      });\n    }\n  }\n\n  get nx() {\n    return this.__nx;\n  }\n  get ny() {\n    return this.__ny;\n  }\n  get dash() {\n    return this.__dash;\n  }\n}\n\nexport default Grid;\n","import Dom from './node/Dom';\nimport CS from './node/CS';\nimport Line from './geom/Line';\nimport Polyline from './geom/Polyline';\nimport Polygon from './geom/Polygon';\nimport Sector from './geom/Sector';\nimport Rect from './geom/Rect';\nimport Circle from './geom/Circle';\nimport Ellipse from './geom/Ellipse';\nimport Grid from './geom/Grid';\n\nlet karas = {\n  render(cs, dom) {\n    if(!(cs instanceof CS)) {\n      throw new Error('render root muse be canvas or svg');\n    }\n    if(dom) {\n      cs.appendTo(dom);\n    }\n    return cs;\n  },\n  createVd(tagName, props, children) {\n    if(['canvas', 'svg'].indexOf(tagName) > -1) {\n      return new CS(tagName, props, children);\n    }\n    if(Dom.isValid(tagName)) {\n      return new Dom(tagName, props, children);\n    }\n    throw new Error('can not use marker: ' + tagName);\n  },\n  createGm(tagName, props) {\n    switch(tagName) {\n      case '$line':\n        return new Line(props);\n      case '$polyline':\n        return new Polyline(props);\n      case '$polygon':\n        return new Polygon(props);\n      case '$sector':\n        return new Sector(props);\n      case '$rect':\n        return new Rect(props);\n      case '$circle':\n        return new Circle(props);\n      case '$ellipse':\n        return new Ellipse(props);\n      case '$grid':\n        return new Grid(props);\n    }\n    throw new Error('can not use geom marker: ' + tagName);\n  },\n  createCp(cp, props) {\n    return new cp(props);\n  },\n};\n\nif(typeof window != 'undefined') {\n  window.karas = karas;\n}\n\nexport default karas;\n"],"names":["div","svgHtml","CANVAS","SVG","appendHtml","s","reset","measure","style","document","createElement","position","left","top","visibility","body","appendChild","fontSize","innerText","css","window","getComputedStyle","parseFloat","width","Node","__x","__y","__width","__height","__prev","__next","__ctx","__parent","__style","__baseLine","__mode","mode","diff","this","Xom","tagName","props","Array","isArray","arr","hash","i","len","length","item","list","Object","keys","j","k","arr2hash","__props","temp","push","splice","spread","hash2arr","__tagName","_this","__listener","forEach","test","slice","toLowerCase","data","display","__preLayBlock","__preLayFlex","__preLayInline","parent","height","right","bottom","unit","value","__offsetX","__offsetY","ctx","x","y","backgroundColor","borderTopWidth","borderTopColor","borderRightWidth","borderRightColor","borderBottomWidth","borderBottomColor","borderLeftWidth","borderLeftColor","marginTop","marginLeft","paddingTop","paddingRight","paddingBottom","paddingLeft","x1","y1","w","h","beginPath","fillStyle","rect","fill","closePath","x2","lineWidth","strokeStyle","moveTo","lineTo","stroke","y2","marginRight","marginBottom","lhr","car","blr","mdr","lgr","RESET","borderSizing","fontFamily","color","fontStyle","fontWeight","lineHeight","borderTopStyle","borderRightStyle","borderBottomStyle","borderLeftStyle","verticalAlign","flexGrow","flexShrink","flexBasis","flexDirection","justifyContent","alignItems","textAlign","strokeWidth","strokeDasharray","v","toString","isType","type","obj","call","isNumber","stringify","isNil","util","isObject","isString","isFunction","isBoolean","isDate","joinSourceArray","res","encodeHtml","prop","replace","parserOneBorder","direction","key","exec","c","indexOf","normalize","hasOwnProperty","background","bgc","flex","border","borderTop","borderRight","borderBottom","borderLeft","margin","padding","font","Math","max","setFontStyle","getBaseLine","normal","LineBox","content","__content","fillText","CHAR_WIDTH_CACHE","Text","__lineBoxes","__charWidthList","__charWidth","__textWidth","charWidthList","cache","sum","char","charAt","mw","measureText","charWidth","isVirtual","maxX","lineBoxes","begin","count","lineBox","_this2","render","textWidth","n","min","last","baseLine","LineGroup","__list","__calBaseLine","Geom","total","isDirectionRow","b","main","fixedHeight","fixedWidth","e","force","cb","event","xe","ye","covers","listener","outerWidth","outerHeight","target","__origin","TAG_NAME","INLINE","Dom","children","__children","__flowChildren","__absChildren","__lineGroups","__flowY","__traverseChildren","prev","Error","_this3","__traverse","text","parentStyle","__initStyle","__measure","flowChildren","__tryLayInline","isRecursion","__calAutoBasis","b2","min2","max2","__preLay","__calAbs","Infinity","lineGroups","lineGroup","add","size","horizonAlign","growList","shrinkList","basisList","minList","growSum","shrinkSum","basisSum","maxSum","maxCross","isOverflow","shrink","grow","overflow","free","child","center","between","around","_this4","absChildren","container","flowY","pw","ph","__preLayAbs","w2","h2","width2","height2","widthPx","heightPx","hasChildEmit","__emitEvent","CS","__node","undefined","parseInt","isNaN","touches","node","getBoundingClientRect","clientX","clientY","addEventListener","__cb","dom","o","querySelector","getDom","__initProps","nodeName","toUpperCase","setAttribute","innerHTML","__genHtml","getPropertyValue","getContext","clearRect","html","__initEvent","Line","__start","__end","start","end","origin","originX","originY","setLineDash","Polyline","__points","points","pts","__pts","point","abs","index","Polygon","OFFSET","PI","getCoordByDegree","r","d","sin","cos","Sector","__r","arc","large","Rect","Circle","Ellipse","__rx","rx","__ry","ry","ellipse","Grid","__nx","nx","__ny","ny","endX","endY","lx","ly","per","__dash","karas","cs","appendTo","createVd","isValid","createGm","createCp","cp"],"mappings":"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"}