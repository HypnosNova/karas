{"version":3,"file":"index.min.js","sources":["src/mode.js","src/node/Node.js","src/style/unit.js","src/node/Xom.js","src/style/font.js","src/style/reset.js","src/util.js","src/style/css.js","src/node/LineBox.js","src/node/Text.js","src/node/LineGroup.js","src/geom/Geom.js","src/node/Dom.js","src/domDiff.js","src/node/Root.js","src/geom/Line.js","src/geom/Polyline.js","src/geom/Polygon.js","src/geom/Sector.js","src/geom/Rect.js","src/geom/Circle.js","src/geom/Ellipse.js","src/geom/Grid.js","src/index.js"],"sourcesContent":["const CANVAS = 0;\nconst SVG = 1;\n\nlet div;\n\nexport default {\n  CANVAS,\n  SVG,\n  measure(s, style) {\n    if(!div) {\n      div = document.createElement('div');\n      div.style.position = 'absolute';\n      div.style.left = '99999px';\n      div.style.top = '-99999px';\n      div.style.visibility = 'hidden';\n      document.body.appendChild(div);\n    }\n    div.style.fontSize = style.fontSize + 'px';\n    div.innerText = s;\n    let css = window.getComputedStyle(div, null);\n    return parseFloat(css.width);\n  }\n};\n","class Node {\n  constructor() {\n    this.__x = 0;\n    this.__y = 0;\n    this.__ox = 0; // relative或transform造成的偏移量\n    this.__oy = 0;\n    this.__width = 0;\n    this.__height = 0;\n    this.__prev = null;\n    this.__next = null;\n    this.__ctx = null; // canvas的context\n    this.__parent = null;\n    this.__style = {}; // style被解析后的k-v形式\n    this.__baseLine = 0;\n    this.__virtualDom = {};\n  }\n\n  __offsetX(diff) {\n    this.__ox += diff;\n  }\n\n  __offsetY(diff) {\n    this.__oy += diff;\n  }\n\n  get x() {\n    return this.__x;\n  }\n  get y() {\n    return this.__y;\n  }\n  get ox() {\n    return this.__ox;\n  }\n  get oy() {\n    return this.__oy;\n  }\n  get rx() {\n    return this.x + this.ox;\n  }\n  get ry() {\n    return this.y + this.oy;\n  }\n  get width() {\n    return this.__width;\n  }\n  get height() {\n    return this.__height;\n  }\n  get outerWidth() {\n    return this.__width;\n  }\n  get outerHeight() {\n    return this.__height;\n  }\n  get prev() {\n    return this.__prev;\n  }\n  get next() {\n    return this.__next;\n  }\n  get parent() {\n    return this.__parent;\n  }\n  get style() {\n    return this.__style;\n  }\n  get ctx() {\n    return this.__ctx;\n  }\n  get baseLine() {\n    return this.__baseLine;\n  }\n  get virtualDom() {\n    return this.__virtualDom;\n  }\n}\n\nexport default Node;\n","export default {\n  AUTO: 0,\n  PX: 1,\n  PERCENT: 2,\n};\n","import Node from './Node';\nimport mode from '../mode';\nimport unit from '../style/unit';\n\nfunction arr2hash(arr) {\n  let hash = {};\n  for(let i = 0, len = arr.length; i < len; i++) {\n    let item = arr[i];\n    if(Array.isArray(item)) {\n      hash[item[0]] = item[1];\n    }\n    else {\n      for(let list = Object.keys(item), j = list.length - 1; j >= 0; j--) {\n        let k = list[j];\n        hash[k] = item[k];\n      }\n    }\n  }\n  return hash;\n}\n\nfunction hash2arr(hash) {\n  let arr = [];\n  for(let list = Object.keys(hash), i = 0, len = list.length; i < len; i++) {\n    let k = list[i];\n    arr.push([k, hash[k]]);\n  }\n  return arr;\n}\n\nfunction spread(arr) {\n  for(let i = 0, len = arr.length; i < len; i++) {\n    let item = arr[i];\n    if(!Array.isArray(item)) {\n      let temp = [];\n      for(let list = Object.keys(item), j = 0, len = list.length; j < len; j++) {\n        let k = list[j];\n        temp.push([k, item[k]]);\n      }\n      arr.splice(i, 1, ...temp);\n    }\n  }\n  return arr;\n}\n\nclass Xom extends Node {\n  constructor(tagName, props) {\n    super();\n    props = props || [];\n    // 构建工具中都是arr，手写可能出现hash情况\n    if(Array.isArray(props)) {\n      this.props = arr2hash(props);\n      this.__props = spread(props);\n    }\n    else {\n      this.props = props;\n      this.__props = hash2arr(props);\n    }\n    this.__tagName = tagName;\n    this.__style = this.props.style || {}; // style被解析后的k-v形式\n    this.__listener = {};\n    this.__props.forEach(item => {\n      let k = item[0];\n      if(/^on[a-zA-Z]/.test(k)) {\n        this.__listener[k.slice(2).toLowerCase()] = item[1];\n      }\n    });\n    // margin和padding的宽度\n    this.__mtw = 0;\n    this.__mrw = 0;\n    this.__mbw = 0;\n    this.__mlw = 0;\n    this.__ptw = 0;\n    this.__prw = 0;\n    this.__pbw = 0;\n    this.__plw = 0;\n  }\n\n  __layout(data) {\n    let { w } = data;\n    let { style: {\n      display,\n      width,\n      marginTop,\n      marginRight,\n      marginBottom,\n      marginLeft,\n      paddingTop,\n      paddingRight,\n      paddingBottom,\n      paddingLeft,\n    } } = this;\n    if(display === 'none') {\n      return;\n    }\n    if(width && width.unit !== unit.AUTO) {\n      switch(width.unit) {\n        case unit.PX:\n          w = width.value;\n          break;\n        case unit.PERCENT:\n          w *= width.value * 0.01;\n          break;\n      }\n    }\n    this.__mlw = this.__mpWidth(marginLeft, w);\n    this.__mtw = this.__mpWidth(marginTop, w);\n    this.__mrw = this.__mpWidth(marginRight, w);\n    this.__mbw = this.__mpWidth(marginBottom, w);\n    this.__plw = this.__mpWidth(paddingLeft, w);\n    this.__ptw = this.__mpWidth(paddingTop, w);\n    this.__prw = this.__mpWidth(paddingRight, w);\n    this.__pbw = this.__mpWidth(paddingBottom, w);\n    if(display === 'block') {\n      this.__layoutBlock(data);\n    }\n    else if(display === 'flex') {\n      this.__layoutFlex(data);\n    }\n    else if(display === 'inline') {\n      this.__layoutInline(data);\n    }\n  }\n\n  // 获取margin/padding的实际值\n  __mpWidth(mp, w) {\n    if(mp.unit === unit.PX) {\n      return mp.value;\n    }\n    else if(mp.unit === unit.PERCENT) {\n      return mp.value * w * 0.01;\n    }\n    return 0;\n  }\n\n  render(renderMode) {\n    this.__virtualDom = {\n      bb: [],\n    };\n    let { ctx, style, width, height, mlw, mtw, plw, ptw, prw, pbw, virtualDom } = this;\n    let {\n      display,\n      position,\n      top,\n      right,\n      bottom,\n      left,\n      backgroundColor,\n      borderTopWidth,\n      borderTopColor,\n      borderTopStyle,\n      borderRightWidth,\n      borderRightColor,\n      borderRightStyle,\n      borderBottomWidth,\n      borderBottomColor,\n      borderBottomStyle,\n      borderLeftWidth,\n      borderLeftColor,\n      borderLeftStyle,\n      transform,\n    } = style;\n    if(display === 'none') {\n      return;\n    }\n    // 除root节点外relative渲染时做偏移，百分比基于父元素，若父元素没有一定高则为0\n    if(position === 'relative' && this.parent) {\n      let { width, height } = this.parent;\n      let h = this.parent.style.height;\n      if(left.unit !== unit.AUTO) {\n        let diff = left.unit === unit.PX ? left.value : left.value * width * 0.01;\n        this.__offsetX(diff);\n      }\n      else if(right.unit !== unit.AUTO) {\n        let diff = right.unit === unit.PX ? right.value : right.value * width * 0.01;\n        this.__offsetX(-diff);\n      }\n      if(top.unit !== unit.AUTO) {\n        let diff = top.unit === unit.PX ? top.value : top.value * height * 0.01 * (h.unit === unit.AUTO ? 0 : 1);\n        this.__offsetY(diff);\n      }\n      else if(bottom.unit !== unit.AUTO) {\n        let diff = bottom.unit === unit.PX ? bottom.value : bottom.value * height * 0.01 * (h.unit === unit.AUTO ? 0 : 1);\n        this.__offsetY(-diff);\n      }\n    }\n    // translate相对于自身\n    if(transform) {\n      let { translateX, translateY } = transform;\n      if(translateX) {\n        let diff = translateX.unit === unit.PX ? translateX.value : translateX.value * width * 0.01;\n        this.__offsetX(diff);\n      }\n      if(translateY) {\n        let diff = translateY.unit === unit.PX ? translateY.value : translateY.value * height * 0.01;\n        this.__offsetY(diff);\n      }\n    }\n    let { rx: x, ry: y } = this;\n    x += mlw;\n    y += mtw;\n    if(backgroundColor) {\n      let x1 = x;\n      if(borderLeftWidth) {\n        x1 += borderLeftWidth.value;\n      }\n      let y1 = y;\n      if(borderTopWidth) {\n        y1 += borderTopWidth.value;\n      }\n      let w = width + plw + prw;\n      let h = height + ptw + pbw;\n      if(renderMode === mode.CANVAS) {\n        ctx.beginPath();\n        ctx.fillStyle = backgroundColor;\n        ctx.rect(x1, y1, w, h);\n        ctx.fill();\n        ctx.closePath();\n      }\n      else if(renderMode === mode.SVG) {\n        virtualDom.bb.push({\n          type: 'item',\n          tagName: 'rect',\n          props: [\n            ['x', x1],\n            ['y', y1],\n            ['width', w],\n            ['height', h],\n            ['fill', backgroundColor]\n          ],\n        });\n      }\n    }\n    if(borderTopWidth.value) {\n      let x1 = x + borderLeftWidth.value;\n      let y1 = y + borderTopWidth.value * 0.5;\n      let x2 = x1 + width;\n      x2 += plw + prw;\n      if(renderMode === mode.CANVAS) {\n        ctx.beginPath();\n        ctx.lineWidth = borderTopWidth.value;\n        ctx.strokeStyle = borderTopColor;\n        if(borderTopStyle === 'dashed') {\n          ctx.setLineDash([borderTopWidth.value * 3, borderTopWidth.value * 2]);\n        }\n        else if(borderTopStyle === 'dotted') {\n          ctx.setLineDash([borderTopWidth.value, borderTopWidth.value]);\n        }\n        else {\n          ctx.setLineDash([]);\n        }\n        ctx.moveTo(x1, y1);\n        ctx.lineTo(x2, y1);\n        ctx.stroke();\n        ctx.closePath();\n      }\n      else if(renderMode === mode.SVG) {\n        let item = {\n          type: 'item',\n          tagName: 'line',\n          props: [\n            ['x1', x1],\n            ['y1', y1],\n            ['x2', x2],\n            ['y2', y1],\n            ['stroke-width', borderTopWidth.value],\n            ['stroke', borderTopColor]\n          ],\n        };\n        if(borderTopStyle === 'dashed') {\n          item.props.push(['stroke-dasharray', `${borderTopWidth.value * 3}, ${borderTopWidth.value * 2}`])\n        }\n        else if(borderTopStyle === 'dotted') {\n          item.props.push(['stroke-dasharray', `${borderTopWidth.value}, ${borderTopWidth.value}`])\n        }\n        virtualDom.bb.push(item);\n      }\n    }\n    if(borderRightWidth.value) {\n      let x1 = x + width + borderLeftWidth.value + borderRightWidth.value * 0.5;\n      let y1 = y;\n      let y2 = y1 + height + borderTopWidth.value + borderBottomWidth.value;\n      x1 += plw + prw;\n      y2 += ptw + pbw;\n      if(renderMode === mode.CANVAS) {\n        ctx.beginPath();\n        ctx.lineWidth = borderRightWidth.value;\n        ctx.strokeStyle = borderRightColor;\n        if(borderRightStyle === 'dashed') {\n          ctx.setLineDash([borderRightWidth.value * 3, borderRightWidth.value * 2]);\n        }\n        else if(borderRightStyle === 'dotted') {\n          ctx.setLineDash([borderRightWidth.value, borderRightWidth.value * 2]);\n        }\n        else {\n          ctx.setLineDash([]);\n        }\n        ctx.moveTo(x1, y1);\n        ctx.lineTo(x1, y2);\n        ctx.stroke();\n        ctx.closePath();\n      }\n      else if(renderMode === mode.SVG) {\n        let item = {\n          type: 'item',\n          tagName: 'line',\n          props: [\n            ['x1', x1],\n            ['y1', y1],\n            ['x2', x1],\n            ['y2', y2],\n            ['stroke-width', borderRightWidth.value],\n            ['stroke', borderRightColor]\n          ],\n        };\n        if(borderRightStyle === 'dashed') {\n          item.props.push(['stroke-dasharray', `${borderRightWidth.value * 3}, ${borderRightWidth.value * 2}`])\n        }\n        else if(borderTopStyle === 'dotted') {\n          item.props.push(['stroke-dasharray', `${borderRightWidth.value}, ${borderRightWidth.value}`])\n        }\n        virtualDom.bb.push(item);\n      }\n    }\n    if(borderBottomWidth.value) {\n      let x1 = x + borderLeftWidth.value;\n      let y1 = y + height + borderTopWidth.value + borderBottomWidth.value * 0.5;\n      let x2 = x1 + width;\n      x2 += plw + prw;\n      y1 += ptw + pbw;\n      if(renderMode === mode.CANVAS) {\n        ctx.beginPath();\n        ctx.lineWidth = borderBottomWidth.value;\n        ctx.strokeStyle = borderBottomColor;\n        if(borderBottomStyle === 'dashed') {\n          ctx.setLineDash([borderBottomWidth.value * 3, borderBottomWidth.value * 2]);\n        }\n        else if(borderBottomStyle === 'dotted') {\n          ctx.setLineDash([borderBottomWidth.value, borderBottomWidth.value * 2]);\n        }\n        else {\n          ctx.setLineDash([]);\n        }\n        ctx.moveTo(x1, y1);\n        ctx.lineTo(x2, y1);\n        ctx.stroke();\n        ctx.closePath();\n      }\n      else if(renderMode === mode.SVG) {\n        let item = {\n          type: 'item',\n          tagName: 'line',\n          props: [\n            ['x1', x1],\n            ['y1', y1],\n            ['x2', x2],\n            ['y2', y1],\n            ['stroke-width', borderBottomWidth.value],\n            ['stroke', borderBottomColor]\n          ],\n        };\n        if(borderBottomStyle === 'dashed') {\n          item.props.push(['stroke-dasharray', `${borderBottomWidth.value * 3}, ${borderBottomWidth.value * 2}`])\n        }\n        else if(borderBottomStyle === 'dotted') {\n          item.props.push(['stroke-dasharray', `${borderBottomWidth.value}, ${borderBottomWidth.value}`])\n        }\n        virtualDom.bb.push(item);\n      }\n    }\n    if(borderLeftWidth.value) {\n      let x1 = x + borderLeftWidth.value * 0.5;\n      let y1 = y;\n      let y2 = y1 + height + borderTopWidth.value + borderBottomWidth.value;\n      y2 += ptw + pbw;\n      if(renderMode === mode.CANVAS) {\n        ctx.beginPath();\n        ctx.lineWidth = borderLeftWidth.value;\n        ctx.strokeStyle = borderLeftColor;\n        if(borderLeftStyle === 'dashed') {\n          ctx.setLineDash([borderLeftWidth.value * 3, borderLeftWidth.value * 2]);\n        }\n        else if(borderLeftStyle === 'dotted') {\n          ctx.setLineDash([borderLeftWidth.value, borderLeftWidth.value * 2]);\n        }\n        else {\n          ctx.setLineDash([]);\n        }\n        ctx.moveTo(x1, y1);\n        ctx.lineTo(x1, y2);\n        ctx.stroke();\n        ctx.closePath();\n      }\n      else if(renderMode === mode.SVG) {\n        let item = {\n          type: 'item',\n          tagName: 'line',\n          props: [\n            ['x1', x1],\n            ['y1', y1],\n            ['x2', x1],\n            ['y2', y2],\n            ['stroke-width', borderLeftWidth.value],\n            ['stroke', borderLeftColor]\n          ],\n        };\n        if(borderLeftStyle === 'dashed') {\n          item.props.push(['stroke-dasharray', `${borderLeftWidth.value * 3}, ${borderLeftWidth.value * 2}`])\n        }\n        else if(borderLeftStyle === 'dotted') {\n          item.props.push(['stroke-dasharray', `${borderLeftWidth.value}, ${borderLeftWidth.value}`])\n        }\n        virtualDom.bb.push(item);\n      }\n    }\n  }\n\n  get tagName() {\n    return this.__tagName;\n  }\n  get mtw() {\n    return this.__mtw;\n  }\n  get mrw() {\n    return this.__mrw;\n  }\n  get mbw() {\n    return this.__mbw;\n  }\n  get mlw() {\n    return this.__mlw;\n  }\n  get ptw() {\n    return this.__ptw;\n  }\n  get prw() {\n    return this.__prw;\n  }\n  get pbw() {\n    return this.__pbw;\n  }\n  get plw() {\n    return this.__plw;\n  }\n  get outerWidth() {\n    let { mlw, mrw, plw, prw, style: {\n      borderLeftWidth,\n      borderRightWidth,\n    } } = this;\n    return this.width\n      + borderLeftWidth.value\n      + borderRightWidth.value\n      + mlw\n      + mrw\n      + plw\n      + prw;\n  }\n  get outerHeight() {\n    let { mtw, mbw, ptw, pbw, style: {\n      borderTopWidth,\n      borderBottomWidth,\n    } } = this;\n    return this.height\n      + borderTopWidth.value\n      + borderBottomWidth.value\n      + mtw\n      + mbw\n      + ptw\n      + pbw;\n  }\n  get listener() {\n    return this.__listener;\n  }\n}\n\nexport default Xom;\n","'use strict';\n\nexport default {\n  arial: {\n    lhr: 1.14990234375, // 默认line-height ratio，(67+1854+434)/2048\n    car: 1.1171875, // content-area ratio，(1854+434)/2048\n    blr: 0.9052734375, // base-line ratio，1854/2048\n    mdr: 0.64599609375, // middle ratio，(1854-1062/2)/2048\n    lgr: 0.03271484375, // line-gap ratio，67/2048\n  },\n};\n","const RESET = {\n  position: 'static',\n  display: 'block',\n  borderSizing: 'content-box',\n  top: 'auto',\n  right: 'auto',\n  bottom: 'auto',\n  left: 'auto',\n  marginTop: 0,\n  marginRight: 0,\n  marginBottom: 0,\n  marginLeft: 0,\n  paddingTop: 0,\n  paddingRight: 0,\n  paddingBottom: 0,\n  paddingLeft: 0,\n  fontSize: 16,\n  fontFamily: 'arial',\n  color: '#000',\n  fontStyle: 'normal',\n  fontWeight: 400,\n  lineHeight: 'normal',\n  borderTopWidth: 0,\n  borderRightWidth: 0,\n  borderBottomWidth: 0,\n  borderLeftWidth: 0,\n  borderTopStyle: 'solid',\n  borderRightStyle: 'solid',\n  borderBottomStyle: 'solid',\n  borderLeftStyle: 'solid',\n  verticalAlign: 'baseline',\n  width: 'auto',\n  height: 'auto',\n  flexGrow: 0,\n  flexShrink: 1,\n  flexBasis: 'auto',\n  flexDirection: 'row',\n  justifyContent: 'flex-start',\n  alignItems: 'stretch',\n  textAlign: 'left',\n  visibility: 'visible',\n  fill: '#000',\n  stroke: '#000',\n  strokeWidth: 0,\n  strokeDasharray: [],\n};\n\nlet reset = [];\n\nObject.keys(RESET).forEach(k => {\n  let v = RESET[k];\n  reset.push({\n    k,\n    v,\n  });\n});\n\nexport default reset;\n","let toString = {}.toString;\nfunction isType(type) {\n  return function(obj) {\n    return toString.call(obj) === '[object ' + type + ']';\n  }\n}\n\nlet isNumber = isType('Number');\n\nfunction joinSourceArray(arr) {\n  var res = '';\n  for(var i = 0, len = arr.length; i < len; i++) {\n    var item = arr[i];\n    if(Array.isArray(item)) {\n      res += joinSourceArray(item);\n    }\n    else {\n      res += stringify(item);\n    }\n  }\n  return res;\n}\n\nfunction stringify(s) {\n  if(isNil(s)) {\n    return '';\n  }\n  return s.toString();\n}\n\nfunction encodeHtml(s, prop) {\n  if(prop) {\n    return s.replace(/\"/g, '&quot;');\n  }\n  return s.replace(/&/g, '&amp;').replace(/</g, '&lt;');\n}\n\nfunction isNil(v) {\n  return v === undefined || v === null;\n}\n\nfunction joinVirtualDom(vd) {\n  if(vd.type === 'item') {\n    let s = '';\n    vd.props.forEach(item => {\n      s += ` ${item[0]}=\"${item[1]}\"`;\n    });\n    if(vd.tagName === 'text') {\n      return `<text${s}>${vd.content}</text>`;\n    }\n    return `<${vd.tagName}${s}/>`;\n  }\n  else if(vd.type === 'text') {\n    let s = ``;\n    vd.children.forEach(item => {\n      s += joinVirtualDom(item);\n    });\n    return `<g>${s}</g>`;\n  }\n  else if(vd.type === 'dom') {\n    let s = '<g>';\n    vd.bb.forEach(item => {\n      s += joinVirtualDom(item);\n    });\n    s += '</g><g>';\n    vd.children.forEach(item => {\n      s += joinVirtualDom(item);\n    });\n    s += '</g>';\n    return `<g>${s}</g>`;\n  }\n  else if(vd.type === 'geom') {\n    let s = '<g>';\n    vd.bb.forEach(item => {\n      s += joinVirtualDom(item);\n    });\n    s += '</g><g>';\n    vd.content.forEach(item => {\n      s += joinVirtualDom(item);\n    });\n    s += '</g>';\n    return `<g>${s}</g>`;\n  }\n}\n\nlet util = {\n  isObject: isType('Object'),\n  isString: isType('String'),\n  isFunction: isType('Function'),\n  isNumber,\n  isBoolean: isType('Boolean'),\n  isDate: isType('Date'),\n  stringify,\n  joinSourceArray(arr) {\n    return joinSourceArray(arr);\n  },\n  encodeHtml,\n  isNil,\n  joinVirtualDom,\n};\n\nexport default util;\n","import unit from './unit';\nimport font from './font';\nimport reset from './reset';\nimport util from '../util';\n\nfunction parserOneBorder(style, direction) {\n  let key = `border${direction}`;\n  if(!style[key]) {\n    return;\n  }\n  let w = /\\b\\d+px\\b/i.exec(style[key]);\n  if(w) {\n    style[key + 'Width'] = w[0];\n  }\n  let s = /\\b(solid|dashed|dotted)\\b/i.exec(style[key]);\n  if(s) {\n    style[key + 'Style'] = s[1];\n  }\n  let c = /#[0-9a-f]{3,6}/i.exec(style[key]);\n  if(c && [4, 7].indexOf(c[0].length) > -1) {\n    style[key + 'Color'] = c[0];\n  }\n}\n\nfunction normalize(style) {\n  // 默认reset\n  reset.forEach(item => {\n    if(!style.hasOwnProperty(item.k)) {\n      style[item.k] = item.v;\n    }\n  });\n  // 处理缩写\n  // TODO: 重复声明时优先级\n  if(style.background) {\n    let bgc = /#[0-9a-f]{3,6}/i.exec(style.background);\n    if(bgc && [4, 7].indexOf(bgc[0].length) > -1) {\n      style.backgroundColor = bgc[0];\n    }\n  }\n  if(style.flex) {\n    if(style.flex === 'none') {\n      style.flexGrow = 0;\n      style.flexShrink = 0;\n      style.flexBasis = 'auto';\n    }\n    else if(style.flex === 'auto') {\n      style.flexGrow = 1;\n      style.flexShrink = 1;\n      style.flexBasis = 'auto';\n    }\n    else if(/^[\\d.]+$/.test(style.flex)) {\n      style.flexGrow = parseFloat(style.flex);\n      style.flexShrink = 1;\n      style.flexBasis = 0;\n    }\n    else if(/^[\\d.]+px$/.test(style.flex)) {}\n    else if(/^[\\d.]+%$/.test(style.flex)) {}\n    else {\n      style.flexGrow = 0;\n      style.flexShrink = 1;\n      style.flexBasis = 'auto';\n    }\n  }\n  if(style.border) {\n    style.borderTop = style.borderRight = style.borderBottom = style.borderLeft = style.border;\n  }\n  if(style.margin) {\n    style.marginTop = style.marginRight = style.marginBottom = style.marginLeft = style.margin;\n  }\n  if(style.padding) {\n    style.paddingTop = style.paddingRight = style.paddingBottom = style.paddingLeft = style.padding;\n  }\n  if(style.transform) {\n    let match = style.transform.match(/\\w+\\(.+?\\)/g);\n    if(match) {\n      let transform = style.transform = {};\n      match.forEach(item => {\n        let i = item.indexOf('(');\n        let k = item.slice(0, i);\n        let v = item.slice(i + 1, item.length - 1);\n        if(k === 'matrix') {\n          let arr = v.split(',');\n          arr = arr.map(item => parseFloat(item));\n          if(arr.length > 6) {\n            arr = arr.slice(0, 6);\n          }\n          else if(arr.length < 6) {\n            while(arr.length < 6) {\n              arr.push(0);\n            }\n          }\n          transform.matrix = arr;\n        }\n        else if(k === 'matrix3d') {\n          let arr = v.split(',');\n          arr = arr.map(item => parseFloat(item));\n          if(arr.length > 9) {\n            arr = arr.slice(0, 9);\n          }\n          else if(arr.length < 9) {\n            while(arr.length < 9) {\n              arr.push(0);\n            }\n          }\n          transform.matrix3d = arr;\n        }\n        else if(k === 'translateX') {\n          transform.translateX = v;\n        }\n        else if(k === 'translateY') {\n          transform.translateY = v;\n        }\n        else if(k === 'translateZ') {\n          transform.translateZ = v;\n        }\n        else if(k === 'translate') {\n          let arr = v.split(',');\n          transform.translateX = arr[0];\n          transform.translateY = arr[1];\n        }\n        else if(k === 'translate3d') {\n          let arr = v.split(',');\n          transform.translateX = arr[0];\n          transform.translateY = arr[1];\n          transform.translateZ = arr[2];\n        }\n        else if(k === 'scaleX') {\n          transform.scaleX = parseFloat(v) || 0;\n        }\n        else if(k === 'scaleY') {\n          transform.scaleY = parseFloat(v) || 0;\n        }\n        else if(k === 'scaleZ') {\n          transform.scaleZ = parseFloat(v) || 0;\n        }\n        else if(k === 'scale') {\n          let arr = v.split(',');\n          transform.scaleX = parseFloat(arr[0]) || 0;\n          transform.scaleY = parseFloat(arr[1]) || 0;\n        }\n        else if(k === 'scale3d') {\n          let arr = v.split(',');\n          transform.scaleX = parseFloat(arr[0]) || 0;\n          transform.scaleY = parseFloat(arr[1]) || 0;\n          transform.scaleZ = parseFloat(arr[2]) || 0;\n        }\n        else if(k === 'rotateX') {\n          transform.rotateX = parseFloat(v) || 0;\n        }\n        else if(k === 'rotateY') {\n          transform.rotateY = parseFloat(v) || 0;\n        }\n        else if(k === 'rotateZ') {\n          transform.rotateZ = parseFloat(v) || 0;\n        }\n        else if(k === 'rotate') {\n          let arr = v.split(',');\n          transform.rotateX = parseFloat(arr[0]) || 0;\n          transform.rotateY = parseFloat(arr[1]) || 0;\n        }\n        else if(k === 'rotate3d') {\n          let arr = v.split(',');\n          transform.rotateX = parseFloat(arr[0]) || 0;\n          transform.rotateY = parseFloat(arr[1]) || 0;\n          transform.rotateZ = parseFloat(arr[2]) || 0;\n        }\n        else if(k === 'skewX') {\n          transform.skewX = parseFloat(v) || 0;\n        }\n        else if(k === 'skewY') {\n          transform.skewY = parseFloat(v) || 0;\n        }\n        else if(k === 'skew') {\n          let arr = v.split(',');\n          transform.skewX = parseFloat(arr[0]) || 0;\n          transform.skewY = parseFloat(arr[1]) || 0;\n        }\n        else if(k === 'perspective') {\n          transform.perspective = parseFloat(v);\n        }\n      });\n      [\n        'translateX',\n        'translateY',\n        'translateZ',\n      ].forEach(k => {\n        let v = transform[k];\n        // 编译工具前置解析优化跳出\n        if(!util.isNil(v) && v.unit) {\n          return;\n        }\n        if(/%$/.test(v)) {\n          v = parseFloat(v) || 0;\n          transform[k] = {\n            value: v,\n            unit: unit.PERCENT,\n          };\n        }\n        else {\n          v = parseFloat(v) || 0;\n          transform[k] = {\n            value: v,\n            unit: unit.PX,\n          };\n        }\n      });\n    }\n  }\n  parserOneBorder(style, 'Top');\n  parserOneBorder(style, 'Right');\n  parserOneBorder(style, 'Bottom');\n  parserOneBorder(style, 'Left');\n  // 转化不同单位值为对象标准化\n  [\n    'marginTop',\n    'marginRight',\n    'marginBottom',\n    'marginLeft',\n    'paddingTop',\n    'paddingRight',\n    'paddingBottom',\n    'paddingLeft',\n    'borderTopWidth',\n    'borderRightWidth',\n    'borderBottomWidth',\n    'borderLeftWidth',\n    'top',\n    'right',\n    'bottom',\n    'left',\n    'width',\n    'height',\n    'flexBasis',\n  ].forEach(k => {\n    let v = style[k];\n    // 编译工具前置解析优化跳出\n    if(!util.isNil(v) && v.unit) {\n      return;\n    }\n    if(v === 'auto') {\n      style[k] = {\n        unit: unit.AUTO,\n      };\n    }\n    else if(/%$/.test(v)) {\n      // border不支持百分比\n      if(k.indexOf('border') === 0) {\n        style[k] = {\n          value: 0,\n          unit: unit.PX,\n        };\n      }\n      else {\n        v = parseFloat(v) || 0;\n        style[k] = {\n          value: v,\n          unit: unit.PERCENT,\n        };\n      }\n    }\n    else {\n      v = parseFloat(v) || 0;\n      style[k] = {\n        value: v,\n        unit: unit.PX,\n      };\n    }\n  });\n  // 计算lineHeight为px值，最小范围\n  let lineHeight = style.lineHeight;\n  if(lineHeight === 'normal') {\n    lineHeight = {\n      value: style.fontSize * font.arial.lhr,\n      unit: unit.PX,\n    };\n  }\n  else if(/px$/.test(lineHeight)) {\n    lineHeight = parseFloat(lineHeight);\n    lineHeight = {\n      value: Math.max(style.fontSize, lineHeight),\n      unit: unit.PX,\n    };\n  }\n  // 纯数字比例\n  else {\n    lineHeight = parseFloat(lineHeight) || 'normal';\n    // 非法数字\n    if(lineHeight === 'normal') {\n      lineHeight = {\n        value: style.fontSize * font.arial.lhr,\n        unit: unit.PX,\n      };\n    }\n    else {\n      lineHeight = {\n        value: lineHeight * style.fontSize,\n        unit: unit.PX,\n      };\n    }\n  }\n  style.lineHeight = lineHeight;\n}\n\nfunction setFontStyle(style) {\n  let { fontStyle, fontWeight, fontSize, fontFamily } = style;\n  return `${fontStyle} ${fontWeight} ${fontSize}px/${fontSize}px ${fontFamily}`;\n}\n\nfunction getBaseLine(style) {\n  let normal = style.fontSize * font.arial.lhr;\n  return (style.lineHeight.value - normal) * 0.5 + style.fontSize * font.arial.blr;\n}\n\nexport default {\n  normalize,\n  setFontStyle,\n  getBaseLine,\n};\n","import css from '../style/css';\nimport mode from '../mode';\n\nclass LineBox {\n  constructor(parent, x, y, w, content, style) {\n    this.__parent = parent;\n    this.__x = x;\n    this.__y = y;\n    this.__width = w;\n    this.__content = content;\n    this.__style = style;\n    this.__virtualDom = {};\n  }\n\n  render(renderMode, ctx) {\n    let { style, content, x, y, parent: { ox, oy } } = this;\n    y += css.getBaseLine(style);\n    x += ox;\n    y += oy;\n    if(renderMode === mode.CANVAS) {\n      ctx.fillText(content, x, y);\n    }\n    else if(renderMode === mode.SVG) {\n      this.__virtualDom = {\n        type: 'item',\n        tagName: 'text',\n        props: [\n          ['x', x],\n          ['y', y],\n          ['fill', style.color],\n          ['font-size', `${style.fontSize}px`]\n        ],\n        content,\n      };\n    }\n  }\n\n  __offsetX(diff) {\n    this.__x += diff;\n  }\n\n  __offsetY(diff) {\n    this.__y += diff;\n  }\n\n  get x() {\n    return this.__x;\n  }\n  get y() {\n    return this.__y;\n  }\n  get width() {\n    return this.__width;\n  }\n  get content() {\n    return this.__content;\n  }\n  get style() {\n    return this.__style;\n  }\n  get baseLine() {\n    return css.getBaseLine(this.style);\n  }\n  get virtualDom() {\n    return this.__virtualDom;\n  }\n  get parent() {\n    return this.__parent;\n  }\n}\n\nexport default LineBox;\n","import Node from './Node';\nimport LineBox from './LineBox';\nimport css from '../style/css';\nimport mode from '../mode';\n\nconst CHAR_WIDTH_CACHE = {};\n\nclass Text extends Node {\n  constructor(content) {\n    super();\n    this.__content = content.toString();\n    this.__lineBoxes = [];\n    this.__charWidthList = [];\n    this.__charWidth = 0;\n    this.__textWidth = 0;\n  }\n\n  // 预先计算每个字的宽度\n  __measure() {\n    this.__charWidthList = [];\n    let { ctx, content, style, charWidthList, renderMode } = this;\n    if(renderMode === mode.CANVAS) {\n      ctx.font = css.setFontStyle(style);\n    }\n    let cache = CHAR_WIDTH_CACHE[style.fontSize] = CHAR_WIDTH_CACHE[style.fontSize] || {};\n    let length = content.length;\n    let sum = 0;\n    for(let i = 0; i < length; i++) {\n      let char = content.charAt(i);\n      let mw;\n      if(cache.hasOwnProperty(char)) {\n        mw = cache[char];\n      }\n      else if(renderMode === mode.CANVAS) {\n        mw = cache[char] = ctx.measureText(char).width;\n      }\n      else if(renderMode === mode.SVG) {\n        mw = cache[char] = mode.measure(char, style);\n      }\n      charWidthList.push(mw);\n      sum += mw;\n      this.__charWidth = Math.max(this.charWidth, mw);\n    }\n    this.__textWidth = sum;\n  }\n\n  __layout(data, isVirtual) {\n    let { x, y, w, h } = data;\n    this.__x = x;\n    this.__y = y;\n    let maxX = x;\n    let { ctx, content, style, lineBoxes, charWidthList, renderMode } = this;\n    // 顺序尝试分割字符串为lineBox，形成多行\n    let begin = 0;\n    let i = 0;\n    let count = 0;\n    let length = content.length;\n    while(i < length) {\n      count += charWidthList[i];\n      if (count === w) {\n        let lineBox = new LineBox(this, x, y, count, content.slice(begin, i + 1), style);\n        lineBoxes.push(lineBox);\n        maxX = Math.max(maxX, x + count);\n        y += this.style.lineHeight.value;\n        begin = i + 1;\n        i = begin + 1;\n        count = 0;\n      }\n      else if (count > w) {\n        // 宽度不足时无法跳出循环，至少也要塞个字符形成一行\n        if(i === begin) {\n          i = begin + 1;\n        }\n        let lineBox = new LineBox(this, x, y, count - charWidthList[i], content.slice(begin, i), style);\n        lineBoxes.push(lineBox);\n        maxX = Math.max(maxX, x + count - charWidthList[i]);\n        y += this.style.lineHeight.value;\n        begin = i;\n        i = i + 1;\n        count = 0;\n      }\n      else {\n        i++;\n      }\n    }\n    if(begin < length && begin < i) {\n      count = 0;\n      for(i = begin ;i < length; i++) {\n        count += charWidthList[i];\n      }\n      let lineBox = new LineBox(this, x, y, count, content.slice(begin, length), style);\n      lineBoxes.push(lineBox);\n      maxX = Math.max(maxX, x + count);\n      y += style.lineHeight.value;\n    }\n    this.__width = maxX - x;\n    this.__height = y - data.y;\n    if(isVirtual) {\n      this.__lineBoxes = [];\n    }\n    else {\n      let { textAlign } = style;\n      if(['center', 'right'].indexOf(textAlign) > -1) {\n        lineBoxes.forEach(lineBox => {\n          let diff = this.__width - lineBox.width;\n          if(diff > 0) {\n            lineBox.__offsetX(textAlign === 'center' ? diff * 0.5 : diff);\n          }\n        });\n      }\n    }\n  }\n\n  render(renderMode) {\n    const { ctx, style } = this;\n    if(renderMode === mode.CANVAS) {\n      ctx.font = css.setFontStyle(style);\n      ctx.fillStyle = style.color;\n    }\n    this.lineBoxes.forEach(item => {\n      item.render(renderMode, ctx);\n    });\n    if(renderMode === mode.SVG) {\n      this.__virtualDom = {\n        type: 'text',\n        children: this.lineBoxes.map(lineBox => lineBox.virtualDom),\n      };\n    }\n  }\n\n  __tryLayInline(w) {\n    return w - this.textWidth;\n  }\n\n  __calMaxAndMinWidth() {\n    let n = 0;\n    this.charWidthList.forEach(item => {\n      n = Math.max(n, item);\n    });\n    return { max: this.textWidth, min: n };\n  }\n\n  get content() {\n    return this.__content;\n  }\n  set content(v) {\n    this.__content = v;\n  }\n  get lineBoxes() {\n    return this.__lineBoxes;\n  }\n  get charWidthList() {\n    return this.__charWidthList;\n  }\n  get charWidth() {\n    return this.__charWidth;\n  }\n  get textWidth() {\n    return this.__textWidth;\n  }\n  get baseLine() {\n    let last = this.lineBoxes[this.lineBoxes.length - 1];\n    return last.y - this.y + last.baseLine;\n  }\n  get renderMode() {\n    return this.__renderMode;\n  }\n}\n\nexport default Text;\n","class LineGroup {\n  constructor(x, y) {\n    this.__list = [];\n    this.__x = x;\n    this.__y = y;\n    this.__baseLine = 0;\n  }\n\n  add(item) {\n    this.list.push(item);\n  }\n\n  __calBaseLine() {\n    let baseLine = 0;\n    this.list.forEach(item => {\n      baseLine = Math.max(baseLine, item.baseLine);\n    });\n    return baseLine;\n  }\n\n  verticalAlign() {\n    this.__baseLine = this.__calBaseLine();\n    // 仅当有2个和以上时才需要vertical对齐调整\n    if(this.list.length > 1) {\n      this.list.forEach(item => {\n        if(item.baseLine !== this.baseLine) {\n          item.__offsetY(this.baseLine - item.baseLine);\n        }\n      });\n    }\n  }\n\n  horizonAlign(diff) {\n    this.list.forEach(item => {\n      item.__offsetX(diff);\n    });\n  }\n\n  get list() {\n    return this.__list;\n  }\n  get x() {\n    return this.__x;\n  }\n  get y() {\n    return this.__y;\n  }\n  get width() {\n    let width = 0;\n    this.list.forEach(item => {\n      width += item.width;\n    });\n    return width;\n  }\n  get height() {\n    let height = 0;\n    this.list.forEach(item => {\n      height = Math.max(height, item.height);\n    });\n    return height;\n  }\n  get baseLine() {\n    return this.__baseLine;\n  }\n  get size() {\n    return this.__list.length;\n  }\n}\n\nexport default LineGroup;\n","import Xom from '../node/Xom';\nimport css from '../style/css';\nimport unit from '../style/unit';\nimport mode from '../mode';\n\nconst IMPLEMENT = {};\n\nclass Geom extends Xom {\n  constructor(tagName, props) {\n    super(tagName, props);\n  }\n\n  __initStyle() {\n    css.normalize(this.style);\n  }\n\n  __tryLayInline(w, total) {\n    // 无children，直接以style的width为宽度，不定义则为0\n    let { style: { width } } = this;\n    if(width.unit === unit.PX) {\n      return w - width.value;\n    }\n    else if(width.unit === unit.PERCENT) {\n      return w - total * width.value * 0.01;\n    }\n    return w;\n  }\n\n  __calAutoBasis(isDirectionRow, w, h) {\n    let b = 0;\n    let min = 0;\n    let max = 0;\n    let { style } = this;\n    // 计算需考虑style的属性\n    let {\n      width,\n      height,\n      borderTopWidth,\n      borderRightWidth,\n      borderBottomWidth,\n      borderLeftWidth,\n    } = style;\n    let main = isDirectionRow ? width : height;\n    if(main.unit !== unit.AUTO) {\n      b = max += main.value;\n    }\n    // border也得计算在内\n    if(isDirectionRow) {\n      let w = borderRightWidth.value + borderLeftWidth.value;\n      b += w;\n      max += w;\n      min += w;\n    }\n    else {\n      let h = borderTopWidth.value + borderBottomWidth.value;\n      b += h;\n      max += h;\n      min += h;\n    }\n    return { b, min, max };\n  }\n\n  __layoutBlock(data) {\n    let { x, y, w, h } = data;\n    this.__x = x;\n    this.__y = y;\n    this.__width = w;\n    let { style } = this;\n    let {\n      width,\n      height,\n      borderTopWidth,\n      borderRightWidth,\n      borderBottomWidth,\n      borderLeftWidth,\n    } = style;\n    // 除了auto外都是固定高度\n    let fixedHeight;\n    if(width && width.unit !== unit.AUTO) {\n      switch(width.unit) {\n        case unit.PX:\n          w = width.value;\n          break;\n      }\n    }\n    if(height && height.unit !== unit.AUTO) {\n      fixedHeight = true;\n      switch(height.unit) {\n        case unit.PX:\n          h = height.value;\n          break;\n        case unit.PERCENT:\n          h *= height.value * 0.01;\n          break;\n      }\n    }\n    // border影响x和y和尺寸\n    x += borderLeftWidth.value;\n    data.x = x;\n    y += borderTopWidth.value;\n    data.y = y;\n    w -= borderLeftWidth.value + borderRightWidth.value;\n    h -= borderTopWidth.value + borderBottomWidth.value;\n    this.__width = w;\n    this.__height = fixedHeight ? h : 0;\n  }\n\n  __layoutFlex(data) {\n    // 无children所以等同于block\n    this.__layoutBlock(data);\n  }\n\n  __layoutInline(data) {\n    let { x, y, w, h } = data;\n    this.__x = x;\n    this.__y = y;\n    let { style } = this;\n    let {\n      width,\n      height,\n      borderTopWidth,\n      borderRightWidth,\n      borderBottomWidth,\n      borderLeftWidth,\n    } = style;\n    // 除了auto外都是固定高度\n    let fixedWidth;\n    let fixedHeight;\n    if(width && width.unit !== unit.AUTO) {\n      fixedWidth = true;\n      switch(width.unit) {\n        case unit.PX:\n          w = width.value;\n          break;\n      }\n    }\n    if(height && height.unit !== unit.AUTO) {\n      fixedHeight = true;\n      switch(height.unit) {\n        case unit.PX:\n          h = height.value;\n          break;\n      }\n    }\n    // border影响x和y\n    x += borderLeftWidth.value;\n    data.x = x;\n    y += borderTopWidth.value;\n    data.y = y;\n    w -= borderLeftWidth.value + borderRightWidth.value;\n    h -= borderTopWidth.value + borderBottomWidth.value;\n    // 元素的width不能超过父元素w\n    this.__width = fixedWidth ? w : x - data.x;\n    this.__height = fixedHeight ? h : y - data.y;\n  }\n\n  __calAbs() {\n    return 0;\n  }\n\n  __emitEvent(e, force) {\n    let { event: { type }, rx: xe, ry: ye, covers } = e;\n    let { listener, style, x, y, outerWidth, outerHeight } = this;\n    if(style.display === 'none') {\n      return;\n    }\n    let cb;\n    if(listener.hasOwnProperty(type)) {\n      cb = listener[type];\n    }\n    if(force) {\n      cb && cb(e);\n      return;\n    }\n    if(xe >= x && ye >= y && xe <= x + outerWidth && ye <= y + outerHeight) {\n      for(let i = 0, len = covers.length; i < len; i++) {\n        let { x: x2, y: y2, w, h: h } = covers[i];\n        if(xe >= x2 && ye >= y2 && xe <= x2 + w && ye <= y2 + h) {\n          return;\n        }\n      }\n      if(!e.target) {\n        e.target = this;\n      }\n      covers.push({\n        x,\n        y,\n        w: outerWidth,\n        h: outerHeight,\n      });\n      cb && cb(e);\n    }\n  }\n\n  render(renderMode) {\n    super.render(renderMode);\n    if(renderMode === mode.SVG) {\n      this.__virtualDom = {\n        ...super.virtualDom,\n        type: 'geom',\n        content: [],\n      };\n    }\n  }\n\n  get tagName() {\n    return this.__tagName;\n  }\n  get baseLine() {\n    return this.__height;\n  }\n\n  static getImplement(name) {\n    if(!IMPLEMENT.hasOwnProperty(name)) {\n      throw new Error(`Geom has not register: ${name}`);\n    }\n    return IMPLEMENT[name];\n  }\n  static register(name, implement) {\n    if(IMPLEMENT.hasOwnProperty(name)) {\n      throw new Error(`Geom has already register: ${name}`);\n    }\n    IMPLEMENT[name] = implement;\n  }\n}\n\nexport default Geom;\n","import Xom from './Xom';\nimport Text from './Text';\nimport LineGroup from './LineGroup';\nimport Geom from '../geom/Geom';\nimport util from '../util';\nimport css from '../style/css';\nimport unit from '../style/unit';\nimport mode from '../mode';\n\nconst TAG_NAME = {\n  'div': true,\n  'span': true,\n};\nconst INLINE = {\n  'span': true,\n};\n\nclass Dom extends Xom {\n  constructor(tagName, props, children) {\n    super(tagName, props);\n    this.__children = children;\n    this.__flowChildren = []; // 非绝对定位孩子\n    this.__absChildren = []; // 绝对定位孩子\n    this.__lineGroups = []; // 一行inline元素组成的LineGroup对象后的存放列表\n    this.__flowY = 0; // 文档流布局结束后的y坐标，供absolute布局默认位置使用\n  }\n\n  /**\n   * 1. 封装string为Text节点\n   * 2. 打平children中的数组，变成一维\n   * 3. 合并相连的Text节点\n   * 4. 检测inline不能包含block和flex\n   * 5. 设置parent和prev/next和ctx和mode\n   */\n  __traverse(ctx, renderMode) {\n    let list = [];\n    this.__traverseChildren(this.children, list, ctx, renderMode);\n    for(let i = list.length - 1; i > 0; i--) {\n      let item = list[i];\n      if(item instanceof Text) {\n        let prev = list[i - 1];\n        if(prev instanceof Text) {\n          prev.content += item.content;\n          list.splice(i, 1);\n        }\n        else {\n          i--;\n        }\n      }\n    }\n    if(this.style.display === 'inline' && this.parent.style.display !== 'flex') {\n      for(let i = list.length - 1; i >= 0; i--) {\n        let item = list[i];\n        if(item instanceof Dom && item.style.display !== 'inline') {\n          throw new Error('inline can not contain block/flex');\n        }\n      }\n    }\n    let prev = null;\n    list.forEach(item => {\n      item.__ctx = ctx;\n      if(prev) {\n        prev.__next = item;\n      }\n      item.__parent = this;\n      item.__prev = prev;\n      if(item instanceof Text || item.style.position !== 'absolute') {\n        this.__flowChildren.push(item);\n      }\n      else {\n        this.__absChildren.push(item);\n      }\n    });\n    this.__children = list;\n  }\n\n  __traverseChildren(children, list, ctx, renderMode) {\n    if(Array.isArray(children)) {\n      children.forEach(item => {\n        this.__traverseChildren(item, list, ctx, renderMode);\n      });\n    }\n    else if(children instanceof Dom) {\n      list.push(children);\n      children.__traverse(ctx, renderMode);\n    }\n    // 图形没有children\n    else if(children instanceof Geom) {\n      list.push(children);\n    }\n    // 排除掉空的文本\n    else if(!util.isNil(children)) {\n      let text = new Text(children);\n      text.__renderMode = renderMode;\n      list.push(text);\n    }\n  }\n\n  // 合并设置style，包括继承和默认值，修改一些自动值和固定值，测量所有文字的宽度\n  __initStyle() {\n    let style = this.__style;\n    // 仅支持flex/block/inline/none\n    if(!style.display || ['flex', 'block', 'inline', 'none'].indexOf(style.display) === -1) {\n      if(INLINE.hasOwnProperty(this.tagName)) {\n        style.display = 'inline';\n      }\n      else {\n        style.display = 'block';\n      }\n    }\n    // 继承父元素样式\n    let parent = this.parent;\n    if(parent) {\n      let parentStyle = parent.style;\n      ['fontSize', 'fontWeight', 'fontStyle', 'lineHeight', 'wordBreak', 'color', 'textAlign'].forEach(k => {\n        if(!style.hasOwnProperty(k) && parentStyle.hasOwnProperty(k)) {\n          style[k] = parentStyle[k];\n        }\n      });\n    }\n    // 标准化处理，默认值、简写属性\n    css.normalize(style);\n    this.children.forEach(item => {\n      if(item instanceof Xom) {\n        item.__initStyle();\n      }\n      else {\n        item.__style = style;\n        // 文字首先测量所有字符宽度\n        item.__measure();\n      }\n    });\n  }\n\n  // 给定父宽度情况下，尝试行内放下后的剩余宽度，为负数即放不下\n  __tryLayInline(w, total) {\n    let { flowChildren, style: { width } } = this;\n    if(width.unit === unit.PX) {\n      return w - width.value;\n    }\n    else if(width.unit === unit.PERCENT) {\n      return w - total * width.value * 0.01;\n    }\n    for(let i = 0; i < flowChildren.length; i++) {\n      // 当放不下时直接返回，无需继续多余的尝试计算\n      if(w < 0) {\n        return w;\n      }\n      let item = flowChildren[i];\n      if(item instanceof Xom) {\n        w -= item.__tryLayInline(w, total);\n      }\n      else {\n        w -= item.textWidth;\n      }\n    }\n    return w;\n  }\n\n  // 设置y偏移值，递归包括children，此举在flex行元素的child进行justify-content对齐用\n  __offsetX(diff) {\n    super.__offsetX(diff);\n    this.flowChildren.forEach(item => {\n      if(item) {\n        item.__offsetX(diff);\n      }\n    });\n  }\n\n  // 设置y偏移值，递归包括children，此举在初步确定inline布局后设置元素vertical-align用\n  __offsetY(diff) {\n    super.__offsetY(diff);\n    this.flowChildren.forEach(item => {\n      if(item) {\n        item.__offsetY(diff);\n      }\n    });\n  }\n\n  __calAutoBasis(isDirectionRow, w, h, isRecursion) {\n    let b = 0;\n    let min = 0;\n    let max = 0;\n    let { mtw, mrw, mbw, mlw, ptw, prw, pbw, plw, flowChildren, style } = this;\n    // 计算需考虑style的属性\n    let {\n      width,\n      height,\n      borderTopWidth,\n      borderRightWidth,\n      borderBottomWidth,\n      borderLeftWidth,\n    } = style;\n    let main = isDirectionRow ? width : height;\n    if(main.unit === unit.PX) {\n      b = max = main.value;\n      // 递归时children的长度会影响flex元素的最小宽度\n      if(isRecursion) {\n        min = b;\n      }\n    }\n    // 递归children取最大值\n    flowChildren.forEach(item => {\n      if(item instanceof Xom) {\n        let { b: b2, min: min2, max: max2 } = item.__calAutoBasis(isDirectionRow, w, h, true);\n        b = Math.max(b, b2);\n        min = Math.max(min, min2);\n        max = Math.max(max, max2);\n      }\n      else if(isDirectionRow) {\n        min = Math.max(item.charWidth, min);\n        max = Math.max(item.textWidth, max);\n      }\n      else {\n        item.__layout({\n          x: 0,\n          y: 0,\n          w,\n          h,\n        }, true);\n        min = Math.max(min, item.height);\n        max = Math.max(max, item.height);\n      }\n    });\n    // margin/padding/border也得计算在内\n    if(isDirectionRow) {\n      let w = borderRightWidth.value + borderLeftWidth.value + mlw + mrw + plw + prw;\n      b += w;\n      max += w;\n      min += w;\n    }\n    else {\n      let h = borderTopWidth.value + borderBottomWidth.value + mtw + mbw + ptw + pbw;\n      b += h;\n      max += h;\n      min += h;\n    }\n    return { b, min, max };\n  }\n\n  __calAbs(isDirectionRow) {\n    let max = 0;\n    let { mtw, mrw, mbw, mlw, ptw, prw, pbw, plw, flowChildren, style } = this;\n    // 计算需考虑style的属性\n    let {\n      width,\n      height,\n      borderTopWidth,\n      borderRightWidth,\n      borderBottomWidth,\n      borderLeftWidth,\n    } = style;\n    let main = isDirectionRow ? width : height;\n    if(main.unit === unit.PX) {\n      max = main.value;\n    }\n    // 递归children取最大值\n    flowChildren.forEach(item => {\n      if(item instanceof Xom) {\n        let max2 = item.__calAbs(isDirectionRow);\n        max = Math.max(max, max2);\n      }\n      else if(isDirectionRow) {\n        max = Math.max(item.textWidth, max);\n      }\n      else {\n        item.__layout({\n          x: 0,\n          y: 0,\n          w: Infinity,\n          h: Infinity,\n        }, true);\n        max = Math.max(max, item.height);\n      }\n    });\n    // margin/padding/border也得计算在内\n    if(isDirectionRow) {\n      let w = borderRightWidth.value + borderLeftWidth.value + mlw + mrw + plw + prw;\n      max += w;\n    }\n    else {\n      let h = borderTopWidth.value + borderBottomWidth.value + mtw + mbw + ptw + pbw;\n      max += h;\n    }\n    return max;\n  }\n\n  // 本身block布局时计算好所有子元素的基本位置\n  __layoutBlock(data) {\n    let { x, y, w, h } = data;\n    this.__x = x;\n    this.__y = y;\n    this.__width = w;\n    let { flowChildren, style, lineGroups, mlw, mtw, mrw, mbw, plw, ptw, prw, pbw } = this;\n    let {\n      width,\n      height,\n      borderTopWidth,\n      borderRightWidth,\n      borderBottomWidth,\n      borderLeftWidth,\n      textAlign,\n    } = style;\n    // 除了auto外都是固定高度\n    let fixedHeight;\n    if(width && width.unit !== unit.AUTO) {\n      switch(width.unit) {\n        case unit.PX:\n          w = width.value;\n          break;\n        case unit.PERCENT:\n          w *= width.value * 0.01;\n          break;\n      }\n    }\n    if(height && height.unit !== unit.AUTO) {\n      fixedHeight = true;\n      switch(height.unit) {\n        case unit.PX:\n          h = height.value;\n          break;\n        case unit.PERCENT:\n          h *= height.value * 0.01;\n          break;\n      }\n    }\n    // margin/padding/border影响x和y和尺寸\n    x += borderLeftWidth.value + mlw + plw;\n    data.x = x;\n    y += borderTopWidth.value + mtw + ptw;\n    data.y = y;\n    if(width.unit === unit.AUTO) {\n      w -= borderLeftWidth.value + borderRightWidth.value + mlw + mrw + plw + prw;\n    }\n    h -= borderTopWidth.value + borderBottomWidth.value + mtw + mbw + ptw + pbw;\n    // 递归布局，将inline的节点组成lineGroup一行\n    let lineGroup = new LineGroup(x, y);\n    flowChildren.forEach(item => {\n      if(item instanceof Xom) {\n        if(item.style.display === 'inline') {\n          // inline开头，不用考虑是否放得下直接放\n          if(x === data.x) {\n            lineGroup.add(item);\n            item.__layout({\n              x,\n              y,\n              w,\n              h,\n            });\n            x += item.outerWidth;\n          }\n          else {\n            // 非开头先尝试是否放得下\n            let fw = item.__tryLayInline(w - x, w);\n            // 放得下继续\n            if(fw >= 0) {\n              item.__layout({\n                x,\n                y,\n                w,\n                h,\n              });\n            }\n            // 放不下处理之前的lineGroup，并重新开头\n            else {\n              lineGroups.push(lineGroup);\n              lineGroup.verticalAlign();\n              x = data.x;\n              y += lineGroup.height;\n              item.__layout({\n                x: data.x,\n                y,\n                w,\n                h,\n              });\n              lineGroup = new LineGroup(x, y);\n            }\n            x += item.outerWidth;\n            lineGroup.add(item);\n          }\n        }\n        else {\n          // block先处理之前可能的lineGroup\n          if(lineGroup.size) {\n            lineGroups.push(lineGroup);\n            lineGroup.verticalAlign();\n            y += lineGroup.height;\n            lineGroup = new LineGroup(data.x, y);\n          }\n          item.__layout({\n            x: data.x,\n            y,\n            w,\n            h,\n          });\n          x = data.x;\n          y += item.outerHeight;\n        }\n      }\n      // 文字和inline类似\n      else {\n        // x开头，不用考虑是否放得下直接放\n        if(x === data.x) {\n          lineGroup.add(item);\n          item.__layout({\n            x,\n            y,\n            w,\n            h,\n          });\n          x += item.width;\n        }\n        else {\n          // 非开头先尝试是否放得下\n          let fw = item.__tryLayInline(w - x, w);\n          // 放得下继续\n          if(fw >= 0) {\n            item.__layout({\n              x,\n              y,\n              w,\n              h,\n            });\n          }\n          // 放不下处理之前的lineGroup，并重新开头\n          else {\n            lineGroups.push(lineGroup);\n            lineGroup.verticalAlign();\n            x = data.x;\n            y += lineGroup.height;\n            item.__layout({\n              x: data.x,\n              y,\n              w,\n              h,\n            });\n            lineGroup = new LineGroup(x, y);\n          }\n          x += item.width;\n          lineGroup.add(item);\n        }\n      }\n    });\n    // 结束后处理可能遗留的最后的lineGroup\n    if(lineGroup.size) {\n      lineGroups.push(lineGroup);\n      lineGroup.verticalAlign();\n      y += lineGroup.height;\n    }\n    // text-align\n    if(['center', 'right'].indexOf(textAlign) > -1) {\n      lineGroups.forEach(lineGroup => {\n        let diff = w - lineGroup.width;\n        if(diff > 0) {\n          lineGroup.horizonAlign(textAlign === 'center' ? diff * 0.5 : diff);\n        }\n      });\n    }\n    this.__width = w;\n    this.__height = fixedHeight ? h : y - data.y;\n    this.__flowY = y;\n  }\n\n  // 弹性布局时的计算位置\n  __layoutFlex(data) {\n    let { x, y, w, h } = data;\n    this.__x = x;\n    this.__y = y;\n    this.__width = w;\n    let { flowChildren, style, mlw, mtw, mrw, mbw, plw, ptw, prw, pbw } = this;\n    let {\n      width,\n      height,\n      flexDirection,\n      borderTopWidth,\n      borderRightWidth,\n      borderBottomWidth,\n      borderLeftWidth,\n      justifyContent,\n      alignItems,\n    } = style;\n    // 除了auto外都是固定高度\n    let fixedWidth;\n    let fixedHeight;\n    if(width && width.unit !== unit.AUTO) {\n      fixedWidth = true;\n      switch(width.unit) {\n        case unit.PX:\n          w = width.value;\n          break;\n        case unit.PERCENT:\n          w *= width.value * 0.01;\n          break;\n      }\n    }\n    if(height && height.unit !== unit.AUTO) {\n      fixedHeight = true;\n      switch(height.unit) {\n        case unit.PX:\n          h = height.value;\n          break;\n        case unit.PERCENT:\n          h *= height.value * 0.01;\n          break;\n      }\n    }\n    // margin/padding/border影响x和y和尺寸\n    x += borderLeftWidth.value + mlw + plw;\n    data.x = x;\n    y += borderTopWidth.value + mtw + ptw;\n    data.y = y;\n    if(width.unit === unit.AUTO) {\n      w -= borderLeftWidth.value + borderRightWidth.value + mlw + mrw + plw + prw;\n    }\n    h -= borderTopWidth.value + borderBottomWidth.value + mtw + mbw + ptw + pbw;\n    let isDirectionRow = flexDirection === 'row';\n    // column时height可能为auto，此时取消伸展，退化为类似block布局，但所有子元素强制block\n    if(!isDirectionRow && !fixedHeight) {\n      flowChildren.forEach(item => {\n        if(item instanceof Xom) {\n          const { style, style: { display, flexDirection, width }} = item;\n          // column的flex的child如果是inline，变为block\n          if(display === 'inline') {\n            style.display = 'block';\n          }\n          // 竖向flex的child如果是横向flex，宽度自动的话要等同于父flex的宽度\n          else if(display === 'flex' && flexDirection === 'row' && width.unit === unit.AUTO) {\n            width.value = w;\n            width.unit = unit.PX;\n          }\n          item.__layout({\n            x,\n            y,\n            w,\n            h,\n          });\n          y += item.outerHeight;\n        }\n        else {\n          item.__layout({\n            x,\n            y,\n            w,\n            h,\n          });\n          y += item.outerHeight;\n        }\n      });\n      this.__width = w;\n      this.__height = y - data.y;\n      return;\n    }\n    // 计算伸缩基数\n    let growList = [];\n    let shrinkList = [];\n    let basisList = [];\n    let minList = [];\n    let growSum = 0;\n    let shrinkSum = 0;\n    let basisSum = 0;\n    let maxSum = 0;\n    flowChildren.forEach(item => {\n      if(item instanceof Xom) {\n        let { flexGrow, flexShrink, flexBasis } = item.style;\n        growList.push(flexGrow);\n        shrinkList.push(flexShrink);\n        growSum += flexGrow;\n        shrinkSum += flexShrink;\n        let { b, min, max } = item.__calAutoBasis(isDirectionRow, w, h);\n        // 根据basis不同，计算方式不同\n        if(flexBasis.unit === unit.AUTO) {\n          basisList.push(max);\n          basisSum += max;\n        }\n        else if(flexBasis.unit === unit.PX) {\n          b = flexBasis.value;\n          basisList.push(b);\n          basisSum += b;\n        }\n        else if(flexBasis.unit === unit.PERCENT) {\n          b = (isDirectionRow ? w : h) * flexBasis.value;\n          basisList.push(b);\n          basisSum += b;\n        }\n        maxSum += max;\n        minList.push(min);\n      }\n      else {\n        growList.push(0);\n        shrinkList.push(1);\n        shrinkSum += 1;\n        if(isDirectionRow) {\n          basisList.push(item.textWidth);\n          basisSum += item.textWidth;\n          maxSum += item.textWidth;\n          minList.push(item.charWidth);\n        }\n        else {\n          item.__layout({\n            x: 0,\n            y: 0,\n            w,\n            h,\n          }, true);\n          basisList.push(item.height);\n          basisSum += item.height;\n          maxSum += item.height;\n          minList.push(item.height);\n        }\n      }\n    });\n    let maxCross = 0;\n    // 判断是否超出，决定使用grow还是shrink\n    let isOverflow = maxSum > (isDirectionRow ? w : h);\n    flowChildren.forEach((item, i) => {\n      let main;\n      let shrink = shrinkList[i];\n      let grow = growList[i];\n      // 计算主轴长度\n      if(isOverflow) {\n        let overflow = basisSum - (isDirectionRow ? w : h);\n        main = shrink ? (basisList[i] - overflow * shrink / shrinkSum) : basisList[i];\n      }\n      else {\n        let free = (isDirectionRow ? w : h) - basisSum;\n        main = grow ? (basisList[i] + free * grow / growSum) : basisList[i];\n      }\n      // 主轴长度的最小值不能小于元素的最小长度，比如横向时的字符宽度\n      main = Math.max(main, minList[i]);\n      if(item instanceof Xom) {\n        const { style, mlw, mtw, mrw, mbw, plw, ptw, prw, pbw, style: {\n          display,\n          flexDirection,\n          width,\n          height,\n          borderTopWidth,\n          borderRightWidth,\n          borderBottomWidth,\n          borderLeftWidth,\n        }} = item;\n        if(isDirectionRow) {\n          // row的flex的child如果是inline，变为block\n          if(display === 'inline') {\n            style.display = 'block';\n          }\n          // 横向flex的child如果是竖向flex，高度自动的话要等同于父flex的高度\n          else if(display === 'flex' && flexDirection === 'column' && fixedHeight && height.unit === unit.AUTO) {\n            height.value = h;\n            height.unit = unit.PX;\n          }\n          item.__layout({\n            x,\n            y,\n            w: main,\n            h,\n          })\n        }\n        else {\n          // column的flex的child如果是inline，变为block\n          if(display === 'inline') {\n            style.display = 'block';\n          }\n          // 竖向flex的child如果是横向flex，宽度自动的话要等同于父flex的宽度\n          else if(display === 'flex' && flexDirection === 'row' && width.unit === unit.AUTO) {\n            width.value = w;\n            width.unit = unit.PX;\n          }\n          item.__layout({\n            x,\n            y,\n            w,\n            h: main,\n          });\n        }\n        // 重设因伸缩而导致的主轴长度\n        if(isOverflow && shrink) {\n          if(isDirectionRow) {\n            item.__width = main - mlw - mrw - plw - prw - borderLeftWidth.value - borderRightWidth.value;\n          }\n          else {\n            item.__height = main - mtw - mbw - ptw - pbw - borderTopWidth.value - borderBottomWidth.value;\n          }\n        }\n        else if(!isOverflow && grow) {\n          if(isDirectionRow) {\n            item.__width = main - mlw - mrw - plw - prw - borderLeftWidth.value - borderRightWidth.value;\n          }\n          else {\n            item.__height = main - mtw - mbw - ptw - pbw - borderTopWidth.value - borderBottomWidth.value;\n          }\n        }\n      }\n      else {\n        item.__layout({\n          x,\n          y,\n          w: isDirectionRow ? main : w,\n          h: isDirectionRow ? h : main,\n        });\n      }\n      if(isDirectionRow) {\n        x += item.outerWidth;\n        maxCross = Math.max(maxCross, item.outerHeight);\n      }\n      else {\n        y += item.outerHeight;\n        maxCross = Math.max(maxCross, item.outerWidth);\n      }\n    });\n    // 计算主轴剩余时要用真实剩余空间而不能用伸缩剩余空间\n    let diff = isDirectionRow ? w - x + data.x : h - y + data.y;\n    // 主轴侧轴对齐方式\n    if(!isOverflow && growSum === 0 && diff > 0) {\n      let len = flowChildren.length;\n      if(justifyContent === 'flex-end') {\n        for(let i = 0; i < len; i++) {\n          let child = flowChildren[i];\n          isDirectionRow ? child.__offsetX(diff) : child.__offsetY(diff);\n        }\n      }\n      else if(justifyContent === 'center') {\n        let center = diff * 0.5;\n        for(let i = 0; i < len; i++) {\n          let child = flowChildren[i];\n          isDirectionRow ? child.__offsetX(center) : child.__offsetY(center);\n        }\n      }\n      else if(justifyContent === 'space-between') {\n        let between = diff / (len - 1);\n        for(let i = 1; i < len; i++) {\n          let child = flowChildren[i];\n          isDirectionRow ? child.__offsetX(between * i) : child.__offsetY(between * i);\n        }\n      }\n      else if(justifyContent === 'space-around') {\n        let around = diff / (len + 1);\n        for(let i = 0; i < len; i++) {\n          let child = flowChildren[i];\n          isDirectionRow ? child.__offsetX(around * (i + 1)) : child.__offsetY(around * (i + 1));\n        }\n      }\n    }\n    // 子元素侧轴伸展\n    if(isDirectionRow) {\n      // 父元素固定高度，子元素可能超过，侧轴最大长度取固定高度\n      if(fixedHeight) {\n        maxCross = h;\n      }\n      y += maxCross;\n    }\n    else {\n      if(fixedWidth) {\n        maxCross = w;\n      }\n    }\n    // 侧轴对齐\n    if(alignItems === 'stretch') {\n      // 短侧轴的children伸张侧轴长度至相同，超过的不动，固定宽高的也不动\n      flowChildren.forEach(item => {\n        let { style, mlw, mtw, mrw, mbw, ptw, prw, plw, pbw } = item;\n        if(isDirectionRow) {\n          if(style.height.unit === unit.AUTO) {\n            item.__height = maxCross - mtw - mbw - ptw - pbw\n              - style.borderTopWidth.value\n              - style.borderBottomWidth.value;\n          }\n        }\n        else {\n          if(style.width.unit === unit.AUTO) {\n            item.__width = maxCross - mlw - mrw - plw - prw\n              - borderRightWidth.value\n              - borderLeftWidth.value;\n          }\n        }\n      });\n    }\n    else if(alignItems === 'center') {\n      flowChildren.forEach(item => {\n        let diff = maxCross - item.outerHeight;\n        if(diff > 0) {\n          item.__offsetY(diff * 0.5);\n        }\n      });\n    }\n    else if(alignItems === 'flex-end') {\n      flowChildren.forEach(item => {\n        let diff = maxCross - item.outerHeight;\n        if(diff > 0) {\n          item.__offsetY(diff);\n        }\n      });\n    }\n    this.__width = w;\n    this.__height = fixedHeight ? h : y - data.y;\n    this.__flowY = y;\n  }\n\n  // inline比较特殊，先简单顶部对其，后续还需根据vertical和lineHeight计算y偏移\n  __layoutInline(data) {\n    let { x, y, w, h } = data;\n    this.__x = x;\n    this.__y = y;\n    let maxX = x;\n    let { flowChildren, style, lineGroups, mlw, mtw, mrw, mbw, plw, ptw, prw, pbw } = this;\n    let {\n      width,\n      height,\n      borderTopWidth,\n      borderRightWidth,\n      borderBottomWidth,\n      borderLeftWidth,\n      textAlign,\n    } = style;\n    // 除了auto外都是固定高度\n    let fixedWidth;\n    let fixedHeight;\n    if(width && width.unit !== unit.AUTO) {\n      fixedWidth = true;\n      switch(width.unit) {\n        case unit.PX:\n          w = width.value;\n          break;\n        case unit.PERCENT:\n          w *= width.value * 0.01;\n          break;\n      }\n    }\n    if(height && height.unit !== unit.AUTO) {\n      fixedHeight = true;\n      switch(height.unit) {\n        case unit.PX:\n          h = height.value;\n          break;\n        case unit.PERCENT:\n          h *= height.value * 0.01;\n          break;\n      }\n    }\n    // margin/padding/border影响x和y和尺寸\n    x += borderLeftWidth.value + mlw + plw;\n    data.x = x;\n    y += borderTopWidth.value + mtw + ptw;\n    data.y = y;\n    if(width.unit === unit.AUTO) {\n      w -= borderLeftWidth.value + borderRightWidth.value + mlw + mrw + plw + prw;\n    }\n    h -= borderTopWidth.value + borderBottomWidth.value + mtw + mbw + ptw + pbw;\n    // 递归布局，将inline的节点组成lineGroup一行\n    let lineGroup = new LineGroup(x, y);\n    flowChildren.forEach(item => {\n      if(item instanceof Xom) {\n        // 绝对定位跳过\n        if(item.style.position === 'absolute') {\n          this.absChildren.push(item);\n          return;\n        }\n        item.style.display = 'inline';\n        // inline开头，不用考虑是否放得下直接放\n        if(x === data.x) {\n          lineGroup.add(item);\n          item.__layout({\n            x,\n            y,\n            w,\n            h,\n          });\n          x += item.outerWidth;\n          maxX = Math.max(maxX, x);\n        }\n        else {\n          // 非开头先尝试是否放得下\n          let fw = item.__tryLayInline(w - x, w);\n          // 放得下继续\n          if(fw >= 0) {\n            item.__layout({\n              x,\n              y,\n              w,\n              h,\n            });\n          }\n          // 放不下处理之前的lineGroup，并重新开头\n          else {\n            lineGroups.push(lineGroup);\n            lineGroup.verticalAlign();\n            x = data.x;\n            y += lineGroup.height;\n            item.__layout({\n              x: data.x,\n              y,\n              w,\n              h,\n            });\n            lineGroup = new LineGroup(x, y);\n          }\n          x += item.outerWidth;\n          maxX = Math.max(maxX, x);\n          lineGroup.add(item);\n        }\n      }\n      // inline里的其它只有文本\n      else {\n        if(x === data.x) {\n          lineGroup.add(item);\n          item.__layout({\n            x,\n            y,\n            w,\n            h,\n          });\n          x += item.width;\n          maxX = Math.max(maxX, x);\n        }\n        else {\n          // 非开头先尝试是否放得下\n          let fw = item.__tryLayInline(w - x, w);\n          // 放得下继续\n          if(fw >= 0) {\n            item.__layout({\n              x,\n              y,\n              w,\n              h,\n            });\n          }\n          // 放不下处理之前的lineGroup，并重新开头\n          else {\n            lineGroups.push(lineGroup);\n            lineGroup.verticalAlign();\n            x = data.x;\n            y += lineGroup.height;\n            item.__layout({\n              x: data.x,\n              y,\n              w,\n              h,\n            });\n            lineGroup = new LineGroup(x, y);\n          }\n          x += item.width;\n          maxX = Math.max(maxX, x);\n          lineGroup.add(item);\n        }\n      }\n    });\n    // 结束后处理可能遗留的最后的lineGroup，children为空时可能size为空\n    if(lineGroup.size) {\n      lineGroups.push(lineGroup);\n      lineGroup.verticalAlign();\n      y += lineGroup.height;\n    }\n    // text-align\n    if(['center', 'right'].indexOf(textAlign) > -1) {\n      lineGroups.forEach(lineGroup => {\n        let diff = w - lineGroup.width;\n        if(diff > 0) {\n          lineGroup.horizonAlign(textAlign === 'center' ? diff * 0.5 : diff);\n        }\n      });\n    }\n    // 元素的width不能超过父元素w\n    this.__width = fixedWidth ? w : maxX - data.x;\n    this.__height = fixedHeight ? h : y - data.y;\n    this.__flowY = y;\n  }\n\n  // 只针对绝对定位children布局\n  __layoutAbs(container) {\n    let { x, y, flowY, width, height, children, absChildren, style, mlw, mtw, mrw, mbw, plw, ptw, prw, pbw } = this;\n    let {\n      borderTopWidth,\n      borderLeftWidth,\n    } = style;\n    let pw = width + plw + prw;\n    let ph = height + ptw + pbw;\n    // 递归进行，遇到absolute/relative的设置新容器\n    children.forEach(item => {\n      if(item instanceof Dom) {\n        item.__layoutAbs(['absolute', 'relative'].indexOf(item.style.position) > -1 ? item : container);\n      }\n    });\n    // 对absolute的元素进行相对容器布局\n    absChildren.forEach(item => {\n      let { mtw, mlw, style, style: {\n        left, top, right, bottom, width: width2, height: height2\n      } } = item;\n      let x2, y2, w2, h2;\n      // width优先级高于right高于left，即最高left+right，其次left+width，再次right+width，然后仅申明单个，最次全部auto\n      if(left.unit !== unit.AUTO && right.unit !== unit.AUTO) {\n        x2 = left.unit === unit.PX ? x + mlw + borderLeftWidth.value + left.value : x + mlw + borderLeftWidth.value + width * left.value * 0.01;\n        w2 = right.unit === unit.PX ? x + mlw + borderLeftWidth.value + pw - right.value - x2 : x + mlw + borderLeftWidth.value + pw - width * right.value * 0.01 - x2;\n      }\n      else if(left.unit !== unit.AUTO && width2.unit !== unit.AUTO) {\n        x2 = left.unit === unit.PX ? x + mlw + borderLeftWidth.value + left.value : x + mlw + borderLeftWidth.value + width * left.value * 0.01;\n        w2 = width2.unit === unit.PX ? width2.value : width;\n      }\n      else if(right.unit !== unit.AUTO && width2.unit !== unit.AUTO) {\n        w2 = width2.unit === unit.PX ? width2.value : width;\n        let widthPx = width2.unit === unit.PX ? width2.value : width * width2.value * 0.01;\n        x2 = right.unit === unit.PX ? x + mlw + borderLeftWidth.value + pw - right.value - widthPx : x + mlw + borderLeftWidth.value + pw - width * right.value * 0.01 - widthPx;\n      }\n      else if(left.unit !== unit.AUTO) {\n        x2 = left.unit === unit.PX ? x + left.value : x + mlw + borderLeftWidth.value + width * left.value * 0.01;\n        w2 = item.__calAbs(true);\n      }\n      else if(right.unit !== unit.AUTO) {\n        w2 = item.__calAbs(true);\n        x2 = right.unit === unit.PX ? x + mlw + borderLeftWidth.value + pw - right.value - w2 : x + mlw + borderLeftWidth.value + pw - width * right.value * 0.01 - w2;\n      }\n      else if(width2.unit !== unit.AUTO) {\n        x2 = x + mlw + borderLeftWidth.value;\n        w2 = width2.unit === unit.PX ? width2.value : width;\n      }\n      else {\n        x2 = x + mlw + borderLeftWidth.value;\n        w2 = item.__calAbs(true);\n      }\n      // top/bottom/height优先级同上\n      if(top.unit !== unit.AUTO && bottom.unit !== unit.AUTO) {\n        y2 = top.unit === unit.PX ? y + top.value : y + mtw + borderTopWidth.value + height * top.value * 0.01;\n        h2 = bottom.unit === unit.PX ? y + mtw + borderTopWidth.value + ph - bottom.value - y2 : y + mtw + borderTopWidth.value + ph - height * bottom.value * 0.01 - y2;\n        style.height = {\n          value: h2,\n          unit: unit.PX,\n        };\n      }\n      else if(top.unit !== unit.AUTO && height2.unit !== unit.AUTO) {\n        y2 = top.unit === unit.PX ? y + top.value : y + mtw + borderTopWidth.value + height * top.value * 0.01;\n        h2 = height2.unit === unit.PX ? height2.value : height;\n      }\n      else if(bottom.unit !== unit.AUTO && height2.unit !== unit.AUTO) {\n        h2 = height2.unit === unit.PX ? height2.value : height;\n        let heightPx = height2.unit === unit.PX ? height2.value : height * height2.value * 0.01;\n        y2 = bottom.unit === unit.PX ? y + mtw + borderTopWidth.value + ph - bottom.value - heightPx : y + mtw + borderTopWidth.value + ph - height * bottom.value * 0.01 - heightPx;\n      }\n      else if(top.unit !== unit.AUTO) {\n        y2 = top.unit === unit.PX ? y + top.value : y + mtw + borderTopWidth.value + height * top.value * 0.01;\n        h2 = item.__calAbs();\n      }\n      else if(bottom.unit !== unit.AUTO) {\n        h2 = item.__calAbs();\n        y2 = bottom.unit === unit.PX ? y + mtw + borderTopWidth.value + ph - bottom.value - h2 : y + mtw + borderTopWidth.value + ph - height * bottom.value * 0.01 - h2;\n      }\n      else if(height2.unit !== unit.AUTO) {\n        y2 = flowY + mtw + borderTopWidth.value;\n        h2 = height2.unit === unit.PX ? height2.value : height;\n      }\n      else {\n        y2 = flowY + mtw + borderTopWidth.value;\n        h2 = item.__calAbs();\n      }\n      // absolute时inline强制block\n      if(style.display === 'inline') {\n        style.display = 'block';\n      }\n      item.__layout({\n        x: x2,\n        y: y2,\n        w: w2,\n        h: h2,\n      });\n    });\n  }\n\n  __emitEvent(e, force) {\n    let { event: { type }, rx: xe, ry: ye, covers } = e;\n    let { listener, children, style, x, y, outerWidth, outerHeight } = this;\n    if(style.display === 'none') {\n      return;\n    }\n    let cb;\n    if(listener.hasOwnProperty(type)) {\n      cb = listener[type];\n    }\n    let hasChildEmit;\n    // 先响应absolute/relative高优先级\n    for(let i = children.length - 1; i >= 0; i--) {\n      let child = children[i];\n      if(child instanceof Xom && ['absolute', 'relative'].indexOf(child.style.position) > -1) {\n        if(child.__emitEvent(e, force)) {\n          hasChildEmit = true;\n        }\n      }\n    }\n    // 再看普通流\n    for(let i = children.length - 1; i >= 0; i--) {\n      let child = children[i];\n      if(child instanceof Xom && ['absolute', 'relative'].indexOf(child.style.position) === -1) {\n        if(child.__emitEvent(e, force)) {\n          hasChildEmit = true;\n        }\n      }\n    }\n    if(force) {\n      cb && cb(e);\n      return;\n    }\n    // child触发则parent一定触发\n    if(hasChildEmit) {\n      covers.push({\n        x,\n        y,\n        w: outerWidth,\n        h: outerHeight,\n      });\n      cb && cb(e);\n    }\n    // 否则判断坐标是否位于自己内部，以及没被遮挡\n    else if(xe >= x && ye >= y && xe <= x + outerWidth && ye <= y + outerHeight) {\n      for(let i = 0, len = covers.length; i < len; i++) {\n        let { x: x2, y: y2, w, h: h } = covers[i];\n        if(xe >= x2 && ye >= y2 && xe <= x2 + w && ye <= y2 + h) {\n          return;\n        }\n      }\n      if(!e.target) {\n        e.target = this;\n      }\n      covers.push({\n        x,\n        y,\n        w: outerWidth,\n        h: outerHeight,\n      });\n      cb && cb(e);\n    }\n  }\n\n  render(renderMode) {\n    super.render(renderMode);\n    let { style, flowChildren, children } = this;\n    let {\n      display,\n      position,\n      top,\n      right,\n      bottom,\n      left,\n      height: h,\n    } = style;\n    if(display === 'none') {\n      return;\n    }\n    // 先绘制static\n    flowChildren.forEach(item => {\n      if(item instanceof Text || item.style.position === 'static') {\n        item.render(renderMode);\n      }\n    });\n    // 再绘制relative和absolute\n    children.forEach(item => {\n      if((item instanceof Xom) && ['relative', 'absolute'].indexOf(item.style.position) > -1) {\n        item.render(renderMode);\n      }\n    });\n    if(renderMode === mode.SVG) {\n      this.__virtualDom = {\n        ...super.virtualDom,\n        type: 'dom',\n        children: this.children.map(item => item.virtualDom),\n      };\n    }\n  }\n\n  get tagName() {\n    return this.__tagName;\n  }\n  get children() {\n    return this.__children;\n  }\n  get flowChildren() {\n    return this.__flowChildren;\n  }\n  get absChildren() {\n    return this.__absChildren;\n  }\n  get lineGroups() {\n    return this.__lineGroups;\n  }\n  get baseLine() {\n    let len = this.lineGroups.length;\n    if(len) {\n      let last = this.lineGroups[len - 1];\n      return last.y - this.y + last.baseLine;\n    }\n    return this.y;\n  }\n  get flowY() {\n    return this.__flowY;\n  }\n\n  static isValid(s) {\n    return TAG_NAME.hasOwnProperty(s);\n  }\n}\n\nexport default Dom;\n","import util from './util';\n\nfunction diff(elem, ovd, nvd) {\n  if(ovd.type === 'dom') {\n    if(nvd.type === 'dom') {\n      diffD2D(elem, ovd, nvd);\n    }\n    else if(nvd.type === 'text') {\n      replaceWith(elem, nvd);\n    }\n    else if(nvd.type === 'geom') {\n      diffD2G(elem, ovd, nvd);\n    }\n  }\n  else if(nvd.type === 'text') {\n    if(nvd.type === 'dom') {\n      replaceWith(elem, nvd);\n    }\n    else if(nvd.type === 'text') {\n      diffT2T(elem, ovd, nvd);\n    }\n    else if(nvd.type === 'geom') {\n      replaceWith(elem, nvd);\n    }\n  }\n  else if(nvd.type === 'geom') {\n    if(nvd.type === 'dom') {\n      diffG2D(elem, ovd, nvd);\n    }\n    else if(nvd.type === 'text') {\n      replaceWith(elem, nvd);\n    }\n    else if(nvd.type === 'geom') {\n      diffG2G(elem, ovd, nvd);\n    }\n  }\n}\n\nfunction diffD2D(elem, ovd, nvd) {\n  diffBb(elem.firstChild, ovd.bb, nvd.bb);\n  let ol = ovd.children.length;\n  let nl = nvd.children.length;\n  let i = 0;\n  let lastChild = elem.lastChild;\n  let cns = lastChild.childNodes;\n  for(; i < Math.min(ol, nl); i++) {\n    diff(cns[i], ovd.children[i], nvd.children[i]);\n  }\n  if(i < ol) {\n    for(; i < ol; i++) {\n      removeAt(lastChild, cns, i);\n    }\n  }\n  else if(i < nl) {\n    for(; i < nl; i++) {\n      insertAt(lastChild, cns, i, nvd.children[i]);\n    }\n  }\n}\n\nfunction diffD2G(elem, ovd, nvd) {\n  diffBb(elem.firstChild, ovd.bb, nvd.bb);\n  replaceWith(elem.lastChild, nvd.content);\n}\n\nfunction diffT2T(elem, ovd, nvd) {\n  let ol = ovd.children.length;\n  let nl = nvd.children.length;\n  let i = 0;\n  for(; i < Math.min(ol, nl); i++) {\n    diffItem(elem, i, ovd.children[i], nvd.children[i], true);\n  }\n  let cns = elem.childNodes;\n  if(i < ol) {\n    for(; i < ol; i++) {\n      removeAt(elem, cns, i);\n    }\n  }\n  else if(i < nl) {\n    for(; i < nl; i++) {\n      insertAt(elem, cns, i, nvd.children[i]);\n    }\n  }\n}\n\nfunction diffG2D(elem, ovd, nvd) {\n  diffBb(elem.firstChild, ovd.bb, nvd.bb);\n  replaceWith(elem.lastChild, nvd.children);\n}\n\nfunction diffG2G(elem, ovd, nvd) {\n  diffBb(elem.firstChild, ovd.bb, nvd.bb);\n  let ol = ovd.content.length;\n  let nl = nvd.content.length;\n  let i = 0;\n  let lastChild = elem.lastChild;\n  let cns = lastChild.childNodes;\n  for(; i < Math.min(ol, nl); i++) {\n    diffItem(lastChild, i, ovd.content[i], nvd.content[i]);\n  }\n  if(i < ol) {\n    for(; i < ol; i++) {\n      removeAt(lastChild, cns, i);\n    }\n  }\n  else if(i < nl) {\n    for(; i < nl; i++) {\n      insertAt(lastChild, cns, i, nvd.content[i]);\n    }\n  }\n}\n\nfunction diffBb(elem, obb, nbb) {\n  let ol = obb.length;\n  let nl = nbb.length;\n  let i = 0;\n  for(; i < Math.min(ol, nl); i++) {\n    diffItem(elem, i, obb[i], nbb[i]);\n  }\n  let cns = elem.childNodes;\n  if(i < ol) {\n    for(; i < ol; i++) {\n      removeAt(elem, cns, i);\n    }\n  }\n  else if(i < nl) {\n    for(; i < nl; i++) {\n      insertAt(elem, cns, i, nbb[i]);\n    }\n  }\n}\n\nfunction diffItem(elem, i, ovd, nvd, isText) {\n  let cns = elem.childNodes;\n  if(ovd.tagName !== nvd.tagName) {\n    replaceWith(cns[i], nvd);\n  }\n  else {\n    let op = {};\n    for(let j = 0, len = ovd.props.length; j < len; j++) {\n      let prop = ovd.props[j];\n      let [k, v] = prop;\n      op[k] = v;\n    }\n    for(let j = 0, len = nvd.props.length; j < len; j++) {\n      let prop = nvd.props[j];\n      let [k, v] = prop;\n      // 已有不等更新，没有添加\n      if(op.hasOwnProperty(k)) {\n        if(op[k] !== v) {\n          cns[i].setAttribute(k, v);\n        }\n        delete op[k];\n      }\n      else {\n        cns[i].setAttribute(k, v);\n      }\n    }\n    // 多余的删除\n    for(var k in op) {\n      if(op.hasOwnProperty(k)) {\n        cns[i].removeAttribute(k);\n      }\n    }\n    if(isText && ovd.content !== nvd.content) {\n      cns[i].textContent = nvd.content;\n    }\n  }\n}\n\nfunction replaceWith(elem, vd) {\n  let res;\n  if(Array.isArray(vd)) {\n    res = '';\n    vd.forEach(item => {\n      res += util.joinVirtualDom(item);\n    });\n  }\n  else {\n    res = util.joinVirtualDom(vd);\n  }\n  elem.insertAdjacentHTML('afterend', res);\n  elem.parentNode.removeChild(elem);\n}\n\nfunction insertAt(elem, cns, index, vd) {\n  let res = util.joinVirtualDom(vd);\n  if(index >= cns.length) {\n    elem.insertAdjacentHTML('beforeend', res);\n  }\n  else {\n    cns[index].insertAdjacentHTML('beforebegin', res);\n  }\n}\n\nfunction removeAt(elem, cns, index) {\n  if(cns[index]) {\n    elem.removeChild(cns[index]);\n  }\n}\n\nexport default diff;\n","import Dom from '../node/Dom';\nimport util from '../util';\nimport mode from '../mode';\nimport domDiff from '../domDiff';\n\nfunction getDom(dom) {\n  if(util.isString(dom)) {\n    let o = document.querySelector(dom);\n    if(!o) {\n      throw new Error('can not find dom of selector: ' + dom);\n    }\n    return o;\n  }\n  if(!dom) {\n    throw new Error('can not find dom: ' + dom);\n  }\n  return dom;\n}\n\nfunction renderProp(k, v) {\n  let s = Array.isArray(v) ? util.joinSourceArray(v) : util.stringify(v);\n  if(k === 'className') {\n    k = 'class';\n  }\n  return ' ' + k + '=\"' + util.encodeHtml(s, true) + '\"';\n}\n\nclass Root extends Dom {\n  constructor(tagName, props, children) {\n    super(tagName, props, children);\n    this.__node = null; // 真实DOM引用\n  }\n\n  __initProps() {\n    if(this.props.width !== undefined) {\n      let value = parseInt(this.props.width);\n      if(!isNaN(value) && value > 0) {\n        this.__width = value;\n      }\n    }\n    if(this.props.height !== undefined) {\n      let value = parseInt(this.props.height);\n      if(!isNaN(value) && value > 0) {\n        this.__height = value;\n      }\n    }\n  }\n\n  __genHtml() {\n    let res = `<${this.tagName}`;\n    // 拼接处理属性\n    for(let i = 0, len = this.__props.length; i < len; i++) {\n      let item = this.__props[i];\n      res += renderProp(item[0], item[1]);\n    }\n    res += `></${this.tagName}>`;\n    return res;\n  }\n\n  __cb(e, force) {\n    if(e.touches && e.touches.length > 1) {\n      return;\n    }\n    let { node } = this;\n    let { x, y, top, right } = node.getBoundingClientRect();\n    x = x || top || 0;\n    y = y || right || 0;\n    let { clientX, clientY } = e.touches ? (e.touches[0] || {}) : e;\n    x = clientX - x;\n    y = clientY - y;\n    this.__emitEvent({\n      event: e,\n      x,\n      y,\n      covers: [],\n    }, force);\n  }\n\n  __initEvent() {\n    let { node } = this;\n    ['click', 'dblclick', 'mousedown', 'mousemove', 'mouseup', 'touchstart', 'touchmove', 'touchend', 'touchcancel'].forEach(type => {\n      node.addEventListener(type, e => {\n        this.__cb(e, ['touchend', 'touchcancel'].indexOf(type) > -1);\n      });\n    });\n  }\n\n  appendTo(dom) {\n    dom = getDom(dom);\n    this.__initProps();\n    // 已有root节点\n    if(dom.nodeName.toUpperCase() === this.tagName.toUpperCase()) {\n      this.__node = dom;\n      if(this.width) {\n        dom.setAttribute('width', this.width);\n      }\n      if(this.height) {\n        dom.setAttribute('height', this.height);\n      }\n    }\n    // 没有canvas/svg节点则生成一个新的\n    else {\n      this.__node = dom.querySelector(this.tagName);\n      if(!this.__node) {\n        dom.innerHTML = this.__genHtml();\n        this.__node = dom.querySelector(this.tagName);\n      }\n    }\n    // 没有设置width/height则采用css计算形式\n    if(!this.width || !this.height) {\n      let css = window.getComputedStyle(dom, null);\n      if(!this.width) {\n        this.__width = parseInt(css.getPropertyValue('width'));\n        dom.setAttribute('width', this.width);\n      }\n      if(!this.height) {\n        this.__height = parseInt(css.getPropertyValue('height'));\n        dom.setAttribute('height', this.height);\n      }\n    }\n    // 只有canvas有ctx，svg用真实dom\n    let renderMode;\n    if(this.tagName === 'canvas') {\n      this.__ctx = this.__node.getContext('2d');\n      this.__ctx.clearRect(0, 0, this.width, this.height);\n      renderMode = mode.CANVAS;\n    }\n    else if(this.tagName === 'svg') {\n      renderMode = mode.SVG;\n    }\n    // canvas/svg作为根节点一定是block或flex，不会是inline\n    let { style } = this;\n    if(['flex', 'block'].indexOf(style.display) === -1) {\n      style.display = 'block';\n    }\n    // 同理position不能为absolute\n    if(style.position === 'absolute') {\n      style.position = 'static';\n    }\n    this.__traverse(this.__ctx, renderMode);\n    // canvas的宽高固定初始化\n    style.width = this.width;\n    style.height = this.height;\n    this.__initStyle();\n    this.__layout({\n      x: 0,\n      y: 0,\n      w: this.width,\n      h: this.height,\n    });\n    this.__layoutAbs(this);\n    this.render(renderMode);\n    if(renderMode === mode.SVG) {\n      let nvd = this.virtualDom;\n      if(this.node.__karasInit) {\n        domDiff(this.node.firstChild, this.node.__ovd, nvd);\n      } else {\n        this.node.innerHTML = util.joinVirtualDom(nvd);\n      }\n      this.node.__ovd = nvd;\n    }\n    if(!this.node.__karasInit) {\n      this.node.__karasInit = true;\n      this.__initEvent();\n    }\n  }\n\n  get node() {\n    return this.__node;\n  }\n}\n\nexport default Root;\n","import Geom from './Geom';\nimport mode from '../mode';\n\nclass Line extends Geom {\n  constructor(tagName, props) {\n    super(tagName, props);\n    // start和end表明线段的首尾坐标，control表明控制点坐标\n    this.__start = [];\n    this.__end = [];\n    this.__control = [];\n    if(Array.isArray(this.props.start)) {\n      this.__start = this.props.start;\n    }\n    if(Array.isArray(this.props.end)) {\n      this.__end = this.props.end;\n    }\n    if(Array.isArray(this.props.control)) {\n      this.__control = this.props.control;\n    }\n  }\n\n  render(renderMode) {\n    super.render(renderMode);\n    let { rx: x, ry: y, width, height, mlw, mtw, plw, ptw, style, ctx, start, end, control, virtualDom } = this;\n    if(start.length < 2 || end.length < 2) {\n      return;\n    }\n    let {\n      display,\n      borderTopWidth,\n      borderRightWidth,\n      borderBottomWidth,\n      borderLeftWidth,\n      stroke,\n      strokeWidth,\n      strokeDasharray,\n    } = style;\n    if(display === 'none') {\n      return;\n    }\n    let originX = x + borderLeftWidth.value + mlw + plw;\n    let originY = y + borderTopWidth.value + mtw + ptw;\n    let x1 = originX + start[0] * width;\n    let y1 = originY + start[1] * height;\n    let x2 = originX + end[0] * width;\n    let y2 = originY + end[1] * height;\n    let curve = 0;\n    let cx1, cy1, cx2, cy2;\n    if(Array.isArray(control[0])) {\n      curve++;\n      cx1 = originX + control[0][0] * width;\n      cy1 = originY + control[0][1] * height;\n    }\n    if(Array.isArray(control[1])) {\n      curve++;\n      cx2 = originX + control[1][0] * width;\n      cy2 = originY + control[1][1] * height;\n    }\n    if(renderMode === mode.CANVAS) {\n      ctx.strokeStyle = stroke;\n      ctx.lineWidth = strokeWidth;\n      ctx.setLineDash(strokeDasharray);\n      ctx.beginPath();\n      ctx.moveTo(x1, y1);\n      if(curve === 2) {\n        ctx.bezierCurveTo(cx1, cy1, cx2, cy2, x2, y2);\n      }\n      else if(curve === 1) {\n        ctx.quadraticCurveTo(cx1, cy1, x2, y2);\n      }\n      else {\n        ctx.lineTo(x2, y2);\n      }\n      ctx.stroke();\n      ctx.closePath();\n    }\n    else if(renderMode === mode.SVG) {\n      if(curve === 2) {\n        virtualDom.content.push({\n          type: 'item',\n          tagName: 'path',\n          props: [\n            ['d', `M${x1} ${y1} C${cx1} ${cy1} ${cx2} ${cy2} ${x2} ${y2}`],\n            ['fill', 'none'],\n            ['stroke', stroke],\n            ['stroke-width', strokeWidth],\n            ['stroke-dasharray', strokeDasharray]\n          ],\n        });\n      }\n      else if(curve === 1) {\n        virtualDom.content.push({\n          type: 'item',\n          tagName: 'path',\n          props: [\n            ['d', `M${x1} ${y1} Q${cx1} ${cy1} ${x2} ${y2}`],\n            ['fill', 'none'],\n            ['stroke', stroke],\n            ['stroke-width', strokeWidth],\n            ['stroke-dasharray', strokeDasharray]\n          ],\n        });\n      }\n      else {\n        virtualDom.content.push({\n          type: 'item',\n          tagName: 'line',\n          props: [\n            ['x1', x1],\n            ['y1', y1],\n            ['x2', x2],\n            ['y2', y2],\n            ['stroke', stroke],\n            ['stroke-width', strokeWidth],\n            ['stroke-dasharray', strokeDasharray]\n          ],\n        });\n      }\n    }\n  }\n\n  get start() {\n    return this.__start;\n  }\n  get end() {\n    return this.__end;\n  }\n  get control() {\n    return this.__control;\n  }\n}\n\nexport default Line;\n","import Geom from './Geom';\nimport mode from '../mode';\n\nclass Polyline extends Geom {\n  constructor(tagName, props) {\n    super(tagName, props);\n    // 折线所有点的列表\n    this.__points = [];\n    if(Array.isArray(this.props.points)) {\n      this.__points = this.props.points;\n    }\n    // 原点位置，4个角，默认左下\n    if(['TOP_LEFT', 'TOP_RIGHT', 'BOTTOM_LEFT', 'BOTTOM_RIGHT'].indexOf(this.props.origin) > -1) {\n      this.__origin = this.props.origin;\n    }\n    else {\n      this.__origin = 'BOTTOM_LEFT';\n    }\n  }\n\n  render(renderMode) {\n    super.render(renderMode);\n    let { rx: x, ry: y, width, height, mlw, mtw, plw, ptw, style, ctx, points, origin, virtualDom } = this;\n    if(points.length < 2) {\n      return;\n    }\n    for(let i = 0, len = points.length; i < len; i++) {\n      if(!Array.isArray(points[i]) || points[i].length < 2) {\n        return;\n      }\n    }\n    let {\n      display,\n      borderTopWidth,\n      borderLeftWidth,\n      stroke,\n      strokeWidth,\n      strokeDasharray,\n    } = style;\n    if(display === 'none') {\n      return;\n    }\n    let originX = x + borderLeftWidth.value + mlw + plw;\n    let originY = y + borderTopWidth.value + mtw + ptw;\n    let pts = this.__pts = [];\n    if(origin === 'TOP_LEFT') {\n      points.forEach(item => {\n        pts.push([\n          originX + item[0] * width,\n          originY + item[1] * height\n        ]);\n      });\n    }\n    else if(origin === 'TOP_RIGHT') {\n      points.forEach(item => {\n        pts.push([\n          originX + width - item[0] * width,\n          originY + item[1] * height\n        ]);\n      });\n    }\n    else if(origin === 'BOTTOM_LEFT') {\n      points.forEach(item => {\n        pts.push([\n          originX + item[0] * width,\n          originY + height - item[1] * height\n        ]);\n      });\n    }\n    else if(origin === 'BOTTOM_RIGHT') {\n      points.forEach(item => {\n        pts.push([\n          originX + width - item[0] * width,\n          originY + height - item[1] * height\n        ]);\n      });\n    }\n    if(renderMode === mode.CANVAS) {\n      ctx.strokeStyle = stroke;\n      ctx.lineWidth = strokeWidth;\n      ctx.setLineDash(strokeDasharray);\n      ctx.beginPath();\n      ctx.moveTo(pts[0][0], originY + pts[0][1]);\n      for(let i = 1, len = pts.length; i < len; i++) {\n        let point = pts[i];\n        ctx.lineTo(point[0], point[1]);\n      }\n      if(strokeWidth && stroke !== 'transparent') {\n        ctx.stroke();\n      }\n      ctx.closePath();\n    }\n    else if(renderMode === mode.SVG) {\n      let points = '';\n      for(let i = 0, len = pts.length; i < len; i++) {\n        let point = pts[i];\n        points += `${point[0]},${point[1]} `;\n      }\n      virtualDom.content.push({\n        type: 'item',\n        tagName: 'polyline',\n        props: [\n          ['points', points],\n          ['fill', 'none'],\n          ['stroke', stroke],\n          ['stroke-width', strokeWidth],\n          ['stroke-dasharray', strokeDasharray]\n        ],\n      });\n    }\n  }\n\n  getPointsByX(x) {\n    let min = Infinity;\n    let len = this.__pts.length;\n    let res = [];\n    for(let i = 0; i < len; i++) {\n      let diff = Math.abs(this.__pts[i][0] - x);\n      if(diff < min) {\n        min = diff;\n      }\n    }\n    for(let i = 0; i < len; i++) {\n      let diff = Math.abs(this.__pts[i][0] - x);\n      if(diff === min) {\n        res.push({\n          index: i,\n          x: this.__pts[i][0],\n          y: this.__pts[i][1],\n        });\n      }\n    }\n    return res;\n  }\n\n  get points() {\n    return this.__points;\n  }\n  get origin() {\n    return this.__origin;\n  }\n}\n\nexport default Polyline;\n","import Geom from './Geom';\nimport mode from '../mode';\n\nclass Polygon extends Geom {\n  constructor(tagName, props) {\n    super(tagName, props);\n    // 所有点的列表\n    this.__points = [];\n    if(Array.isArray(this.props.points)) {\n      this.__points = this.props.points;\n    }\n  }\n\n  render(renderMode) {\n    super.render(renderMode);\n    let { rx: x, ry: y, width, height, mlw, mtw, plw, ptw, style, ctx, points, virtualDom } = this;\n    if(points.length < 3) {\n      return;\n    }\n    for(let i = 0, len = points.length; i < len; i++) {\n      if(!Array.isArray(points[i]) || points[i].length < 2) {\n        return;\n      }\n    }\n    let {\n      display,\n      borderTopWidth,\n      borderLeftWidth,\n      stroke,\n      strokeWidth,\n      strokeDasharray,\n      fill,\n    } = style;\n    if(display === 'none') {\n      return;\n    }\n    let originX = x + borderLeftWidth.value + mlw + plw;\n    let originY = y + borderTopWidth.value + mtw + ptw;\n    points.forEach(item => {\n      item[0] = originX + item[0] * width;\n      item[1] = originY + item[1] * height;\n    });\n    if(renderMode === mode.CANVAS) {\n      ctx.strokeStyle = stroke;\n      ctx.lineWidth = strokeWidth;\n      ctx.fillStyle = fill;\n      ctx.setLineDash(strokeDasharray);\n      ctx.beginPath();\n      ctx.moveTo(points[0][0], originY + points[0][1]);\n      for(let i = 1, len = points.length; i < len; i++) {\n        let point = points[i];\n        ctx.lineTo(point[0], point[1]);\n      }\n      ctx.fill();\n      if(strokeWidth && stroke !== 'transparent') {\n        ctx.stroke();\n      }\n      ctx.closePath();\n    }\n    else if(renderMode === mode.SVG) {\n      let points = '';\n      for(let i = 0, len = points.length; i < len; i++) {\n        let point = points[i];\n        points += `${point[0]},${point[1]} `;\n      }\n      virtualDom.content.push({\n        type: 'item',\n        tagName: 'polygon',\n        props: [\n          ['points', points],\n          ['fill', fill],\n          ['stroke', stroke],\n          ['stroke-width', strokeWidth],\n          ['stroke-dasharray', strokeDasharray]\n        ],\n      });\n    }\n  }\n\n  get points() {\n    return this.__points;\n  }\n}\n\nexport default Polygon;\n","import Geom from './Geom';\nimport mode from '../mode';\n\nconst OFFSET = Math.PI * 0.5;\n\nfunction getCoordByDegree(x, y, r, d) {\n  while(d > 360) {\n    d -= 360;\n  }\n  while(d < 0) {\n    d += 360;\n  }\n  if(d >= 0 && d < 90) {\n    return [\n      x + Math.sin(d * Math.PI / 180) * r,\n      y - Math.cos(d * Math.PI / 180) * r\n    ];\n  }\n  else if(d >= 90 && d < 180) {\n    return [\n      x + Math.cos((d - 90) * Math.PI / 180) * r,\n      y + Math.sin((d - 90) * Math.PI / 180) * r,\n    ];\n  }\n  else if(d >= 180 && d < 270) {\n    return [\n      x - Math.cos((270 - d) * Math.PI / 180) * r,\n      y + Math.sin((270 - d) * Math.PI / 180) * r,\n    ];\n  }\n  else {\n    return [\n      x - Math.sin((360 - d) * Math.PI / 180) * r,\n      y - Math.cos((360 - d) * Math.PI / 180) * r,\n    ];\n  }\n}\n\nclass Sector extends Geom {\n  constructor(tagName, props) {\n    super(tagName, props);\n    // 角度\n    this.__start = 0;\n    this.__end = 0;\n    if(this.props.start) {\n      this.__start = parseFloat(this.props.start);\n      if(isNaN(this.start)) {\n        this.__start = 0;\n      }\n    }\n    if(this.props.end) {\n      this.__end = parseFloat(this.props.end);\n      if(isNaN(this.end)) {\n        this.__end = 0;\n      }\n    }\n    // 半径0~1，默认1\n    this.__r = 1;\n    if(this.props.r) {\n      this.__r = parseFloat(this.props.r);\n      if(isNaN(this.r)) {\n        this.__r = 1;\n      }\n    }\n  }\n\n  render(renderMode) {\n    super.render(renderMode);\n    let { rx: x, ry: y, width, height, mlw, mtw, plw, ptw, style, ctx, start, end, r, virtualDom } = this;\n    if(start === end) {\n      return;\n    }\n    let {\n      display,\n      borderTopWidth,\n      borderLeftWidth,\n      stroke,\n      strokeWidth,\n      strokeDasharray,\n      fill,\n    } = style;\n    if(display === 'none') {\n      return;\n    }\n    let originX = x + borderLeftWidth.value + mlw + plw;\n    let originY = y + borderTopWidth.value + mtw + ptw;\n    originX += width * 0.5;\n    originY += height * 0.5;\n    r *= Math.min(width, height) * 0.5;\n    if(renderMode === mode.CANVAS) {\n      ctx.strokeStyle = stroke;\n      ctx.lineWidth = strokeWidth;\n      ctx.fillStyle = fill;\n      ctx.setLineDash(strokeDasharray);\n      ctx.beginPath();\n      ctx.moveTo(originX, originY);\n      ctx.arc(originX, originY, r, start * Math.PI / 180 - OFFSET, end * Math.PI / 180 - OFFSET);\n      ctx.fill();\n      if(strokeWidth && stroke !== 'transparent') {\n        ctx.stroke();\n      }\n      ctx.closePath();\n    }\n    else if(renderMode === mode.SVG) {\n      let x1, y1, x2, y2;\n      [ x1, y1 ] = getCoordByDegree(originX, originY, r, start);\n      [ x2, y2 ] = getCoordByDegree(originX, originY, r, end);\n      let large = (end - start) > 180 ? 1 : 0;\n      virtualDom.content.push({\n        type: 'item',\n        tagName: 'path',\n        props: [\n          ['d', `M${originX} ${originY} L${x1} ${y1} A${r} ${r} 0 ${large} 1 ${x2} ${y2} z`],\n          ['fill', fill],\n          ['stroke', stroke],\n          ['stroke-width', strokeWidth],\n          ['stroke-dasharray', strokeDasharray]\n        ],\n      });\n    }\n  }\n\n  get start() {\n    return this.__start;\n  }\n  get end() {\n    return this.__end;\n  }\n  get r() {\n    return this.__r;\n  }\n}\n\nexport default Sector;\n","import Geom from './Geom';\nimport mode from '../mode';\n\nclass Rect extends Geom {\n  constructor(tagName, props) {\n    super(tagName, props);\n  }\n\n  render(renderMode) {\n    super.render(renderMode);\n    let { rx: x, ry: y, width, height, mlw, mtw, plw, ptw, style, ctx, virtualDom } = this;\n    let {\n      display,\n      borderTopWidth,\n      borderLeftWidth,\n      stroke,\n      strokeWidth,\n      strokeDasharray,\n      fill,\n    } = style;\n    if(display === 'none') {\n      return;\n    }\n    let originX = x + borderLeftWidth.value + mlw + plw;\n    let originY = y + borderTopWidth.value + mtw + ptw;\n    if(renderMode === mode.CANVAS) {\n      ctx.strokeStyle = stroke;\n      ctx.lineWidth = strokeWidth;\n      ctx.fillStyle = fill;\n      ctx.setLineDash(strokeDasharray);\n      ctx.beginPath();\n      ctx.moveTo(originX, originY);\n      ctx.lineTo(originX + width, originY);\n      ctx.lineTo(originX + width, originY + height);\n      ctx.lineTo(originX, originY + height);\n      ctx.fill();\n      if(strokeWidth && stroke !== 'transparent') {\n        ctx.stroke();\n      }\n      ctx.closePath();\n    }\n    else if(renderMode === mode.SVG) {\n      virtualDom.content.push({\n        type: 'item',\n        tagName: 'rect',\n        props: [\n          ['x', x],\n          ['y', y],\n          ['width', width],\n          ['height', height],\n          ['fill', fill],\n          ['stroke', stroke],\n          ['stroke-width', strokeWidth],\n          ['stroke-dasharray', strokeDasharray]\n        ],\n      });\n    }\n  }\n}\n\nexport default Rect;\n","import Geom from './Geom';\nimport mode from '../mode';\n\nclass Circle extends Geom {\n  constructor(tagName, props) {\n    super(tagName, props);\n    // 半径0~1，默认1\n    this.__r = 1;\n    if(this.props.r) {\n      this.__r = parseFloat(this.props.r);\n      if(isNaN(this.r)) {\n        this.__r = 1;\n      }\n    }\n  }\n\n  render(renderMode) {\n    super.render(renderMode);\n    let { rx: x, ry: y, width, height, mlw, mtw, plw, ptw, style, ctx, r, virtualDom } = this;\n    let {\n      display,\n      borderTopWidth,\n      borderLeftWidth,\n      stroke,\n      strokeWidth,\n      strokeDasharray,\n      fill,\n    } = style;\n    if(display === 'none') {\n      return;\n    }\n    let originX = x + borderLeftWidth.value + mlw + plw;\n    let originY = y + borderTopWidth.value + mtw + ptw;\n    originX += width * 0.5;\n    originY += height * 0.5;\n    r *= Math.min(width, height) * 0.5;\n    if(renderMode === mode.CANVAS) {\n      ctx.strokeStyle = stroke;\n      ctx.lineWidth = strokeWidth;\n      ctx.fillStyle = fill;\n      ctx.setLineDash(strokeDasharray);\n      ctx.beginPath();\n      ctx.arc(originX, originY, r, 0, 2 * Math.PI);\n      if(fill !== 'transparent') {\n        ctx.fill();\n      }\n      if(strokeWidth && stroke !== 'transparent') {\n        ctx.stroke();\n      }\n      ctx.closePath();\n    }\n    else if(renderMode === mode.SVG) {\n      virtualDom.content.push({\n        type: 'item',\n        tagName: 'circle',\n        props: [\n          ['cx', originX],\n          ['cy', originY],\n          ['r', r],\n          ['fill', fill],\n          ['stroke', stroke],\n          ['stroke-width', strokeWidth],\n          ['stroke-dasharray', strokeDasharray]\n        ],\n      });\n    }\n  }\n\n  get r() {\n    return this.__r;\n  }\n}\n\nexport default Circle;\n","import Geom from './Geom';\nimport mode from '../mode';\n\nclass Ellipse extends Geom {\n  constructor(tagName, props) {\n    super(tagName, props);\n    // 半径0~1，默认1\n    this.__rx = 1;\n    if(this.props.rx) {\n      this.__rx = parseFloat(this.props.rx);\n      if(isNaN(this.rx)) {\n        this.__rx = 1;\n      }\n    }\n    this.__ry = 1;\n    if(this.props.ry) {\n      this.__ry = parseFloat(this.props.ry);\n      if(isNaN(this.rx)) {\n        this.__ry = 1;\n      }\n    }\n  }\n\n  render(renderMode) {\n    super.render(renderMode);\n    let { rx: x, ry: y, width, height, mlw, mtw, plw, ptw, style, ctx, rx, ry, virtualDom } = this;\n    let {\n      display,\n      borderTopWidth,\n      borderLeftWidth,\n      stroke,\n      strokeWidth,\n      strokeDasharray,\n      fill,\n    } = style;\n    if(display === 'none') {\n      return;\n    }\n    let originX = x + borderLeftWidth.value + mlw + plw;\n    let originY = y + borderTopWidth.value + mtw + ptw;\n    originX += width * 0.5;\n    originY += height * 0.5;\n    rx *= width * 0.5;\n    ry *= height * 0.5;\n    if(renderMode === mode.CANVAS) {\n      ctx.strokeStyle = stroke;\n      ctx.lineWidth = strokeWidth;\n      ctx.fillStyle = fill;\n      ctx.setLineDash(strokeDasharray);\n      ctx.beginPath();\n      ctx.moveTo(originX, originY);\n      ctx.ellipse && ctx.ellipse(originX, originY, rx, ry, 0, 0, 2 * Math.PI);\n      ctx.fill();\n      if(strokeWidth && stroke !== 'transparent') {\n        ctx.stroke();\n      }\n      ctx.closePath();\n    }\n    else if(renderMode === mode.SVG) {\n      virtualDom.content.push({\n        type: 'item',\n        tagName: 'ellipse',\n        props: [\n          ['cx', originX],\n          ['cy', originY],\n          ['rx', rx],\n          ['ry', ry],\n          ['fill', fill],\n          ['stroke', stroke],\n          ['stroke-width', strokeWidth],\n          ['stroke-dasharray', strokeDasharray]\n        ],\n      });\n    }\n  }\n\n  get rx() {\n    return this.__rx;\n  }\n  get ry() {\n    return this.__ry;\n  }\n}\n\nexport default Ellipse;\n","import Geom from './Geom';\nimport mode from '../mode';\n\nclass Grid extends Geom {\n  constructor(tagName, props) {\n    super(tagName, props);\n    // x,y被分为几格\n    this.__nx = 0;\n    if(this.props.nx) {\n      this.__nx = parseFloat(this.props.nx);\n      if(isNaN(this.nx)) {\n        this.__nx = 0;\n      }\n    }\n    this.__ny = 0;\n    if(this.props.ny) {\n      this.__ny = parseFloat(this.props.ny);\n      if(isNaN(this.ny)) {\n        this.__ny = 0;\n      }\n    }\n  }\n\n  render(renderMode) {\n    super.render(renderMode);\n    let { rx: x, ry: y, width, height, mlw, mtw, plw, ptw, style, ctx, nx, ny, virtualDom } = this;\n    if(width <= 0 || height <= 0) {\n      return;\n    }\n    if(nx < 3 && ny < 3) {\n      return;\n    }\n    let {\n      display,\n      borderTopWidth,\n      borderLeftWidth,\n      stroke,\n      strokeWidth,\n      strokeDasharray,\n    } = style;\n    if(display === 'none') {\n      return;\n    }\n    let originX = x + borderLeftWidth.value + mlw + plw;\n    let originY = y + borderTopWidth.value + mtw + ptw;\n    let endX = originX + width;\n    let endY = originY + height;\n    let lx = [];\n    let ly = [];\n    if(nx >= 3) {\n      let per = width / (nx - 1);\n      for(let i = 0; i < nx; i++) {\n        ly.push(originX + i * per);\n      }\n    }\n    if(ny >= 3) {\n      let per = height / (ny - 1);\n      for(let i = 0; i < ny; i++) {\n        lx.push(originY + i * per);\n      }\n    }\n    if(renderMode === mode.CANVAS) {\n      ctx.strokeStyle = stroke;\n      ctx.lineWidth = strokeWidth;\n      ctx.setLineDash(strokeDasharray);\n      ctx.beginPath();\n      lx.forEach(item => {\n        ctx.moveTo(originX, item);\n        ctx.lineTo(endX, item);\n      });\n      ly.forEach(item => {\n        ctx.moveTo(item, originY);\n        ctx.lineTo(item, endY);\n      });\n      if(strokeWidth && stroke !== 'transparent') {\n        ctx.stroke();\n      }\n      ctx.closePath();\n    }\n    else if(renderMode === mode.SVG) {\n      lx.forEach(item => {\n        virtualDom.content.push({\n          type: 'item',\n          tagName: 'line',\n          props: [\n            ['x1', originX],\n            ['y1', item],\n            ['x2', endX],\n            ['y2', item],\n            ['stroke', stroke],\n            ['stroke-width', strokeWidth],\n            ['stroke-dasharray', strokeDasharray]\n          ],\n        });\n      });\n      ly.forEach(item => {\n        virtualDom.content.push({\n          type: 'item',\n          tagName: 'line',\n          props: [\n            ['x1', item],\n            ['y1', originY],\n            ['x2', item],\n            ['y2', endY],\n            ['stroke', stroke],\n            ['stroke-width', strokeWidth],\n            ['stroke-dasharray', strokeDasharray]\n          ],\n        });\n      });\n    }\n  }\n\n  get nx() {\n    return this.__nx;\n  }\n  get ny() {\n    return this.__ny;\n  }\n  get dash() {\n    return this.__dash;\n  }\n}\n\nexport default Grid;\n","import Dom from './node/Dom';\nimport Root from './node/Root';\nimport mode from './mode';\nimport Geom from './geom/Geom';\nimport Line from './geom/Line';\nimport Polyline from './geom/Polyline';\nimport Polygon from './geom/Polygon';\nimport Sector from './geom/Sector';\nimport Rect from './geom/Rect';\nimport Circle from './geom/Circle';\nimport Ellipse from './geom/Ellipse';\nimport Grid from './geom/Grid';\n\nGeom.register('$line', Line);\nGeom.register('$polyline', Polyline);\nGeom.register('$polygon', Polygon);\nGeom.register('$sector', Sector);\nGeom.register('$rect', Rect);\nGeom.register('$circle', Circle);\nGeom.register('$ellipse', Ellipse);\nGeom.register('$grid', Grid);\n\nlet karas = {\n  render(cs, dom) {\n    if(!(cs instanceof Root)) {\n      throw new Error('render root muse be canvas or svg');\n    }\n    if(dom) {\n      cs.appendTo(dom);\n    }\n    return cs;\n  },\n  createVd(tagName, props, children) {\n    if(['canvas', 'svg'].indexOf(tagName) > -1) {\n      return new Root(tagName, props, children);\n    }\n    if(Dom.isValid(tagName)) {\n      return new Dom(tagName, props, children);\n    }\n    throw new Error('can not use marker: ' + tagName);\n  },\n  createGm(tagName, props) {\n    let klass = Geom.getImplement(tagName);\n    return new klass(tagName, props);\n  },\n  createCp(cp, props) {\n    return new cp(props);\n  },\n  Geom,\n  mode,\n};\n\nif(typeof window != 'undefined') {\n  window.karas = karas;\n}\n\nexport default karas;\n"],"names":["div","Node","__x","__y","__ox","__oy","__width","__height","__prev","__next","__ctx","__parent","__style","__baseLine","__virtualDom","diff","this","x","ox","y","oy","CANVAS","SVG","measure","s","style","document","createElement","position","left","top","visibility","body","appendChild","fontSize","innerText","css","window","getComputedStyle","parseFloat","width","Xom","tagName","props","Array","isArray","arr","hash","i","len","length","item","list","Object","keys","j","k","arr2hash","__props","temp","push","splice","spread","hash2arr","__tagName","_this","__listener","forEach","test","slice","toLowerCase","__mtw","__mrw","__mbw","__mlw","__ptw","__prw","__pbw","__plw","data","w","display","marginTop","marginRight","marginBottom","marginLeft","paddingTop","paddingRight","paddingBottom","paddingLeft","unit","value","__mpWidth","__layoutBlock","__layoutFlex","__layoutInline","mp","renderMode","bb","ctx","height","mlw","mtw","plw","ptw","prw","pbw","virtualDom","right","bottom","backgroundColor","borderTopWidth","borderTopColor","borderTopStyle","borderRightWidth","borderRightColor","borderRightStyle","borderBottomWidth","borderBottomColor","borderBottomStyle","borderLeftWidth","borderLeftColor","borderLeftStyle","transform","parent","h","__offsetX","__offsetY","translateX","translateY","rx","ry","x1","y1","mode","beginPath","fillStyle","rect","fill","closePath","type","x2","lineWidth","strokeStyle","setLineDash","moveTo","lineTo","stroke","y2","mrw","mbw","lhr","car","blr","mdr","lgr","RESET","borderSizing","fontFamily","color","fontStyle","fontWeight","lineHeight","verticalAlign","flexGrow","flexShrink","flexBasis","flexDirection","justifyContent","alignItems","textAlign","strokeWidth","strokeDasharray","reset","v","toString","isType","obj","call","isNumber","stringify","isNil","util","isObject","isString","isFunction","isBoolean","isDate","joinSourceArray","res","encodeHtml","prop","replace","joinVirtualDom","vd","content","children","parserOneBorder","direction","key","exec","c","indexOf","normalize","hasOwnProperty","background","bgc","flex","border","borderTop","borderRight","borderBottom","borderLeft","margin","padding","match","split","map","matrix","matrix3d","translateZ","scaleX","scaleY","scaleZ","rotateX","rotateY","rotateZ","skewX","skewY","perspective","font","Math","max","setFontStyle","getBaseLine","normal","LineBox","__content","fillText","CHAR_WIDTH_CACHE","Text","__lineBoxes","__charWidthList","__charWidth","__textWidth","charWidthList","cache","sum","char","charAt","mw","measureText","charWidth","isVirtual","maxX","lineBoxes","begin","count","lineBox","_this2","render","textWidth","n","min","last","baseLine","__renderMode","LineGroup","__list","__calBaseLine","IMPLEMENT","Geom","total","isDirectionRow","b","main","fixedHeight","fixedWidth","e","force","cb","event","xe","ye","covers","listener","outerWidth","outerHeight","target","name","Error","implement","TAG_NAME","INLINE","Dom","__children","__flowChildren","__absChildren","__lineGroups","__flowY","__traverseChildren","prev","_this3","__traverse","text","parentStyle","__initStyle","__measure","flowChildren","__tryLayInline","isRecursion","__calAutoBasis","b2","min2","max2","__layout","__calAbs","Infinity","lineGroups","lineGroup","add","size","horizonAlign","growList","shrinkList","basisList","minList","growSum","shrinkSum","basisSum","maxSum","maxCross","isOverflow","shrink","grow","overflow","free","child","center","between","around","_this4","absChildren","container","flowY","pw","ph","__layoutAbs","w2","h2","width2","height2","widthPx","heightPx","hasChildEmit","__emitEvent","elem","ovd","nvd","diffBb","firstChild","ol","nl","lastChild","cns","childNodes","removeAt","insertAt","diffD2D","replaceWith","diffD2G","diffItem","diffT2T","diffG2D","diffG2G","obb","nbb","isText","op","setAttribute","removeAttribute","textContent","insertAdjacentHTML","parentNode","removeChild","index","Root","__node","undefined","parseInt","isNaN","touches","node","getBoundingClientRect","clientX","clientY","addEventListener","__cb","dom","o","querySelector","getDom","__initProps","nodeName","toUpperCase","innerHTML","__genHtml","getPropertyValue","getContext","clearRect","__karasInit","domDiff","__ovd","__initEvent","Line","__start","__end","__control","start","end","control","cx1","cy1","cx2","cy2","originX","originY","curve","bezierCurveTo","quadraticCurveTo","Polyline","__points","points","origin","__origin","pts","__pts","point","abs","Polygon","OFFSET","PI","getCoordByDegree","r","d","sin","cos","Sector","__r","arc","large","Rect","Circle","Ellipse","__rx","__ry","ellipse","Grid","__nx","nx","__ny","ny","endX","endY","lx","ly","per","__dash","register","karas","cs","appendTo","createVd","isValid","createGm","getImplement","createCp","cp"],"mappings":"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"}