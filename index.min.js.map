{"version":3,"file":"index.min.js","sources":["src/mode.js","src/node/Node.js","src/style/unit.js","src/util.js","src/style/transform.js","src/node/Xom.js","src/style/font.js","src/style/reset.js","src/style/css.js","src/node/LineBox.js","src/node/Text.js","src/node/LineGroup.js","src/geom/Geom.js","src/node/Dom.js","src/domDiff.js","src/node/Defs.js","src/node/Root.js","src/geom/Line.js","src/geom/Polyline.js","src/geom/Polygon.js","src/geom/Sector.js","src/geom/Rect.js","src/geom/Circle.js","src/geom/Ellipse.js","src/geom/Grid.js","src/index.js"],"sourcesContent":["const CANVAS = 0;\nconst SVG = 1;\n\nlet div;\n\nexport default {\n  CANVAS,\n  SVG,\n  measure(s, style) {\n    if(!div) {\n      div = document.createElement('div');\n      div.style.position = 'absolute';\n      div.style.left = '99999px';\n      div.style.top = '-99999px';\n      div.style.visibility = 'hidden';\n      document.body.appendChild(div);\n    }\n    div.style.fontSize = style.fontSize + 'px';\n    div.innerText = s;\n    let css = window.getComputedStyle(div, null);\n    return parseFloat(css.width);\n  }\n};\n","class Node {\n  constructor() {\n    this.__x = 0;\n    this.__y = 0;\n    this.__ox = 0; // relative/margin:auto/text-align等造成的偏移量\n    this.__oy = 0;\n    this.__width = 0;\n    this.__height = 0;\n    this.__prev = null;\n    this.__next = null;\n    this.__ctx = null; // canvas的context\n    this.__defs = null; // svg的defs\n    this.__parent = null;\n    this.__style = {}; // style被解析后的k-v形式\n    this.__baseLine = 0;\n    this.__virtualDom = {};\n  }\n\n  __offsetX(diff) {\n    this.__ox += diff;\n  }\n\n  __offsetY(diff) {\n    this.__oy += diff;\n  }\n\n  get x() {\n    return this.__x;\n  }\n  get y() {\n    return this.__y;\n  }\n  get ox() {\n    return this.__ox;\n  }\n  get oy() {\n    return this.__oy;\n  }\n  get rx() {\n    return this.x + this.ox;\n  }\n  get ry() {\n    return this.y + this.oy;\n  }\n  get width() {\n    return this.__width;\n  }\n  get height() {\n    return this.__height;\n  }\n  get outerWidth() {\n    return this.__width;\n  }\n  get outerHeight() {\n    return this.__height;\n  }\n  get prev() {\n    return this.__prev;\n  }\n  get next() {\n    return this.__next;\n  }\n  get parent() {\n    return this.__parent;\n  }\n  get root() {\n    if(this.parent) {\n      return this.parent.root;\n    }\n    return this;\n  }\n  get style() {\n    return this.__style;\n  }\n  get ctx() {\n    return this.__ctx;\n  }\n  get defs() {\n    return this.__defs;\n  }\n  get baseLine() {\n    return this.__baseLine;\n  }\n  get virtualDom() {\n    return this.__virtualDom;\n  }\n}\n\nexport default Node;\n","export default {\n  AUTO: 0,\n  PX: 1,\n  PERCENT: 2,\n  POSITION: 3,\n};\n","let toString = {}.toString;\nfunction isType(type) {\n  return function(obj) {\n    return toString.call(obj) === '[object ' + type + ']';\n  }\n}\n\nlet isNumber = isType('Number');\n\nfunction joinSourceArray(arr) {\n  var res = '';\n  for(var i = 0, len = arr.length; i < len; i++) {\n    var item = arr[i];\n    if(Array.isArray(item)) {\n      res += joinSourceArray(item);\n    }\n    else {\n      res += stringify(item);\n    }\n  }\n  return res;\n}\n\nfunction stringify(s) {\n  if(isNil(s)) {\n    return '';\n  }\n  return s.toString();\n}\n\nfunction encodeHtml(s, prop) {\n  if(prop) {\n    return s.replace(/\"/g, '&quot;');\n  }\n  return s.replace(/&/g, '&amp;').replace(/</g, '&lt;');\n}\n\nfunction isNil(v) {\n  return v === undefined || v === null;\n}\n\nfunction joinVirtualDom(vd, nd) {\n  let s = '<defs>';\n  nd.forEach(item => {\n    s += joinDef(item);\n  });\n  s += '</defs><g>';\n  vd.bb.forEach(item => {\n    s += joinVd(item);\n  });\n  s += '</g><g>';\n  vd.children.forEach(item => {\n    s += joinVd(item);\n  });\n  s += '</g>';\n  return s;\n}\n\nfunction joinVd(vd) {\n  if(vd.type === 'item') {\n    let s = '';\n    vd.props.forEach(item => {\n      s += ` ${item[0]}=\"${item[1]}\"`;\n    });\n    if(vd.tagName === 'text') {\n      return `<text${s}>${vd.content}</text>`;\n    }\n    return `<${vd.tagName}${s}/>`;\n  }\n  else if(vd.type === 'text') {\n    let s = ``;\n    vd.children.forEach(item => {\n      s += joinVd(item);\n    });\n    return `<g>${s}</g>`;\n  }\n  else if(vd.type === 'dom' || vd.type === 'geom') {\n    let s = '<g>';\n    vd.bb.forEach(item => {\n      s += joinVd(item);\n    });\n    s += '</g><g>';\n    vd.children.forEach(item => {\n      s += joinVd(item);\n    });\n    s += '</g>';\n    return `<g transform=\"${joinTransform(vd.transform)}\">${s}</g>`;\n  }\n}\n\nfunction joinTransform(transform) {\n  let s = '';\n  transform.forEach(item => {\n    s += `${item[0]}(${item[1]}) `;\n  });\n  return s;\n}\n\nfunction joinDef(def) {\n  let s = `<${def.tagName} id=\"${def.uuid}\" gradientUnits=\"userSpaceOnUse\"`;\n  def.props.forEach(item => {\n    s += ` ${item[0]}=\"${item[1]}\"`;\n  });\n  s += '>';\n  def.stop.forEach(item => {\n    s += `<stop stop-color=\"${item[0]}\" offset=\"${item[1] * 100}%\"/>`;\n  });\n  s += `</${def.tagName}>`;\n  return s;\n}\n\nfunction r2d(n) {\n  return n * Math.PI / 180;\n}\n\nfunction rgb2int(color) {\n  let res = [];\n  if(color.charAt(0) === '#') {\n    color = color.slice(1);\n    if(color.length === 3) {\n      res.push(parseInt(color.charAt(0) + color.charAt(0), 16));\n      res.push(parseInt(color.charAt(1) + color.charAt(1), 16));\n      res.push(parseInt(color.charAt(2) + color.charAt(2), 16));\n    } else if(color.length === 6) {\n      res.push(parseInt(color.slice(0, 2), 16));\n      res.push(parseInt(color.slice(2, 4), 16));\n      res.push(parseInt(color.slice(4), 16));\n    }\n  }\n  else {\n    let c = color.match(/rgba?\\s*\\(\\s*(\\d+)\\s*,\\s*(\\d+)\\s*,\\s*(\\d+)(?:\\s*,\\s*([\\d.]+))?\\s*\\)/i);\n    if(c) {\n      res = [parseInt(c[1]), parseInt(c[2]), parseInt(c[3])];\n      if(c[4]) {\n        res[3] = parseFloat(c[4]);\n      }\n\n    }\n  }\n  return res;\n}\n\nfunction arr2hash(arr) {\n  let hash = {};\n  for(let i = 0, len = arr.length; i < len; i++) {\n    let item = arr[i];\n    if(Array.isArray(item)) {\n      hash[item[0]] = item[1];\n    }\n    else {\n      for(let list = Object.keys(item), j = list.length - 1; j >= 0; j--) {\n        let k = list[j];\n        hash[k] = item[k];\n      }\n    }\n  }\n  return hash;\n}\n\nfunction hash2arr(hash) {\n  let arr = [];\n  for(let list = Object.keys(hash), i = 0, len = list.length; i < len; i++) {\n    let k = list[i];\n    arr.push([k, hash[k]]);\n  }\n  return arr;\n}\n\nlet util = {\n  isObject: isType('Object'),\n  isString: isType('String'),\n  isFunction: isType('Function'),\n  isNumber,\n  isBoolean: isType('Boolean'),\n  isDate: isType('Date'),\n  stringify,\n  joinSourceArray(arr) {\n    return joinSourceArray(arr);\n  },\n  encodeHtml,\n  isNil,\n  joinVirtualDom,\n  joinVd,\n  joinTransform,\n  joinDef,\n  r2d,\n  rgb2int,\n  arr2hash,\n  hash2arr,\n};\n\nexport default util;\n","import unit from '../style/unit';\nimport util from '../util';\n\nfunction calMatrix(transform, ox, oy) {\n  let matrix = [1, 0, 0, 1, 0, 0];\n  let tx = 0;\n  let ty = 0;\n  let rd = 0;\n  let sdx = 0;\n  let sdy = 0;\n  let sx = 1;\n  let sy = 1;\n  let hasRotate;\n  transform.forEach(item => {\n    let [k, v] = item;\n    if(k === 'translateX') {\n      tx += v;\n      if(hasRotate) {\n        ox -= v;\n      }\n    }\n    else if(k === 'translateY') {\n      ty += v;\n      if(hasRotate) {\n        oy -= v;\n      }\n    }\n    else if(k === 'scaleX') {\n      sx *= v;\n    }\n    else if(k === 'scaleY') {\n      sy *= v;\n    }\n    else if(k === 'skewX') {\n      sdx += v;\n    }\n    else if(k === 'skewY') {\n      sdy += v;\n    }\n    else if(k === 'rotate') {\n      rd += v;\n      hasRotate = true;\n    }\n  });\n  rd = util.r2d(rd);\n  sdx = util.r2d(sdx);\n  sdy = util.r2d(sdy);\n  matrix[0] = sx * Math.cos(rd);\n  matrix[1] = sy * Math.sin(rd) + sy * Math.tan(sdy);\n  matrix[2] = -sx * Math.sin(rd) + sx * Math.tan(sdx);\n  matrix[3] = sy * Math.cos(rd);\n  matrix[4] = (-ox * Math.cos(rd) + oy * Math.sin(rd) + ox) * sx + tx + ox - sx * ox;\n  matrix[5] = (-ox * Math.sin(rd) - oy * Math.cos(rd) + oy) * sy + ty + oy - sy * oy;\n  return matrix;\n}\n\nfunction transformPoint(matrix, x, y) {\n  let [a, b, c, d, e, f] = matrix;\n  return [a * x + c * y + e, b * x + d * y + f];\n}\n\n// 向量积\nfunction vectorProduct(x1, y1, x2, y2) {\n  return x1 * y2 - x2 * y1;\n}\n\nfunction pointInQuadrilateral(x, y, x1, y1, x2, y2, x3, y3, x4, y4, matrix) {\n  if(matrix) {\n    [x1, y1] = transformPoint(matrix, x1, y1);\n    [x2, y2] = transformPoint(matrix, x2, y2);\n    [x3, y3] = transformPoint(matrix, x3, y3);\n    [x4, y4] = transformPoint(matrix, x4, y4);\n    if(vectorProduct(x2 - x1, y2 - y1, x - x1, y - y1) > 0\n      && vectorProduct(x4 - x2, y4 - y2, x - x2, y - y2) > 0\n      && vectorProduct(x3 - x4, y3 - y4, x - x4, y - y4) > 0\n      && vectorProduct(x1 - x3, y1 - y3, x - x3, y - y3) > 0) {\n      return true;\n    }\n  }\n  else {\n    return x >= x1 && y >= y1 && x <= x4 && y <= y4;\n  }\n}\n\nfunction normalize(transform, ox, oy, w, h) {\n  transform.forEach(item => {\n    let [k, v] = item;\n    if(k === 'translateX') {\n      if(v.unit === unit.PERCENT) {\n        item[1] = v.value * w * 0.01;\n      }\n      else {\n        item[1] = v.value;\n      }\n    }\n    else if(k === 'translateY') {\n      if(v.unit === unit.PERCENT) {\n        item[1] = v.value * h * 0.01;\n      }\n      else {\n        item[1] = v.value;\n      }\n    }\n  });\n  return transform;\n}\n\n// 1上层，2下层\nfunction alphaBlend(im1, im2) {\n  let d1 = im1.data;\n  let d2 = im2.data;\n  for(let i = 0, len = d1.length; i < len; i += 4) {\n    let r1 = d1[i];\n    let g1 = d1[i + 1];\n    let b1 = d1[i + 2];\n    let a1 = d1[i + 3];\n    let r2 = d2[i];\n    let g2 = d2[i + 1];\n    let b2 = d2[i + 2];\n    let a2 = d2[i + 3];\n    if(a2 === 0) {\n    }\n    else if(a1 === 0) {\n      d1[i] = r2;\n      d1[i + 1] = g2;\n      d1[i + 2] = b2;\n      d1[i + 3] = a2;\n    }\n    else {\n      a1 /= 255;\n      a2 /= 255;\n      r1 = r1 * a1 + r2 * a2 * (1 - a1);\n      b1 = g1 * a1 + g2 * a2 * (1 - a1);\n      b1 = b1 * a1 + b2 * a2 * (1 - a1);\n      a1 = 1 - (1 - a1) * ( 1 - a2);\n      r1 = r1 / a1;\n      g1 = g1 / a1;\n      b1 = b1 / a1;\n      d1[i] = r1;\n      d1[i + 1] = g1;\n      d1[i + 2] = b1;\n      d1[i + 3] = a1;\n    }\n  }\n}\n\nexport default {\n  calMatrix,\n  pointInQuadrilateral,\n  normalize,\n  alphaBlend,\n};\n","import Node from './Node';\nimport mode from '../mode';\nimport unit from '../style/unit';\nimport tf from '../style/transform';\nimport util from '../util';\n\n/* 获取合适的虚线实体空白宽度ps/pd和数量n\n * 总长total，start边长bs，end边长be，内容长w，\n * 实体长范围[smin,smax]，空白长范围[dmin,dmax]\n */\nfunction getFitDashed(total, bs, be, w, smin, smax, dmin, dmax) {\n  let n = 1;\n  let ps = 1;\n  let pd = 1;\n  // 从最大实体空白长开始尝试\n  outer:\n  for(let i = smax; i >= smin; i--) {\n    for(let j = dmax; j >= dmin; j--) {\n      // 已知实体空白长度，n实体和n-1空白组成total，计算获取n数量\n      let per = i + j;\n      let num = Math.floor((total + j) / per);\n      let k = j;\n      // 可能除不尽，此时扩展空白长\n      if(num * per < j + total) {\n        let free = total - num * i;\n        k = free / (num - 1);\n        if(k > dmax) {\n          continue;\n        }\n      }\n      per = i + k;\n      // bs比实体大才有效，因为小的话必定和第一个实体完整相连\n      if(bs > 1 && bs > i) {\n        let mo = bs % per;\n        if(mo > i) {\n          continue;\n        }\n        if(be > 1) {\n          let mo = (bs + w) % per;\n          if(mo > i) {\n            continue;\n          }\n        }\n      }\n      if(be > 1) {\n        let mo = (bs + w) % per;\n        if(mo > i) {\n          continue;\n        }\n      }\n      if(num > 0) {\n        n = num;\n        ps = i;\n        pd = k;\n      }\n      break outer;\n    }\n  }\n  return {\n    n,\n    ps,\n    pd,\n  };\n}\n\n// dashed时n个实线和n-1虚线默认以3:1宽度组成，dotted则是n和n以1:1组成\nfunction getDashed(style, m1, m2, m3, m4, bw) {\n  let total = m4 - m1;\n  let w = m3 - m2;\n  let bs = m2 - m1;\n  let be = m4 - m3;\n  if(style === 'dotted') {\n    return getFitDashed(total, bs, be, w, bw, bw, Math.max(1, bw * 0.25), bw * 2);\n  }\n  else {\n    let { n, ps, pd } = getFitDashed(total, bs, be, w, bw, bw * 3, Math.max(1, bw * 0.25), bw * 2);\n    if(n === 1) {\n      return getFitDashed(total, bs, be, w, bw, bw, Math.max(1, bw * 0.25), bw * 2);\n    }\n    // 降级为dotted\n    return { n, ps, pd };\n  }\n}\n\nfunction renderBorder(renderMode, points, color, ctx, xom) {\n  if(renderMode === mode.CANVAS) {\n    points.forEach(point => {\n      ctx.beginPath();\n      ctx.fillStyle = color;\n      ctx.moveTo(point[0], point[1]);\n      for(let i = 2, len = point.length; i < len; i += 2) {\n        ctx.lineTo(point[i], point[i + 1]);\n      }\n      ctx.fill();\n      ctx.closePath();\n    });\n  }\n  else if(renderMode === mode.SVG) {\n    let s = '';\n    points.forEach(point => {\n      s += `M ${point[0]} ${point[1]}`;\n      for(let i = 2, len = point.length; i < len; i += 2) {\n        s += `L ${point[i]} ${point[i + 1]} `;\n      }\n    });\n    let item = {\n      type: 'item',\n      tagName: 'path',\n      props: [\n        ['d', s],\n        ['fill', color],\n      ],\n    };\n    xom.addBorder([\n      ['d', s],\n      ['fill', color],\n    ]);\n  }\n}\n\n// 当linear-gradient的值超过[0,1]区间限制时，计算其对应区间1的值\nfunction getCsStartLimit(c1, p1, c2, p2, length) {\n  let [ r1, g1, b1, a1 = 1 ] = c1;\n  let [ r2, g2, b2, a2 = 1 ] = c2;\n  let l1 = Math.abs(p1) * length;\n  let l2 = p2 * length;\n  let p = l1 / (l2 + l1);\n  let r = Math.floor(r1 + (r2 - r1) * p);\n  let g = Math.floor(g1 + (g2 - g1) * p);\n  let b = Math.floor(b1 + (b2 - b1) * p);\n  let a = a1 + (a2 - a1) * p;\n  return [r, g, b, a];\n}\n\nfunction getCsEndLimit(c1, p1, c2, p2, length) {\n  let [ r1, g1, b1, a1 = 1 ] = c1;\n  let [ r2, g2, b2, a2 = 1 ] = c2;\n  let l1 = p1 * length;\n  let l2 = p2 * length;\n  let p = (length - l1) / (l2 - l1);\n  let r = Math.floor(r1 + (r2 - r1) * p);\n  let g = Math.floor(g1 + (g2 - g1) * p);\n  let b = Math.floor(b1 + (b2 - b1) * p);\n  let a = a1 + (a2 - a1) * p;\n  return [r, g, b, a];\n}\n\nfunction getCsLimit(first, last, length) {\n  let c1 = util.rgb2int(first[0]);\n  let c2 = util.rgb2int(last[0]);\n  let [ r1, g1, b1, a1 = 1 ] = c1;\n  let [ r2, g2, b2, a2 = 1 ] = c2;\n  let l1 = Math.abs(first[1]) * length;\n  let l2 = last[1] * length;\n  let p = l1 / (l1 + l2);\n  let r = Math.floor(r1 + (r2 - r1) * p);\n  let g = Math.floor(g1 + (g2 - g1) * p);\n  let b = Math.floor(b1 + (b2 - b1) * p);\n  let a = a1 + (a2 - a1) * p;\n  first[0] = `rgba(${r},${g},${b},${a})`;\n  first[1] = 0;\n  p = (length + l1) / (l1 + l2);\n  r = Math.floor(r1 + (r2 - r1) * p);\n  g = Math.floor(g1 + (g2 - g1) * p);\n  b = Math.floor(b1 + (b2 - b1) * p);\n  a = a1 + (a2 - a1) * p;\n  last[0] = `rgba(${r},${g},${b},${a})`;\n  last[1] = 1;\n}\n\n// 获取color-stop区间范围，去除无用值\nfunction getColorStop(v, length) {\n  let list = [];\n  // 先把已经声明距离的换算成[0,1]以数组形式存入，未声明的原样存入\n  for(let i = 1, len = v.length; i < len; i++) {\n    let item = v[i];\n    // 考虑是否声明了位置\n    let arr = item.trim().split(/\\s+/);\n    if(arr.length > 1) {\n      let c = arr[0];\n      let p = arr[1];\n      if(/%$/.test(p)) {\n        list.push([c, parseFloat(p) * 0.01]);\n      }\n      else {\n        list.push([c, parseFloat(p) / length]);\n      }\n    }\n    else {\n      list.push(arr[0]);\n    }\n  }\n  // 首尾不声明默认为[0, 1]\n  if(list.length > 1) {\n    if(!Array.isArray(list[0])) {\n      list[0] = [list[0], 0];\n    }\n    if(!Array.isArray(list[list.length - 1])) {\n      list[list.length - 1] = [list[list.length - 1], 1];\n    }\n  }\n  else if(!Array.isArray(list[0])) {\n    list[0] = [list[0], 0];\n  }\n  // 不是数组形式的是未声明的，需区间计算，找到连续的未声明的，前后的区间平分\n  let start = list[0][1];\n  for(let i = 1, len = list.length; i < len - 1; i++) {\n    let item = list[i];\n    if(Array.isArray(item)) {\n      start = item[1];\n    }\n    else {\n      let j = i + 1;\n      let end = list[list.length - 1][1];\n      for(; j < len - 1; j++) {\n        let item = list[j];\n        if(Array.isArray(item)) {\n          end = item[1];\n          break;\n        }\n      }\n      let num = j - i + 1;\n      let per = (end - start) / num;\n      for(let k = i;k < j; k++) {\n        let item = list[k];\n        list[k] = [item, start + per * (k + 1 - i)];\n      }\n      i = j;\n    }\n  }\n  // 每个不能小于前面的，canvas/svg不能兼容这种情况，需处理\n  for(let i = 1, len = list.length; i < len; i++) {\n    let item = list[i];\n    let prev = list[i - 1];\n    if(item[1] < prev[1]) {\n      item[1] = prev[1];\n    }\n  }\n  // 0之前的和1之后的要过滤掉\n  for(let i = 0, len = list.length; i < len - 1; i++) {\n    let item = list[i];\n    if(item[1] > 1) {\n      list.splice(i + 1);\n      break;\n    }\n  }\n  for(let i = list.length - 1; i > 0; i--) {\n    let item = list[i];\n    if(item[1] < 0) {\n      list.splice(0, i);\n      break;\n    }\n  }\n  // 可能存在超限情况，如在使用px单位超过len或<len时，canvas会报错超过[0,1]区间，需手动换算至区间内\n  let len = list.length;\n  // 在只有1个的情况下可简化\n  if(len === 1) {\n    list[0][1] = 0;\n  }\n  else {\n    // 全部都在[0,1]之外也可以简化\n    let allBefore = true;\n    let allAfter = true;\n    for(let i = len - 1; i >= 0; i--) {\n      let item = list[i];\n      let p = item[1];\n      if(p > 0) {\n        allBefore = false;\n      }\n      if(p < 1) {\n        allAfter = false;\n      }\n    }\n    if(allBefore) {\n      list.splice(0, len - 1);\n      list[0][1] = 0;\n    }\n    else if(allAfter) {\n      list.splice(1);\n      list[0][1] = 0;\n    }\n    // 部分在区间之外需复杂计算\n    else {\n      let first = list[0];\n      let last = list[len - 1];\n      // 只要2个的情况下就是首尾都落在外面\n      if(len === 2) {\n        if(first[1] < 0 && last[1] > 1) {\n          getCsLimit(first, last, length);\n        }\n      }\n      // 只有1个在外面的情况较为容易\n      else {\n        if(first[1] < 0) {\n          let next = list[1];\n          let c1 = util.rgb2int(first[0]);\n          let c2 = util.rgb2int(next[0]);\n          let c = getCsStartLimit(c1, first[1], c2, next[1], length);\n          first[0] = `rgba(${c[0]},${c[1]},${c[2]},${c[3]})`;\n          first[1] = 0;\n        }\n        if(last[1] > 1) {\n          let prev = list[len - 2];\n          let c1 = util.rgb2int(prev[0]);\n          let c2 = util.rgb2int(last[0]);\n          let c = getCsEndLimit(c1, prev[1], c2, last[1], length);\n          last[0] = `rgba(${c[0]},${c[1]},${c[2]},${c[3]})`;\n          last[1] = 1;\n        }\n      }\n    }\n  }\n  // 防止精度计算溢出[0,1]\n  list.forEach(item => {\n    if(item[1] < 0) {\n      item[1] = 0;\n    }\n    else if(item[1] > 1) {\n      item[1] = 1;\n    }\n  });\n  return list;\n}\n\nclass Xom extends Node {\n  constructor(tagName, props) {\n    super();\n    props = props || [];\n    // 构建工具中都是arr，手写可能出现hash情况\n    if(Array.isArray(props)) {\n      this.props = util.arr2hash(props);\n      this.__props = props;\n    }\n    else {\n      this.props = props;\n      this.__props = util.hash2arr(props);\n    }\n    this.__tagName = tagName;\n    this.__style = this.props.style || {}; // style被解析后的k-v形式\n    this.__listener = {};\n    this.__props.forEach(item => {\n      let k = item[0];\n      if(/^on[a-zA-Z]/.test(k)) {\n        this.__listener[k.slice(2).toLowerCase()] = item[1];\n      }\n    });\n    // margin和padding的宽度\n    this.__mtw = 0;\n    this.__mrw = 0;\n    this.__mbw = 0;\n    this.__mlw = 0;\n    this.__ptw = 0;\n    this.__prw = 0;\n    this.__pbw = 0;\n    this.__plw = 0;\n  }\n\n  __layout(data) {\n    let { w } = data;\n    let { style: {\n      display,\n      width,\n      marginTop,\n      marginRight,\n      marginBottom,\n      marginLeft,\n      paddingTop,\n      paddingRight,\n      paddingBottom,\n      paddingLeft,\n    } } = this;\n    if(display === 'none') {\n      return;\n    }\n    if(width && width.unit !== unit.AUTO) {\n      switch(width.unit) {\n        case unit.PX:\n          w = width.value;\n          break;\n        case unit.PERCENT:\n          w *= width.value * 0.01;\n          break;\n      }\n    }\n    this.__mlw = this.__mpWidth(marginLeft, w);\n    this.__mtw = this.__mpWidth(marginTop, w);\n    this.__mrw = this.__mpWidth(marginRight, w);\n    this.__mbw = this.__mpWidth(marginBottom, w);\n    this.__plw = this.__mpWidth(paddingLeft, w);\n    this.__ptw = this.__mpWidth(paddingTop, w);\n    this.__prw = this.__mpWidth(paddingRight, w);\n    this.__pbw = this.__mpWidth(paddingBottom, w);\n    if(display === 'block') {\n      this.__layoutBlock(data);\n    }\n    else if(display === 'flex') {\n      this.__layoutFlex(data);\n    }\n    else if(display === 'inline') {\n      this.__layoutInline(data);\n    }\n  }\n\n  isGeom() {\n    return this.tagName.charAt(0) === '$';\n  }\n\n  // 获取margin/padding的实际值\n  __mpWidth(mp, w) {\n    if(mp.unit === unit.PX) {\n      return mp.value;\n    }\n    else if(mp.unit === unit.PERCENT) {\n      return mp.value * w * 0.01;\n    }\n    return 0;\n  }\n\n  render(renderMode) {\n    this.__renderMode = renderMode;\n    if(renderMode === mode.SVG) {\n      this.__virtualDom = {\n        bb: [],\n        children: [],\n        transform: [],\n      };\n    }\n    let { ctx, style, width, height, mlw, mrw, mtw, mbw, plw, ptw, prw, pbw } = this;\n    // 恢复默认，防止其它matrix影响\n    if(renderMode === mode.CANVAS) {\n      ctx.setTransform(1, 0, 0, 1, 0, 0);\n    }\n    let {\n      display,\n      position,\n      top,\n      right,\n      bottom,\n      left,\n      backgroundGradient: bgg,\n      backgroundColor: bgc,\n      borderTopWidth,\n      borderTopColor: btc,\n      borderTopStyle: bts,\n      borderRightWidth,\n      borderRightColor: brc,\n      borderRightStyle: brs,\n      borderBottomWidth,\n      borderBottomColor: bbc,\n      borderBottomStyle: bbs,\n      borderLeftWidth,\n      borderLeftColor: blc,\n      borderLeftStyle : bls,\n      transform,\n      transformOrigin,\n    } = style;\n    if(display === 'none') {\n      return;\n    }\n    // 使用rx和ry渲染位置，考虑了relative和translate影响\n    let { rx: x, ry: y } = this;\n    let btw = borderTopWidth.value;\n    let brw = borderRightWidth.value;\n    let bbw = borderBottomWidth.value;\n    let blw = borderLeftWidth.value;\n    let x1 = x + mlw;\n    let x2 = x1 + blw;\n    let x3 = x2 + width + plw + prw;\n    let x4 = x3 + brw;\n    let y1 = y + mtw;\n    let y2 = y1 + btw;\n    let y3 = y2 + height + ptw + pbw;\n    let y4 = y3 + bbw;\n    let iw = width + plw + prw;\n    let ih = height + ptw + pbw;\n    // 除root节点外relative渲染时做偏移，百分比基于父元素，若父元素没有一定高则为0\n    if(position === 'relative' && this.parent) {\n      let { width, height } = this.parent;\n      let h = this.parent.style.height;\n      if(left.unit !== unit.AUTO) {\n        let diff = left.unit === unit.PX ? left.value : left.value * width * 0.01;\n        this.__offsetX(diff);\n      }\n      else if(right.unit !== unit.AUTO) {\n        let diff = right.unit === unit.PX ? right.value : right.value * width * 0.01;\n        this.__offsetX(-diff);\n      }\n      if(top.unit !== unit.AUTO) {\n        let diff = top.unit === unit.PX ? top.value : top.value * height * 0.01 * (h.unit === unit.AUTO ? 0 : 1);\n        this.__offsetY(diff);\n      }\n      else if(bottom.unit !== unit.AUTO) {\n        let diff = bottom.unit === unit.PX ? bottom.value : bottom.value * height * 0.01 * (h.unit === unit.AUTO ? 0 : 1);\n        this.__offsetY(-diff);\n      }\n    }\n    // translate相对于自身\n    if(transform) {\n      let x4 = x + mlw + blw + iw + brw + mrw;\n      let y4 = y + mtw + btw + ih + bbw + mbw;\n      let tfo = [];\n      transformOrigin.forEach((item, i) => {\n        if(item.unit === unit.PX) {\n          tfo.push(item.value);\n        }\n        else if(item.unit === unit.PERCENT) {\n          tfo.push(item.value * (i ? (x4 - x) : (y4 - y)) * 0.01);\n        }\n        else if(item.value === 'left') {\n          tfo.push(x);\n        }\n        else if(item.value === 'right') {\n          tfo.push(x4);\n        }\n        else if(item.value === 'top') {\n          tfo.push(y);\n        }\n        else if(item.value === 'bottom') {\n          tfo.push(y + y4);\n        }\n        else {\n          tfo.push(i ? (y + (y4 - y) * 0.5) : (x + (x4 - x) * 0.5));\n        }\n      });\n      this.__tox = tfo[0];\n      this.__toy = tfo[1];\n      let list = tf.normalize(transform, tfo[0], tfo[1], x4 - x, y4 - y);\n      let matrix = tf.calMatrix(list, tfo[0], tfo[1]);\n      if(renderMode === mode.CANVAS) {\n        // TODO: canvas递归transform处理\n        ctx.setTransform(...matrix);\n      } else if(renderMode === mode.SVG) {\n        this.addTransform(['matrix', matrix.join(',')]);\n      }\n    }\n    // 先渲染渐变，没有则背景色\n    if(bgg) {\n      let { k, v } = bgg;\n      if(k === 'linear') {\n        let deg = 180;\n        if(v[0] === 'to top') {\n          deg = 0;\n        }\n        else if(v[0] === 'to top right') {\n          deg = 45;\n        }\n        else if(v[0] === 'to right') {\n          deg = 90;\n        }\n        else if(v[0] === 'to bottom right') {\n          deg = 135;\n        }\n        else if(v[0] === 'to bottom') {\n        }\n        else if(v[0] === 'to bottom left') {\n          deg = 225;\n        }\n        else if(v[0] === 'to left') {\n          deg = 270;\n        }\n        else if(v[0] === 'to top left') {\n          deg = 315;\n        }\n        // 数字角度，没有的话取默认角度\n        else {\n          let match = /([\\d.]+)deg/.exec(v[0]);\n          if(match) {\n            deg = parseFloat(match[1]);\n          }\n          else {\n            v.unshift(null);\n          }\n        }\n        // 需计算角度 https://www.w3cplus.com/css3/do-you-really-understand-css-linear-gradients.html\n        let r = util.r2d(deg);\n        let length = Math.abs(iw * Math.sin(r)) + Math.abs(ih * Math.cos(r));\n        let half = length * 0.5;\n        if(deg >= 360) {\n          deg = deg % 360;\n        }\n        while(deg < 0) {\n          deg += 360;\n        }\n        let cx = x2 + iw * 0.5;\n        let cy = y2 + ih * 0.5;\n        let xx0 = x3;\n        let yy0 = y3;\n        let xx1 = x2;\n        let yy1 = y2;\n        if(deg >= 270) {\n          let r = util.r2d(360 - deg);\n          xx0 = cx + Math.sin(r) * half;\n          yy0 = cy + Math.cos(r) * half;\n          xx1 = cx - Math.sin(r) * half;\n          yy1 = cy - Math.cos(r) * half;\n        }\n        else if(deg >= 180) {\n          let r = util.r2d(deg - 180);\n          xx0 = cx + Math.sin(r) * half;\n          yy0 = cy - Math.cos(r) * half;\n          xx1 = cx - Math.sin(r) * half;\n          yy1 = cy + Math.cos(r) * half;\n        }\n        else if(deg >= 90) {\n          let r = util.r2d(180 - deg);\n          xx0 = cx - Math.sin(r) * half;\n          yy0 = cy - Math.cos(r) * half;\n          xx1 = cx + Math.sin(r) * half;\n          yy1 = cy + Math.cos(r) * half;\n        }\n        else if(deg >= 0) {\n          let r = util.r2d(deg);\n          xx0 = cx - Math.sin(r) * half;\n          yy0 = cy + Math.cos(r) * half;\n          xx1 = cx + Math.sin(r) * half;\n          yy1 = cy - Math.cos(r) * half;\n        }\n        // 计算colorStop\n        let list = getColorStop(v, length);\n        if(renderMode === mode.CANVAS) {\n          let lg = ctx.createLinearGradient(xx0, yy0, xx1, yy1);\n          list.forEach(item => {\n            lg.addColorStop(item[1], item[0]);\n          });\n          ctx.beginPath();\n          ctx.fillStyle = lg;\n          ctx.rect(x2, y2, iw, ih);\n          ctx.fill();\n          ctx.closePath();\n        }\n        else if(renderMode === mode.SVG) {\n          let uuid = this.defs.add({\n            tagName: 'linearGradient',\n            props: [\n              ['x1', xx0],\n              ['y1', yy0],\n              ['x2', xx1],\n              ['y2', yy1]\n            ],\n            stop: list,\n          });\n          this.addBackground([\n            ['x', x2],\n            ['y', y2],\n            ['width', iw],\n            ['height', ih],\n            ['fill', `url(#${uuid})`]\n          ]);\n        }\n      }\n      else if(k === 'radial') {\n        let cx = x2 + iw * 0.5;\n        let cy = y2 + ih * 0.5;\n        let size = 'farthest-corner';\n        let r; // 半径\n        // 申明了形状、圆心、size等\n        if(/circle|ellipse|at|closest|farthest/i.test(v[0])\n          || !/#[0-9a-f]{3,6}/i.test(v[0]) && !/\\brgba?\\(.*\\)/i.test(v[0])) {\n          let i = v[0].indexOf('at');\n          let at;\n          let s;\n          if(i > -1) {\n            at = v[0].slice(i + 2);\n            s = v[0].slice(0, i - 1);\n          }\n          s = /(closest|farthest)-(side|corner)/.exec(s);\n          if(s) {\n            size = s[0];\n          }\n          // 指定宽高后size失效，置null标识\n          else {\n            s = /\\s+(-?[\\d.]+(?:px|%))\\s*(-?[\\d.]+(?:px|%))?/.exec(s);\n            if(s) {\n              size = null;\n              if(s[1].indexOf('px') > -1) {\n                r = parseFloat(s[1]) * 0.5;\n              }\n              else {\n                r = parseFloat(s[1]) * iw * 0.005;\n              }\n            }\n          }\n          if(at) {\n            s = /\\s+(-?[\\d.]+(?:px|%))\\s*(-?[\\d.]+(?:px|%))?/.exec(at);\n            if(s) {\n              if(s[1].indexOf('px') > -1) {\n                cx = x2 + parseFloat(s[1]);\n              }\n              else {\n                cx =  x2 + parseFloat(s[1]) * iw * 0.01;\n              }\n              // y可以省略，此时等同于x\n              let by = s[2] || s[1];\n              if(by.indexOf('px') > -1) {\n                cy = y2 + parseFloat(by);\n              }\n              else {\n                cy = y2 + parseFloat(by) * ih * 0.01;\n              }\n            }\n          }\n        }\n        else {\n          v.unshift(null);\n        }\n        if(size) {\n          if(size === 'closest-side') {\n            // 在边外特殊情况只有end颜色填充\n            if(cx <= x2 || cx >= x3 || cy <= y2 || cy >= y3) {\n              r = 0;\n            }\n            else {\n              let xl;\n              let yl;\n              if(cx < x2 + iw * 0.5) {\n                xl = cx - x2;\n              } else {\n                xl = x3 - cx;\n              }\n              if(cy < y2 + ih * 0.5) {\n                yl = cy - y2;\n              } else {\n                yl = y3 - cy;\n              }\n              r = Math.min(xl, yl);\n            }\n          }\n          else if(size === 'closest-corner') {\n            let xl;\n            let yl;\n            if(cx < x2 + iw * 0.5) {\n              xl = cx - x2;\n            }\n            else {\n              xl = x3 - cx;\n            }\n            if(cy < y2 + ih * 0.5) {\n              yl = cy - y2;\n            }\n            else {\n              yl = y3 - cy;\n            }\n            r = Math.sqrt(Math.pow(xl, 2) + Math.pow(yl, 2));\n          }\n          else if(size === 'farthest-side') {\n            if(cx <= x2) {\n              r = x2 - cx + iw;\n            }\n            else if(cx >= x3) {\n              r = cx - x3 + iw;\n            }\n            else if(cy <= y2) {\n              r = y2 - cy + ih;\n            }\n            else if(cx >= y3) {\n              r = cy - y3 + ih;\n            }\n            else {\n              let xl = Math.max(x3 - cx, cx - x2);\n              let yl = Math.max(y3 - cy, cy - y2);\n              r = Math.max(xl, yl);\n            }\n          }\n          // 默认farthest-corner\n          else {\n            let xl;\n            let yl;\n            if(cx < x2 + iw * 0.5) {\n              xl = x3 - cx;\n            }\n            else {\n              xl = cx - x2;\n            }\n            if(cy < y2 + ih * 0.5) {\n              yl = y3 - cy;\n            }\n            else {\n              yl = cy - y2;\n            }\n            r = Math.sqrt(Math.pow(xl, 2) + Math.pow(yl, 2));\n          }\n        }\n        // 计算colorStop\n        let list = getColorStop(v, r * 2);\n        // 超限情况等同于只显示end的bgc\n        if(r <= 0) {\n          let end = list[list.length - 1];\n          end[1] = 0;\n          list = [end];\n          cx = x2;\n          cy = y2;\n          // 肯定大于最长直径\n          r = iw + ih;\n        }\n        if(renderMode === mode.CANVAS) {\n          let rg = ctx.createRadialGradient(cx, cy, 0, cx, cy, r);\n          list.forEach(item => {\n            rg.addColorStop(item[1], item[0]);\n          });\n          ctx.beginPath();\n          ctx.fillStyle = rg;\n          ctx.rect(x2, y2, iw, ih);\n          ctx.fill();\n          ctx.closePath();\n        }\n        else if(renderMode === mode.SVG) {\n          let uuid = this.defs.add({\n            tagName: 'radialGradient',\n            props: [\n              ['cx', cx],\n              ['cy', cy],\n              ['r', r]\n            ],\n            stop: list,\n          });\n          this.addBackground([\n            ['x', x2],\n            ['y', y2],\n            ['width', iw],\n            ['height', ih],\n            ['fill', `url(#${uuid})`]\n          ]);\n        }\n      }\n    }\n    else if(bgc && bgc !== 'transparent') {\n      if(renderMode === mode.CANVAS) {\n        ctx.beginPath();\n        ctx.fillStyle = bgc;\n        ctx.rect(x2, y2, iw, ih);\n        ctx.fill();\n        ctx.closePath();\n      }\n      else if(renderMode === mode.SVG) {\n        this.addBackground([\n          ['x', x2],\n          ['y', y2],\n          ['width', iw],\n          ['height', ih],\n          ['fill', bgc]\n        ]);\n      }\n    }\n    // 边框需考虑尖角，两条相交边平分45°夹角\n    if(btw > 0 && btc !== 'transparent') {\n      let points = [];\n      if(['dashed', 'dotted'].indexOf(bts) > -1) {\n        // 寻找一个合适的虚线线段长度和之间空白边距长度\n        let { n, ps, pd } = getDashed(bts, x1, x2, x3, x4, btw);\n        if(n <= 1) {\n          points.push([x1, y1, x4, y1, x3, y2, x2, y2]);\n        }\n        else {\n          let deg1 = Math.atan(btw / blw);\n          let deg2 = Math.atan(btw / brw);\n          for(let i = 0; i < n; i++) {\n            // 最后一个可能没有到底，延长之\n            let isLast = i === n - 1;\n            let xx1 = i ? (x1 + ps * i + pd * i) : x1;\n            let xx4 = xx1 + ps;\n            let yy1;\n            let yy2;\n            // 整个和borderLeft重叠\n            if(xx4 < x2) {\n              if(isLast) {\n                points.push([x1, y1, x4, y1, x3, y2, x2, y2]);\n              }\n              else {\n                yy1 = y1 + (xx1 - x1) * Math.tan(deg1);\n                yy2 = y1 + (xx4 - x1) * Math.tan(deg1);\n                points.push([xx1, y1, xx4, y1, xx4, yy2, xx1, yy1]);\n              }\n            }\n            // 整个和borderRight重叠\n            else if(xx1 > x3) {\n              yy1 = y1 + (x4 - xx1) * Math.tan(deg2);\n              yy2 = y1 + (x4 - xx4) * Math.tan(deg2);\n              if(isLast) {\n                points.push([xx1, y1, x4, y1, xx1, yy1]);\n              }\n              else {\n                points.push([xx1, y1, xx4, y1, xx4, yy2, xx1, yy1]);\n              }\n            }\n            // 不被整个重叠的情况再细分\n            else {\n              // 上部分和borderLeft重叠\n              if(xx1 < x2) {\n                yy1 = y1 + (xx1 - x1) * Math.tan(deg1);\n                if(isLast) {\n                  points.push([xx1, y1, x4, y1, x3, y2, x2, y2, xx1, yy1]);\n                }\n                else {\n                  // 下部分和borderRight重叠\n                  if(xx4 > x3) {\n                    points.push([xx1, y1, xx4, y1, x3, y2, x2, y2, xx1, yy1]);\n                  }\n                  // 下部独立\n                  else {\n                    points.push([xx1, y1, xx4, y1, xx4, y2, x2, y2, xx1, yy1]);\n                  }\n                }\n              }\n              // 下部分和borderRight重叠\n              else if(xx4 > x3) {\n                yy1 = y1 + (x4 - xx4) * Math.tan(deg2);\n                // 上部分和borderLeft重叠\n                if(xx1 < x2) {\n                  if(isLast) {\n                    points.push([xx1, y1, x4, y1, x3, y2, x2, y2, xx1, yy1]);\n                  }\n                  else {\n                    points.push([xx1, y1, xx4, y1, xx4, yy1, x3, y2, x2, y2, xx1, yy1]);\n                  }\n                }\n                // 上部独立\n                else {\n                  if(isLast) {\n                    points.push([xx1, y1, x4, y1, x3, y2, xx1, y2]);\n                  }\n                  else {\n                    points.push([xx1, y1, xx4, y1, xx4, yy1, x3, y2, xx1, y2]);\n                  }\n                }\n              }\n              // 完全独立\n              else {\n                if(isLast) {\n                  points.push([xx1, y1, x4, y1, x3, y2, xx1, y2]);\n                }\n                else {\n                  points.push([xx1, y1, xx4, y1, xx4, y2, xx1, y2]);\n                }\n              }\n            }\n          }\n        }\n      }\n      else {\n        points.push([x1, y1, x4, y1, x3, y2, x2, y2]);\n      }\n      renderBorder(renderMode, points, btc, ctx, this);\n    }\n    if(brw > 0 && brc !== 'transparent') {\n      let points = [];\n      if(['dashed', 'dotted'].indexOf(brs) > -1) {\n        // 寻找一个合适的虚线线段长度和之间空白边距长度\n        let { n, ps, pd } = getDashed(brs, y1, y2, y3, y4, brw);\n        if(n <= 1) {\n          points.push([x3, y2, x4, y1, x4, y4, x3, y3]);\n        }\n        else {\n          let deg1 = Math.atan(brw / btw);\n          let deg2 = Math.atan(brw / bbw);\n          for(let i = 0; i < n; i++) {\n            // 最后一个可能没有到底，延长之\n            let isLast = i === n - 1;\n            let yy1 = i ? (y1 + ps * i + pd * i) : y1;\n            let yy4 = yy1 + ps;\n            let xx1;\n            let xx2;\n            // 整个和borderTop重叠\n            if(yy4 < y2) {\n              if(isLast) {\n                points.push([x3, y2, x4, y1, x4, y4, x3, y3]);\n              }\n              else {\n                xx1 = x4 - (yy4 - y1) * Math.tan(deg1);\n                xx2 = x4 - (yy1 - y1) * Math.tan(deg1);\n                points.push([xx1, yy4, xx2, yy1, x4, yy1, x4, yy4]);\n              }\n            }\n            // 整个和borderBottom重叠\n            else if(yy1 > y3) {\n              xx1 = x3 + (yy1 - y3) * Math.tan(deg2);\n              xx2 = x3 + (yy4 - y3) * Math.tan(deg2);\n              if(isLast) {\n                points.push([xx1, yy1, x4, yy1, x4, y4]);\n              }\n              else {\n                points.push([xx1, yy1, x4, yy1, x4, yy4, xx2, yy4]);\n              }\n            }\n            // 不被整个重叠的情况再细分\n            else {\n              // 上部分和borderTop重叠\n              if(yy1 < y2) {\n                xx1 = x3 + (y2 - yy1) * Math.tan(deg1);\n                if(isLast) {\n                  points.push([x3, y2, xx1, yy1, x4, yy1, x4, y4, x3, y4]);\n                }\n                else {\n                  // 下部分和borderBottom重叠\n                  if(yy4 > y3) {\n                    points.push([x3, y2, xx1, yy1, x4, yy1, x4, yy4, xx1, yy4, x3, y3]);\n                  }\n                  // 下部独立\n                  else {\n                    points.push([x3, y2, xx1, yy1, x4, yy1, x4, yy4, x3, yy4]);\n                  }\n                }\n              }\n              // 下部分和borderBottom重叠\n              else if(yy4 > y3) {\n                xx1 = x3 + (yy4 - y3) * Math.tan(deg2);\n                // 上部分和borderTop重叠\n                if(yy1 < y2) {\n                  if(isLast) {\n                    points.push([x3, y2, xx1, yy1, x4, yy1, x4, y4, x3, y3]);\n                  }\n                  else {\n                    points.push([x3, y2, xx1, yy1, x4, yy1, x4, yy4, xx1, yy4, x3, y3]);\n                  }\n                }\n                // 上部独立\n                else {\n                  if(isLast) {\n                    points.push([x3, yy1, x4, yy1, x4, y4, x3, y3]);\n                  }\n                  else {\n                    points.push([x3, yy1, x4, yy1, x4, yy4, xx1, yy4, x3, y3]);\n                  }\n                }\n              }\n              // 完全独立\n              else {\n                if(isLast) {\n                  points.push([x3, yy1, x4, yy1, x4, y4, x3, y3]);\n                }\n                else {\n                  points.push([x3, yy1, x4, yy1, x4, yy4, x3, yy4]);\n                }\n              }\n            }\n          }\n        }\n      }\n      else {\n        points.push([x3, y2, x4, y1, x4, y4, x3, y3]);\n      }\n      renderBorder(renderMode, points, brc, ctx, this);\n    }\n    if(bbw > 0 && bbc !== 'transparent') {\n      let points = [];\n      // 寻找一个合适的虚线线段长度和之间空白边距长度\n      if(['dashed', 'dotted'].indexOf(bbs) > -1) {\n        // 寻找一个合适的虚线线段长度和之间空白边距长度\n        let { n, ps, pd } = getDashed(bbs, x1, x2, x3, x4, bbw);\n        let deg1 = Math.atan(bbw / blw);\n        let deg2 = Math.atan(bbw / brw);\n        for(let i = 0; i < n; i++) {\n          // 最后一个可能没有到底，延长之\n          let isLast = i === n - 1;\n          let xx1 = i ? (x1 + ps * i + pd * i) : x1;\n          let xx4 = xx1 + ps;\n          let yy1;\n          let yy2;\n          // 整个和borderLeft重叠\n          if(xx4 < x2) {\n            if(isLast) {\n              points.push([x1, y4, x2, y3, x3, y3, x4, y4]);\n            }\n            else {\n              yy1 = y4 - (xx1 - x1) * Math.tan(deg1);\n              yy2 = y4 - (xx4 - x1) * Math.tan(deg1);\n              points.push([xx1, yy1, xx4, yy2, xx4, y4, xx1, y4]);\n            }\n          }\n          // 整个和borderRight重叠\n          else if(xx1 > x3) {\n            yy1 = y4 - (xx1 - x1) * Math.tan(deg2);\n            yy2 = y4 - (xx4 - x1) * Math.tan(deg2);\n            if(isLast) {\n              points.push([xx1, yy1, x4, y4, xx1, y4]);\n            }\n            else {\n              points.push([xx1, yy1, xx4, yy2, xx4, y4, xx1, y4]);\n            }\n          }\n          // 不被整个重叠的情况再细分\n          else {\n            // 上部分和borderLeft重叠\n            if(xx1 < x2) {\n              yy1 = y3 + (xx1 - x1) * Math.tan(deg1);\n              if(isLast) {\n                points.push([xx1, yy1, x2, y3, x3, y3, x4, y4, xx1, y4]);\n              }\n              else {\n                // 下部分和borderRight重叠\n                if(xx4 > x3) {\n                  points.push([xx1, yy1, x2, y3, x3, y3, xx4, y4, xx1, y4]);\n                }\n                // 下部独立\n                else {\n                  points.push([xx1, yy1, x2, y3, xx4, y3, xx4, y4, xx1, y4]);\n                }\n              }\n            }\n            // 下部分和borderRight重叠\n            else if(xx4 > x3) {\n              yy1 = y4 - (x4 - xx4) * Math.tan(deg2);\n              // 上部分和borderLeft重叠\n              if(xx1 < x2) {\n                if(isLast) {\n                  points.push([xx1, yy1, x3, y3, x4, y4, xx1, y4]);\n                }\n                else {\n                  points.push([xx1, yy1, x3, y3, xx4, yy1, xx4, y4, xx1, y4]);\n                }\n              }\n              // 上部独立\n              else {\n                if(isLast) {\n                  points.push([xx1, y3, x3, y3, x4, y4, xx1, y4]);\n                }\n                else {\n                  points.push([xx1, y3, x3, y3, xx4, yy1, xx4, y4, xx1, y4]);\n                }\n              }\n            }\n            // 完全独立\n            else {\n              if(isLast) {\n                points.push([xx1, y3, x3, y3, x4, y4, xx1, y4]);\n              }\n              else {\n                points.push([xx1, y3, xx4, y3, xx4, y4, xx1, y4]);\n              }\n            }\n          }\n        }\n      }\n      else {\n        points.push([x1, y4, x2, y3, x3, y3, x4, y4]);\n      }\n      renderBorder(renderMode, points, bbc, ctx, this);\n    }\n    if(blw > 0 && blc !== 'transparent') {\n      let points = [];\n      if(['dashed', 'dotted'].indexOf(bls) > -1) {\n        // 寻找一个合适的虚线线段长度和之间空白边距长度\n        let { n, ps, pd } = getDashed(bls, y1, y2, y3, y4, blw);\n        if(n <= 1) {\n          points.push([x1, y1, x2, y2, x2, y3, x1, y4]);\n        }\n        else {\n          let deg1 = Math.atan(blw / btw);\n          let deg2 = Math.atan(blw / bbw);\n          for(let i = 0; i < n; i++) {\n            // 最后一个可能没有到底，延长之\n            let isLast = i === n - 1;\n            let yy1 = i ? (y1 + ps * i + pd * i) : y1;\n            let yy4 = yy1 + ps;\n            let xx1;\n            let xx2;\n            // 整个和borderTop重叠\n            if(yy4 < y2) {\n              if(isLast) {\n                points.push([x1, y1, x2, y2, x2, y3, x1, y4]);\n              }\n              else {\n                xx1 = x1 + (yy1 - y1) * Math.tan(deg1);\n                xx2 = x1 + (yy4 - y1) * Math.tan(deg1);\n                points.push([x1, yy1, xx1, yy1, xx2, yy4, x1, yy4]);\n              }\n            }\n            // 整个和borderBottom重叠\n            else if(yy1 > y3) {\n              xx1 = x1 + (y4 - yy1) * Math.tan(deg2);\n              xx2 = x1 + (y4 - yy4) * Math.tan(deg2);\n              if(isLast) {\n                points.push([x1, yy1, xx1, yy1, x1, y4]);\n              }\n              else {\n                points.push([x1, yy1, xx1, yy1, xx2, yy4, x1, yy4]);\n              }\n            }\n            // 不被整个重叠的情况再细分\n            else {\n              // 上部分和borderTop重叠\n              if(yy1 < y2) {\n                xx1 = x1 + (yy1 - y1) * Math.tan(deg1);\n                if(isLast) {\n                  points.push([x1, yy1, xx1, yy1, x2, y2, x2, y3, x1, y4]);\n                }\n                else {\n                  // 下部分和borderBottom重叠\n                  if(yy4 > y3) {\n                    points.push([x1, yy1, xx1, yy1, x2, y2, x2, y3, xx1, yy4, x1, yy4]);\n                  }\n                  // 下部独立\n                  else {\n                    points.push([x1, yy1, xx1, yy1, x2, y2, x2, yy4, x1, yy4]);\n                  }\n                }\n              }\n              // 下部分和borderBottom重叠\n              else if(yy4 > y3) {\n                xx1 = x1 + (y4 - yy4) * Math.tan(deg2);\n                // 上部分和borderTop重叠\n                if(yy1 < y2) {\n                  if(isLast) {\n                    points.push([x1, yy1, xx1, yy1, x2, y2, x2, y3, x1, y4]);\n                  }\n                  else {\n                    points.push([x1, yy1, xx1, yy1, x2, y2, x2, y3, xx1, yy4, x1, yy4]);\n                  }\n                }\n                // 上部独立\n                else {\n                  if(isLast) {\n                    points.push([x1, yy1, x2, yy1, x2, y3, x1, y4]);\n                  }\n                  else {\n                    points.push([x1, yy1, x2, yy1, x2, y3, xx1, yy4, x1, yy4]);\n                  }\n                }\n              }\n              // 完全独立\n              else {\n                if(isLast) {\n                  points.push([x1, yy1, x2, yy1, x2, y3, x1, y4]);\n                }\n                else {\n                  points.push([x1, yy1, x2, yy1, x2, yy4, x1, yy4]);\n                }\n              }\n            }\n          }\n        }\n      }\n      else {\n        points.push([x1, y1, x2, y2, x2, y3, x1, y4]);\n      }\n      renderBorder(renderMode, points, blc, ctx, this);\n    }\n  }\n\n  // 先查找到注册了事件的节点，再捕获冒泡判断增加性能\n  __emitEvent(e, force, first) {\n    let { event: { type }, x, y, covers } = e;\n    let { listener, children, style, outerWidth, outerHeight, matrix } = this;\n    if(style.display === 'none') {\n      return;\n    }\n    let cb;\n    if(listener.hasOwnProperty(type)) {\n      cb = listener[type];\n    }\n    // touchend之类强制的直接通知即可\n    if(force) {\n      children.forEach(child => {\n        if(child instanceof Xom && !child.isGeom()) {\n          child.__emitEvent(e, force, first);\n        }\n      });\n      cb && cb(e);\n      return;\n    }\n    let childWillResponse;\n    if(!this.isGeom()) {\n      // 先响应absolute/relative高优先级，从后往前遮挡顺序\n      for(let i = children.length - 1; i >= 0; i--) {\n        let child = children[i];\n        if(child instanceof Xom && ['absolute', 'relative'].indexOf(child.style.position) > -1) {\n          if(child.__emitEvent(e)) {\n            childWillResponse = true;\n          }\n        }\n      }\n      // 再看普通流，从后往前遮挡顺序\n      for(let i = children.length - 1; i >= 0; i--) {\n        let child = children[i];\n        if(child instanceof Xom && ['absolute', 'relative'].indexOf(child.style.position) === -1) {\n          if(child.__emitEvent(e)) {\n            childWillResponse = true;\n          }\n        }\n      }\n    }\n    // child触发则parent一定触发，否则判断事件坐标是否在节点内且未被遮挡\n    if(childWillResponse || this.willResponseEvent(e)) {\n      // 根据是否matrix存入遮罩坐标\n      covers.push({\n        x,\n        y,\n        w: outerWidth,\n        h: outerHeight,\n        matrix,\n      });\n      if(!e.target) {\n        e.target = this;\n      }\n      cb && cb(e);\n    }\n  }\n\n  willResponseEvent(e) {\n    let { x, y, covers } = e;\n    let { rx, ry, outerWidth, outerHeight, matrix } = this;\n    let inThis = tf.pointInQuadrilateral(x - rx, y - ry,\n      0, 0,\n      outerWidth,0,\n      0, outerHeight,\n      outerWidth, outerHeight,\n      matrix);\n    if(inThis) {\n      // 不能被遮挡\n      for(let i = 0, len = covers.length; i < len; i++) {\n        let { x: x2, y: y2, w, h, matrix } = covers[i];\n        if(tf.pointInQuadrilateral(x - rx, y - ry,\n          x2 - rx, y2 - ry,\n          x2 - rx + w,y2 - ry,\n          x2 - rx, y2 - ry + h,\n          x2 - rx + w, y2 - ry + h,\n          matrix)\n        ) {\n          return;\n        }\n      }\n      if(!e.target) {\n        e.target = this;\n      }\n      return true;\n    }\n  }\n\n  addBorder(props) {\n    this.virtualDom.bb.push({\n      type: 'item',\n      tagName: 'path',\n      props,\n    });\n  }\n\n  addBackground(props) {\n    this.virtualDom.bb.push({\n      type: 'item',\n      tagName: 'rect',\n      props,\n    });\n  }\n\n  addTransform(props) {\n    this.virtualDom.transform.push(props);\n  }\n\n  get tagName() {\n    return this.__tagName;\n  }\n  get mtw() {\n    return this.__mtw;\n  }\n  get mrw() {\n    return this.__mrw;\n  }\n  get mbw() {\n    return this.__mbw;\n  }\n  get mlw() {\n    return this.__mlw;\n  }\n  get ptw() {\n    return this.__ptw;\n  }\n  get prw() {\n    return this.__prw;\n  }\n  get pbw() {\n    return this.__pbw;\n  }\n  get plw() {\n    return this.__plw;\n  }\n  get outerWidth() {\n    let { mlw, mrw, plw, prw, style: {\n      borderLeftWidth,\n      borderRightWidth,\n    } } = this;\n    return this.width\n      + borderLeftWidth.value\n      + borderRightWidth.value\n      + mlw\n      + mrw\n      + plw\n      + prw;\n  }\n  get outerHeight() {\n    let { mtw, mbw, ptw, pbw, style: {\n      borderTopWidth,\n      borderBottomWidth,\n    } } = this;\n    return this.height\n      + borderTopWidth.value\n      + borderBottomWidth.value\n      + mtw\n      + mbw\n      + ptw\n      + pbw;\n  }\n  get listener() {\n    return this.__listener;\n  }\n  get renderMode() {\n    return this.__renderMode;\n  }\n}\n\nexport default Xom;\n","'use strict';\n\nexport default {\n  arial: {\n    lhr: 1.14990234375, // 默认line-height ratio，(67+1854+434)/2048\n    car: 1.1171875, // content-area ratio，(1854+434)/2048\n    blr: 0.9052734375, // base-line ratio，1854/2048\n    mdr: 0.64599609375, // middle ratio，(1854-1062/2)/2048\n    lgr: 0.03271484375, // line-gap ratio，67/2048\n  },\n};\n","const RESET = {\n  position: 'static',\n  display: 'block',\n  borderSizing: 'content-box',\n  top: 'auto',\n  right: 'auto',\n  bottom: 'auto',\n  left: 'auto',\n  marginTop: 0,\n  marginRight: 0,\n  marginBottom: 0,\n  marginLeft: 0,\n  paddingTop: 0,\n  paddingRight: 0,\n  paddingBottom: 0,\n  paddingLeft: 0,\n  fontSize: 16,\n  fontFamily: 'arial',\n  color: '#000',\n  fontStyle: 'normal',\n  fontWeight: 400,\n  lineHeight: 'normal',\n  borderTopWidth: 0,\n  borderRightWidth: 0,\n  borderBottomWidth: 0,\n  borderLeftWidth: 0,\n  borderTopColor: '#000',\n  borderRightColor: '#000',\n  borderBottomColor: '#000',\n  borderLeftColor: '#000',\n  borderTopStyle: 'solid',\n  borderRightStyle: 'solid',\n  borderBottomStyle: 'solid',\n  borderLeftStyle: 'solid',\n  borderTopLeftRadius: 0,\n  borderTopRightRadius: 0,\n  borderBottomLeftRadius: 0,\n  borderBottomRightRadius: 0,\n  verticalAlign: 'baseline',\n  width: 'auto',\n  height: 'auto',\n  flexGrow: 0,\n  flexShrink: 1,\n  flexBasis: 'auto',\n  flexDirection: 'row',\n  justifyContent: 'flex-start',\n  alignItems: 'stretch',\n  textAlign: 'left',\n  visibility: 'visible',\n  transformOrigin: 'center',\n  fill: '#000',\n  stroke: '#000',\n  strokeWidth: 0,\n  strokeDasharray: [],\n};\n\nlet reset = [];\n\nObject.keys(RESET).forEach(k => {\n  let v = RESET[k];\n  reset.push({\n    k,\n    v,\n  });\n});\n\nexport default reset;\n","import unit from './unit';\nimport font from './font';\nimport reset from './reset';\n\nfunction parserOneBorder(style, direction) {\n  let key = `border${direction}`;\n  if(!style[key]) {\n    return;\n  }\n  let w = /\\b\\d+px\\b/i.exec(style[key]);\n  if(w) {\n    style[key + 'Width'] = w[0];\n  }\n  let s = /\\b(solid|dashed|dotted)\\b/i.exec(style[key]);\n  if(s) {\n    style[key + 'Style'] = s[1];\n  }\n  let c = /#[0-9a-f]{3,6}/i.exec(style[key]);\n  if(c && [4, 7].indexOf(c[0].length) > -1) {\n    style[key + 'Color'] = c[0];\n  }\n  else if(/\\btransparent\\b/i.test(style[key])) {\n    style[key + 'Color'] = 'transparent';\n  }\n  else {\n    c = /rgba?\\(.+\\)/i.exec(style[key]);\n    if(c) {\n      style[key + 'Color'] = c[0];\n    }\n  }\n}\n\nfunction calUnit(obj, k, v) {\n  if(v === 'auto') {\n    obj[k] = {\n      unit: unit.AUTO,\n    };\n  }\n  else if(/px$/.test(v)) {\n    v = parseFloat(v) || 0;\n    obj[k] = {\n      value: v,\n      unit: unit.PX,\n    };\n  }\n  else if(/%$/.test(v)) {\n    // border不支持百分比\n    if(k.indexOf('border') === 0) {\n      obj[k] = {\n        value: 0,\n        unit: unit.PX,\n      };\n    }\n    else {\n      v = parseFloat(v) || 0;\n      obj[k] = {\n        value: v,\n        unit: unit.PERCENT,\n      };\n    }\n  }\n  else {\n    v = parseFloat(v) || 0;\n    obj[k] = {\n      value: v,\n      unit: unit.PX,\n    };\n  }\n  return obj;\n}\n\nfunction normalize(style) {\n  // 默认reset\n  reset.forEach(item => {\n    if(!style.hasOwnProperty(item.k)) {\n      style[item.k] = item.v;\n    }\n  });\n  let temp = style.background;\n  // 处理缩写\n  if(temp) {\n    // 优先gradient，没有再考虑颜色\n    let gradient = /\\b(\\w+)-gradient\\((.+)\\)/.exec(temp);\n    if(gradient) {\n      style.backgroundGradient = {\n        k: gradient[1],\n        v: gradient[2].split(/\\s*,\\s*/),\n      };\n    }\n    else {\n      let bgc = /#[0-9a-f]{3,6}/i.exec(temp);\n      if(bgc && [4, 7].indexOf(bgc[0].length) > -1) {\n        style.backgroundColor = bgc[0];\n      } else {\n        bgc = /rgba?\\(.+\\)/i.exec(temp);\n        if(bgc) {\n          style.backgroundColor = bgc[0];\n        }\n      }\n    }\n  }\n  temp = style.flex;\n  if(temp) {\n    if(temp === 'none') {\n      style.flexGrow = 0;\n      style.flexShrink = 0;\n      style.flexBasis = 'auto';\n    }\n    else if(temp === 'auto') {\n      style.flexGrow = 1;\n      style.flexShrink = 1;\n      style.flexBasis = 'auto';\n    }\n    else if(/^[\\d.]+$/.test(temp)) {\n      style.flexGrow = parseFloat(temp);\n      style.flexShrink = 1;\n      style.flexBasis = 0;\n    }\n    else if(/^[\\d.]+px$/.test(temp)) {}\n    else if(/^[\\d.]+%$/.test(temp)) {}\n    else {\n      style.flexGrow = 0;\n      style.flexShrink = 1;\n      style.flexBasis = 'auto';\n    }\n  }\n  temp = style.border;\n  if(temp) {\n    style.borderTop = style.borderRight = style.borderBottom = style.borderLeft = temp;\n  }\n  temp = style.margin;\n  if(temp) {\n    let match = temp.toString().match(/(-?[\\d.]+(px|%)?)|(auto)/ig);\n    if(match) {\n      if(match.length === 1) {\n        match[3] = match[2] = match[1] = match[0];\n      }\n      else if(match.length === 2) {\n        match[2] = match[0];\n        match[3] = match[1];\n      }\n      else if(match.length === 3) {\n        match[3] = match[1];\n      }\n      style.marginTop = match[0];\n      style.marginRight = match[1];\n      style.marginBottom = match[2];\n      style.marginLeft = match[3];\n    }\n  }\n  temp = style.padding;\n  if(temp) {\n    let match = temp.toString().match(/(-?[\\d.]+(px|%)?)|(auto)/ig);\n    if(match) {\n      if(match.length === 1) {\n        match[3] = match[2] = match[1] = match[0];\n      }\n      else if(match.length === 2) {\n        match[2] = match[0];\n        match[3] = match[1];\n      }\n      else if(match.length === 3) {\n        match[3] = match[1];\n      }\n      style.paddingTop = match[0];\n      style.paddingRight = match[1];\n      style.paddingBottom = match[2];\n      style.paddingLeft = match[3];\n    }\n  }\n  temp = style.borderRadius;\n  if(temp) {\n    style.borderTopRightRadius = style.borderTopLeftRadius = style.borderBottomRightRadius = style.borderBottomLeftRadius = temp;\n  }\n  temp = style.transform;\n  if(temp) {\n    let match = temp.toString().match(/\\w+\\(.+?\\)/g);\n    if(match) {\n      let transform = style.transform = [];\n      match.forEach(item => {\n        let i = item.indexOf('(');\n        let k = item.slice(0, i);\n        let v = item.slice(i + 1, item.length - 1);\n        if(k === 'matrix') {\n          let arr = v.split(/\\s*,\\s*/);\n          arr = arr.map(item => parseFloat(item));\n          if(arr.length > 6) {\n            arr = arr.slice(0, 6);\n          }\n          else if(arr.length < 6) {\n            while(arr.length < 6) {\n              arr.push(0);\n            }\n          }\n          transform.push(['matrix', arr]);\n        }\n        else if(k === 'translateX') {\n          let arr = ['translateX', v];\n          transform.push(calUnit(arr, 1, v));\n        }\n        else if(k === 'translateY') {\n          let arr = ['translateY', v];\n          transform.push(calUnit(arr, 1, v));\n        }\n        else if(k === 'translate') {\n          let arr = v.split(/\\s*,\\s*/);\n          let arr1 = ['translateX', arr[0]];\n          let arr2 = ['translateY', arr[1]];\n          transform.push(calUnit(arr1, 1, v));\n          transform.push(calUnit(arr2, 1, v));\n        }\n        else if(k === 'scaleX') {\n          transform.push(['scaleX', parseFloat(v) || 0]);\n        }\n        else if(k === 'scaleY') {\n          transform.push(['scaleY', parseFloat(v) || 0]);\n        }\n        else if(k === 'scale') {\n          let arr = v.split(/\\s*,\\s*/);\n          transform.push(['scaleX', parseFloat(arr[0]) || 0]);\n          transform.push(['scaleX', parseFloat(arr[1]) || 0]);\n        }\n        else if(k === 'rotateZ' || k === 'rotate') {\n          transform.push(['rotate', parseFloat(v) || 0]);\n        }\n        else if(k === 'skewX') {\n          transform.push(['skewX', parseFloat(v) || 0]);\n        }\n        else if(k === 'skewY') {\n          transform.push(['skewY', parseFloat(v) || 0]);\n        }\n        else if(k === 'skew') {\n          let arr = v.split(/\\s*,\\s*/);\n          transform.push(['skewX', parseFloat(arr[0]) || 0]);\n          transform.push(['skewY', parseFloat(arr[1]) || 0]);\n        }\n      });\n    }\n  }\n  temp = style.transformOrigin;\n  if(temp) {\n    let match = temp.toString().match(/(-?[\\d.]+(px|%)?)|(left|top|right|bottom|center)/ig);\n    if(match) {\n      if(match.length === 1) {\n        match[1] = match[0];\n      }\n      let tfo = [];\n      for(let i = 0; i < 2; i++) {\n        let item = match[i];\n        if(/px$/.test(item)) {\n          tfo.push({\n            value: parseFloat(item),\n            unit: unit.PX,\n          });\n        }\n        else if(/%$/.test(item)) {\n          tfo.push({\n            value: parseFloat(item),\n            unit: unit.PERCENT,\n          });\n        }\n        else {\n          tfo.push({\n            value: item,\n            unit: unit.POSITION,\n          });\n        }\n      }\n      style.transformOrigin = tfo;\n    }\n  }\n  parserOneBorder(style, 'Top');\n  parserOneBorder(style, 'Right');\n  parserOneBorder(style, 'Bottom');\n  parserOneBorder(style, 'Left');\n  // 转化不同单位值为对象标准化\n  [\n    'marginTop',\n    'marginRight',\n    'marginBottom',\n    'marginLeft',\n    'paddingTop',\n    'paddingRight',\n    'paddingBottom',\n    'paddingLeft',\n    'borderTopWidth',\n    'borderRightWidth',\n    'borderBottomWidth',\n    'borderLeftWidth',\n    'borderTopLeftRadius',\n    'borderTopRightRadius',\n    'borderBottomLeftRadius',\n    'borderBottomRightRadius',\n    'top',\n    'right',\n    'bottom',\n    'left',\n    'width',\n    'height',\n    'flexBasis',\n  ].forEach(k => {\n    let v = style[k];\n    calUnit(style, k, v);\n  });\n  // 计算lineHeight为px值，最小范围\n  let lineHeight = style.lineHeight;\n  if(lineHeight === 'normal') {\n    lineHeight = {\n      value: style.fontSize * font.arial.lhr,\n      unit: unit.PX,\n    };\n  }\n  else if(/px$/.test(lineHeight)) {\n    lineHeight = parseFloat(lineHeight);\n    lineHeight = {\n      value: Math.max(style.fontSize, lineHeight),\n      unit: unit.PX,\n    };\n  }\n  // 纯数字比例\n  else {\n    lineHeight = parseFloat(lineHeight) || 'normal';\n    // 非法数字\n    if(lineHeight === 'normal') {\n      lineHeight = {\n        value: style.fontSize * font.arial.lhr,\n        unit: unit.PX,\n      };\n    }\n    else {\n      lineHeight = {\n        value: lineHeight * style.fontSize,\n        unit: unit.PX,\n      };\n    }\n  }\n  style.lineHeight = lineHeight;\n}\n\nfunction setFontStyle(style) {\n  let { fontStyle, fontWeight, fontSize, fontFamily } = style;\n  return `${fontStyle} ${fontWeight} ${fontSize}px/${fontSize}px ${fontFamily}`;\n}\n\nfunction getBaseLine(style) {\n  let normal = style.fontSize * font.arial.lhr;\n  return (style.lineHeight.value - normal) * 0.5 + style.fontSize * font.arial.blr;\n}\n\nexport default {\n  normalize,\n  setFontStyle,\n  getBaseLine,\n};\n","import css from '../style/css';\nimport mode from '../mode';\n\nclass LineBox {\n  constructor(parent, x, y, w, content, style) {\n    this.__parent = parent;\n    this.__x = x;\n    this.__y = y;\n    this.__width = w;\n    this.__content = content;\n    this.__style = style;\n    this.__virtualDom = {};\n  }\n\n  render(renderMode, ctx) {\n    let { style, content, x, y, parent: { ox, oy } } = this;\n    y += css.getBaseLine(style);\n    x += ox;\n    y += oy;\n    if(renderMode === mode.CANVAS) {\n      ctx.fillText(content, x, y);\n    }\n    else if(renderMode === mode.SVG) {\n      this.__virtualDom = {\n        type: 'item',\n        tagName: 'text',\n        props: [\n          ['x', x],\n          ['y', y],\n          ['fill', style.color],\n          ['font-size', `${style.fontSize}px`]\n        ],\n        content,\n      };\n    }\n  }\n\n  __offsetX(diff) {\n    this.__x += diff;\n  }\n\n  __offsetY(diff) {\n    this.__y += diff;\n  }\n\n  get x() {\n    return this.__x;\n  }\n  get y() {\n    return this.__y;\n  }\n  get width() {\n    return this.__width;\n  }\n  get content() {\n    return this.__content;\n  }\n  get style() {\n    return this.__style;\n  }\n  get baseLine() {\n    return css.getBaseLine(this.style);\n  }\n  get virtualDom() {\n    return this.__virtualDom;\n  }\n  get parent() {\n    return this.__parent;\n  }\n}\n\nexport default LineBox;\n","import Node from './Node';\nimport LineBox from './LineBox';\nimport css from '../style/css';\nimport mode from '../mode';\n\nconst CHAR_WIDTH_CACHE = {};\n\nclass Text extends Node {\n  constructor(content) {\n    super();\n    this.__content = content.toString();\n    this.__lineBoxes = [];\n    this.__charWidthList = [];\n    this.__charWidth = 0;\n    this.__textWidth = 0;\n  }\n\n  // 预先计算每个字的宽度\n  __measure() {\n    this.__charWidthList = [];\n    let { ctx, content, style, charWidthList, renderMode } = this;\n    if(renderMode === mode.CANVAS) {\n      ctx.font = css.setFontStyle(style);\n    }\n    let cache = CHAR_WIDTH_CACHE[style.fontSize] = CHAR_WIDTH_CACHE[style.fontSize] || {};\n    let length = content.length;\n    let sum = 0;\n    for(let i = 0; i < length; i++) {\n      let char = content.charAt(i);\n      let mw;\n      if(cache.hasOwnProperty(char)) {\n        mw = cache[char];\n      }\n      else if(renderMode === mode.CANVAS) {\n        mw = cache[char] = ctx.measureText(char).width;\n      }\n      else if(renderMode === mode.SVG) {\n        mw = cache[char] = mode.measure(char, style);\n      }\n      charWidthList.push(mw);\n      sum += mw;\n      this.__charWidth = Math.max(this.charWidth, mw);\n    }\n    this.__textWidth = sum;\n  }\n\n  __layout(data, isVirtual) {\n    let { x, y, w, h } = data;\n    this.__x = x;\n    this.__y = y;\n    let maxX = x;\n    let { ctx, content, style, lineBoxes, charWidthList, renderMode } = this;\n    // 顺序尝试分割字符串为lineBox，形成多行\n    let begin = 0;\n    let i = 0;\n    let count = 0;\n    let length = content.length;\n    while(i < length) {\n      count += charWidthList[i];\n      if (count === w) {\n        let lineBox = new LineBox(this, x, y, count, content.slice(begin, i + 1), style);\n        lineBoxes.push(lineBox);\n        maxX = Math.max(maxX, x + count);\n        y += this.style.lineHeight.value;\n        begin = i + 1;\n        i = begin + 1;\n        count = 0;\n      }\n      else if (count > w) {\n        // 宽度不足时无法跳出循环，至少也要塞个字符形成一行\n        if(i === begin) {\n          i = begin + 1;\n        }\n        let lineBox = new LineBox(this, x, y, count - charWidthList[i], content.slice(begin, i), style);\n        lineBoxes.push(lineBox);\n        maxX = Math.max(maxX, x + count - charWidthList[i]);\n        y += this.style.lineHeight.value;\n        begin = i;\n        i = i + 1;\n        count = 0;\n      }\n      else {\n        i++;\n      }\n    }\n    if(begin < length && begin < i) {\n      count = 0;\n      for(i = begin ;i < length; i++) {\n        count += charWidthList[i];\n      }\n      let lineBox = new LineBox(this, x, y, count, content.slice(begin, length), style);\n      lineBoxes.push(lineBox);\n      maxX = Math.max(maxX, x + count);\n      y += style.lineHeight.value;\n    }\n    this.__width = maxX - x;\n    this.__height = y - data.y;\n    if(isVirtual) {\n      this.__lineBoxes = [];\n    }\n    else {\n      let { textAlign } = style;\n      if(['center', 'right'].indexOf(textAlign) > -1) {\n        lineBoxes.forEach(lineBox => {\n          let diff = this.__width - lineBox.width;\n          if(diff > 0) {\n            lineBox.__offsetX(textAlign === 'center' ? diff * 0.5 : diff);\n          }\n        });\n      }\n    }\n  }\n\n  render(renderMode) {\n    const { ctx, style } = this;\n    if(renderMode === mode.CANVAS) {\n      ctx.font = css.setFontStyle(style);\n      ctx.fillStyle = style.color;\n    }\n    this.lineBoxes.forEach(item => {\n      item.render(renderMode, ctx);\n    });\n    if(renderMode === mode.SVG) {\n      this.__virtualDom = {\n        type: 'text',\n        children: this.lineBoxes.map(lineBox => lineBox.virtualDom),\n      };\n    }\n  }\n\n  __tryLayInline(w) {\n    return w - this.textWidth;\n  }\n\n  __calMaxAndMinWidth() {\n    let n = 0;\n    this.charWidthList.forEach(item => {\n      n = Math.max(n, item);\n    });\n    return { max: this.textWidth, min: n };\n  }\n\n  get content() {\n    return this.__content;\n  }\n  set content(v) {\n    this.__content = v;\n  }\n  get lineBoxes() {\n    return this.__lineBoxes;\n  }\n  get charWidthList() {\n    return this.__charWidthList;\n  }\n  get charWidth() {\n    return this.__charWidth;\n  }\n  get textWidth() {\n    return this.__textWidth;\n  }\n  get baseLine() {\n    let last = this.lineBoxes[this.lineBoxes.length - 1];\n    return last.y - this.y + last.baseLine;\n  }\n  get renderMode() {\n    return this.__renderMode;\n  }\n}\n\nexport default Text;\n","class LineGroup {\n  constructor(x, y) {\n    this.__list = [];\n    this.__x = x;\n    this.__y = y;\n    this.__baseLine = 0;\n  }\n\n  add(item) {\n    this.list.push(item);\n  }\n\n  __calBaseLine() {\n    let baseLine = 0;\n    this.list.forEach(item => {\n      baseLine = Math.max(baseLine, item.baseLine);\n    });\n    return baseLine;\n  }\n\n  verticalAlign() {\n    this.__baseLine = this.__calBaseLine();\n    // 仅当有2个和以上时才需要vertical对齐调整\n    if(this.list.length > 1) {\n      this.list.forEach(item => {\n        if(item.baseLine !== this.baseLine) {\n          item.__offsetY(this.baseLine - item.baseLine);\n        }\n      });\n    }\n  }\n\n  horizonAlign(diff) {\n    this.list.forEach(item => {\n      item.__offsetX(diff);\n    });\n  }\n\n  get list() {\n    return this.__list;\n  }\n  get x() {\n    return this.__x;\n  }\n  get y() {\n    return this.__y;\n  }\n  get width() {\n    let width = 0;\n    this.list.forEach(item => {\n      width += item.width;\n    });\n    return width;\n  }\n  get height() {\n    let height = 0;\n    this.list.forEach(item => {\n      height = Math.max(height, item.height);\n    });\n    return height;\n  }\n  get baseLine() {\n    return this.__baseLine;\n  }\n  get size() {\n    return this.__list.length;\n  }\n}\n\nexport default LineGroup;\n","import Xom from '../node/Xom';\nimport css from '../style/css';\nimport unit from '../style/unit';\nimport mode from '../mode';\n\nconst IMPLEMENT = {};\n\nclass Geom extends Xom {\n  constructor(tagName, props) {\n    super(tagName, props);\n  }\n\n  __initStyle() {\n    css.normalize(this.style);\n  }\n\n  __tryLayInline(w, total) {\n    // 无children，直接以style的width为宽度，不定义则为0\n    let { style: { width } } = this;\n    if(width.unit === unit.PX) {\n      return w - width.value;\n    }\n    else if(width.unit === unit.PERCENT) {\n      return w - total * width.value * 0.01;\n    }\n    return w;\n  }\n\n  __calAutoBasis(isDirectionRow, w, h) {\n    let b = 0;\n    let min = 0;\n    let max = 0;\n    let { style } = this;\n    // 计算需考虑style的属性\n    let {\n      width,\n      height,\n      borderTopWidth,\n      borderRightWidth,\n      borderBottomWidth,\n      borderLeftWidth,\n    } = style;\n    let main = isDirectionRow ? width : height;\n    if(main.unit !== unit.AUTO) {\n      b = max += main.value;\n    }\n    // border也得计算在内\n    if(isDirectionRow) {\n      let w = borderRightWidth.value + borderLeftWidth.value;\n      b += w;\n      max += w;\n      min += w;\n    }\n    else {\n      let h = borderTopWidth.value + borderBottomWidth.value;\n      b += h;\n      max += h;\n      min += h;\n    }\n    return { b, min, max };\n  }\n\n  __layoutBlock(data) {\n    let { x, y, w, h } = data;\n    this.__x = x;\n    this.__y = y;\n    this.__width = w;\n    let { style } = this;\n    let {\n      width,\n      height,\n      borderTopWidth,\n      borderRightWidth,\n      borderBottomWidth,\n      borderLeftWidth,\n    } = style;\n    // 除了auto外都是固定高度\n    let fixedHeight;\n    if(width && width.unit !== unit.AUTO) {\n      switch(width.unit) {\n        case unit.PX:\n          w = width.value;\n          break;\n      }\n    }\n    if(height && height.unit !== unit.AUTO) {\n      fixedHeight = true;\n      switch(height.unit) {\n        case unit.PX:\n          h = height.value;\n          break;\n        case unit.PERCENT:\n          h *= height.value * 0.01;\n          break;\n      }\n    }\n    // border影响x和y和尺寸\n    x += borderLeftWidth.value;\n    data.x = x;\n    y += borderTopWidth.value;\n    data.y = y;\n    w -= borderLeftWidth.value + borderRightWidth.value;\n    h -= borderTopWidth.value + borderBottomWidth.value;\n    this.__width = w;\n    this.__height = fixedHeight ? h : 0;\n  }\n\n  __layoutFlex(data) {\n    // 无children所以等同于block\n    this.__layoutBlock(data);\n  }\n\n  __layoutInline(data) {\n    let { x, y, w, h } = data;\n    this.__x = x;\n    this.__y = y;\n    let { style } = this;\n    let {\n      width,\n      height,\n      borderTopWidth,\n      borderRightWidth,\n      borderBottomWidth,\n      borderLeftWidth,\n    } = style;\n    // 除了auto外都是固定高度\n    let fixedWidth;\n    let fixedHeight;\n    if(width && width.unit !== unit.AUTO) {\n      fixedWidth = true;\n      switch(width.unit) {\n        case unit.PX:\n          w = width.value;\n          break;\n      }\n    }\n    if(height && height.unit !== unit.AUTO) {\n      fixedHeight = true;\n      switch(height.unit) {\n        case unit.PX:\n          h = height.value;\n          break;\n      }\n    }\n    // border影响x和y\n    x += borderLeftWidth.value;\n    data.x = x;\n    y += borderTopWidth.value;\n    data.y = y;\n    w -= borderLeftWidth.value + borderRightWidth.value;\n    h -= borderTopWidth.value + borderBottomWidth.value;\n    // 元素的width不能超过父元素w\n    this.__width = fixedWidth ? w : x - data.x;\n    this.__height = fixedHeight ? h : y - data.y;\n  }\n\n  __calAbs() {\n    return 0;\n  }\n\n  render(renderMode) {\n    super.render(renderMode);\n    if(renderMode === mode.SVG) {\n      this.__virtualDom = {\n        ...super.virtualDom,\n        type: 'geom',\n      };\n    }\n  }\n\n  get tagName() {\n    return this.__tagName;\n  }\n  get baseLine() {\n    return this.__height;\n  }\n\n  static getImplement(name) {\n    if(!IMPLEMENT.hasOwnProperty(name)) {\n      throw new Error(`Geom has not register: ${name}`);\n    }\n    return IMPLEMENT[name];\n  }\n  static register(name, implement) {\n    if(IMPLEMENT.hasOwnProperty(name)) {\n      throw new Error(`Geom has already register: ${name}`);\n    }\n    IMPLEMENT[name] = implement;\n  }\n}\n\nexport default Geom;\n","import Xom from './Xom';\nimport Text from './Text';\nimport LineGroup from './LineGroup';\nimport Geom from '../geom/Geom';\nimport util from '../util';\nimport css from '../style/css';\nimport unit from '../style/unit';\nimport mode from '../mode';\n\nconst TAG_NAME = {\n  'div': true,\n  'span': true,\n};\nconst INLINE = {\n  'span': true,\n};\n\nclass Dom extends Xom {\n  constructor(tagName, props, children) {\n    super(tagName, props);\n    this.__children = children;\n    this.__flowChildren = []; // 非绝对定位孩子\n    this.__absChildren = []; // 绝对定位孩子\n    this.__lineGroups = []; // 一行inline元素组成的LineGroup对象后的存放列表\n    this.__flowY = 0; // 文档流布局结束后的y坐标，供absolute布局默认位置使用\n  }\n\n  /**\n   * 1. 封装string为Text节点\n   * 2. 打平children中的数组，变成一维\n   * 3. 合并相连的Text节点\n   * 4. 检测inline不能包含block和flex\n   * 5. 设置parent和prev/next和ctx和defs和mode\n   */\n  __traverse(ctx, defs, renderMode) {\n    let list = [];\n    this.__traverseChildren(this.children, list, ctx, defs, renderMode);\n    for(let i = list.length - 1; i > 0; i--) {\n      let item = list[i];\n      if(item instanceof Text) {\n        let prev = list[i - 1];\n        if(prev instanceof Text) {\n          prev.content += item.content;\n          list.splice(i, 1);\n        }\n        else {\n          i--;\n        }\n      }\n    }\n    if(this.style.display === 'inline' && this.parent.style.display !== 'flex') {\n      for(let i = list.length - 1; i >= 0; i--) {\n        let item = list[i];\n        if(item instanceof Dom && item.style.display !== 'inline') {\n          throw new Error('inline can not contain block/flex');\n        }\n      }\n    }\n    let prev = null;\n    list.forEach(item => {\n      item.__ctx = ctx;\n      item.__defs = defs;\n      if(prev) {\n        prev.__next = item;\n      }\n      item.__parent = this;\n      item.__prev = prev;\n      if(item instanceof Text || item.style.position !== 'absolute') {\n        this.__flowChildren.push(item);\n      }\n      else {\n        this.__absChildren.push(item);\n      }\n    });\n    this.__children = list;\n  }\n\n  __traverseChildren(children, list, ctx, defs, renderMode) {\n    if(Array.isArray(children)) {\n      children.forEach(item => {\n        this.__traverseChildren(item, list, ctx, defs, renderMode);\n      });\n    }\n    else if(children instanceof Dom) {\n      list.push(children);\n      children.__traverse(ctx, defs, renderMode);\n    }\n    // 图形没有children\n    else if(children instanceof Geom) {\n      list.push(children);\n    }\n    // 排除掉空的文本\n    else if(!util.isNil(children)) {\n      let text = new Text(children);\n      text.__renderMode = renderMode;\n      list.push(text);\n    }\n  }\n\n  // 合并设置style，包括继承和默认值，修改一些自动值和固定值，测量所有文字的宽度\n  __initStyle() {\n    let style = this.__style;\n    // 仅支持flex/block/inline/none\n    if(!style.display || ['flex', 'block', 'inline', 'none'].indexOf(style.display) === -1) {\n      if(INLINE.hasOwnProperty(this.tagName)) {\n        style.display = 'inline';\n      }\n      else {\n        style.display = 'block';\n      }\n    }\n    // 继承父元素样式\n    let parent = this.parent;\n    if(parent) {\n      let parentStyle = parent.style;\n      ['fontSize', 'fontWeight', 'fontStyle', 'lineHeight', 'wordBreak', 'color', 'textAlign'].forEach(k => {\n        if(!style.hasOwnProperty(k) && parentStyle.hasOwnProperty(k)) {\n          style[k] = parentStyle[k];\n        }\n      });\n    }\n    // 标准化处理，默认值、简写属性\n    css.normalize(style);\n    this.children.forEach(item => {\n      if(item instanceof Xom) {\n        item.__initStyle();\n      }\n      else {\n        item.__style = style;\n        // 文字首先测量所有字符宽度\n        item.__measure();\n      }\n    });\n  }\n\n  // 给定父宽度情况下，尝试行内放下后的剩余宽度，为负数即放不下\n  __tryLayInline(w, total) {\n    let { flowChildren, style: { width } } = this;\n    if(width.unit === unit.PX) {\n      return w - width.value;\n    }\n    else if(width.unit === unit.PERCENT) {\n      return w - total * width.value * 0.01;\n    }\n    for(let i = 0; i < flowChildren.length; i++) {\n      // 当放不下时直接返回，无需继续多余的尝试计算\n      if(w < 0) {\n        return w;\n      }\n      let item = flowChildren[i];\n      if(item instanceof Xom) {\n        w -= item.__tryLayInline(w, total);\n      }\n      else {\n        w -= item.textWidth;\n      }\n    }\n    return w;\n  }\n\n  // 设置y偏移值，递归包括children，此举在flex行元素的child进行justify-content对齐用\n  __offsetX(diff) {\n    super.__offsetX(diff);\n    this.flowChildren.forEach(item => {\n      if(item) {\n        item.__offsetX(diff);\n      }\n    });\n  }\n\n  // 设置y偏移值，递归包括children，此举在初步确定inline布局后设置元素vertical-align用\n  __offsetY(diff) {\n    super.__offsetY(diff);\n    this.flowChildren.forEach(item => {\n      if(item) {\n        item.__offsetY(diff);\n      }\n    });\n  }\n\n  __calAutoBasis(isDirectionRow, w, h, isRecursion) {\n    let b = 0;\n    let min = 0;\n    let max = 0;\n    let { mtw, mrw, mbw, mlw, ptw, prw, pbw, plw, flowChildren, style } = this;\n    // 计算需考虑style的属性\n    let {\n      width,\n      height,\n      borderTopWidth,\n      borderRightWidth,\n      borderBottomWidth,\n      borderLeftWidth,\n    } = style;\n    let main = isDirectionRow ? width : height;\n    if(main.unit === unit.PX) {\n      b = max = main.value;\n      // 递归时children的长度会影响flex元素的最小宽度\n      if(isRecursion) {\n        min = b;\n      }\n    }\n    // 递归children取最大值\n    flowChildren.forEach(item => {\n      if(item instanceof Xom) {\n        let { b: b2, min: min2, max: max2 } = item.__calAutoBasis(isDirectionRow, w, h, true);\n        b = Math.max(b, b2);\n        min = Math.max(min, min2);\n        max = Math.max(max, max2);\n      }\n      else if(isDirectionRow) {\n        min = Math.max(item.charWidth, min);\n        max = Math.max(item.textWidth, max);\n      }\n      else {\n        item.__layout({\n          x: 0,\n          y: 0,\n          w,\n          h,\n        }, true);\n        min = Math.max(min, item.height);\n        max = Math.max(max, item.height);\n      }\n    });\n    // margin/padding/border也得计算在内\n    if(isDirectionRow) {\n      let w = borderRightWidth.value + borderLeftWidth.value + mlw + mrw + plw + prw;\n      b += w;\n      max += w;\n      min += w;\n    }\n    else {\n      let h = borderTopWidth.value + borderBottomWidth.value + mtw + mbw + ptw + pbw;\n      b += h;\n      max += h;\n      min += h;\n    }\n    return { b, min, max };\n  }\n\n  __calAbs(isDirectionRow) {\n    let max = 0;\n    let { mtw, mrw, mbw, mlw, ptw, prw, pbw, plw, flowChildren, style } = this;\n    // 计算需考虑style的属性\n    let {\n      width,\n      height,\n      borderTopWidth,\n      borderRightWidth,\n      borderBottomWidth,\n      borderLeftWidth,\n    } = style;\n    let main = isDirectionRow ? width : height;\n    if(main.unit === unit.PX) {\n      max = main.value;\n    }\n    // 递归children取最大值\n    flowChildren.forEach(item => {\n      if(item instanceof Xom) {\n        let max2 = item.__calAbs(isDirectionRow);\n        max = Math.max(max, max2);\n      }\n      else if(isDirectionRow) {\n        max = Math.max(item.textWidth, max);\n      }\n      else {\n        item.__layout({\n          x: 0,\n          y: 0,\n          w: Infinity,\n          h: Infinity,\n        }, true);\n        max = Math.max(max, item.height);\n      }\n    });\n    // margin/padding/border也得计算在内\n    if(isDirectionRow) {\n      let w = borderRightWidth.value + borderLeftWidth.value + mlw + mrw + plw + prw;\n      max += w;\n    }\n    else {\n      let h = borderTopWidth.value + borderBottomWidth.value + mtw + mbw + ptw + pbw;\n      max += h;\n    }\n    return max;\n  }\n\n  // 本身block布局时计算好所有子元素的基本位置\n  __layoutBlock(data) {\n    let { x, y, w, h } = data;\n    this.__x = x;\n    this.__y = y;\n    this.__width = w;\n    let { flowChildren, style, lineGroups, mlw, mtw, mrw, mbw, plw, ptw, prw, pbw } = this;\n    let {\n      width,\n      height,\n      marginLeft,\n      marginRight,\n      borderTopWidth,\n      borderRightWidth,\n      borderBottomWidth,\n      borderLeftWidth,\n      textAlign,\n    } = style;\n    // 除了auto外都是固定高度\n    let fixedHeight;\n    if(width && width.unit !== unit.AUTO) {\n      switch(width.unit) {\n        case unit.PX:\n          w = width.value;\n          break;\n        case unit.PERCENT:\n          w *= width.value * 0.01;\n          break;\n      }\n    }\n    if(height && height.unit !== unit.AUTO) {\n      fixedHeight = true;\n      switch(height.unit) {\n        case unit.PX:\n          h = height.value;\n          break;\n        case unit.PERCENT:\n          h *= height.value * 0.01;\n          break;\n      }\n    }\n    // margin/padding/border影响x和y和尺寸\n    x += borderLeftWidth.value + mlw + plw;\n    data.x = x;\n    y += borderTopWidth.value + mtw + ptw;\n    data.y = y;\n    if(width.unit === unit.AUTO) {\n      w -= borderLeftWidth.value + borderRightWidth.value + mlw + mrw + plw + prw;\n    }\n    if(height.unit === unit.AUTO) {\n      h -= borderTopWidth.value + borderBottomWidth.value + mtw + mbw + ptw + pbw;\n    }\n    // 递归布局，将inline的节点组成lineGroup一行\n    let lineGroup = new LineGroup(x, y);\n    flowChildren.forEach(item => {\n      if(item instanceof Xom) {\n        if(item.style.display === 'inline') {\n          // inline开头，不用考虑是否放得下直接放\n          if(x === data.x) {\n            lineGroup.add(item);\n            item.__layout({\n              x,\n              y,\n              w,\n              h,\n            });\n            x += item.outerWidth;\n          }\n          else {\n            // 非开头先尝试是否放得下\n            let fw = item.__tryLayInline(w - x, w);\n            // 放得下继续\n            if(fw >= 0) {\n              item.__layout({\n                x,\n                y,\n                w,\n                h,\n              });\n            }\n            // 放不下处理之前的lineGroup，并重新开头\n            else {\n              lineGroups.push(lineGroup);\n              lineGroup.verticalAlign();\n              x = data.x;\n              y += lineGroup.height;\n              item.__layout({\n                x: data.x,\n                y,\n                w,\n                h,\n              });\n              lineGroup = new LineGroup(x, y);\n            }\n            x += item.outerWidth;\n            lineGroup.add(item);\n          }\n        }\n        else {\n          // block先处理之前可能的lineGroup\n          if(lineGroup.size) {\n            lineGroups.push(lineGroup);\n            lineGroup.verticalAlign();\n            y += lineGroup.height;\n            lineGroup = new LineGroup(data.x, y);\n          }\n          item.__layout({\n            x: data.x,\n            y,\n            w,\n            h,\n          });\n          x = data.x;\n          y += item.outerHeight;\n        }\n      }\n      // 文字和inline类似\n      else {\n        // x开头，不用考虑是否放得下直接放\n        if(x === data.x) {\n          lineGroup.add(item);\n          item.__layout({\n            x,\n            y,\n            w,\n            h,\n          });\n          x += item.width;\n        }\n        else {\n          // 非开头先尝试是否放得下\n          let fw = item.__tryLayInline(w - x, w);\n          // 放得下继续\n          if(fw >= 0) {\n            item.__layout({\n              x,\n              y,\n              w,\n              h,\n            });\n          }\n          // 放不下处理之前的lineGroup，并重新开头\n          else {\n            lineGroups.push(lineGroup);\n            lineGroup.verticalAlign();\n            x = data.x;\n            y += lineGroup.height;\n            item.__layout({\n              x: data.x,\n              y,\n              w,\n              h,\n            });\n            lineGroup = new LineGroup(x, y);\n          }\n          x += item.width;\n          lineGroup.add(item);\n        }\n      }\n    });\n    // 结束后处理可能遗留的最后的lineGroup\n    if(lineGroup.size) {\n      lineGroups.push(lineGroup);\n      lineGroup.verticalAlign();\n      y += lineGroup.height;\n    }\n    // text-align\n    if(['center', 'right'].indexOf(textAlign) > -1) {\n      lineGroups.forEach(lineGroup => {\n        let diff = w - lineGroup.width;\n        if(diff > 0) {\n          lineGroup.horizonAlign(textAlign === 'center' ? diff * 0.5 : diff);\n        }\n      });\n    }\n    this.__width = w;\n    this.__height = fixedHeight ? h : y - data.y;\n    this.__flowY = y;\n    // 处理margin:xx auto居中对齐\n    if(marginLeft.unit === unit.AUTO && marginRight.unit === unit.AUTO && width.unit !== unit.AUTO) {\n      let ow = this.outerWidth;\n      if(ow < data.w) {\n        this.__offsetX((data.w - ow) * 0.5);\n      }\n    }\n  }\n\n  // 弹性布局时的计算位置\n  __layoutFlex(data) {\n    let { x, y, w, h } = data;\n    this.__x = x;\n    this.__y = y;\n    this.__width = w;\n    let { flowChildren, style, mlw, mtw, mrw, mbw, plw, ptw, prw, pbw } = this;\n    let {\n      width,\n      height,\n      flexDirection,\n      borderTopWidth,\n      borderRightWidth,\n      borderBottomWidth,\n      borderLeftWidth,\n      justifyContent,\n      alignItems,\n    } = style;\n    // 除了auto外都是固定高度\n    let fixedWidth;\n    let fixedHeight;\n    if(width && width.unit !== unit.AUTO) {\n      fixedWidth = true;\n      switch(width.unit) {\n        case unit.PX:\n          w = width.value;\n          break;\n        case unit.PERCENT:\n          w *= width.value * 0.01;\n          break;\n      }\n    }\n    if(height && height.unit !== unit.AUTO) {\n      fixedHeight = true;\n      switch(height.unit) {\n        case unit.PX:\n          h = height.value;\n          break;\n        case unit.PERCENT:\n          h *= height.value * 0.01;\n          break;\n      }\n    }\n    // margin/padding/border影响x和y和尺寸\n    x += borderLeftWidth.value + mlw + plw;\n    data.x = x;\n    y += borderTopWidth.value + mtw + ptw;\n    data.y = y;\n    if(width.unit === unit.AUTO) {\n      w -= borderLeftWidth.value + borderRightWidth.value + mlw + mrw + plw + prw;\n    }\n    if(height.unit === unit.AUTO) {\n      h -= borderTopWidth.value + borderBottomWidth.value + mtw + mbw + ptw + pbw;\n    }\n    let isDirectionRow = flexDirection === 'row';\n    // column时height可能为auto，此时取消伸展，退化为类似block布局，但所有子元素强制block\n    if(!isDirectionRow && !fixedHeight) {\n      flowChildren.forEach(item => {\n        if(item instanceof Xom) {\n          const { style, style: { display, flexDirection, width }} = item;\n          // column的flex的child如果是inline，变为block\n          if(display === 'inline') {\n            style.display = 'block';\n          }\n          // 竖向flex的child如果是横向flex，宽度自动的话要等同于父flex的宽度\n          else if(display === 'flex' && flexDirection === 'row' && width.unit === unit.AUTO) {\n            width.value = w;\n            width.unit = unit.PX;\n          }\n          item.__layout({\n            x,\n            y,\n            w,\n            h,\n          });\n          y += item.outerHeight;\n        }\n        else {\n          item.__layout({\n            x,\n            y,\n            w,\n            h,\n          });\n          y += item.outerHeight;\n        }\n      });\n      this.__width = w;\n      this.__height = y - data.y;\n      return;\n    }\n    // 计算伸缩基数\n    let growList = [];\n    let shrinkList = [];\n    let basisList = [];\n    let minList = [];\n    let growSum = 0;\n    let shrinkSum = 0;\n    let basisSum = 0;\n    let maxSum = 0;\n    flowChildren.forEach(item => {\n      if(item instanceof Xom) {\n        let { flexGrow, flexShrink, flexBasis } = item.style;\n        growList.push(flexGrow);\n        shrinkList.push(flexShrink);\n        growSum += flexGrow;\n        shrinkSum += flexShrink;\n        let { b, min, max } = item.__calAutoBasis(isDirectionRow, w, h);\n        // 根据basis不同，计算方式不同\n        if(flexBasis.unit === unit.AUTO) {\n          basisList.push(max);\n          basisSum += max;\n        }\n        else if(flexBasis.unit === unit.PX) {\n          b = flexBasis.value;\n          basisList.push(b);\n          basisSum += b;\n        }\n        else if(flexBasis.unit === unit.PERCENT) {\n          b = (isDirectionRow ? w : h) * flexBasis.value;\n          basisList.push(b);\n          basisSum += b;\n        }\n        maxSum += max;\n        minList.push(min);\n      }\n      else {\n        growList.push(0);\n        shrinkList.push(1);\n        shrinkSum += 1;\n        if(isDirectionRow) {\n          basisList.push(item.textWidth);\n          basisSum += item.textWidth;\n          maxSum += item.textWidth;\n          minList.push(item.charWidth);\n        }\n        else {\n          item.__layout({\n            x: 0,\n            y: 0,\n            w,\n            h,\n          }, true);\n          basisList.push(item.height);\n          basisSum += item.height;\n          maxSum += item.height;\n          minList.push(item.height);\n        }\n      }\n    });\n    let maxCross = 0;\n    // 判断是否超出，决定使用grow还是shrink\n    let isOverflow = maxSum > (isDirectionRow ? w : h);\n    flowChildren.forEach((item, i) => {\n      let main;\n      let shrink = shrinkList[i];\n      let grow = growList[i];\n      // 计算主轴长度\n      if(isOverflow) {\n        let overflow = basisSum - (isDirectionRow ? w : h);\n        main = shrink ? (basisList[i] - overflow * shrink / shrinkSum) : basisList[i];\n      }\n      else {\n        let free = (isDirectionRow ? w : h) - basisSum;\n        main = grow ? (basisList[i] + free * grow / growSum) : basisList[i];\n      }\n      // 主轴长度的最小值不能小于元素的最小长度，比如横向时的字符宽度\n      main = Math.max(main, minList[i]);\n      if(item instanceof Xom) {\n        const { style, mlw, mtw, mrw, mbw, plw, ptw, prw, pbw, style: {\n          display,\n          flexDirection,\n          width,\n          height,\n          borderTopWidth,\n          borderRightWidth,\n          borderBottomWidth,\n          borderLeftWidth,\n        }} = item;\n        if(isDirectionRow) {\n          // row的flex的child如果是inline，变为block\n          if(display === 'inline') {\n            style.display = 'block';\n          }\n          // 横向flex的child如果是竖向flex，高度自动的话要等同于父flex的高度\n          else if(display === 'flex' && flexDirection === 'column' && fixedHeight && height.unit === unit.AUTO) {\n            height.value = h;\n            height.unit = unit.PX;\n          }\n          item.__layout({\n            x,\n            y,\n            w: main,\n            h,\n          })\n        }\n        else {\n          // column的flex的child如果是inline，变为block\n          if(display === 'inline') {\n            style.display = 'block';\n          }\n          // 竖向flex的child如果是横向flex，宽度自动的话要等同于父flex的宽度\n          else if(display === 'flex' && flexDirection === 'row' && width.unit === unit.AUTO) {\n            width.value = w;\n            width.unit = unit.PX;\n          }\n          item.__layout({\n            x,\n            y,\n            w,\n            h: main,\n          });\n        }\n        // 重设因伸缩而导致的主轴长度\n        if(isOverflow && shrink) {\n          if(isDirectionRow) {\n            item.__width = main - mlw - mrw - plw - prw - borderLeftWidth.value - borderRightWidth.value;\n          }\n          else {\n            item.__height = main - mtw - mbw - ptw - pbw - borderTopWidth.value - borderBottomWidth.value;\n          }\n        }\n        else if(!isOverflow && grow) {\n          if(isDirectionRow) {\n            item.__width = main - mlw - mrw - plw - prw - borderLeftWidth.value - borderRightWidth.value;\n          }\n          else {\n            item.__height = main - mtw - mbw - ptw - pbw - borderTopWidth.value - borderBottomWidth.value;\n          }\n        }\n      }\n      else {\n        item.__layout({\n          x,\n          y,\n          w: isDirectionRow ? main : w,\n          h: isDirectionRow ? h : main,\n        });\n      }\n      if(isDirectionRow) {\n        x += item.outerWidth;\n        maxCross = Math.max(maxCross, item.outerHeight);\n      }\n      else {\n        y += item.outerHeight;\n        maxCross = Math.max(maxCross, item.outerWidth);\n      }\n    });\n    // 计算主轴剩余时要用真实剩余空间而不能用伸缩剩余空间\n    let diff = isDirectionRow ? w - x + data.x : h - y + data.y;\n    // 主轴侧轴对齐方式\n    if(!isOverflow && growSum === 0 && diff > 0) {\n      let len = flowChildren.length;\n      if(justifyContent === 'flex-end') {\n        for(let i = 0; i < len; i++) {\n          let child = flowChildren[i];\n          isDirectionRow ? child.__offsetX(diff) : child.__offsetY(diff);\n        }\n      }\n      else if(justifyContent === 'center') {\n        let center = diff * 0.5;\n        for(let i = 0; i < len; i++) {\n          let child = flowChildren[i];\n          isDirectionRow ? child.__offsetX(center) : child.__offsetY(center);\n        }\n      }\n      else if(justifyContent === 'space-between') {\n        let between = diff / (len - 1);\n        for(let i = 1; i < len; i++) {\n          let child = flowChildren[i];\n          isDirectionRow ? child.__offsetX(between * i) : child.__offsetY(between * i);\n        }\n      }\n      else if(justifyContent === 'space-around') {\n        let around = diff / (len + 1);\n        for(let i = 0; i < len; i++) {\n          let child = flowChildren[i];\n          isDirectionRow ? child.__offsetX(around * (i + 1)) : child.__offsetY(around * (i + 1));\n        }\n      }\n    }\n    // 子元素侧轴伸展\n    if(isDirectionRow) {\n      // 父元素固定高度，子元素可能超过，侧轴最大长度取固定高度\n      if(fixedHeight) {\n        maxCross = h;\n      }\n      y += maxCross;\n    }\n    else {\n      if(fixedWidth) {\n        maxCross = w;\n      }\n    }\n    // 侧轴对齐\n    if(alignItems === 'stretch') {\n      // 短侧轴的children伸张侧轴长度至相同，超过的不动，固定宽高的也不动\n      flowChildren.forEach(item => {\n        let { style, mlw, mtw, mrw, mbw, ptw, prw, plw, pbw } = item;\n        if(isDirectionRow) {\n          if(style.height.unit === unit.AUTO) {\n            item.__height = maxCross - mtw - mbw - ptw - pbw\n              - style.borderTopWidth.value\n              - style.borderBottomWidth.value;\n          }\n        }\n        else {\n          if(style.width.unit === unit.AUTO) {\n            item.__width = maxCross - mlw - mrw - plw - prw\n              - borderRightWidth.value\n              - borderLeftWidth.value;\n          }\n        }\n      });\n    }\n    else if(alignItems === 'center') {\n      flowChildren.forEach(item => {\n        let diff = maxCross - item.outerHeight;\n        if(diff > 0) {\n          item.__offsetY(diff * 0.5);\n        }\n      });\n    }\n    else if(alignItems === 'flex-end') {\n      flowChildren.forEach(item => {\n        let diff = maxCross - item.outerHeight;\n        if(diff > 0) {\n          item.__offsetY(diff);\n        }\n      });\n    }\n    this.__width = w;\n    this.__height = fixedHeight ? h : y - data.y;\n    this.__flowY = y;\n  }\n\n  // inline比较特殊，先简单顶部对其，后续还需根据vertical和lineHeight计算y偏移\n  __layoutInline(data) {\n    let { x, y, w, h } = data;\n    this.__x = x;\n    this.__y = y;\n    let maxX = x;\n    let { flowChildren, style, lineGroups, mlw, mtw, mrw, mbw, plw, ptw, prw, pbw } = this;\n    let {\n      width,\n      height,\n      marginLeft,\n      marginRight,\n      borderTopWidth,\n      borderRightWidth,\n      borderBottomWidth,\n      borderLeftWidth,\n      textAlign,\n    } = style;\n    // 除了auto外都是固定高度\n    let fixedWidth;\n    let fixedHeight;\n    if(width && width.unit !== unit.AUTO) {\n      fixedWidth = true;\n      switch(width.unit) {\n        case unit.PX:\n          w = width.value;\n          break;\n        case unit.PERCENT:\n          w *= width.value * 0.01;\n          break;\n      }\n    }\n    if(height && height.unit !== unit.AUTO) {\n      fixedHeight = true;\n      switch(height.unit) {\n        case unit.PX:\n          h = height.value;\n          break;\n        case unit.PERCENT:\n          h *= height.value * 0.01;\n          break;\n      }\n    }\n    // margin/padding/border影响x和y和尺寸\n    x += borderLeftWidth.value + mlw + plw;\n    data.x = x;\n    y += borderTopWidth.value + mtw + ptw;\n    data.y = y;\n    if(width.unit === unit.AUTO) {\n      w -= borderLeftWidth.value + borderRightWidth.value + mlw + mrw + plw + prw;\n    }\n    if(height.unit === unit.AUTO) {\n      h -= borderTopWidth.value + borderBottomWidth.value + mtw + mbw + ptw + pbw;\n    }\n    // 递归布局，将inline的节点组成lineGroup一行\n    let lineGroup = new LineGroup(x, y);\n    flowChildren.forEach(item => {\n      if(item instanceof Xom) {\n        // 绝对定位跳过\n        if(item.style.position === 'absolute') {\n          this.absChildren.push(item);\n          return;\n        }\n        item.style.display = 'inline';\n        // inline开头，不用考虑是否放得下直接放\n        if(x === data.x) {\n          lineGroup.add(item);\n          item.__layout({\n            x,\n            y,\n            w,\n            h,\n          });\n          x += item.outerWidth;\n          maxX = Math.max(maxX, x);\n        }\n        else {\n          // 非开头先尝试是否放得下\n          let fw = item.__tryLayInline(w - x, w);\n          // 放得下继续\n          if(fw >= 0) {\n            item.__layout({\n              x,\n              y,\n              w,\n              h,\n            });\n          }\n          // 放不下处理之前的lineGroup，并重新开头\n          else {\n            lineGroups.push(lineGroup);\n            lineGroup.verticalAlign();\n            x = data.x;\n            y += lineGroup.height;\n            item.__layout({\n              x: data.x,\n              y,\n              w,\n              h,\n            });\n            lineGroup = new LineGroup(x, y);\n          }\n          x += item.outerWidth;\n          maxX = Math.max(maxX, x);\n          lineGroup.add(item);\n        }\n      }\n      // inline里的其它只有文本\n      else {\n        if(x === data.x) {\n          lineGroup.add(item);\n          item.__layout({\n            x,\n            y,\n            w,\n            h,\n          });\n          x += item.width;\n          maxX = Math.max(maxX, x);\n        }\n        else {\n          // 非开头先尝试是否放得下\n          let fw = item.__tryLayInline(w - x, w);\n          // 放得下继续\n          if(fw >= 0) {\n            item.__layout({\n              x,\n              y,\n              w,\n              h,\n            });\n          }\n          // 放不下处理之前的lineGroup，并重新开头\n          else {\n            lineGroups.push(lineGroup);\n            lineGroup.verticalAlign();\n            x = data.x;\n            y += lineGroup.height;\n            item.__layout({\n              x: data.x,\n              y,\n              w,\n              h,\n            });\n            lineGroup = new LineGroup(x, y);\n          }\n          x += item.width;\n          maxX = Math.max(maxX, x);\n          lineGroup.add(item);\n        }\n      }\n    });\n    // 结束后处理可能遗留的最后的lineGroup，children为空时可能size为空\n    if(lineGroup.size) {\n      lineGroups.push(lineGroup);\n      lineGroup.verticalAlign();\n      y += lineGroup.height;\n    }\n    // text-align\n    if(['center', 'right'].indexOf(textAlign) > -1) {\n      lineGroups.forEach(lineGroup => {\n        let diff = w - lineGroup.width;\n        if(diff > 0) {\n          lineGroup.horizonAlign(textAlign === 'center' ? diff * 0.5 : diff);\n        }\n      });\n    }\n    // 元素的width不能超过父元素w\n    this.__width = fixedWidth ? w : maxX - data.x;\n    this.__height = fixedHeight ? h : y - data.y;\n    this.__flowY = y;\n    // 处理margin:xx auto居中对齐\n    if(marginLeft.unit === unit.AUTO && marginRight.unit === unit.AUTO && width.unit !== unit.AUTO) {\n      let ow = this.outerWidth;\n      if(ow < data.w) {\n        this.__offsetX((data.w - ow) * 0.5);\n      }\n    }\n  }\n\n  // 只针对绝对定位children布局\n  __layoutAbs(container) {\n    let { x, y, flowY, width, height, children, absChildren, style, mlw, mtw, mrw, mbw, plw, ptw, prw, pbw } = this;\n    let {\n      borderTopWidth,\n      borderLeftWidth,\n    } = style;\n    let pw = width + plw + prw;\n    let ph = height + ptw + pbw;\n    // 递归进行，遇到absolute/relative的设置新容器\n    children.forEach(item => {\n      if(item instanceof Dom) {\n        item.__layoutAbs(['absolute', 'relative'].indexOf(item.style.position) > -1 ? item : container);\n      }\n    });\n    // 对absolute的元素进行相对容器布局\n    absChildren.forEach(item => {\n      let { mtw, mlw, style, style: {\n        left, top, right, bottom, width: width2, height: height2\n      } } = item;\n      let x2, y2, w2, h2;\n      // width优先级高于right高于left，即最高left+right，其次left+width，再次right+width，然后仅申明单个，最次全部auto\n      if(left.unit !== unit.AUTO && right.unit !== unit.AUTO) {\n        x2 = left.unit === unit.PX ? x + mlw + borderLeftWidth.value + left.value : x + mlw + borderLeftWidth.value + width * left.value * 0.01;\n        w2 = right.unit === unit.PX ? x + mlw + borderLeftWidth.value + pw - right.value - x2 : x + mlw + borderLeftWidth.value + pw - width * right.value * 0.01 - x2;\n      }\n      else if(left.unit !== unit.AUTO && width2.unit !== unit.AUTO) {\n        x2 = left.unit === unit.PX ? x + mlw + borderLeftWidth.value + left.value : x + mlw + borderLeftWidth.value + width * left.value * 0.01;\n        w2 = width2.unit === unit.PX ? width2.value : width;\n      }\n      else if(right.unit !== unit.AUTO && width2.unit !== unit.AUTO) {\n        w2 = width2.unit === unit.PX ? width2.value : width;\n        let widthPx = width2.unit === unit.PX ? width2.value : width * width2.value * 0.01;\n        x2 = right.unit === unit.PX ? x + mlw + borderLeftWidth.value + pw - right.value - widthPx : x + mlw + borderLeftWidth.value + pw - width * right.value * 0.01 - widthPx;\n      }\n      else if(left.unit !== unit.AUTO) {\n        x2 = left.unit === unit.PX ? x + left.value : x + mlw + borderLeftWidth.value + width * left.value * 0.01;\n        w2 = item.__calAbs(true);\n      }\n      else if(right.unit !== unit.AUTO) {\n        w2 = item.__calAbs(true);\n        x2 = right.unit === unit.PX ? x + mlw + borderLeftWidth.value + pw - right.value - w2 : x + mlw + borderLeftWidth.value + pw - width * right.value * 0.01 - w2;\n      }\n      else if(width2.unit !== unit.AUTO) {\n        x2 = x + mlw + borderLeftWidth.value;\n        w2 = width2.unit === unit.PX ? width2.value : width;\n      }\n      else {\n        x2 = x + mlw + borderLeftWidth.value;\n        w2 = item.__calAbs(true);\n      }\n      // top/bottom/height优先级同上\n      if(top.unit !== unit.AUTO && bottom.unit !== unit.AUTO) {\n        y2 = top.unit === unit.PX ? y + top.value : y + mtw + borderTopWidth.value + height * top.value * 0.01;\n        h2 = bottom.unit === unit.PX ? y + mtw + borderTopWidth.value + ph - bottom.value - y2 : y + mtw + borderTopWidth.value + ph - height * bottom.value * 0.01 - y2;\n        style.height = {\n          value: h2,\n          unit: unit.PX,\n        };\n      }\n      else if(top.unit !== unit.AUTO && height2.unit !== unit.AUTO) {\n        y2 = top.unit === unit.PX ? y + top.value : y + mtw + borderTopWidth.value + height * top.value * 0.01;\n        h2 = height2.unit === unit.PX ? height2.value : height;\n      }\n      else if(bottom.unit !== unit.AUTO && height2.unit !== unit.AUTO) {\n        h2 = height2.unit === unit.PX ? height2.value : height;\n        let heightPx = height2.unit === unit.PX ? height2.value : height * height2.value * 0.01;\n        y2 = bottom.unit === unit.PX ? y + mtw + borderTopWidth.value + ph - bottom.value - heightPx : y + mtw + borderTopWidth.value + ph - height * bottom.value * 0.01 - heightPx;\n      }\n      else if(top.unit !== unit.AUTO) {\n        y2 = top.unit === unit.PX ? y + top.value : y + mtw + borderTopWidth.value + height * top.value * 0.01;\n        h2 = item.__calAbs();\n      }\n      else if(bottom.unit !== unit.AUTO) {\n        h2 = item.__calAbs();\n        y2 = bottom.unit === unit.PX ? y + mtw + borderTopWidth.value + ph - bottom.value - h2 : y + mtw + borderTopWidth.value + ph - height * bottom.value * 0.01 - h2;\n      }\n      else if(height2.unit !== unit.AUTO) {\n        y2 = flowY + mtw + borderTopWidth.value;\n        h2 = height2.unit === unit.PX ? height2.value : height;\n      }\n      else {\n        y2 = flowY + mtw + borderTopWidth.value;\n        h2 = item.__calAbs();\n      }\n      // absolute时inline强制block\n      if(style.display === 'inline') {\n        style.display = 'block';\n      }\n      item.__layout({\n        x: x2,\n        y: y2,\n        w: w2,\n        h: h2,\n      });\n    });\n  }\n\n  render(renderMode) {\n    super.render(renderMode);\n    let { style: { display }, flowChildren, children } = this;\n    if(display === 'none') {\n      return;\n    }\n    // 先绘制static\n    flowChildren.forEach(item => {\n      if(item instanceof Text || item.style.position === 'static') {\n        item.render(renderMode);\n      }\n    });\n    // 再绘制relative和absolute\n    children.forEach(item => {\n      if((item instanceof Xom) && ['relative', 'absolute'].indexOf(item.style.position) > -1) {\n        item.render(renderMode);\n      }\n    });\n    if(renderMode === mode.SVG) {\n      this.__virtualDom = {\n        ...super.virtualDom,\n        type: 'dom',\n        children: this.children.map(item => item.virtualDom),\n      };\n    }\n  }\n\n  get tagName() {\n    return this.__tagName;\n  }\n  get children() {\n    return this.__children;\n  }\n  get flowChildren() {\n    return this.__flowChildren;\n  }\n  get absChildren() {\n    return this.__absChildren;\n  }\n  get lineGroups() {\n    return this.__lineGroups;\n  }\n  get baseLine() {\n    let len = this.lineGroups.length;\n    if(len) {\n      let last = this.lineGroups[len - 1];\n      return last.y - this.y + last.baseLine;\n    }\n    return this.y;\n  }\n  get flowY() {\n    return this.__flowY;\n  }\n\n  static isValid(s) {\n    return TAG_NAME.hasOwnProperty(s);\n  }\n}\n\nexport default Dom;\n","import util from './util';\n\nfunction diff(elem, ovd, nvd) {\n  let cns = elem.childNodes;\n  diffDefs(cns[0], ovd.defs, nvd.defs);\n  diffBb(cns[1], ovd.bb, nvd.bb);\n  diffD2D(elem, ovd, nvd, true);\n}\n\nfunction diffDefs(elem, od, nd) {\n  let ol = od.length;\n  let nl = nd.length;\n  let i = 0;\n  let cns = elem.childNodes;\n  for(; i < Math.min(ol, nl); i++) {\n    diffDef(cns[i], od[i], nd[i]);\n  }\n}\n\nfunction diffDef(elem, od, nd) {\n  if(od.k !== nd.k) {\n    elem.insertAdjacentHTML('afterend', util.joinDef(nd));\n    elem.parentNode.removeChild(elem);\n  }\n  else {\n    for(let i = 0; i < 4; i++) {\n      if(od.c[i] !== nd.c[i]) {\n        elem.setAttribute(['x1', 'y1', 'x2', 'y2'][i], nd.c[i]);\n      }\n    }\n    let ol = od.v.length;\n    let nl = nd.v.length;\n    let i = 0;\n    let cns = elem.childNodes;\n    for(; i < Math.min(ol, nl); i++) {\n      let o = od.v[i];\n      let n = nd.v[i];\n      if(o[0] !== n[0]) {\n        cns[i].setAttribute('stop-color', n[0]);\n      }\n      if(o[1] !== n[1]) {\n        cns[i].setAttribute('offset', n[1]);\n      }\n    }\n    if(i < ol) {\n      for(; i < ol; i++) {\n        removeAt(elem, cns, i);\n      }\n    }\n    else if(i < nl) {\n      for(; i < nl; i++) {\n        insertAt(elem, cns, i, util.joinDef(nd.v[i]));\n      }\n    }\n  }\n}\n\nfunction diffChild(elem, ovd, nvd) {\n  if(ovd.type === 'dom') {\n    if(nvd.type === 'dom') {\n      diffD2D(elem, ovd, nvd);\n    }\n    else if(nvd.type === 'text') {\n      replaceWith(elem, nvd);\n    }\n    else if(nvd.type === 'geom') {\n      diffD2G(elem, ovd, nvd);\n    }\n  }\n  else if(nvd.type === 'text') {\n    if(nvd.type === 'dom') {\n      replaceWith(elem, nvd);\n    }\n    else if(nvd.type === 'text') {\n      diffT2T(elem, ovd, nvd);\n    }\n    else if(nvd.type === 'geom') {\n      replaceWith(elem, nvd);\n    }\n  }\n  else if(nvd.type === 'geom') {\n    if(nvd.type === 'dom') {\n      diffG2D(elem, ovd, nvd);\n    }\n    else if(nvd.type === 'text') {\n      replaceWith(elem, nvd);\n    }\n    else if(nvd.type === 'geom') {\n      diffG2G(elem, ovd, nvd);\n    }\n  }\n}\n\nfunction diffD2D(elem, ovd, nvd, root) {\n  if(!root) {\n    diffBb(elem.firstChild, ovd.bb, nvd.bb);\n  }\n  let ol = ovd.children.length;\n  let nl = nvd.children.length;\n  let i = 0;\n  let lastChild = elem.lastChild;\n  let cns = lastChild.childNodes;\n  for(; i < Math.min(ol, nl); i++) {\n    diffChild(cns[i], ovd.children[i], nvd.children[i]);\n  }\n  if(i < ol) {\n    for(; i < ol; i++) {\n      removeAt(lastChild, cns, i);\n    }\n  }\n  else if(i < nl) {\n    for(; i < nl; i++) {\n      insertAt(lastChild, cns, i, util.joinVd(nvd.children[i]));\n    }\n  }\n}\n\nfunction diffD2G(elem, ovd, nvd) {\n  diffBb(elem.firstChild, ovd.bb, nvd.bb);\n  replaceWith(elem.lastChild, nvd.content);\n}\n\nfunction diffT2T(elem, ovd, nvd) {\n  let ol = ovd.children.length;\n  let nl = nvd.children.length;\n  let i = 0;\n  for(; i < Math.min(ol, nl); i++) {\n    diffItem(elem, i, ovd.children[i], nvd.children[i], true);\n  }\n  let cns = elem.childNodes;\n  if(i < ol) {\n    for(; i < ol; i++) {\n      removeAt(elem, cns, i);\n    }\n  }\n  else if(i < nl) {\n    for(; i < nl; i++) {\n      insertAt(elem, cns, i, util.joinVd(nvd.children[i]));\n    }\n  }\n}\n\nfunction diffG2D(elem, ovd, nvd) {\n  diffBb(elem.firstChild, ovd.bb, nvd.bb);\n  replaceWith(elem.lastChild, nvd.children);\n}\n\nfunction diffG2G(elem, ovd, nvd) {\n  if(!equalArr(ovd.transform, nvd.transform)) {\n    let transform = util.joinTransform(nvd.transform);\n    if(elem.getAttribute('transform') !== transform) {\n      elem.setAttribute('transform', transform);\n    }\n  }\n  diffBb(elem.firstChild, ovd.bb, nvd.bb);\n  let ol = ovd.content.length;\n  let nl = nvd.content.length;\n  let i = 0;\n  let lastChild = elem.lastChild;\n  let cns = lastChild.childNodes;\n  for(; i < Math.min(ol, nl); i++) {\n    diffItem(lastChild, i, ovd.content[i], nvd.content[i]);\n  }\n  if(i < ol) {\n    for(; i < ol; i++) {\n      removeAt(lastChild, cns, i);\n    }\n  }\n  else if(i < nl) {\n    for(; i < nl; i++) {\n      insertAt(lastChild, cns, i, util.joinVd(nvd.content[i]));\n    }\n  }\n}\n\nfunction diffBb(elem, obb, nbb) {\n  let ol = obb.length;\n  let nl = nbb.length;\n  let i = 0;\n  for(; i < Math.min(ol, nl); i++) {\n    diffItem(elem, i, obb[i], nbb[i]);\n  }\n  let cns = elem.childNodes;\n  if(i < ol) {\n    for(; i < ol; i++) {\n      removeAt(elem, cns, i);\n    }\n  }\n  else if(i < nl) {\n    for(; i < nl; i++) {\n      insertAt(elem, cns, i, util.joinVd(nbb[i]));\n    }\n  }\n}\n\nfunction diffItem(elem, i, ovd, nvd, isText) {\n  let cns = elem.childNodes;\n  if(ovd.tagName !== nvd.tagName) {\n    replaceWith(cns[i], nvd);\n  }\n  else {\n    let op = {};\n    for(let j = 0, len = ovd.props.length; j < len; j++) {\n      let prop = ovd.props[j];\n      let [k, v] = prop;\n      op[k] = v;\n    }\n    for(let j = 0, len = nvd.props.length; j < len; j++) {\n      let prop = nvd.props[j];\n      let [k, v] = prop;\n      // 已有不等更新，没有添加\n      if(op.hasOwnProperty(k)) {\n        if(op[k] !== v) {\n          cns[i].setAttribute(k, v);\n        }\n        delete op[k];\n      }\n      else {\n        cns[i].setAttribute(k, v);\n      }\n    }\n    // 多余的删除\n    for(var k in op) {\n      if(op.hasOwnProperty(k)) {\n        cns[i].removeAttribute(k);\n      }\n    }\n    if(isText && ovd.content !== nvd.content) {\n      cns[i].textContent = nvd.content;\n    }\n  }\n}\n\nfunction replaceWith(elem, vd) {\n  let res;\n  if(Array.isArray(vd)) {\n    res = '';\n    vd.forEach(item => {\n      res += util.joinVd(item);\n    });\n  }\n  else {\n    res = util.joinVd(vd);\n  }\n  elem.insertAdjacentHTML('afterend', res);\n  elem.parentNode.removeChild(elem);\n}\n\nfunction insertAt(elem, cns, index, html) {\n  if(index >= cns.length) {\n    elem.insertAdjacentHTML('beforeend', html);\n  }\n  else {\n    cns[index].insertAdjacentHTML('beforebegin', html);\n  }\n}\n\nfunction removeAt(elem, cns, index) {\n  if(cns[index]) {\n    elem.removeChild(cns[index]);\n  }\n}\n\nfunction equalArr(a, b) {\n  if(a.length !== b.length) {\n    return false;\n  }\n  for(let i = 0, len = a.length; i < len; i++) {\n    if(a[i] !== b[i]) {\n      return false;\n    }\n  }\n  return true;\n}\n\nexport default diff;\n","class Defs {\n  constructor(uuid) {\n    this.id = uuid;\n    this.count = 0;\n    this.list = [];\n  }\n  add(data) {\n    data.uuid = `karas-defs-${this.id}-${this.count++}`;\n    this.list.push(data);\n    return data.uuid;\n  }\n  clear() {\n    this.list = [];\n    this.count = 0;\n  }\n\n  get value() {\n    return this.list;\n  }\n\n  static getInstance(uuid) {\n    return new Defs(uuid);\n  }\n}\n\nexport default Defs;\n","import Dom from '../node/Dom';\nimport util from '../util';\nimport mode from '../mode';\nimport domDiff from '../domDiff';\nimport Defs from './Defs';\n\nfunction getDom(dom) {\n  if(util.isString(dom)) {\n    let o = document.querySelector(dom);\n    if(!o) {\n      throw new Error('can not find dom of selector: ' + dom);\n    }\n    return o;\n  }\n  if(!dom) {\n    throw new Error('can not find dom: ' + dom);\n  }\n  return dom;\n}\n\nfunction renderProp(k, v) {\n  let s = Array.isArray(v) ? util.joinSourceArray(v) : util.stringify(v);\n  if(k === 'className') {\n    k = 'class';\n  }\n  return ' ' + k + '=\"' + util.encodeHtml(s, true) + '\"';\n}\n\nlet uuid = 0;\n\nclass Root extends Dom {\n  constructor(tagName, props, children) {\n    super(tagName, props, children);\n    this.__node = null; // 真实DOM引用\n  }\n\n  __initProps() {\n    if(this.props.width !== undefined) {\n      let value = parseInt(this.props.width);\n      if(!isNaN(value) && value > 0) {\n        this.__width = value;\n      }\n    }\n    if(this.props.height !== undefined) {\n      let value = parseInt(this.props.height);\n      if(!isNaN(value) && value > 0) {\n        this.__height = value;\n      }\n    }\n  }\n\n  __genHtml() {\n    let res = `<${this.tagName}`;\n    // 拼接处理属性\n    for(let i = 0, len = this.__props.length; i < len; i++) {\n      let item = this.__props[i];\n      res += renderProp(item[0], item[1]);\n    }\n    res += `></${this.tagName}>`;\n    return res;\n  }\n\n  // 类似touchend/touchcancel这种无需判断是否发生于元素上，直接强制响应\n  __cb(e, force) {\n    if(e.touches && e.touches.length > 1) {\n      return;\n    }\n    let { node } = this;\n    let { x, y, top, right } = node.getBoundingClientRect();\n    x = x || top || 0;\n    y = y || right || 0;\n    let { clientX, clientY } = e.touches ? (e.touches[0] || {}) : e;\n    x = clientX - x;\n    y = clientY - y;\n    this.__emitEvent({\n      event: e,\n      x,\n      y,\n      covers: [],\n    }, force);\n  }\n\n  __initEvent() {\n    let { node } = this;\n    ['click', 'dblclick', 'mousedown', 'mousemove', 'mouseup', 'touchstart', 'touchmove', 'touchend', 'touchcancel'].forEach(type => {\n      node.addEventListener(type, e => {\n        this.__cb(e, ['touchend', 'touchcancel'].indexOf(type) > -1);\n      });\n    });\n  }\n\n  appendTo(dom) {\n    dom = getDom(dom);\n    this.__initProps();\n    // 已有root节点\n    if(dom.nodeName.toUpperCase() === this.tagName.toUpperCase()) {\n      this.__node = dom;\n      if(this.width) {\n        dom.setAttribute('width', this.width);\n      }\n      if(this.height) {\n        dom.setAttribute('height', this.height);\n      }\n    }\n    // 没有canvas/svg节点则生成一个新的\n    else {\n      this.__node = dom.querySelector(this.tagName);\n      if(!this.__node) {\n        dom.innerHTML = this.__genHtml();\n        this.__node = dom.querySelector(this.tagName);\n      }\n    }\n    this.__uuid = this.__node.__uuid || uuid++;\n    this.__defs = Defs.getInstance(this.__uuid);\n    this.__defs.clear();\n    // 没有设置width/height则采用css计算形式\n    if(!this.width || !this.height) {\n      let css = window.getComputedStyle(dom, null);\n      if(!this.width) {\n        this.__width = parseInt(css.getPropertyValue('width'));\n        dom.setAttribute('width', this.width);\n      }\n      if(!this.height) {\n        this.__height = parseInt(css.getPropertyValue('height'));\n        dom.setAttribute('height', this.height);\n      }\n    }\n    // 只有canvas有ctx，svg用真实dom\n    let renderMode;\n    if(this.tagName === 'canvas') {\n      this.__ctx = this.__node.getContext('2d');\n      this.__ctx.clearRect(0, 0, this.width, this.height);\n      renderMode = mode.CANVAS;\n    }\n    else if(this.tagName === 'svg') {\n      renderMode = mode.SVG;\n    }\n    // canvas/svg作为根节点一定是block或flex，不会是inline\n    let { style } = this;\n    if(['flex', 'block'].indexOf(style.display) === -1) {\n      style.display = 'block';\n    }\n    // 同理position不能为absolute\n    if(style.position === 'absolute') {\n      style.position = 'static';\n    }\n    this.__traverse(this.__ctx, this.__defs, renderMode);\n    // canvas的宽高固定初始化\n    style.width = this.width;\n    style.height = this.height;\n    this.__initStyle();\n    this.__layout({\n      x: 0,\n      y: 0,\n      w: this.width,\n      h: this.height,\n    });\n    this.__layoutAbs(this);\n    this.render(renderMode);\n    if(renderMode === mode.SVG) {\n      let nvd = this.virtualDom;\n      let nd = this.__defs.value;\n      nvd.defs = nd;\n      if(this.node.__karasInit) {\n        domDiff(this.node, this.node.__ovd, nvd);\n      } else {\n        this.node.innerHTML = util.joinVirtualDom(nvd, nd);\n      }\n      this.node.__ovd = nvd;\n      this.node.__od = nd;\n    }\n    if(!this.node.__karasInit) {\n      this.node.__karasInit = true;\n      this.__initEvent();\n    }\n  }\n\n  get node() {\n    return this.__node;\n  }\n  get imageData() {\n    return this.__imageData;\n  }\n}\n\nexport default Root;\n","import Geom from './Geom';\nimport mode from '../mode';\n\nclass Line extends Geom {\n  constructor(tagName, props) {\n    super(tagName, props);\n    // start和end表明线段的首尾坐标，control表明控制点坐标\n    this.__start = [];\n    this.__end = [];\n    this.__control = [];\n    if(Array.isArray(this.props.start)) {\n      this.__start = this.props.start;\n    }\n    if(Array.isArray(this.props.end)) {\n      this.__end = this.props.end;\n    }\n    if(Array.isArray(this.props.control)) {\n      this.__control = this.props.control;\n    }\n  }\n\n  render(renderMode) {\n    super.render(renderMode);\n    let { rx: x, ry: y, width, height, mlw, mtw, plw, ptw, style, ctx, start, end, control, virtualDom } = this;\n    if(start.length < 2 || end.length < 2) {\n      return;\n    }\n    let {\n      display,\n      borderTopWidth,\n      borderRightWidth,\n      borderBottomWidth,\n      borderLeftWidth,\n      stroke,\n      strokeWidth,\n      strokeDasharray,\n    } = style;\n    if(display === 'none') {\n      return;\n    }\n    let originX = x + borderLeftWidth.value + mlw + plw;\n    let originY = y + borderTopWidth.value + mtw + ptw;\n    let x1 = originX + start[0] * width;\n    let y1 = originY + start[1] * height;\n    let x2 = originX + end[0] * width;\n    let y2 = originY + end[1] * height;\n    let curve = 0;\n    let cx1, cy1, cx2, cy2;\n    if(Array.isArray(control[0])) {\n      curve++;\n      cx1 = originX + control[0][0] * width;\n      cy1 = originY + control[0][1] * height;\n    }\n    if(Array.isArray(control[1])) {\n      curve++;\n      cx2 = originX + control[1][0] * width;\n      cy2 = originY + control[1][1] * height;\n    }\n    if(renderMode === mode.CANVAS) {\n      ctx.strokeStyle = stroke;\n      ctx.lineWidth = strokeWidth;\n      ctx.setLineDash(strokeDasharray);\n      ctx.beginPath();\n      ctx.moveTo(x1, y1);\n      if(curve === 2) {\n        ctx.bezierCurveTo(cx1, cy1, cx2, cy2, x2, y2);\n      }\n      else if(curve === 1) {\n        ctx.quadraticCurveTo(cx1, cy1, x2, y2);\n      }\n      else {\n        ctx.lineTo(x2, y2);\n      }\n      ctx.stroke();\n      ctx.closePath();\n    }\n    else if(renderMode === mode.SVG) {\n      if(curve === 2) {\n        virtualDom.children.push({\n          type: 'item',\n          tagName: 'path',\n          props: [\n            ['d', `M${x1} ${y1} C${cx1} ${cy1} ${cx2} ${cy2} ${x2} ${y2}`],\n            ['fill', 'none'],\n            ['stroke', stroke],\n            ['stroke-width', strokeWidth],\n            ['stroke-dasharray', strokeDasharray]\n          ],\n        });\n      }\n      else if(curve === 1) {\n        virtualDom.children.push({\n          type: 'item',\n          tagName: 'path',\n          props: [\n            ['d', `M${x1} ${y1} Q${cx1} ${cy1} ${x2} ${y2}`],\n            ['fill', 'none'],\n            ['stroke', stroke],\n            ['stroke-width', strokeWidth],\n            ['stroke-dasharray', strokeDasharray]\n          ],\n        });\n      }\n      else {\n        virtualDom.children.push({\n          type: 'item',\n          tagName: 'line',\n          props: [\n            ['x1', x1],\n            ['y1', y1],\n            ['x2', x2],\n            ['y2', y2],\n            ['stroke', stroke],\n            ['stroke-width', strokeWidth],\n            ['stroke-dasharray', strokeDasharray]\n          ],\n        });\n      }\n    }\n  }\n\n  get start() {\n    return this.__start;\n  }\n  get end() {\n    return this.__end;\n  }\n  get control() {\n    return this.__control;\n  }\n}\n\nexport default Line;\n","import Geom from './Geom';\nimport mode from '../mode';\n\nclass Polyline extends Geom {\n  constructor(tagName, props) {\n    super(tagName, props);\n    // 折线所有点的列表\n    this.__points = [];\n    if(Array.isArray(this.props.points)) {\n      this.__points = this.props.points;\n    }\n    // 原点位置，4个角，默认左下\n    if(['TOP_LEFT', 'TOP_RIGHT', 'BOTTOM_LEFT', 'BOTTOM_RIGHT'].indexOf(this.props.origin) > -1) {\n      this.__origin = this.props.origin;\n    }\n    else {\n      this.__origin = 'BOTTOM_LEFT';\n    }\n  }\n\n  render(renderMode) {\n    super.render(renderMode);\n    let { rx: x, ry: y, width, height, mlw, mtw, plw, ptw, style, ctx, points, origin, virtualDom } = this;\n    if(points.length < 2) {\n      return;\n    }\n    for(let i = 0, len = points.length; i < len; i++) {\n      if(!Array.isArray(points[i]) || points[i].length < 2) {\n        return;\n      }\n    }\n    let {\n      display,\n      borderTopWidth,\n      borderLeftWidth,\n      stroke,\n      strokeWidth,\n      strokeDasharray,\n    } = style;\n    if(display === 'none') {\n      return;\n    }\n    let originX = x + borderLeftWidth.value + mlw + plw;\n    let originY = y + borderTopWidth.value + mtw + ptw;\n    let pts = this.__pts = [];\n    if(origin === 'TOP_LEFT') {\n      points.forEach(item => {\n        pts.push([\n          originX + item[0] * width,\n          originY + item[1] * height\n        ]);\n      });\n    }\n    else if(origin === 'TOP_RIGHT') {\n      points.forEach(item => {\n        pts.push([\n          originX + width - item[0] * width,\n          originY + item[1] * height\n        ]);\n      });\n    }\n    else if(origin === 'BOTTOM_LEFT') {\n      points.forEach(item => {\n        pts.push([\n          originX + item[0] * width,\n          originY + height - item[1] * height\n        ]);\n      });\n    }\n    else if(origin === 'BOTTOM_RIGHT') {\n      points.forEach(item => {\n        pts.push([\n          originX + width - item[0] * width,\n          originY + height - item[1] * height\n        ]);\n      });\n    }\n    if(renderMode === mode.CANVAS) {\n      ctx.strokeStyle = stroke;\n      ctx.lineWidth = strokeWidth;\n      ctx.setLineDash(strokeDasharray);\n      ctx.beginPath();\n      ctx.moveTo(pts[0][0], originY + pts[0][1]);\n      for(let i = 1, len = pts.length; i < len; i++) {\n        let point = pts[i];\n        ctx.lineTo(point[0], point[1]);\n      }\n      if(strokeWidth && stroke !== 'transparent') {\n        ctx.stroke();\n      }\n      ctx.closePath();\n    }\n    else if(renderMode === mode.SVG) {\n      let points = '';\n      for(let i = 0, len = pts.length; i < len; i++) {\n        let point = pts[i];\n        points += `${point[0]},${point[1]} `;\n      }\n      virtualDom.children.push({\n        type: 'item',\n        tagName: 'polyline',\n        props: [\n          ['points', points],\n          ['fill', 'none'],\n          ['stroke', stroke],\n          ['stroke-width', strokeWidth],\n          ['stroke-dasharray', strokeDasharray]\n        ],\n      });\n    }\n  }\n\n  getPointsByX(x) {\n    let min = Infinity;\n    let len = this.__pts.length;\n    let res = [];\n    for(let i = 0; i < len; i++) {\n      let diff = Math.abs(this.__pts[i][0] - x);\n      if(diff < min) {\n        min = diff;\n      }\n    }\n    for(let i = 0; i < len; i++) {\n      let diff = Math.abs(this.__pts[i][0] - x);\n      if(diff === min) {\n        res.push({\n          index: i,\n          x: this.__pts[i][0],\n          y: this.__pts[i][1],\n        });\n      }\n    }\n    return res;\n  }\n\n  get points() {\n    return this.__points;\n  }\n  get origin() {\n    return this.__origin;\n  }\n}\n\nexport default Polyline;\n","import Geom from './Geom';\nimport mode from '../mode';\n\nclass Polygon extends Geom {\n  constructor(tagName, props) {\n    super(tagName, props);\n    // 所有点的列表\n    this.__points = [];\n    if(Array.isArray(this.props.points)) {\n      this.__points = this.props.points;\n    }\n  }\n\n  render(renderMode) {\n    super.render(renderMode);\n    let { rx: x, ry: y, width, height, mlw, mtw, plw, ptw, style, ctx, points, virtualDom } = this;\n    if(points.length < 3) {\n      return;\n    }\n    for(let i = 0, len = points.length; i < len; i++) {\n      if(!Array.isArray(points[i]) || points[i].length < 2) {\n        return;\n      }\n    }\n    let {\n      display,\n      borderTopWidth,\n      borderLeftWidth,\n      stroke,\n      strokeWidth,\n      strokeDasharray,\n      fill,\n    } = style;\n    if(display === 'none') {\n      return;\n    }\n    let originX = x + borderLeftWidth.value + mlw + plw;\n    let originY = y + borderTopWidth.value + mtw + ptw;\n    points.forEach(item => {\n      item[0] = originX + item[0] * width;\n      item[1] = originY + item[1] * height;\n    });\n    if(renderMode === mode.CANVAS) {\n      ctx.strokeStyle = stroke;\n      ctx.lineWidth = strokeWidth;\n      ctx.fillStyle = fill;\n      ctx.setLineDash(strokeDasharray);\n      ctx.beginPath();\n      ctx.moveTo(points[0][0], originY + points[0][1]);\n      for(let i = 1, len = points.length; i < len; i++) {\n        let point = points[i];\n        ctx.lineTo(point[0], point[1]);\n      }\n      ctx.fill();\n      if(strokeWidth && stroke !== 'transparent') {\n        ctx.stroke();\n      }\n      ctx.closePath();\n    }\n    else if(renderMode === mode.SVG) {\n      let points = '';\n      for(let i = 0, len = points.length; i < len; i++) {\n        let point = points[i];\n        points += `${point[0]},${point[1]} `;\n      }\n      virtualDom.children.push({\n        type: 'item',\n        tagName: 'polygon',\n        props: [\n          ['points', points],\n          ['fill', fill],\n          ['stroke', stroke],\n          ['stroke-width', strokeWidth],\n          ['stroke-dasharray', strokeDasharray]\n        ],\n      });\n    }\n  }\n\n  get points() {\n    return this.__points;\n  }\n}\n\nexport default Polygon;\n","import Geom from './Geom';\nimport mode from '../mode';\n\nconst OFFSET = Math.PI * 0.5;\n\nfunction getCoordByDegree(x, y, r, d) {\n  while(d > 360) {\n    d -= 360;\n  }\n  while(d < 0) {\n    d += 360;\n  }\n  if(d >= 0 && d < 90) {\n    return [\n      x + Math.sin(d * Math.PI / 180) * r,\n      y - Math.cos(d * Math.PI / 180) * r\n    ];\n  }\n  else if(d >= 90 && d < 180) {\n    return [\n      x + Math.cos((d - 90) * Math.PI / 180) * r,\n      y + Math.sin((d - 90) * Math.PI / 180) * r,\n    ];\n  }\n  else if(d >= 180 && d < 270) {\n    return [\n      x - Math.cos((270 - d) * Math.PI / 180) * r,\n      y + Math.sin((270 - d) * Math.PI / 180) * r,\n    ];\n  }\n  else {\n    return [\n      x - Math.sin((360 - d) * Math.PI / 180) * r,\n      y - Math.cos((360 - d) * Math.PI / 180) * r,\n    ];\n  }\n}\n\nclass Sector extends Geom {\n  constructor(tagName, props) {\n    super(tagName, props);\n    // 角度\n    this.__start = 0;\n    this.__end = 0;\n    if(this.props.start) {\n      this.__start = parseFloat(this.props.start);\n      if(isNaN(this.start)) {\n        this.__start = 0;\n      }\n    }\n    if(this.props.end) {\n      this.__end = parseFloat(this.props.end);\n      if(isNaN(this.end)) {\n        this.__end = 0;\n      }\n    }\n    // 半径0~1，默认1\n    this.__r = 1;\n    if(this.props.r) {\n      this.__r = parseFloat(this.props.r);\n      if(isNaN(this.r)) {\n        this.__r = 1;\n      }\n    }\n  }\n\n  render(renderMode) {\n    super.render(renderMode);\n    let { rx: x, ry: y, width, height, mlw, mtw, plw, ptw, style, ctx, start, end, r, virtualDom } = this;\n    if(start === end) {\n      return;\n    }\n    let {\n      display,\n      borderTopWidth,\n      borderLeftWidth,\n      stroke,\n      strokeWidth,\n      strokeDasharray,\n      fill,\n    } = style;\n    if(display === 'none') {\n      return;\n    }\n    let originX = x + borderLeftWidth.value + mlw + plw;\n    let originY = y + borderTopWidth.value + mtw + ptw;\n    originX += width * 0.5;\n    originY += height * 0.5;\n    r *= Math.min(width, height) * 0.5;\n    if(renderMode === mode.CANVAS) {\n      ctx.strokeStyle = stroke;\n      ctx.lineWidth = strokeWidth;\n      ctx.fillStyle = fill;\n      ctx.setLineDash(strokeDasharray);\n      ctx.beginPath();\n      ctx.moveTo(originX, originY);\n      ctx.arc(originX, originY, r, start * Math.PI / 180 - OFFSET, end * Math.PI / 180 - OFFSET);\n      ctx.fill();\n      if(strokeWidth && stroke !== 'transparent') {\n        ctx.stroke();\n      }\n      ctx.closePath();\n    }\n    else if(renderMode === mode.SVG) {\n      let x1, y1, x2, y2;\n      [ x1, y1 ] = getCoordByDegree(originX, originY, r, start);\n      [ x2, y2 ] = getCoordByDegree(originX, originY, r, end);\n      let large = (end - start) > 180 ? 1 : 0;\n      virtualDom.children.push({\n        type: 'item',\n        tagName: 'path',\n        props: [\n          ['d', `M${originX} ${originY} L${x1} ${y1} A${r} ${r} 0 ${large} 1 ${x2} ${y2} z`],\n          ['fill', fill],\n          ['stroke', stroke],\n          ['stroke-width', strokeWidth],\n          ['stroke-dasharray', strokeDasharray]\n        ],\n      });\n    }\n  }\n\n  get start() {\n    return this.__start;\n  }\n  get end() {\n    return this.__end;\n  }\n  get r() {\n    return this.__r;\n  }\n}\n\nexport default Sector;\n","import Geom from './Geom';\nimport mode from '../mode';\n\nclass Rect extends Geom {\n  constructor(tagName, props) {\n    super(tagName, props);\n  }\n\n  render(renderMode) {\n    super.render(renderMode);\n    let { rx: x, ry: y, width, height, mlw, mtw, plw, ptw, style, ctx, virtualDom } = this;\n    let {\n      display,\n      borderTopWidth,\n      borderLeftWidth,\n      stroke,\n      strokeWidth,\n      strokeDasharray,\n      fill,\n    } = style;\n    if(display === 'none') {\n      return;\n    }\n    let originX = x + borderLeftWidth.value + mlw + plw;\n    let originY = y + borderTopWidth.value + mtw + ptw;\n    if(renderMode === mode.CANVAS) {\n      ctx.strokeStyle = stroke;\n      ctx.lineWidth = strokeWidth;\n      ctx.fillStyle = fill;\n      ctx.setLineDash(strokeDasharray);\n      ctx.beginPath();\n      ctx.moveTo(originX, originY);\n      ctx.lineTo(originX + width, originY);\n      ctx.lineTo(originX + width, originY + height);\n      ctx.lineTo(originX, originY + height);\n      ctx.fill();\n      if(strokeWidth && stroke !== 'transparent') {\n        ctx.stroke();\n      }\n      ctx.closePath();\n    }\n    else if(renderMode === mode.SVG) {\n      virtualDom.children.push({\n        type: 'item',\n        tagName: 'rect',\n        props: [\n          ['x', x],\n          ['y', y],\n          ['width', width],\n          ['height', height],\n          ['fill', fill],\n          ['stroke', stroke],\n          ['stroke-width', strokeWidth],\n          ['stroke-dasharray', strokeDasharray]\n        ],\n      });\n    }\n  }\n}\n\nexport default Rect;\n","import Geom from './Geom';\nimport mode from '../mode';\n\nclass Circle extends Geom {\n  constructor(tagName, props) {\n    super(tagName, props);\n    // 半径0~1，默认1\n    this.__r = 1;\n    if(this.props.r) {\n      this.__r = parseFloat(this.props.r);\n      if(isNaN(this.r)) {\n        this.__r = 1;\n      }\n    }\n  }\n\n  render(renderMode) {\n    super.render(renderMode);\n    let { rx: x, ry: y, width, height, mlw, mtw, plw, ptw, style, ctx, r, virtualDom } = this;\n    let {\n      display,\n      borderTopWidth,\n      borderLeftWidth,\n      stroke,\n      strokeWidth,\n      strokeDasharray,\n      fill,\n    } = style;\n    if(display === 'none') {\n      return;\n    }\n    let originX = x + borderLeftWidth.value + mlw + plw;\n    let originY = y + borderTopWidth.value + mtw + ptw;\n    originX += width * 0.5;\n    originY += height * 0.5;\n    r *= Math.min(width, height) * 0.5;\n    if(renderMode === mode.CANVAS) {\n      ctx.strokeStyle = stroke;\n      ctx.lineWidth = strokeWidth;\n      ctx.fillStyle = fill;\n      ctx.setLineDash(strokeDasharray);\n      ctx.beginPath();\n      ctx.arc(originX, originY, r, 0, 2 * Math.PI);\n      if(fill !== 'transparent') {\n        ctx.fill();\n      }\n      if(strokeWidth && stroke !== 'transparent') {\n        ctx.stroke();\n      }\n      ctx.closePath();\n    }\n    else if(renderMode === mode.SVG) {\n      virtualDom.children.push({\n        type: 'item',\n        tagName: 'circle',\n        props: [\n          ['cx', originX],\n          ['cy', originY],\n          ['r', r],\n          ['fill', fill],\n          ['stroke', stroke],\n          ['stroke-width', strokeWidth],\n          ['stroke-dasharray', strokeDasharray]\n        ],\n      });\n    }\n  }\n\n  get r() {\n    return this.__r;\n  }\n}\n\nexport default Circle;\n","import Geom from './Geom';\nimport mode from '../mode';\n\nclass Ellipse extends Geom {\n  constructor(tagName, props) {\n    super(tagName, props);\n    // 半径0~1，默认1\n    this.__rx = 1;\n    if(this.props.rx) {\n      this.__rx = parseFloat(this.props.rx);\n      if(isNaN(this.rx)) {\n        this.__rx = 1;\n      }\n    }\n    this.__ry = 1;\n    if(this.props.ry) {\n      this.__ry = parseFloat(this.props.ry);\n      if(isNaN(this.rx)) {\n        this.__ry = 1;\n      }\n    }\n  }\n\n  render(renderMode) {\n    super.render(renderMode);\n    let { rx: x, ry: y, width, height, mlw, mtw, plw, ptw, style, ctx, rx, ry, virtualDom } = this;\n    let {\n      display,\n      borderTopWidth,\n      borderLeftWidth,\n      stroke,\n      strokeWidth,\n      strokeDasharray,\n      fill,\n    } = style;\n    if(display === 'none') {\n      return;\n    }\n    let originX = x + borderLeftWidth.value + mlw + plw;\n    let originY = y + borderTopWidth.value + mtw + ptw;\n    originX += width * 0.5;\n    originY += height * 0.5;\n    rx *= width * 0.5;\n    ry *= height * 0.5;\n    if(renderMode === mode.CANVAS) {\n      ctx.strokeStyle = stroke;\n      ctx.lineWidth = strokeWidth;\n      ctx.fillStyle = fill;\n      ctx.setLineDash(strokeDasharray);\n      ctx.beginPath();\n      ctx.moveTo(originX, originY);\n      ctx.ellipse && ctx.ellipse(originX, originY, rx, ry, 0, 0, 2 * Math.PI);\n      ctx.fill();\n      if(strokeWidth && stroke !== 'transparent') {\n        ctx.stroke();\n      }\n      ctx.closePath();\n    }\n    else if(renderMode === mode.SVG) {\n      virtualDom.children.push({\n        type: 'item',\n        tagName: 'ellipse',\n        props: [\n          ['cx', originX],\n          ['cy', originY],\n          ['rx', rx],\n          ['ry', ry],\n          ['fill', fill],\n          ['stroke', stroke],\n          ['stroke-width', strokeWidth],\n          ['stroke-dasharray', strokeDasharray]\n        ],\n      });\n    }\n  }\n\n  get rx() {\n    return this.__rx;\n  }\n  get ry() {\n    return this.__ry;\n  }\n}\n\nexport default Ellipse;\n","import Geom from './Geom';\nimport mode from '../mode';\n\nclass Grid extends Geom {\n  constructor(tagName, props) {\n    super(tagName, props);\n    // x,y被分为几格\n    this.__nx = 0;\n    if(this.props.nx) {\n      this.__nx = parseFloat(this.props.nx);\n      if(isNaN(this.nx)) {\n        this.__nx = 0;\n      }\n    }\n    this.__ny = 0;\n    if(this.props.ny) {\n      this.__ny = parseFloat(this.props.ny);\n      if(isNaN(this.ny)) {\n        this.__ny = 0;\n      }\n    }\n  }\n\n  render(renderMode) {\n    super.render(renderMode);\n    let { rx: x, ry: y, width, height, mlw, mtw, plw, ptw, style, ctx, nx, ny, virtualDom } = this;\n    if(width <= 0 || height <= 0) {\n      return;\n    }\n    if(nx < 3 && ny < 3) {\n      return;\n    }\n    let {\n      display,\n      borderTopWidth,\n      borderLeftWidth,\n      stroke,\n      strokeWidth,\n      strokeDasharray,\n    } = style;\n    if(display === 'none') {\n      return;\n    }\n    let originX = x + borderLeftWidth.value + mlw + plw;\n    let originY = y + borderTopWidth.value + mtw + ptw;\n    let endX = originX + width;\n    let endY = originY + height;\n    let lx = [];\n    let ly = [];\n    if(nx >= 3) {\n      let per = width / (nx - 1);\n      for(let i = 0; i < nx; i++) {\n        ly.push(originX + i * per);\n      }\n    }\n    if(ny >= 3) {\n      let per = height / (ny - 1);\n      for(let i = 0; i < ny; i++) {\n        lx.push(originY + i * per);\n      }\n    }\n    if(renderMode === mode.CANVAS) {\n      ctx.strokeStyle = stroke;\n      ctx.lineWidth = strokeWidth;\n      ctx.setLineDash(strokeDasharray);\n      ctx.beginPath();\n      lx.forEach(item => {\n        ctx.moveTo(originX, item);\n        ctx.lineTo(endX, item);\n      });\n      ly.forEach(item => {\n        ctx.moveTo(item, originY);\n        ctx.lineTo(item, endY);\n      });\n      if(strokeWidth && stroke !== 'transparent') {\n        ctx.stroke();\n      }\n      ctx.closePath();\n    }\n    else if(renderMode === mode.SVG) {\n      lx.forEach(item => {\n        virtualDom.children.push({\n          type: 'item',\n          tagName: 'line',\n          props: [\n            ['x1', originX],\n            ['y1', item],\n            ['x2', endX],\n            ['y2', item],\n            ['stroke', stroke],\n            ['stroke-width', strokeWidth],\n            ['stroke-dasharray', strokeDasharray]\n          ],\n        });\n      });\n      ly.forEach(item => {\n        virtualDom.children.push({\n          type: 'item',\n          tagName: 'line',\n          props: [\n            ['x1', item],\n            ['y1', originY],\n            ['x2', item],\n            ['y2', endY],\n            ['stroke', stroke],\n            ['stroke-width', strokeWidth],\n            ['stroke-dasharray', strokeDasharray]\n          ],\n        });\n      });\n    }\n  }\n\n  get nx() {\n    return this.__nx;\n  }\n  get ny() {\n    return this.__ny;\n  }\n  get dash() {\n    return this.__dash;\n  }\n}\n\nexport default Grid;\n","import Dom from './node/Dom';\nimport Root from './node/Root';\nimport mode from './mode';\nimport Geom from './geom/Geom';\nimport Line from './geom/Line';\nimport Polyline from './geom/Polyline';\nimport Polygon from './geom/Polygon';\nimport Sector from './geom/Sector';\nimport Rect from './geom/Rect';\nimport Circle from './geom/Circle';\nimport Ellipse from './geom/Ellipse';\nimport Grid from './geom/Grid';\n\nGeom.register('$line', Line);\nGeom.register('$polyline', Polyline);\nGeom.register('$polygon', Polygon);\nGeom.register('$sector', Sector);\nGeom.register('$rect', Rect);\nGeom.register('$circle', Circle);\nGeom.register('$ellipse', Ellipse);\nGeom.register('$grid', Grid);\n\nlet karas = {\n  render(root, dom) {\n    if(!(root instanceof Root)) {\n      throw new Error('render root muse be canvas or svg');\n    }\n    if(dom) {\n      root.appendTo(dom);\n    }\n    return root;\n  },\n  createVd(tagName, props, children) {\n    if(['canvas', 'svg'].indexOf(tagName) > -1) {\n      return new Root(tagName, props, children);\n    }\n    if(Dom.isValid(tagName)) {\n      return new Dom(tagName, props, children);\n    }\n    throw new Error('can not use marker: ' + tagName);\n  },\n  createGm(tagName, props) {\n    let klass = Geom.getImplement(tagName);\n    return new klass(tagName, props);\n  },\n  createCp(cp, props) {\n    return new cp(props);\n  },\n  Geom,\n  mode,\n};\n\nif(typeof window != 'undefined') {\n  window.karas = karas;\n}\n\nexport default karas;\n"],"names":["div","Node","__x","__y","__ox","__oy","__width","__height","__prev","__next","__ctx","__defs","__parent","__style","__baseLine","__virtualDom","diff","this","x","ox","y","oy","parent","root","CANVAS","SVG","measure","s","style","document","createElement","position","left","top","visibility","body","appendChild","fontSize","innerText","css","window","getComputedStyle","parseFloat","width","AUTO","PX","PERCENT","POSITION","toString","isType","type","obj","call","isNumber","stringify","isNil","v","joinVd","vd","props","forEach","item","tagName","content","children","bb","joinTransform","transform","joinDef","def","uuid","stop","util","isObject","isString","isFunction","isBoolean","isDate","joinSourceArray","arr","res","i","len","length","Array","isArray","encodeHtml","prop","replace","joinVirtualDom","nd","r2d","n","Math","PI","rgb2int","color","charAt","slice","push","parseInt","c","match","arr2hash","hash","list","Object","keys","j","k","hash2arr","transformPoint","matrix","a","b","d","vectorProduct","x1","y1","x2","y2","calMatrix","hasRotate","tx","ty","rd","sdx","sdy","sx","sy","cos","sin","tan","pointInQuadrilateral","x3","y3","x4","y4","normalize","w","h","unit","value","alphaBlend","im1","im2","d1","data","d2","r1","g1","b1","a1","r2","g2","b2","a2","getFitDashed","total","bs","be","smin","smax","dmin","dmax","ps","pd","outer","per","num","floor","getDashed","m1","m2","m3","m4","bw","max","renderBorder","renderMode","points","ctx","xom","mode","point","beginPath","fillStyle","moveTo","lineTo","fill","closePath","addBorder","getColorStop","trim","split","p","test","start","end","prev","splice","allBefore","allAfter","first","last","c1","c2","l1","abs","l2","r","g","getCsLimit","next","p1","p2","getCsStartLimit","getCsEndLimit","Xom","__props","__tagName","_this","__listener","toLowerCase","__mtw","__mrw","__mbw","__mlw","__ptw","__prw","__pbw","__plw","display","marginTop","marginRight","marginBottom","marginLeft","paddingTop","paddingRight","paddingBottom","paddingLeft","__mpWidth","__layoutBlock","__layoutFlex","__layoutInline","mp","__renderMode","height","mlw","mrw","mtw","mbw","plw","ptw","prw","pbw","setTransform","right","bottom","bgg","backgroundGradient","bgc","backgroundColor","borderTopWidth","btc","borderTopColor","bts","borderTopStyle","borderRightWidth","brc","borderRightColor","brs","borderRightStyle","borderBottomWidth","bbc","borderBottomColor","bbs","borderBottomStyle","borderLeftWidth","blc","borderLeftColor","bls","borderLeftStyle","transformOrigin","rx","ry","btw","brw","bbw","blw","iw","ih","__offsetX","__offsetY","tfo","__tox","__toy","tf","addTransform","join","deg","exec","unshift","half","cx","cy","xx0","yy0","xx1","yy1","lg","createLinearGradient","addColorStop","rect","defs","add","addBackground","xl","yl","size","at","indexOf","by","min","sqrt","pow","rg","createRadialGradient","deg1","atan","deg2","isLast","xx4","yy2","yy4","xx2","e","force","event","covers","listener","outerWidth","outerHeight","cb","childWillResponse","hasOwnProperty","child","isGeom","__emitEvent","willResponseEvent","target","virtualDom","lhr","car","blr","mdr","lgr","RESET","borderSizing","fontFamily","fontStyle","fontWeight","lineHeight","borderTopLeftRadius","borderTopRightRadius","borderBottomLeftRadius","borderBottomRightRadius","verticalAlign","flexGrow","flexShrink","flexBasis","flexDirection","justifyContent","alignItems","textAlign","stroke","strokeWidth","strokeDasharray","reset","parserOneBorder","direction","key","calUnit","temp","background","gradient","flex","border","borderTop","borderRight","borderBottom","borderLeft","margin","padding","borderRadius","map","arr1","arr2","font","setFontStyle","getBaseLine","normal","LineBox","__content","fillText","CHAR_WIDTH_CACHE","Text","__lineBoxes","__charWidthList","__charWidth","__textWidth","charWidthList","cache","sum","char","mw","measureText","charWidth","isVirtual","maxX","lineBoxes","begin","count","lineBox","_this2","render","textWidth","baseLine","LineGroup","__list","__calBaseLine","IMPLEMENT","Geom","isDirectionRow","main","fixedHeight","fixedWidth","name","Error","implement","TAG_NAME","INLINE","Dom","__children","__flowChildren","__absChildren","__lineGroups","__flowY","__traverseChildren","_this3","__traverse","text","parentStyle","__initStyle","__measure","flowChildren","__tryLayInline","isRecursion","__calAutoBasis","min2","max2","__layout","__calAbs","Infinity","lineGroups","lineGroup","horizonAlign","ow","growList","shrinkList","basisList","minList","growSum","shrinkSum","basisSum","maxSum","maxCross","isOverflow","shrink","grow","overflow","free","center","between","around","_this4","absChildren","container","flowY","pw","ph","__layoutAbs","w2","h2","width2","height2","widthPx","heightPx","elem","ovd","nvd","cns","childNodes","od","ol","nl","diffDef","diffDefs","diffBb","diffD2D","insertAdjacentHTML","parentNode","removeChild","setAttribute","o","removeAt","insertAt","diffChild","replaceWith","firstChild","lastChild","diffD2G","diffItem","diffT2T","diffG2D","equalArr","getAttribute","diffG2G","obb","nbb","isText","op","removeAttribute","textContent","index","html","Defs","id","Root","__node","undefined","isNaN","touches","node","getBoundingClientRect","clientX","clientY","addEventListener","__cb","dom","querySelector","getDom","__initProps","nodeName","toUpperCase","innerHTML","__genHtml","__uuid","getInstance","clear","getPropertyValue","getContext","clearRect","__karasInit","domDiff","__ovd","__od","__initEvent","__imageData","Line","__start","__end","__control","control","cx1","cy1","cx2","cy2","originX","originY","curve","strokeStyle","lineWidth","setLineDash","bezierCurveTo","quadraticCurveTo","Polyline","__points","origin","__origin","pts","__pts","Polygon","OFFSET","getCoordByDegree","Sector","__r","arc","large","Rect","Circle","Ellipse","__rx","__ry","ellipse","Grid","__nx","nx","__ny","ny","endX","endY","lx","ly","__dash","register","karas","appendTo","createVd","isValid","createGm","getImplement","createCp","cp"],"mappings":"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"}