{"version":3,"file":"index.min.js","sources":["src/mode.js","src/node/Node.js","src/style/unit.js","src/node/Xom.js","src/style/font.js","src/style/reset.js","src/util.js","src/style/css.js","src/node/LineBox.js","src/node/Text.js","src/node/LineGroup.js","src/geom/Geom.js","src/node/Dom.js","src/domDiff.js","src/node/CS.js","src/geom/Line.js","src/geom/Polyline.js","src/geom/Polygon.js","src/geom/Sector.js","src/geom/Rect.js","src/geom/Circle.js","src/geom/Ellipse.js","src/geom/Grid.js","src/index.js"],"sourcesContent":["const CANVAS = 0;\nconst SVG = 1;\n\nlet div;\n\nexport default {\n  CANVAS,\n  SVG,\n  measure(s, style) {\n    if(!div) {\n      div = document.createElement('div');\n      div.style.position = 'absolute';\n      div.style.left = '99999px';\n      div.style.top = '-99999px';\n      div.style.visibility = 'hidden';\n      document.body.appendChild(div);\n    }\n    div.style.fontSize = style.fontSize + 'px';\n    div.innerText = s;\n    let css = window.getComputedStyle(div, null);\n    return parseFloat(css.width);\n  }\n};\n","class Node {\n  constructor() {\n    this.__x = 0;\n    this.__y = 0;\n    this.__width = 0;\n    this.__height = 0;\n    this.__prev = null;\n    this.__next = null;\n    this.__ctx = null; // canvas的context\n    this.__parent = null;\n    this.__style = {}; // style被解析后的k-v形式\n    this.__baseLine = 0;\n    this.__virtualDom = {};\n  }\n\n  __offsetX(diff) {\n    this.__x += diff;\n  }\n\n  __offsetY(diff) {\n    this.__y += diff;\n  }\n\n  get x() {\n    return this.__x;\n  }\n  get y() {\n    return this.__y;\n  }\n  get width() {\n    return this.__width;\n  }\n  get height() {\n    return this.__height;\n  }\n  get outerWidth() {\n    return this.__width;\n  }\n  get outerHeight() {\n    return this.__height;\n  }\n  get prev() {\n    return this.__prev;\n  }\n  get next() {\n    return this.__next;\n  }\n  get parent() {\n    return this.__parent;\n  }\n  get style() {\n    return this.__style;\n  }\n  get ctx() {\n    return this.__ctx;\n  }\n  get baseLine() {\n    return this.__baseLine;\n  }\n  get virtualDom() {\n    return this.__virtualDom;\n  }\n}\n\nexport default Node;\n","export default {\n  AUTO: 0,\n  PX: 1,\n  PERCENT: 2,\n};\n","import Node from './Node';\nimport mode from '../mode';\nimport unit from '../style/unit';\n\nfunction arr2hash(arr) {\n  let hash = {};\n  for(let i = 0, len = arr.length; i < len; i++) {\n    let item = arr[i];\n    if(Array.isArray(item)) {\n      hash[item[0]] = item[1];\n    }\n    else {\n      for(let list = Object.keys(item), j = list.length - 1; j >= 0; j--) {\n        let k = list[j];\n        hash[k] = item[k];\n      }\n    }\n  }\n  return hash;\n}\n\nfunction hash2arr(hash) {\n  let arr = [];\n  for(let list = Object.keys(hash), i = 0, len = list.length; i < len; i++) {\n    let k = list[i];\n    arr.push([k, hash[k]]);\n  }\n  return arr;\n}\n\nfunction spread(arr) {\n  for(let i = 0, len = arr.length; i < len; i++) {\n    let item = arr[i];\n    if(!Array.isArray(item)) {\n      let temp = [];\n      for(let list = Object.keys(item), j = 0, len = list.length; j < len; j++) {\n        let k = list[j];\n        temp.push([k, item[k]]);\n      }\n      arr.splice(i, 1, ...temp);\n    }\n  }\n  return arr;\n}\n\nclass Xom extends Node {\n  constructor(tagName, props) {\n    super();\n    props = props || [];\n    // 构建工具中都是arr，手写可能出现hash情况\n    if(Array.isArray(props)) {\n      this.props = arr2hash(props);\n      this.__props = spread(props);\n    }\n    else {\n      this.props = props;\n      this.__props = hash2arr(props);\n    }\n    this.__tagName = tagName;\n    this.__style = this.props.style || {}; // style被解析后的k-v形式\n    this.__listener = {};\n    this.__props.forEach(item => {\n      let k = item[0];\n      if(/^on[a-zA-Z]/.test(k)) {\n        this.__listener[k.slice(2).toLowerCase()] = item[1];\n      }\n    });\n  }\n\n  __preLay(data) {\n    let { style, style: { display } } = this;\n    if(display === 'none') {\n      return;\n    }\n    if(display === 'block') {\n      this.__preLayBlock(data);\n    }\n    else if(display === 'flex') {\n      this.__preLayFlex(data);\n    }\n    else if(display === 'inline') {\n      this.__preLayInline(data);\n    }\n    // relative偏移\n    let { width, height } = this.parent || this;\n    let {\n      position,\n      top,\n      right,\n      bottom,\n      left,\n    } = style;\n    if(position === 'relative') {\n      if(left.unit !== unit.AUTO) {\n        let diff = left.unit === unit.PX ? left.value : left.value * width * 0.01;\n        this.__offsetX(diff);\n      }\n      else if(right.unit !== unit.AUTO) {\n        let diff = right.unit === unit.PX ? right.value : right.value * width * 0.01;\n        this.__offsetX(-diff);\n      }\n      if(top.unit !== unit.AUTO) {\n        let diff = top.unit === unit.PX ? top.value : top.value * height * 0.01;\n        this.__offsetY(diff);\n      }\n      else if(bottom.unit !== unit.AUTO) {\n        let diff = bottom.unit === unit.PX ? bottom.value : bottom.value * height * 0.01;\n        this.__offsetY(-diff);\n      }\n    }\n  }\n\n  render(renderMode) {\n    this.__virtualDom = {\n      bb: [],\n    };\n    let { ctx, style, x, y, width, height, virtualDom } = this;\n    let {\n      display,\n      backgroundColor,\n      borderTopWidth,\n      borderTopColor,\n      borderRightWidth,\n      borderRightColor,\n      borderBottomWidth,\n      borderBottomColor,\n      borderLeftWidth,\n      borderLeftColor,\n      marginTop,\n      marginLeft,\n      paddingTop,\n      paddingRight,\n      paddingBottom,\n      paddingLeft,\n    } = style;\n    if(display === 'none') {\n      return;\n    }\n    if(marginLeft) {\n      x += marginLeft.value;\n    }\n    if(marginTop) {\n      y += marginTop.value;\n    }\n    if(backgroundColor) {\n      let x1 = x;\n      if(borderLeftWidth) {\n        x1 += borderLeftWidth.value;\n      }\n      let y1 = y;\n      if(borderTopWidth) {\n        y1 += borderTopWidth.value;\n      }\n      let w = width + paddingLeft.value + paddingRight.value;\n      let h = height + paddingTop.value + paddingBottom.value;\n      if(renderMode === mode.CANVAS) {\n        ctx.beginPath();\n        ctx.fillStyle = backgroundColor;\n        ctx.rect(x1, y1, w, h);\n        ctx.fill();\n        ctx.closePath();\n      }\n      else if(renderMode === mode.SVG) {\n        virtualDom.bb.push({\n          type: 'item',\n          tagName: 'rect',\n          props: [\n            ['x', x1],\n            ['y', y1],\n            ['width', w],\n            ['height', h],\n            ['fill', backgroundColor]\n          ],\n        });\n        // mode.appendHtml(`<rect x=\"${x1}\" y=\"${y1}\" width=\"${w}\" height=\"${h}\" fill=\"${backgroundColor}\"/>`);\n      }\n    }\n    if(borderTopWidth.value) {\n      let x1 = x + borderLeftWidth.value;\n      let y1 = y + borderTopWidth.value * 0.5;\n      let x2 = x1 + width;\n      if(paddingLeft) {\n        x2 += paddingLeft.value;\n      }\n      if(paddingRight) {\n        x2 += paddingRight.value;\n      }\n      if(renderMode === mode.CANVAS) {\n        ctx.beginPath();\n        ctx.lineWidth = borderTopWidth.value;\n        ctx.strokeStyle = borderTopColor;\n        ctx.moveTo(x1, y1);\n        ctx.lineTo(x2, y1);\n        ctx.stroke();\n        ctx.closePath();\n      }\n      else if(renderMode === mode.SVG) {\n        virtualDom.bb.push({\n          type: 'item',\n          tagName: 'line',\n          props: [\n            ['x1', x1],\n            ['y1', y1],\n            ['x2', x2],\n            ['y2', y1],\n            ['stroke-width', borderTopWidth.value],\n            ['stroke', borderTopColor]\n          ],\n        });\n        // mode.appendHtml(`<line x1=\"${x1}\" y1=\"${y1}\" x2=\"${x2}\" y2=\"${y1}\" stroke-width=\"${borderTopWidth.value}\" stroke=\"${borderTopColor}\"/>`);\n      }\n    }\n    if(borderRightWidth.value) {\n      let x1 = x + width + borderLeftWidth.value + borderRightWidth.value * 0.5;\n      let y1 = y;\n      let y2 = y1 + height + borderTopWidth.value + borderBottomWidth.value;\n      if(paddingLeft) {\n        x1 += paddingLeft.value;\n      }\n      if(paddingRight) {\n        x1 += paddingRight.value;\n      }\n      if(paddingTop) {\n        y2 += paddingTop.value;\n      }\n      if(paddingBottom) {\n        y2 += paddingBottom.value;\n      }\n      if(renderMode === mode.CANVAS) {\n        ctx.beginPath();\n        ctx.lineWidth = borderRightWidth.value;\n        ctx.strokeStyle = borderRightColor;\n        ctx.moveTo(x1, y1);\n        ctx.lineTo(x1, y2);\n        ctx.stroke();\n        ctx.closePath();\n      }\n      else if(renderMode === mode.SVG) {\n        virtualDom.bb.push({\n          type: 'item',\n          tagName: 'line',\n          props: [\n            ['x1', x1],\n            ['y1', y1],\n            ['x2', x1],\n            ['y2', y2],\n            ['stroke-width', borderRightWidth.value],\n            ['stroke', borderRightColor]\n          ],\n        });\n        // mode.appendHtml(`<line x1=\"${x1}\" y1=\"${y1}\" x2=\"${x1}\" y2=\"${y2}\" stroke-width=\"${borderRightWidth.value}\" stroke=\"${borderRightColor}\"/>`);\n      }\n    }\n    if(borderBottomWidth.value) {\n      let x1 = x + borderLeftWidth.value;\n      let y1 = y + height + borderTopWidth.value + borderBottomWidth.value * 0.5;\n      let x2 = x1 + width;\n      if(paddingLeft) {\n        x2 += paddingLeft.value;\n      }\n      if(paddingRight) {\n        x2 += paddingRight.value;\n      }\n      if(paddingTop) {\n        y1 += paddingTop.value;\n      }\n      if(paddingBottom) {\n        y1 += paddingBottom.value;\n      }\n      if(renderMode === mode.CANVAS) {\n        ctx.beginPath();\n        ctx.lineWidth = borderBottomWidth.value;\n        ctx.strokeStyle = borderBottomColor;\n        ctx.moveTo(x1, y1);\n        ctx.lineTo(x2, y1);\n        ctx.stroke();\n        ctx.closePath();\n      }\n      else if(renderMode === mode.SVG) {\n        virtualDom.bb.push({\n          type: 'item',\n          tagName: 'line',\n          props: [\n            ['x1', x1],\n            ['y1', y1],\n            ['x2', x2],\n            ['y2', y1],\n            ['stroke-width', borderBottomWidth.value],\n            ['stroke', borderBottomColor]\n          ],\n        });\n        // mode.appendHtml(`<line x1=\"${x1}\" y1=\"${y1}\" x2=\"${x2}\" y2=\"${y1}\" stroke-width=\"${borderBottomWidth.value}\" stroke=\"${borderBottomColor}\"/>`);\n      }\n    }\n    if(borderLeftWidth.value) {\n      let x1 = x + borderLeftWidth.value * 0.5;\n      let y1 = y;\n      let y2 = y1 + height + borderTopWidth.value + borderBottomWidth.value;\n      if(paddingTop) {\n        y2 += paddingTop.value;\n      }\n      if(paddingBottom) {\n        y2 += paddingBottom.value;\n      }\n      if(renderMode === mode.CANVAS) {\n        ctx.beginPath();\n        ctx.lineWidth = borderLeftWidth.value;\n        ctx.strokeStyle = borderLeftColor;\n        ctx.moveTo(x1, y1);\n        ctx.lineTo(x1, y2);\n        ctx.stroke();\n        ctx.closePath();\n      }\n      else if(renderMode === mode.SVG) {\n        virtualDom.bb.push({\n          type: 'item',\n          tagName: 'line',\n          props: [\n            ['x1', x1],\n            ['y1', y1],\n            ['x2', x1],\n            ['y2', y2],\n            ['stroke-width', borderLeftWidth.value],\n            ['stroke', borderLeftColor]\n          ],\n        });\n        // mode.appendHtml(`<line x1=\"${x1}\" y1=\"${y1}\" x2=\"${x1}\" y2=\"${y2}\" stroke-width=\"${borderLeftWidth.value}\" stroke=\"${borderLeftColor}\"/>`);\n      }\n    }\n  }\n\n  get tagName() {\n    return this.__tagName;\n  }\n  get outerWidth() {\n    let { style: {\n      borderLeftWidth,\n      borderRightWidth,\n      marginLeft,\n      marginRight,\n      paddingLeft,\n      paddingRight,\n    } } = this;\n    return this.width\n      + borderLeftWidth.value\n      + borderRightWidth.value\n      + marginLeft.value\n      + marginRight.value\n      + paddingLeft.value\n      + paddingRight.value;\n  }\n  get outerHeight() {\n    let { style: {\n      borderTopWidth,\n      borderBottomWidth,\n      marginTop,\n      marginBottom,\n      paddingTop,\n      paddingBottom,\n    } } = this;\n    return this.height\n      + borderTopWidth.value\n      + borderBottomWidth.value\n      + marginTop.value\n      + marginBottom.value\n      + paddingTop.value\n      + paddingBottom.value;\n  }\n  get listener() {\n    return this.__listener;\n  }\n}\n\nexport default Xom;\n","'use strict';\n\nexport default {\n  arial: {\n    lhr: 1.14990234375, // 默认line-height ratio，(67+1854+434)/2048\n    car: 1.1171875, // content-area ratio，(1854+434)/2048\n    blr: 0.9052734375, // base-line ratio，1854/2048\n    mdr: 0.64599609375, // middle ratio，(1854-1062/2)/2048\n    lgr: 0.03271484375, // line-gap ratio，67/2048\n  },\n};\n","const RESET = {\n  position: 'static',\n  display: 'block',\n  borderSizing: 'content-box',\n  top: 'auto',\n  right: 'auto',\n  bottom: 'auto',\n  left: 'auto',\n  marginTop: 0,\n  marginRight: 0,\n  marginBottom: 0,\n  marginLeft: 0,\n  paddingTop: 0,\n  paddingRight: 0,\n  paddingBottom: 0,\n  paddingLeft: 0,\n  fontSize: 16,\n  fontFamily: 'arial',\n  color: '#000',\n  fontStyle: 'normal',\n  fontWeight: 400,\n  lineHeight: 'normal',\n  borderTopWidth: 0,\n  borderRightWidth: 0,\n  borderBottomWidth: 0,\n  borderLeftWidth: 0,\n  borderTopStyle: 'solid',\n  borderRightStyle: 'solid',\n  borderBottomStyle: 'solid',\n  borderLeftStyle: 'solid',\n  verticalAlign: 'baseline',\n  width: 'auto',\n  height: 'auto',\n  flexGrow: 0,\n  flexShrink: 1,\n  flexBasis: 'auto',\n  flexDirection: 'row',\n  justifyContent: 'flex-start',\n  alignItems: 'stretch',\n  textAlign: 'left',\n  visibility: 'visible',\n  fill: '#000',\n  stroke: '#000',\n  strokeWidth: 0,\n  strokeDasharray: [],\n};\n\nlet reset = [];\n\nObject.keys(RESET).forEach(k => {\n  let v = RESET[k];\n  reset.push({\n    k,\n    v,\n  });\n});\n\nexport default reset;\n","let toString = {}.toString;\nfunction isType(type) {\n  return function(obj) {\n    return toString.call(obj) === '[object ' + type + ']';\n  }\n}\n\nlet isNumber = isType('Number');\n\nfunction joinSourceArray(arr) {\n  var res = '';\n  for(var i = 0, len = arr.length; i < len; i++) {\n    var item = arr[i];\n    if(Array.isArray(item)) {\n      res += joinSourceArray(item);\n    }\n    else {\n      res += stringify(item);\n    }\n  }\n  return res;\n}\n\nfunction stringify(s) {\n  if(isNil(s)) {\n    return '';\n  }\n  return s.toString();\n}\n\nfunction encodeHtml(s, prop) {\n  if(prop) {\n    return s.replace(/\"/g, '&quot;');\n  }\n  return s.replace(/&/g, '&amp;').replace(/</g, '&lt;');\n}\n\nfunction isNil(v) {\n  return v === undefined || v === null;\n}\n\nfunction joinVirtualDom(vd) {\n  if(vd.type === 'item') {\n    let s = '';\n    vd.props.forEach(item => {\n      s += ` ${item[0]}=\"${item[1]}\"`;\n    });\n    if(vd.tagName === 'text') {\n      return `<text${s}>${vd.content}</text>`;\n    }\n    return `<${vd.tagName}${s}/>`;\n  }\n  else if(vd.type === 'text') {\n    let s = ``;\n    vd.children.forEach(item => {\n      s += joinVirtualDom(item);\n    });\n    return `<g>${s}</g>`;\n  }\n  else if(vd.type === 'dom') {\n    let s = '<g>';\n    vd.bb.forEach(item => {\n      s += joinVirtualDom(item);\n    });\n    s += '</g><g>';\n    vd.children.forEach(item => {\n      s += joinVirtualDom(item);\n    });\n    s += '</g>';\n    return `<g>${s}</g>`;\n  }\n  else if(vd.type === 'geom') {\n    let s = '<g>';\n    vd.bb.forEach(item => {\n      s += joinVirtualDom(item);\n    });\n    s += '</g><g>';\n    vd.content.forEach(item => {\n      s += joinVirtualDom(item);\n    });\n    s += '</g>';\n    return `<g>${s}</g>`;\n  }\n}\n\nlet util = {\n  isObject: isType('Object'),\n  isString: isType('String'),\n  isFunction: isType('Function'),\n  isNumber,\n  isBoolean: isType('Boolean'),\n  isDate: isType('Date'),\n  stringify,\n  joinSourceArray(arr) {\n    return joinSourceArray(arr);\n  },\n  encodeHtml,\n  isNil,\n  joinVirtualDom,\n};\n\nexport default util;\n","import unit from './unit';\nimport font from './font';\nimport reset from './reset';\nimport util from '../util';\n\nfunction parserOneBorder(style, direction) {\n  let key = `border${direction}`;\n  if(!style[key]) {\n    return;\n  }\n  let w = /\\b\\d+px\\b/i.exec(style[key]);\n  if(w) {\n    style[key + 'Width'] = w[0];\n  }\n  let s = /\\bsolid\\b/i.exec(style[key]);\n  if(s) {\n    style[key + 'Style'] = s[0];\n  }\n  let c = /#[0-9a-f]{3,6}/i.exec(style[key]);\n  if(c && [4, 7].indexOf(c[0].length) > -1) {\n    style[key + 'Color'] = c[0];\n  }\n}\n\nfunction normalize(style) {\n  // 默认reset\n  reset.forEach(item => {\n    if(!style.hasOwnProperty(item.k)) {\n      style[item.k] = item.v;\n    }\n  });\n  // 处理缩写\n  // TODO: 重复声明时优先级\n  if(style.background) {\n    let bgc = /#[0-9a-f]{3,6}/i.exec(style.background);\n    if(bgc && [4, 7].indexOf(bgc[0].length) > -1) {\n      style.backgroundColor = bgc[0];\n    }\n  }\n  if(style.flex) {\n    if(style.flex === 'none') {\n      style.flexGrow = 0;\n      style.flexShrink = 0;\n      style.flexBasis = 'auto';\n    }\n    else if(style.flex === 'auto') {\n      style.flexGrow = 1;\n      style.flexShrink = 1;\n      style.flexBasis = 'auto';\n    }\n    else if(/^[\\d.]+$/.test(style.flex)) {\n      style.flexGrow = parseFloat(style.flex);\n      style.flexShrink = 1;\n      style.flexBasis = 0;\n    }\n    else if(/^[\\d.]+px$/.test(style.flex)) {}\n    else if(/^[\\d.]+%$/.test(style.flex)) {}\n    else {\n      style.flexGrow = 0;\n      style.flexShrink = 1;\n      style.flexBasis = 'auto';\n    }\n  }\n  if(style.border) {\n    style.borderTop = style.borderRight = style.borderBottom = style.borderLeft = style.border;\n  }\n  if(style.margin) {\n    style.marginTop = style.marginRight = style.marginBottom = style.marginLeft = style.margin;\n  }\n  if(style.padding) {\n    style.paddingTop = style.paddingRight = style.paddingBottom = style.paddingLeft = style.padding;\n  }\n  parserOneBorder(style, 'Top');\n  parserOneBorder(style, 'Right');\n  parserOneBorder(style, 'Bottom');\n  parserOneBorder(style, 'Left');\n  // 转化不同单位值为对象标准化\n  [\n    'marginTop',\n    'marginRight',\n    'marginBottom',\n    'marginLeft',\n    'paddingTop',\n    'paddingRight',\n    'paddingBottom',\n    'paddingLeft',\n    'borderTopWidth',\n    'borderRightWidth',\n    'borderBottomWidth',\n    'borderLeftWidth',\n    'top',\n    'right',\n    'bottom',\n    'left',\n    'width',\n    'height',\n    'flexBasis',\n  ].forEach(k => {\n    let v = style[k];\n    // 编译工具前置解析优化跳出\n    if(!util.isNil(v) && v.unit) {\n      return;\n    }\n    if(v === 'auto') {\n      style[k] = {\n        unit: unit.AUTO,\n      };\n    }\n    else if(/%$/.test(v)) {\n      v = parseFloat(v) || 0;\n      style[k] = {\n        value: v,\n        unit: unit.PERCENT,\n      };\n    }\n    else {\n      v = parseFloat(v) || 0;\n      style[k] = {\n        value: v,\n        unit: unit.PX,\n      };\n    }\n  });\n  // 计算lineHeight为px值，最小范围\n  let lineHeight = style.lineHeight;\n  if(lineHeight === 'normal') {\n    lineHeight = {\n      value: style.fontSize * font.arial.lhr,\n      unit: unit.PX,\n    };\n  }\n  else if(/px$/.test(lineHeight)) {\n    lineHeight = parseFloat(lineHeight);\n    lineHeight = {\n      value: Math.max(style.fontSize, lineHeight),\n      unit: unit.PX,\n    };\n  }\n  // 纯数字比例\n  else {\n    lineHeight = parseFloat(lineHeight) || 'normal';\n    // 非法数字\n    if(lineHeight === 'normal') {\n      lineHeight = {\n        value: style.fontSize * font.arial.lhr,\n        unit: unit.PX,\n      };\n    }\n    else {\n      lineHeight = {\n        value: lineHeight * style.fontSize,\n        unit: unit.PX,\n      };\n    }\n  }\n  style.lineHeight = lineHeight;\n}\n\nfunction setFontStyle(style) {\n  let { fontStyle, fontWeight, fontSize, fontFamily } = style;\n  return `${fontStyle} ${fontWeight} ${fontSize}px/${fontSize}px ${fontFamily}`;\n}\n\nfunction getBaseLine(style) {\n  let normal = style.fontSize * font.arial.lhr;\n  return (style.lineHeight.value - normal) * 0.5 + style.fontSize * font.arial.blr;\n}\n\nexport default {\n  normalize,\n  setFontStyle,\n  getBaseLine,\n};\n","import css from '../style/css';\nimport mode from '../mode';\n\nclass LineBox {\n  constructor(x, y, w, content, style) {\n    this.__x = x;\n    this.__y = y;\n    this.__width = w;\n    this.__content = content;\n    this.__style = style;\n    this.__virtualDom = {};\n  }\n\n  render(renderMode, ctx) {\n    let { style, content, x, y } = this;\n    y += css.getBaseLine(style);\n    if(renderMode === mode.CANVAS) {\n      ctx.fillText(content, x, y);\n    }\n    else if(renderMode === mode.SVG) {\n      this.__virtualDom = {\n        type: 'item',\n        tagName: 'text',\n        props: [\n          ['x', x],\n          ['y', y],\n          ['fill', style.color],\n          ['font-size', `${style.fontSize}px`]\n        ],\n        content,\n      };\n      // mode.appendHtml(`<text x=\"${x}\" y=\"${y + css.getBaseLine(style)}\" fill=\"${style.color}\" font-size=\"${style.fontSize}px\">${content}</text>`);\n    }\n  }\n\n  __offsetX(diff) {\n    this.__x += diff;\n  }\n\n  __offsetY(diff) {\n    this.__y += diff;\n  }\n\n  get x() {\n    return this.__x;\n  }\n  get y() {\n    return this.__y;\n  }\n  get width() {\n    return this.__width;\n  }\n  get content() {\n    return this.__content;\n  }\n  get style() {\n    return this.__style;\n  }\n  get baseLine() {\n    return css.getBaseLine(this.style);\n  }\n  get virtualDom() {\n    return this.__virtualDom;\n  }\n}\n\nexport default LineBox;\n","import Node from './Node';\nimport LineBox from './LineBox';\nimport css from '../style/css';\nimport mode from '../mode';\n\nconst CHAR_WIDTH_CACHE = {};\n\nclass Text extends Node {\n  constructor(content) {\n    super();\n    this.__content = content.toString();\n    this.__lineBoxes = [];\n    this.__charWidthList = [];\n    this.__charWidth = 0;\n    this.__textWidth = 0;\n  }\n\n  // 预先计算每个字的宽度\n  __measure() {\n    this.__charWidthList = [];\n    let { ctx, content, style, charWidthList, renderMode } = this;\n    if(renderMode === mode.CANVAS) {\n      ctx.font = css.setFontStyle(style);\n    }\n    let cache = CHAR_WIDTH_CACHE[style.fontSize] = CHAR_WIDTH_CACHE[style.fontSize] || {};\n    let length = content.length;\n    let sum = 0;\n    for(let i = 0; i < length; i++) {\n      let char = content.charAt(i);\n      let mw;\n      if(cache.hasOwnProperty(char)) {\n        mw = cache[char];\n      }\n      else if(renderMode === mode.CANVAS) {\n        mw = cache[char] = ctx.measureText(char).width;\n      }\n      else if(renderMode === mode.SVG) {\n        mw = cache[char] = mode.measure(char, style);\n      }\n      charWidthList.push(mw);\n      sum += mw;\n      this.__charWidth = Math.max(this.charWidth, mw);\n    }\n    this.__textWidth = sum;\n  }\n\n  __preLay(data, isVirtual) {\n    let { x, y, w, h } = data;\n    this.__x = x;\n    this.__y = y;\n    let maxX = x;\n    let { ctx, content, style, lineBoxes, charWidthList, renderMode } = this;\n    // 顺序尝试分割字符串为lineBox，形成多行\n    let begin = 0;\n    let i = 0;\n    let count = 0;\n    let length = content.length;\n    while(i < length) {\n      count += charWidthList[i];\n      if (count === w) {\n        let lineBox = new LineBox(x, y, count, content.slice(begin, i + 1), style);\n        lineBoxes.push(lineBox);\n        maxX = Math.max(maxX, x + count);\n        y += this.style.lineHeight.value;\n        begin = i + 1;\n        i = begin + 1;\n        count = 0;\n      }\n      else if (count > w) {\n        // 宽度不足时无法跳出循环，至少也要塞个字符形成一行\n        if(i === begin) {\n          i = begin + 1;\n        }\n        let lineBox = new LineBox(x, y, count - charWidthList[i], content.slice(begin, i), style);\n        lineBoxes.push(lineBox);\n        maxX = Math.max(maxX, x + count - charWidthList[i]);\n        y += this.style.lineHeight.value;\n        begin = i;\n        i = i + 1;\n        count = 0;\n      }\n      else {\n        i++;\n      }\n    }\n    if(begin < length && begin < i) {\n      count = 0;\n      for(i = begin ;i < length; i++) {\n        count += charWidthList[i];\n      }\n      let lineBox = new LineBox(x, y, count, content.slice(begin, length), style);\n      lineBoxes.push(lineBox);\n      maxX = Math.max(maxX, x + count);\n      y += style.lineHeight.value;\n    }\n    this.__width = maxX - x;\n    this.__height = y - data.y;\n    if(isVirtual) {\n      this.__lineBoxes = [];\n    }\n    else {\n      let { textAlign } = style;\n      if(['center', 'right'].indexOf(textAlign) > -1) {\n        lineBoxes.forEach(lineBox => {\n          let diff = this.__width - lineBox.width;\n          if(diff > 0) {\n            lineBox.__offsetX(textAlign === 'center' ? diff * 0.5 : diff);\n          }\n        });\n      }\n    }\n  }\n\n  render(renderMode) {\n    const { ctx, style } = this;\n    if(renderMode === mode.CANVAS) {\n      ctx.font = css.setFontStyle(style);\n      ctx.fillStyle = style.color;\n    }\n    this.lineBoxes.forEach(item => {\n      item.render(renderMode, ctx);\n    });\n    if(renderMode === mode.SVG) {\n      this.__virtualDom = {\n        type: 'text',\n        children: this.lineBoxes.map(lineBox => lineBox.virtualDom),\n      };\n    }\n  }\n\n  __tryLayInline(w) {\n    return w - this.textWidth;\n  }\n\n  __offsetX(diff) {\n    super.__offsetX(diff);\n    this.lineBoxes.forEach(item => {\n      item.__offsetX(diff);\n    });\n  }\n\n  __offsetY(diff) {\n    super.__offsetY(diff);\n    this.lineBoxes.forEach(item => {\n      item.__offsetY(diff);\n    });\n  }\n\n  __calMaxAndMinWidth() {\n    let n = 0;\n    this.charWidthList.forEach(item => {\n      n = Math.max(n, item);\n    });\n    return { max: this.textWidth, min: n };\n  }\n\n  get content() {\n    return this.__content;\n  }\n  set content(v) {\n    this.__content = v;\n  }\n  get lineBoxes() {\n    return this.__lineBoxes;\n  }\n  get charWidthList() {\n    return this.__charWidthList;\n  }\n  get charWidth() {\n    return this.__charWidth;\n  }\n  get textWidth() {\n    return this.__textWidth;\n  }\n  get baseLine() {\n    let last = this.lineBoxes[this.lineBoxes.length - 1];\n    return last.y - this.y + last.baseLine;\n  }\n  get renderMode() {\n    return this.__renderMode;\n  }\n}\n\nexport default Text;\n","class LineGroup {\n  constructor(x, y) {\n    this.__list = [];\n    this.__x = x;\n    this.__y = y;\n    this.__baseLine = 0;\n  }\n\n  add(item) {\n    this.list.push(item);\n  }\n\n  __calBaseLine() {\n    let baseLine = 0;\n    this.list.forEach(item => {\n      baseLine = Math.max(baseLine, item.baseLine);\n    });\n    return baseLine;\n  }\n\n  verticalAlign() {\n    this.__baseLine = this.__calBaseLine();\n    // 仅当有2个和以上时才需要vertical对齐调整\n    if(this.list.length > 1) {\n      this.list.forEach(item => {\n        if(item.baseLine !== this.baseLine) {\n          item.__offsetY(this.baseLine - item.baseLine);\n        }\n      });\n    }\n  }\n\n  horizonAlign(diff) {\n    this.list.forEach(item => {\n      item.__offsetX(diff);\n    });\n  }\n\n  get list() {\n    return this.__list;\n  }\n  get x() {\n    return this.__x;\n  }\n  get y() {\n    return this.__y;\n  }\n  get width() {\n    let width = 0;\n    this.list.forEach(item => {\n      width += item.width;\n    });\n    return width;\n  }\n  get height() {\n    let height = 0;\n    this.list.forEach(item => {\n      height = Math.max(height, item.height);\n    });\n    return height;\n  }\n  get baseLine() {\n    return this.__baseLine;\n  }\n  get size() {\n    return this.__list.length;\n  }\n}\n\nexport default LineGroup;\n","import Xom from '../node/Xom';\nimport css from '../style/css';\nimport unit from '../style/unit';\nimport mode from '../mode';\n\nconst IMPLEMENT = {};\n\nclass Geom extends Xom {\n  constructor(tagName, props) {\n    super(tagName, props);\n  }\n\n  __initStyle() {\n    css.normalize(this.style);\n  }\n\n  __tryLayInline(w, total) {\n    // 无children，直接以style的width为宽度，不定义则为0\n    let { style: { width } } = this;\n    if(width.unit === unit.PX) {\n      return w - width.value;\n    }\n    else if(width.unit === unit.PERCENT) {\n      return w - total * width.value * 0.01;\n    }\n    return w;\n  }\n\n  __calAutoBasis(isDirectionRow, w, h) {\n    let b = 0;\n    let min = 0;\n    let max = 0;\n    let { style } = this;\n    // 计算需考虑style的属性\n    let {\n      width,\n      height,\n      borderTopWidth,\n      borderRightWidth,\n      borderBottomWidth,\n      borderLeftWidth,\n    } = style;\n    let main = isDirectionRow ? width : height;\n    if(main.unit !== unit.AUTO) {\n      b = max += main.value;\n    }\n    // border也得计算在内\n    if(isDirectionRow) {\n      let w = borderRightWidth.value + borderLeftWidth.value;\n      b += w;\n      max += w;\n      min += w;\n    }\n    else {\n      let h = borderTopWidth.value + borderBottomWidth.value;\n      b += h;\n      max += h;\n      min += h;\n    }\n    return { b, min, max };\n  }\n\n  __preLayBlock(data) {\n    let { x, y, w, h } = data;\n    this.__x = x;\n    this.__y = y;\n    this.__width = w;\n    let { style } = this;\n    let {\n      width,\n      height,\n      borderTopWidth,\n      borderRightWidth,\n      borderBottomWidth,\n      borderLeftWidth,\n    } = style;\n    // 除了auto外都是固定高度\n    let fixedHeight;\n    if(width && width.unit !== unit.AUTO) {\n      switch(width.unit) {\n        case unit.PX:\n          w = width.value;\n          break;\n      }\n    }\n    if(height && height.unit !== unit.AUTO) {\n      fixedHeight = true;\n      switch(height.unit) {\n        case unit.PX:\n          h = height.value;\n          break;\n        case unit.PERCENT:\n          h *= height.value * 0.01;\n          break;\n      }\n    }\n    // border影响x和y和尺寸\n    x += borderLeftWidth.value;\n    data.x = x;\n    y += borderTopWidth.value;\n    data.y = y;\n    w -= borderLeftWidth.value + borderRightWidth.value;\n    h -= borderTopWidth.value + borderBottomWidth.value;\n    this.__width = w;\n    this.__height = fixedHeight ? h : 0;\n  }\n\n  __preLayFlex(data) {\n    // 无children所以等同于block\n    this.__preLayBlock(data);\n  }\n\n  __preLayInline(data) {\n    let { x, y, w, h } = data;\n    this.__x = x;\n    this.__y = y;\n    let { style } = this;\n    let {\n      width,\n      height,\n      borderTopWidth,\n      borderRightWidth,\n      borderBottomWidth,\n      borderLeftWidth,\n    } = style;\n    // 除了auto外都是固定高度\n    let fixedWidth;\n    let fixedHeight;\n    if(width && width.unit !== unit.AUTO) {\n      fixedWidth = true;\n      switch(width.unit) {\n        case unit.PX:\n          w = width.value;\n          break;\n      }\n    }\n    if(height && height.unit !== unit.AUTO) {\n      fixedHeight = true;\n      switch(height.unit) {\n        case unit.PX:\n          h = height.value;\n          break;\n      }\n    }\n    // border影响x和y\n    x += borderLeftWidth.value;\n    data.x = x;\n    y += borderTopWidth.value;\n    data.y = y;\n    w -= borderLeftWidth.value + borderRightWidth.value;\n    h -= borderTopWidth.value + borderBottomWidth.value;\n    // 元素的width不能超过父元素w\n    this.__width = fixedWidth ? w : x - data.x;\n    this.__height = fixedHeight ? h : y - data.y;\n  }\n\n  __calAbs() {\n    return 0;\n  }\n\n  __emitEvent(e, force) {\n    let { event: { type }, x: xe, y: ye, covers } = e;\n    let { listener, style, x, y, outerWidth, outerHeight } = this;\n    if(style.display === 'none') {\n      return;\n    }\n    let cb;\n    if(listener.hasOwnProperty(type)) {\n      cb = listener[type];\n    }\n    if(force) {\n      cb && cb(e);\n      return;\n    }\n    if(xe >= x && ye >= y && xe <= x + outerWidth && ye <= y + outerHeight) {\n      for(let i = 0, len = covers.length; i < len; i++) {\n        let { x: x2, y: y2, w, h: h } = covers[i];\n        if(xe >= x2 && ye >= y2 && xe <= x2 + w && ye <= y2 + h) {\n          return;\n        }\n      }\n      if(!e.target) {\n        e.target = this;\n      }\n      covers.push({\n        x,\n        y,\n        w: outerWidth,\n        h: outerHeight,\n      });\n      cb && cb(e);\n    }\n  }\n\n  render(renderMode) {\n    super.render(renderMode);\n    if(renderMode === mode.SVG) {\n      this.__virtualDom = {\n        ...super.virtualDom,\n        type: 'geom',\n        content: [],\n      };\n    }\n  }\n\n  get tagName() {\n    return this.__tagName;\n  }\n  get baseLine() {\n    return this.__height;\n  }\n\n  static getImplement(name) {\n    if(!IMPLEMENT.hasOwnProperty(name)) {\n      throw new Error(`Geom has not register: ${name}`);\n    }\n    return IMPLEMENT[name];\n  }\n  static register(name, implement) {\n    if(IMPLEMENT.hasOwnProperty(name)) {\n      throw new Error(`Geom has already register: ${name}`);\n    }\n    IMPLEMENT[name] = implement;\n  }\n}\n\nexport default Geom;\n","import Xom from './Xom';\nimport Text from './Text';\nimport LineGroup from './LineGroup';\nimport Geom from '../geom/Geom';\nimport util from '../util';\nimport css from '../style/css';\nimport unit from '../style/unit';\nimport mode from '../mode';\n\nconst TAG_NAME = {\n  'div': true,\n  'span': true,\n};\nconst INLINE = {\n  'span': true,\n};\n\nclass Dom extends Xom {\n  constructor(tagName, props, children) {\n    super(tagName, props);\n    this.__children = children;\n    this.__flowChildren = []; // 非绝对定位孩子\n    this.__absChildren = []; // 绝对定位孩子\n    this.__lineGroups = []; // 一行inline元素组成的LineGroup对象后的存放列表\n    this.__flowY = 0; // 文档流布局结束后的y坐标，供absolute布局默认位置使用\n  }\n\n  /**\n   * 1. 封装string为Text节点\n   * 2. 打平children中的数组，变成一维\n   * 3. 合并相连的Text节点\n   * 4. 检测inline不能包含block和flex\n   * 5. 设置parent和prev/next和ctx和mode\n   */\n  __traverse(ctx, renderMode) {\n    let list = [];\n    this.__traverseChildren(this.children, list, ctx, renderMode);\n    for(let i = list.length - 1; i > 0; i--) {\n      let item = list[i];\n      if(item instanceof Text) {\n        let prev = list[i - 1];\n        if(prev instanceof Text) {\n          prev.content += item.content;\n          list.splice(i, 1);\n        }\n        else {\n          i--;\n        }\n      }\n    }\n    if(this.style.display === 'inline' && this.parent.style.display !== 'flex') {\n      for(let i = list.length - 1; i >= 0; i--) {\n        let item = list[i];\n        if(item instanceof Dom && item.style.display !== 'inline') {\n          throw new Error('inline can not contain block/flex');\n        }\n      }\n    }\n    let prev = null;\n    list.forEach(item => {\n      item.__ctx = ctx;\n      if(prev) {\n        prev.__next = item;\n      }\n      item.__parent = this;\n      item.__prev = prev;\n      if(item instanceof Text || item.style.position !== 'absolute') {\n        this.__flowChildren.push(item);\n      }\n      else {\n        this.__absChildren.push(item);\n      }\n    });\n    this.__children = list;\n  }\n\n  __traverseChildren(children, list, ctx, renderMode) {\n    if(Array.isArray(children)) {\n      children.forEach(item => {\n        this.__traverseChildren(item, list, ctx, renderMode);\n      });\n    }\n    else if(children instanceof Dom) {\n      list.push(children);\n      children.__traverse(ctx, renderMode);\n    }\n    // 图形没有children\n    else if(children instanceof Geom) {\n      list.push(children);\n    }\n    // 排除掉空的文本\n    else if(!util.isNil(children)) {\n      let text = new Text(children);\n      text.__renderMode = renderMode;\n      list.push(text);\n    }\n  }\n\n  // 合并设置style，包括继承和默认值，修改一些自动值和固定值，测量所有文字的宽度\n  __initStyle() {\n    let style = this.__style;\n    // 仅支持flex/block/inline/none\n    if(!style.display || ['flex', 'block', 'inline', 'none'].indexOf(style.display) === -1) {\n      if(INLINE.hasOwnProperty(this.tagName)) {\n        style.display = 'inline';\n      }\n      else {\n        style.display = 'block';\n      }\n    }\n    // 继承父元素样式\n    let parent = this.parent;\n    if(parent) {\n      let parentStyle = parent.style;\n      ['fontSize', 'fontWeight', 'fontStyle', 'lineHeight', 'wordBreak', 'color', 'textAlign'].forEach(k => {\n        if(!style.hasOwnProperty(k) && parentStyle.hasOwnProperty(k)) {\n          style[k] = parentStyle[k];\n        }\n      });\n    }\n    // 标准化处理，默认值、简写属性\n    css.normalize(style);\n    this.children.forEach(item => {\n      if(item instanceof Xom) {\n        item.__initStyle();\n      }\n      else {\n        item.__style = style;\n        // 文字首先测量所有字符宽度\n        item.__measure();\n      }\n    });\n  }\n\n  // 给定父宽度情况下，尝试行内放下后的剩余宽度，为负数即放不下\n  __tryLayInline(w, total) {\n    let { flowChildren, style: { width } } = this;\n    if(width.unit === unit.PX) {\n      return w - width.value;\n    }\n    else if(width.unit === unit.PERCENT) {\n      return w - total * width.value * 0.01;\n    }\n    for(let i = 0; i < flowChildren.length; i++) {\n      // 当放不下时直接返回，无需继续多余的尝试计算\n      if(w < 0) {\n        return w;\n      }\n      let item = flowChildren[i];\n      if(item instanceof Xom) {\n        w -= item.__tryLayInline(w, total);\n      }\n      else {\n        w -= item.textWidth;\n      }\n    }\n    return w;\n  }\n\n  // 设置y偏移值，递归包括children，此举在flex行元素的child进行justify-content对齐用\n  __offsetX(diff) {\n    super.__offsetX(diff);\n    this.flowChildren.forEach(item => {\n      if(item) {\n        item.__offsetX(diff);\n      }\n    });\n  }\n\n  // 设置y偏移值，递归包括children，此举在初步确定inline布局后设置元素vertical-align用\n  __offsetY(diff) {\n    super.__offsetY(diff);\n    this.flowChildren.forEach(item => {\n      if(item) {\n        item.__offsetY(diff);\n      }\n    });\n  }\n\n  __calAutoBasis(isDirectionRow, w, h, isRecursion) {\n    let b = 0;\n    let min = 0;\n    let max = 0;\n    let { flowChildren, style } = this;\n    // 计算需考虑style的属性\n    let {\n      width,\n      height,\n      borderTopWidth,\n      borderRightWidth,\n      borderBottomWidth,\n      borderLeftWidth,\n      marginTop,\n      marginRight,\n      marginBottom,\n      marginLeft,\n      paddingTop,\n      paddingRight,\n      paddingBottom,\n      paddingLeft,\n    } = style;\n    let main = isDirectionRow ? width : height;\n    if(main.unit === unit.PX) {\n      b = max = main.value;\n      // 递归时children的长度会影响flex元素的最小宽度\n      if(isRecursion) {\n        min = b;\n      }\n    }\n    // 递归children取最大值\n    flowChildren.forEach(item => {\n      if(item instanceof Xom) {\n        let { b: b2, min: min2, max: max2 } = item.__calAutoBasis(isDirectionRow, w, h, true);\n        b = Math.max(b, b2);\n        min = Math.max(min, min2);\n        max = Math.max(max, max2);\n      }\n      else if(isDirectionRow) {\n        min = Math.max(item.charWidth, min);\n        max = Math.max(item.textWidth, max);\n      }\n      else {\n        item.__preLay({\n          x: 0,\n          y: 0,\n          w,\n          h,\n        }, true);\n        min = Math.max(min, item.height);\n        max = Math.max(max, item.height);\n      }\n    });\n    // margin/padding/border也得计算在内\n    if(isDirectionRow) {\n      let w = borderRightWidth.value + borderLeftWidth.value + marginLeft.value + marginRight.value + paddingLeft.value + paddingRight.value;\n      b += w;\n      max += w;\n      min += w;\n    }\n    else {\n      let h = borderTopWidth.value + borderBottomWidth.value + marginTop.value + marginBottom.value + paddingTop.value + paddingBottom.value;\n      b += h;\n      max += h;\n      min += h;\n    }\n    return { b, min, max };\n  }\n\n  __calAbs(isDirectionRow) {\n    let max = 0;\n    let { flowChildren, style } = this;\n    // 计算需考虑style的属性\n    let {\n      width,\n      height,\n      borderTopWidth,\n      borderRightWidth,\n      borderBottomWidth,\n      borderLeftWidth,\n      marginTop,\n      marginRight,\n      marginBottom,\n      marginLeft,\n      paddingTop,\n      paddingRight,\n      paddingBottom,\n      paddingLeft,\n    } = style;\n    let main = isDirectionRow ? width : height;\n    if(main.unit === unit.PX) {\n      max = main.value;\n    }\n    // 递归children取最大值\n    flowChildren.forEach(item => {\n      if(item instanceof Xom) {\n        let max2 = item.__calAbs(isDirectionRow);\n        max = Math.max(max, max2);\n      }\n      else if(isDirectionRow) {\n        max = Math.max(item.textWidth, max);\n      }\n      else {\n        item.__preLay({\n          x: 0,\n          y: 0,\n          w: Infinity,\n          h: Infinity,\n        }, true);\n        max = Math.max(max, item.height);\n      }\n    });\n    // margin/padding/border也得计算在内\n    if(isDirectionRow) {\n      let w = borderRightWidth.value + borderLeftWidth.value + marginLeft.value + marginRight.value + paddingLeft.value + paddingRight.value;\n      max += w;\n    }\n    else {\n      let h = borderTopWidth.value + borderBottomWidth.value + marginTop.value + marginBottom.value + paddingTop.value + paddingBottom.value;\n      max += h;\n    }\n    return max;\n  }\n\n  // 本身block布局时计算好所有子元素的基本位置\n  __preLayBlock(data) {\n    let { x, y, w, h } = data;\n    this.__x = x;\n    this.__y = y;\n    this.__width = w;\n    let { flowChildren, style, lineGroups } = this;\n    let {\n      width,\n      height,\n      borderTopWidth,\n      borderRightWidth,\n      borderBottomWidth,\n      borderLeftWidth,\n      marginTop,\n      marginRight,\n      marginBottom,\n      marginLeft,\n      paddingTop,\n      paddingRight,\n      paddingBottom,\n      paddingLeft,\n      textAlign,\n    } = style;\n    // 除了auto外都是固定高度\n    let fixedHeight;\n    if(width && width.unit !== unit.AUTO) {\n      switch(width.unit) {\n        case unit.PX:\n          w = width.value;\n          break;\n        case unit.PERCENT:\n          w *= width.value * 0.01;\n          break;\n      }\n    }\n    if(height && height.unit !== unit.AUTO) {\n      fixedHeight = true;\n      switch(height.unit) {\n        case unit.PX:\n          h = height.value;\n          break;\n        case unit.PERCENT:\n          h *= height.value * 0.01;\n          break;\n      }\n    }\n    // margin/padding/border影响x和y和尺寸\n    x += borderLeftWidth.value + marginLeft.value + paddingLeft.value;\n    data.x = x;\n    y += borderTopWidth.value + marginTop.value + paddingTop.value;\n    data.y = y;\n    w -= borderLeftWidth.value + borderRightWidth.value + marginLeft.value + marginRight.value + paddingLeft.value + paddingRight.value;\n    h -= borderTopWidth.value + borderBottomWidth.value + marginTop.value + marginBottom.value + paddingTop.value + paddingBottom.value;\n    // 递归布局，将inline的节点组成lineGroup一行\n    let lineGroup = new LineGroup(x, y);\n    flowChildren.forEach(item => {\n      if(item instanceof Xom) {\n        if(item.style.display === 'inline') {\n          // inline开头，不用考虑是否放得下直接放\n          if(x === data.x) {\n            lineGroup.add(item);\n            item.__preLayInline({\n              x,\n              y,\n              w,\n              h,\n            });\n            x += item.outerWidth;\n          }\n          else {\n            // 非开头先尝试是否放得下\n            let fw = item.__tryLayInline(w - x, w);\n            // 放得下继续\n            if(fw >= 0) {\n              item.__preLayInline({\n                x,\n                y,\n                w,\n                h,\n              });\n            }\n            // 放不下处理之前的lineGroup，并重新开头\n            else {\n              lineGroups.push(lineGroup);\n              lineGroup.verticalAlign();\n              x = data.x;\n              y += lineGroup.height;\n              item.__preLayInline({\n                x: data.x,\n                y,\n                w,\n                h,\n              });\n              lineGroup = new LineGroup(x, y);\n            }\n            x += item.outerWidth;\n            lineGroup.add(item);\n          }\n        }\n        else {\n          // block先处理之前可能的lineGroup\n          if(lineGroup.size) {\n            lineGroups.push(lineGroup);\n            lineGroup.verticalAlign();\n            y += lineGroup.height;\n            lineGroup = new LineGroup(data.x, y);\n          }\n          item.__preLay({\n            x: data.x,\n            y,\n            w,\n            h,\n          });\n          x = data.x;\n          y += item.outerHeight;\n        }\n      }\n      // 文字和inline类似\n      else {\n        // x开头，不用考虑是否放得下直接放\n        if(x === data.x) {\n          lineGroup.add(item);\n          item.__preLay({\n            x,\n            y,\n            w,\n            h,\n          });\n          x += item.width;\n        }\n        else {\n          // 非开头先尝试是否放得下\n          let fw = item.__tryLayInline(w - x, w);\n          // 放得下继续\n          if(fw >= 0) {\n            item.__preLay({\n              x,\n              y,\n              w,\n              h,\n            });\n          }\n          // 放不下处理之前的lineGroup，并重新开头\n          else {\n            lineGroups.push(lineGroup);\n            lineGroup.verticalAlign();\n            x = data.x;\n            y += lineGroup.height;\n            item.__preLay({\n              x: data.x,\n              y,\n              w,\n              h,\n            });\n            lineGroup = new LineGroup(x, y);\n          }\n          x += item.width;\n          lineGroup.add(item);\n        }\n      }\n    });\n    // 结束后处理可能遗留的最后的lineGroup\n    if(lineGroup.size) {\n      lineGroups.push(lineGroup);\n      lineGroup.verticalAlign();\n      y += lineGroup.height;\n    }\n    // text-align\n    if(['center', 'right'].indexOf(textAlign) > -1) {\n      lineGroups.forEach(lineGroup => {\n        let diff = w - lineGroup.width;\n        if(diff > 0) {\n          lineGroup.horizonAlign(textAlign === 'center' ? diff * 0.5 : diff);\n        }\n      });\n    }\n    this.__width = w;\n    this.__height = fixedHeight ? h : y - data.y;\n    this.__flowY = y;\n  }\n\n  // 弹性布局时的计算位置\n  __preLayFlex(data) {\n    let { x, y, w, h } = data;\n    this.__x = x;\n    this.__y = y;\n    this.__width = w;\n    let { flowChildren, style } = this;\n    let {\n      width,\n      height,\n      flexDirection,\n      borderTopWidth,\n      borderRightWidth,\n      borderBottomWidth,\n      borderLeftWidth,\n      marginTop,\n      marginRight,\n      marginBottom,\n      marginLeft,\n      paddingTop,\n      paddingRight,\n      paddingBottom,\n      paddingLeft,\n      justifyContent,\n      alignItems,\n    } = style;\n    // 除了auto外都是固定高度\n    let fixedWidth;\n    let fixedHeight;\n    if(width && width.unit !== unit.AUTO) {\n      fixedWidth = true;\n      switch(width.unit) {\n        case unit.PX:\n          w = width.value;\n          break;\n        case unit.PERCENT:\n          w *= width.value * 0.01;\n          break;\n      }\n    }\n    if(height && height.unit !== unit.AUTO) {\n      fixedHeight = true;\n      switch(height.unit) {\n        case unit.PX:\n          h = height.value;\n          break;\n        case unit.PERCENT:\n          h *= height.value * 0.01;\n          break;\n      }\n    }\n    // margin/padding/border影响x和y和尺寸\n    x += borderLeftWidth.value + marginLeft.value + paddingLeft.value;\n    data.x = x;\n    y += borderTopWidth.value + marginTop.value + paddingTop.value;\n    data.y = y;\n    w -= borderLeftWidth.value + borderRightWidth.value + marginLeft.value + marginRight.value + paddingLeft.value + paddingRight.value;\n    h -= borderTopWidth.value + borderBottomWidth.value + marginTop.value + marginBottom.value + paddingTop.value + paddingBottom.value;\n    let isDirectionRow = flexDirection === 'row';\n    // column时height可能为auto，此时取消伸展，退化为类似block布局，但所有子元素强制block\n    if(!isDirectionRow && !fixedHeight) {\n      flowChildren.forEach(item => {\n        if(item instanceof Xom) {\n          const { style, style: { display, flexDirection, width }} = item;\n          // column的flex的child如果是inline，变为block\n          if(display === 'inline') {\n            style.display = 'block';\n          }\n          // 竖向flex的child如果是横向flex，宽度自动的话要等同于父flex的宽度\n          else if(display === 'flex' && flexDirection === 'row' && width.unit === unit.AUTO) {\n            width.value = w;\n            width.unit = unit.PX;\n          }\n          item.__preLay({\n            x,\n            y,\n            w,\n            h,\n          });\n          y += item.outerHeight;\n        }\n        else {\n          item.__preLay({\n            x,\n            y,\n            w,\n            h,\n          });\n          y += item.outerHeight;\n        }\n      });\n      this.__width = w;\n      this.__height = y - data.y;\n      return;\n    }\n    // 计算伸缩基数\n    let growList = [];\n    let shrinkList = [];\n    let basisList = [];\n    let minList = [];\n    let growSum = 0;\n    let shrinkSum = 0;\n    let basisSum = 0;\n    let maxSum = 0;\n    flowChildren.forEach(item => {\n      if(item instanceof Xom) {\n        let { flexGrow, flexShrink, flexBasis } = item.style;\n        growList.push(flexGrow);\n        shrinkList.push(flexShrink);\n        growSum += flexGrow;\n        shrinkSum += flexShrink;\n        let { b, min, max } = item.__calAutoBasis(isDirectionRow, w, h);\n        // 根据basis不同，计算方式不同\n        if(flexBasis.unit === unit.AUTO) {\n          basisList.push(max);\n          basisSum += max;\n        }\n        else if(flexBasis.unit === unit.PX) {\n          b = flexBasis.value;\n          basisList.push(b);\n          basisSum += b;\n        }\n        else if(flexBasis.unit === unit.PERCENT) {\n          b = (isDirectionRow ? w : h) * flexBasis.value;\n          basisList.push(b);\n          basisSum += b;\n        }\n        maxSum += max;\n        minList.push(min);\n      }\n      else {\n        growList.push(0);\n        shrinkList.push(1);\n        shrinkSum += 1;\n        if(isDirectionRow) {\n          basisList.push(item.textWidth);\n          basisSum += item.textWidth;\n          maxSum += item.textWidth;\n          minList.push(item.charWidth);\n        }\n        else {\n          item.__preLay({\n            x: 0,\n            y: 0,\n            w,\n            h,\n          }, true);\n          basisList.push(item.height);\n          basisSum += item.height;\n          maxSum += item.height;\n          minList.push(item.height);\n        }\n      }\n    });\n    let maxCross = 0;\n    // 判断是否超出，决定使用grow还是shrink\n    let isOverflow = maxSum > (isDirectionRow ? w : h);\n    flowChildren.forEach((item, i) => {\n      let main;\n      let shrink = shrinkList[i];\n      let grow = growList[i];\n      // 计算主轴长度\n      if(isOverflow) {\n        let overflow = basisSum - (isDirectionRow ? w : h);\n        main = shrink ? (basisList[i] - overflow * shrink / shrinkSum) : basisList[i];\n      }\n      else {\n        let free = (isDirectionRow ? w : h) - basisSum;\n        main = grow ? (basisList[i] + free * grow / growSum) : basisList[i];\n      }\n      // 主轴长度的最小值不能小于元素的最小长度，比如横向时的字符宽度\n      main = Math.max(main, minList[i]);\n      if(item instanceof Xom) {\n        const { style, style: {\n          display,\n          flexDirection,\n          width,\n          height,\n          marginTop,\n          marginRight,\n          marginBottom,\n          marginLeft,\n          borderTopWidth,\n          borderRightWidth,\n          borderBottomWidth,\n          borderLeftWidth,\n          paddingTop,\n          paddingRight,\n          paddingBottom,\n          paddingLeft,\n        }} = item;\n        if(isDirectionRow) {\n          // row的flex的child如果是inline，变为block\n          if(display === 'inline') {\n            style.display = 'block';\n          }\n          // 横向flex的child如果是竖向flex，高度自动的话要等同于父flex的高度\n          else if(display === 'flex' && flexDirection === 'column' && fixedHeight && height.unit === unit.AUTO) {\n            height.value = h;\n            height.unit = unit.PX;\n          }\n          item.__preLay({\n            x,\n            y,\n            w: main,\n            h,\n          })\n        }\n        else {\n          // column的flex的child如果是inline，变为block\n          if(display === 'inline') {\n            style.display = 'block';\n          }\n          // 竖向flex的child如果是横向flex，宽度自动的话要等同于父flex的宽度\n          else if(display === 'flex' && flexDirection === 'row' && width.unit === unit.AUTO) {\n            width.value = w;\n            width.unit = unit.PX;\n          }\n          item.__preLay({\n            x,\n            y,\n            w,\n            h: main,\n          });\n        }\n        // 重设因伸缩而导致的主轴长度\n        if(isOverflow && shrink) {\n          if(isDirectionRow) {\n            item.__width = main\n              - marginLeft.value\n              - marginRight.value\n              - borderLeftWidth.value\n              - borderRightWidth.value\n              - paddingLeft.value\n              - paddingRight.value;\n          }\n          else {\n            item.__height = main\n              - marginTop.value\n              - marginBottom.value\n              - borderTopWidth.value\n              - borderBottomWidth.value\n              - paddingTop.value\n              - paddingBottom.value;\n          }\n        }\n        else if(!isOverflow && grow) {\n          if(isDirectionRow) {\n            item.__width = main\n              - marginLeft.value\n              - marginRight.value\n              - borderLeftWidth.value\n              - borderRightWidth.value\n              - paddingLeft.value\n              - paddingRight.value;\n          }\n          else {\n            item.__height = main\n              - marginTop.value\n              - marginBottom.value\n              - borderTopWidth.value\n              - borderBottomWidth.value\n              - paddingTop.value\n              - paddingBottom.value;\n          }\n        }\n      }\n      else {\n        item.__preLay({\n          x,\n          y,\n          w: isDirectionRow ? main : w,\n          h: isDirectionRow ? h : main,\n        });\n      }\n      if(isDirectionRow) {\n        x += item.outerWidth;\n        maxCross = Math.max(maxCross, item.outerHeight);\n      }\n      else {\n        y += item.outerHeight;\n        maxCross = Math.max(maxCross, item.outerWidth);\n      }\n    });\n    // 计算主轴剩余时要用真实剩余空间而不能用伸缩剩余空间\n    let diff = isDirectionRow ? w - x + data.x : h - y + data.y;\n    // 主轴侧轴对齐方式\n    if(!isOverflow && growSum === 0 && diff > 0) {\n      let len = flowChildren.length;\n      if(justifyContent === 'flex-end') {\n        for(let i = 0; i < len; i++) {\n          let child = flowChildren[i];\n          isDirectionRow ? child.__offsetX(diff) : child.__offsetY(diff);\n        }\n      }\n      else if(justifyContent === 'center') {\n        let center = diff * 0.5;\n        for(let i = 0; i < len; i++) {\n          let child = flowChildren[i];\n          isDirectionRow ? child.__offsetX(center) : child.__offsetY(center);\n        }\n      }\n      else if(justifyContent === 'space-between') {\n        let between = diff / (len - 1);\n        for(let i = 1; i < len; i++) {\n          let child = flowChildren[i];\n          isDirectionRow ? child.__offsetX(between * i) : child.__offsetY(between * i);\n        }\n      }\n      else if(justifyContent === 'space-around') {\n        let around = diff / (len + 1);\n        for(let i = 0; i < len; i++) {\n          let child = flowChildren[i];\n          isDirectionRow ? child.__offsetX(around * (i + 1)) : child.__offsetY(around * (i + 1));\n        }\n      }\n    }\n    // 子元素侧轴伸展\n    if(isDirectionRow) {\n      // 父元素固定高度，子元素可能超过，侧轴最大长度取固定高度\n      if(fixedHeight) {\n        maxCross = h;\n      }\n      y += maxCross;\n    }\n    else {\n      if(fixedWidth) {\n        maxCross = w;\n      }\n    }\n    // 侧轴对齐\n    if(alignItems === 'stretch') {\n      // 短侧轴的children伸张侧轴长度至相同，超过的不动，固定宽高的也不动\n      flowChildren.forEach(item => {\n        let { style } = item;\n        if(isDirectionRow) {\n          if(style.height.unit === unit.AUTO) {\n            item.__height = maxCross\n              - style.marginTop.value\n              - style.marginBottom.value\n              - style.paddingTop.value\n              - style.paddingBottom.value\n              - style.borderTopWidth.value\n              - style.borderBottomWidth.value;\n          }\n        }\n        else {\n          if(style.width.unit === unit.AUTO) {\n            item.__width = maxCross\n              - style.marginLeft.value\n              - style.marginRight.value\n              - style.paddingLeft.value\n              - style.paddingRight.value\n              - borderRightWidth.value\n              - borderLeftWidth.value;\n          }\n        }\n      });\n    }\n    else if(alignItems === 'center') {\n      flowChildren.forEach(item => {\n        let diff = maxCross - item.outerHeight;\n        if(diff > 0) {\n          item.__offsetY(diff * 0.5);\n        }\n      });\n    }\n    else if(alignItems === 'flex-end') {\n      flowChildren.forEach(item => {\n        let diff = maxCross - item.outerHeight;\n        if(diff > 0) {\n          item.__offsetY(diff);\n        }\n      });\n    }\n    this.__width = w;\n    this.__height = fixedHeight ? h : y - data.y;\n    this.__flowY = y;\n  }\n\n  // inline比较特殊，先简单顶部对其，后续还需根据vertical和lineHeight计算y偏移\n  __preLayInline(data) {\n    let { x, y, w, h } = data;\n    this.__x = x;\n    this.__y = y;\n    let maxX = x;\n    let { flowChildren, style, lineGroups } = this;\n    let {\n      width,\n      height,\n      borderTopWidth,\n      borderRightWidth,\n      borderBottomWidth,\n      borderLeftWidth,\n      marginTop,\n      marginRight,\n      marginBottom,\n      marginLeft,\n      paddingTop,\n      paddingRight,\n      paddingBottom,\n      paddingLeft,\n      textAlign,\n    } = style;\n    // 除了auto外都是固定高度\n    let fixedWidth;\n    let fixedHeight;\n    if(width && width.unit !== unit.AUTO) {\n      fixedWidth = true;\n      switch(width.unit) {\n        case unit.PX:\n          w = width.value;\n          break;\n        case unit.PERCENT:\n          w *= width.value * 0.01;\n          break;\n      }\n    }\n    if(height && height.unit !== unit.AUTO) {\n      fixedHeight = true;\n      switch(height.unit) {\n        case unit.PX:\n          h = height.value;\n          break;\n        case unit.PERCENT:\n          h *= height.value * 0.01;\n          break;\n      }\n    }\n    // margin/padding/border影响x和y和尺寸\n    x += borderLeftWidth.value + marginLeft.value + paddingLeft.value;\n    data.x = x;\n    y += borderTopWidth.value + marginTop.value + paddingTop.value;\n    data.y = y;\n    w -= borderLeftWidth.value + borderRightWidth.value + marginLeft.value + marginRight.value + paddingLeft.value + paddingRight.value;\n    h -= borderTopWidth.value + borderBottomWidth.value + marginTop.value + marginBottom.value + paddingTop.value + paddingBottom.value;\n    // 递归布局，将inline的节点组成lineGroup一行\n    let lineGroup = new LineGroup(x, y);\n    flowChildren.forEach(item => {\n      if(item instanceof Xom) {\n        // 绝对定位跳过\n        if(item.style.position === 'absolute') {\n          this.absChildren.push(item);\n          return;\n        }\n        // inline开头，不用考虑是否放得下直接放\n        if(x === data.x) {\n          lineGroup.add(item);\n          item.__preLayInline({\n            x,\n            y,\n            w,\n            h,\n          });\n          x += item.outerWidth;\n          maxX = Math.max(maxX, x);\n        }\n        else {\n          // 非开头先尝试是否放得下\n          let fw = item.__tryLayInline(w - x, w);\n          // 放得下继续\n          if(fw >= 0) {\n            item.__preLayInline({\n              x,\n              y,\n              w,\n              h,\n            });\n          }\n          // 放不下处理之前的lineGroup，并重新开头\n          else {\n            lineGroups.push(lineGroup);\n            lineGroup.verticalAlign();\n            x = data.x;\n            y += lineGroup.height;\n            item.__preLayInline({\n              x: data.x,\n              y,\n              w,\n              h,\n            });\n            lineGroup = new LineGroup(x, y);\n          }\n          x += item.outerWidth;\n          maxX = Math.max(maxX, x);\n          lineGroup.add(item);\n        }\n      }\n      // inline里的其它只有文本\n      else {\n        if(x === data.x) {\n          lineGroup.add(item);\n          item.__preLay({\n            x,\n            y,\n            w,\n            h,\n          });\n          x += item.width;\n          maxX = Math.max(maxX, x);\n        }\n        else {\n          // 非开头先尝试是否放得下\n          let fw = item.__tryLayInline(w - x, w);\n          // 放得下继续\n          if(fw >= 0) {\n            item.__preLay({\n              x,\n              y,\n              w,\n              h,\n            });\n          }\n          // 放不下处理之前的lineGroup，并重新开头\n          else {\n            lineGroups.push(lineGroup);\n            lineGroup.verticalAlign();\n            x = data.x;\n            y += lineGroup.height;\n            item.__preLay({\n              x: data.x,\n              y,\n              w,\n              h,\n            });\n            lineGroup = new LineGroup(x, y);\n          }\n          x += item.width;\n          maxX = Math.max(maxX, x);\n          lineGroup.add(item);\n        }\n      }\n    });\n    // 结束后处理可能遗留的最后的lineGroup，children为空时可能size为空\n    if(lineGroup.size) {\n      lineGroups.push(lineGroup);\n      lineGroup.verticalAlign();\n      y += lineGroup.height;\n    }\n    // text-align\n    if(['center', 'right'].indexOf(textAlign) > -1) {\n      lineGroups.forEach(lineGroup => {\n        let diff = w - lineGroup.width;\n        if(diff > 0) {\n          lineGroup.horizonAlign(textAlign === 'center' ? diff * 0.5 : diff);\n        }\n      });\n    }\n    // 元素的width不能超过父元素w\n    this.__width = fixedWidth ? w : maxX - data.x;\n    this.__height = fixedHeight ? h : y - data.y;\n    this.__flowY = y;\n  }\n\n  // 只针对绝对定位children布局\n  __preLayAbs(container) {\n    let { x, y, flowY, width, height, children, absChildren, style } = this;\n    let {\n      marginTop,\n      marginLeft,\n      paddingTop,\n      paddingLeft,\n      paddingRight,\n      paddingBottom,\n      borderTopWidth,\n      borderLeftWidth,\n    } = style;\n    let pw = width + paddingLeft.value + paddingRight.value;\n    let ph = height + paddingTop.value + paddingBottom.value;\n    // 递归进行，遇到absolute/relative的设置新容器\n    children.forEach(item => {\n      if(item instanceof Dom) {\n        item.__preLayAbs(['absolute', 'relative'].indexOf(item.style.position) > -1 ? item : container);\n      }\n    });\n    // 对absolute的元素进行相对容器布局\n    absChildren.forEach(item => {\n      let { style, style: { left, top, right, bottom, width: width2, height: height2 } } = item;\n      let x2, y2, w2, h2;\n      // width优先级高于right高于left，即最高left+right，其次left+width，再次right+width，然后仅申明单个，最次全部auto\n      if(left.unit !== unit.AUTO && right.unit !== unit.AUTO) {\n        x2 = left.unit === unit.PX ? x + marginLeft.value + borderLeftWidth.value + left.value : x + marginLeft.value + borderLeftWidth.value + width * left.value * 0.01;\n        w2 = right.unit === unit.PX ? x + marginLeft.value + borderLeftWidth.value + pw - right.value - x2 : x + marginLeft.value + borderLeftWidth.value + pw - width * right.value * 0.01 - x2;\n      }\n      else if(left.unit !== unit.AUTO && width2.unit !== unit.AUTO) {\n        x2 = left.unit === unit.PX ? x + marginLeft.value + borderLeftWidth.value + left.value : x + marginLeft.value + borderLeftWidth.value + width * left.value * 0.01;\n        w2 = width2.unit === unit.PX ? width2.value : width;\n      }\n      else if(right.unit !== unit.AUTO && width2.unit !== unit.AUTO) {\n        w2 = width2.unit === unit.PX ? width2.value : width;\n        let widthPx = width2.unit === unit.PX ? width2.value : width * width2.value * 0.01;\n        x2 = right.unit === unit.PX ? x + marginLeft.value + borderLeftWidth.value + pw - right.value - widthPx : x + marginLeft.value + borderLeftWidth.value + pw - width * right.value * 0.01 - widthPx;\n      }\n      else if(left.unit !== unit.AUTO) {\n        x2 = left.unit === unit.PX ? x + left.value : x + marginLeft.value + borderLeftWidth.value + width * left.value * 0.01;\n        w2 = item.__calAbs(true);\n      }\n      else if(right.unit !== unit.AUTO) {\n        w2 = item.__calAbs(true);\n        x2 = right.unit === unit.PX ? x + marginLeft.value + borderLeftWidth.value + pw - right.value - w2 : x + marginLeft.value + borderLeftWidth.value + pw - width * right.value * 0.01 - w2;\n      }\n      else if(width2.unit !== unit.AUTO) {\n        x2 = x + marginLeft.value + borderLeftWidth.value;\n        w2 = width2.unit === unit.PX ? width2.value : width;\n      }\n      else {\n        x2 = x + marginLeft.value + borderLeftWidth.value;\n        w2 = item.__calAbs(true);\n      }\n      // top/bottom/height优先级同上\n      if(top.unit !== unit.AUTO && bottom.unit !== unit.AUTO) {\n        y2 = top.unit === unit.PX ? y + top.value : y + marginTop.value + borderTopWidth.value + height * top.value * 0.01;\n        h2 = bottom.unit === unit.PX ? y + marginTop.value + borderTopWidth.value + ph - bottom.value - y2 : y + marginTop.value + borderTopWidth.value + ph - height * bottom.value * 0.01 - y2;\n        style.height = {\n          value: h2,\n          unit: unit.PX,\n        };\n      }\n      else if(top.unit !== unit.AUTO && height2.unit !== unit.AUTO) {\n        y2 = top.unit === unit.PX ? y + top.value : y + marginTop.value + borderTopWidth.value + height * top.value * 0.01;\n        h2 = height2.unit === unit.PX ? height2.value : height;\n      }\n      else if(bottom.unit !== unit.AUTO && height2.unit !== unit.AUTO) {\n        h2 = height2.unit === unit.PX ? height2.value : height;\n        let heightPx = height2.unit === unit.PX ? height2.value : height * height2.value * 0.01;\n        y2 = bottom.unit === unit.PX ? y + marginTop.value + borderTopWidth.value + ph - bottom.value - heightPx : y + marginTop.value + borderTopWidth.value + ph - height * bottom.value * 0.01 - heightPx;\n      }\n      else if(top.unit !== unit.AUTO) {\n        y2 = top.unit === unit.PX ? y + top.value : y + marginTop.value + borderTopWidth.value + height * top.value * 0.01;\n        h2 = item.__calAbs();\n      }\n      else if(bottom.unit !== unit.AUTO) {\n        h2 = item.__calAbs();\n        y2 = bottom.unit === unit.PX ? y + marginTop.value + borderTopWidth.value + ph - bottom.value - h2 : y + marginTop.value + borderTopWidth.value + ph - height * bottom.value * 0.01 - h2;\n      }\n      else if(height2.unit !== unit.AUTO) {\n        y2 = flowY + marginTop.value + borderTopWidth.value;\n        h2 = height2.unit === unit.PX ? height2.value : height;\n      }\n      else {\n        y2 = flowY + marginTop.value + borderTopWidth.value;\n        h2 = item.__calAbs();\n      }\n      // absolute时inline强制block\n      if(style.display === 'inline') {\n        style.display = 'block';\n      }\n      item.__preLay({\n        x: x2,\n        y: y2,\n        w: w2,\n        h: h2,\n      });\n    });\n  }\n\n  __emitEvent(e, force) {\n    let { event: { type }, x: xe, y: ye, covers } = e;\n    let { listener, children, style, x, y, outerWidth, outerHeight } = this;\n    if(style.display === 'none') {\n      return;\n    }\n    let cb;\n    if(listener.hasOwnProperty(type)) {\n      cb = listener[type];\n    }\n    let hasChildEmit;\n    // 先响应absolute/relative高优先级\n    for(let i = children.length - 1; i >= 0; i--) {\n      let child = children[i];\n      if(child instanceof Xom && ['absolute', 'relative'].indexOf(child.style.position) > -1) {\n        if(child.__emitEvent(e, force)) {\n          hasChildEmit = true;\n        }\n      }\n    }\n    // 再看普通流\n    for(let i = children.length - 1; i >= 0; i--) {\n      let child = children[i];\n      if(child instanceof Xom && ['absolute', 'relative'].indexOf(child.style.position) === -1) {\n        if(child.__emitEvent(e, force)) {\n          hasChildEmit = true;\n        }\n      }\n    }\n    if(force) {\n      cb && cb(e);\n      return;\n    }\n    // child触发则parent一定触发\n    if(hasChildEmit) {\n      covers.push({\n        x,\n        y,\n        w: outerWidth,\n        h: outerHeight,\n      });\n      cb && cb(e);\n    }\n    // 否则判断坐标是否位于自己内部，以及没被遮挡\n    else if(xe >= x && ye >= y && xe <= x + outerWidth && ye <= y + outerHeight) {\n      for(let i = 0, len = covers.length; i < len; i++) {\n        let { x: x2, y: y2, w, h: h } = covers[i];\n        if(xe >= x2 && ye >= y2 && xe <= x2 + w && ye <= y2 + h) {\n          return;\n        }\n      }\n      if(!e.target) {\n        e.target = this;\n      }\n      covers.push({\n        x,\n        y,\n        w: outerWidth,\n        h: outerHeight,\n      });\n      cb && cb(e);\n    }\n  }\n\n  render(renderMode) {\n    super.render(renderMode);\n    let { style: { display }, flowChildren, children } = this;\n    if(display === 'none') {\n      return;\n    }\n    // 先绘制static\n    flowChildren.forEach(item => {\n      if(item instanceof Text || item.style.position === 'static') {\n        item.render(renderMode);\n      }\n    });\n    // 再绘制relative和absolute\n    children.forEach(item => {\n      if((item instanceof Xom) && ['relative', 'absolute'].indexOf(item.style.position) > -1) {\n        item.render(renderMode);\n      }\n    });\n    if(renderMode === mode.SVG) {\n      this.__virtualDom = {\n        ...super.virtualDom,\n        type: 'dom',\n        children: this.children.map(item => item.virtualDom),\n      };\n    }\n  }\n\n  get tagName() {\n    return this.__tagName;\n  }\n  get children() {\n    return this.__children;\n  }\n  get flowChildren() {\n    return this.__flowChildren;\n  }\n  get absChildren() {\n    return this.__absChildren;\n  }\n  get lineGroups() {\n    return this.__lineGroups;\n  }\n  get baseLine() {\n    let len = this.lineGroups.length;\n    if(len) {\n      let last = this.lineGroups[len - 1];\n      return last.y - this.y + last.baseLine;\n    }\n    return this.y;\n  }\n  get flowY() {\n    return this.__flowY;\n  }\n\n  static isValid(s) {\n    return TAG_NAME.hasOwnProperty(s);\n  }\n}\n\nexport default Dom;\n","import util from './util';\n\nfunction diff(elem, ovd, nvd) {\n  if(ovd.type === 'dom') {\n    if(nvd.type === 'dom') {\n      diffD2D(elem, ovd, nvd);\n    }\n    else if(nvd.type === 'text') {\n      replaceWith(elem, nvd);\n    }\n    else if(nvd.type === 'geom') {\n      diffD2G(elem, ovd, nvd);\n    }\n  }\n  else if(nvd.type === 'text') {\n    if(nvd.type === 'dom') {\n      replaceWith(elem, nvd);\n    }\n    else if(nvd.type === 'text') {\n      diffT2T(elem, ovd, nvd);\n    }\n    else if(nvd.type === 'geom') {\n      replaceWith(elem, nvd);\n    }\n  }\n  else if(nvd.type === 'geom') {\n    if(nvd.type === 'dom') {\n      diffG2D(elem, ovd, nvd);\n    }\n    else if(nvd.type === 'text') {\n      replaceWith(elem, nvd);\n    }\n    else if(nvd.type === 'geom') {\n      diffG2G(elem, ovd, nvd);\n    }\n  }\n}\n\nfunction diffD2D(elem, ovd, nvd) {\n  diffBb(elem.firstChild, ovd.bb, nvd.bb);\n  let ol = ovd.children.length;\n  let nl = nvd.children.length;\n  let i = 0;\n  let lastChild = elem.lastChild;\n  let cns = lastChild.childNodes;\n  for(; i < Math.min(ol, nl); i++) {\n    diff(cns[i], ovd.children[i], nvd.children[i]);\n  }\n  if(i < ol) {\n    for(; i < ol; i++) {\n      removeAt(lastChild, cns, i);\n    }\n  }\n  else if(i < nl) {\n    for(; i < nl; i++) {\n      insertAt(lastChild, cns, i, nvd.children[i]);\n    }\n  }\n}\n\nfunction diffD2G(elem, ovd, nvd) {\n  diffBb(elem.firstChild, ovd.bb, nvd.bb);\n  replaceWith(elem.lastChild, nvd.content);\n}\n\nfunction diffT2T(elem, ovd, nvd) {\n  let ol = ovd.children.length;\n  let nl = nvd.children.length;\n  let i = 0;\n  for(; i < Math.min(ol, nl); i++) {\n    diffItem(elem, i, ovd.children[i], nvd.children[i], true);\n  }\n  let cns = elem.childNodes;\n  if(i < ol) {\n    for(; i < ol; i++) {\n      removeAt(elem, cns, i);\n    }\n  }\n  else if(i < nl) {\n    for(; i < nl; i++) {\n      insertAt(elem, cns, i, nvd.children[i]);\n    }\n  }\n}\n\nfunction diffG2D(elem, ovd, nvd) {\n  diffBb(elem.firstChild, ovd.bb, nvd.bb);\n  replaceWith(elem.lastChild, nvd.children);\n}\n\nfunction diffG2G(elem, ovd, nvd) {\n  diffBb(elem.firstChild, ovd.bb, nvd.bb);\n  let ol = ovd.content.length;\n  let nl = nvd.content.length;\n  let i = 0;\n  let lastChild = elem.lastChild;\n  let cns = lastChild.childNodes;\n  for(; i < Math.min(ol, nl); i++) {\n    diffItem(lastChild, i, ovd.content[i], nvd.content[i]);\n  }\n  if(i < ol) {\n    for(; i < ol; i++) {\n      removeAt(lastChild, cns, i);\n    }\n  }\n  else if(i < nl) {\n    for(; i < nl; i++) {\n      insertAt(lastChild, cns, i, nvd.content[i]);\n    }\n  }\n}\n\nfunction diffBb(elem, obb, nbb) {\n  let ol = obb.length;\n  let nl = nbb.length;\n  let i = 0;\n  for(; i < Math.min(ol, nl); i++) {\n    diffItem(elem, i, obb[i], nbb[i]);\n  }\n  let cns = elem.childNodes;\n  if(i < ol) {\n    for(; i < ol; i++) {\n      removeAt(elem, cns, i);\n    }\n  }\n  else if(i < nl) {\n    for(; i < nl; i++) {\n      insertAt(elem, cns, i, nbb[i]);\n    }\n  }\n}\n\nfunction diffItem(elem, i, ovd, nvd, isText) {\n  let cns = elem.childNodes;\n  if(ovd.tagName !== nvd.tagName) {\n    replaceWith(cns[i], nvd);\n  }\n  else {\n    let op = {};\n    for(let j = 0, len = ovd.props.length; j < len; j++) {\n      let prop = ovd.props[j];\n      let [k, v] = prop;\n      op[k] = v;\n    }\n    for(let j = 0, len = nvd.props.length; j < len; j++) {\n      let prop = nvd.props[j];\n      let [k, v] = prop;\n      // 已有不等更新，没有添加\n      if(op.hasOwnProperty(k)) {\n        if(op[k] !== v) {\n          cns[i].setAttribute(k, v);\n        }\n        delete op[k];\n      }\n      else {\n        cns[i].setAttribute(k, v);\n      }\n    }\n    // 多余的删除\n    for(var k in op) {\n      if(op.hasOwnProperty(k)) {\n        cns[i].removeAttribute(k);\n      }\n    }\n    if(isText && ovd.content !== nvd.content) {\n      cns[i].textContent = nvd.content;\n    }\n  }\n}\n\nfunction replaceWith(elem, vd) {\n  let res;\n  if(Array.isArray(vd)) {\n    res = '';\n    vd.forEach(item => {\n      res += util.joinVirtualDom(item);\n    });\n  }\n  else {\n    res = util.joinVirtualDom(vd);\n  }\n  elem.insertAdjacentHTML('afterend', res);\n  elem.parentNode.removeChild(elem);\n}\n\nfunction insertAt(elem, cns, index, vd) {\n  let res = util.joinVirtualDom(vd);\n  if(index >= cns.length) {\n    elem.insertAdjacentHTML('beforeend', res);\n  }\n  else {\n    cns[index].insertAdjacentHTML('beforebegin', res);\n  }\n}\n\nfunction removeAt(elem, cns, index) {\n  if(cns[index]) {\n    elem.removeChild(cns[index]);\n  }\n}\n\nexport default diff;\n","import Dom from '../node/Dom';\nimport util from '../util';\nimport mode from '../mode';\nimport domDiff from '../domDiff';\n\nfunction getDom(dom) {\n  if(util.isString(dom)) {\n    let o = document.querySelector(dom);\n    if(!o) {\n      throw new Error('can not find dom of selector: ' + dom);\n    }\n    return o;\n  }\n  if(!dom) {\n    throw new Error('can not find dom: ' + dom);\n  }\n  return dom;\n}\n\nfunction renderProp(k, v) {\n  let s = Array.isArray(v) ? util.joinSourceArray(v) : util.stringify(v);\n  if(k === 'className') {\n    k = 'class';\n  }\n  return ' ' + k + '=\"' + util.encodeHtml(s, true) + '\"';\n}\n\nclass CS extends Dom {\n  constructor(tagName, props, children) {\n    super(tagName, props, children);\n    this.__node = null; // 真实DOM引用\n  }\n\n  __initProps() {\n    if(this.props.width !== undefined) {\n      let value = parseInt(this.props.width);\n      if(!isNaN(value) && value > 0) {\n        this.__width = value;\n      }\n    }\n    if(this.props.height !== undefined) {\n      let value = parseInt(this.props.height);\n      if(!isNaN(value) && value > 0) {\n        this.__height = value;\n      }\n    }\n  }\n\n  __genHtml() {\n    let res = `<${this.tagName}`;\n    // 拼接处理属性\n    for(let i = 0, len = this.__props.length; i < len; i++) {\n      let item = this.__props[i];\n      res += renderProp(item[0], item[1]);\n    }\n    res += `></${this.tagName}>`;\n    return res;\n  }\n\n  __cb(e, force) {\n    if(e.touches && e.touches.length > 1) {\n      return;\n    }\n    let { node } = this;\n    let { x, y, top, right } = node.getBoundingClientRect();\n    x = x || top || 0;\n    y = y || right || 0;\n    let { clientX, clientY } = e.touches ? (e.touches[0] || {}) : e;\n    x = clientX - x;\n    y = clientY - y;\n    this.__emitEvent({\n      event: e,\n      x,\n      y,\n      covers: [],\n    }, force);\n  }\n\n  __initEvent() {\n    let { node } = this;\n    ['click', 'dblclick', 'mousedown', 'mousemove', 'mouseup', 'touchstart', 'touchmove', 'touchend', 'touchcancel'].forEach(type => {\n      node.addEventListener(type, e => {\n        this.__cb(e, ['touchend', 'touchcancel'].indexOf(type) > -1);\n      });\n    });\n  }\n\n  appendTo(dom) {\n    dom = getDom(dom);\n    this.__initProps();\n    // 已有root节点\n    if(dom.nodeName.toUpperCase() === this.tagName.toUpperCase()) {\n      this.__node = dom;\n      if(this.width) {\n        dom.setAttribute('width', this.width);\n      }\n      if(this.height) {\n        dom.setAttribute('height', this.height);\n      }\n    }\n    // 没有canvas/svg节点则生成一个新的\n    else {\n      this.__node = dom.querySelector(this.tagName);\n      if(!this.__node) {\n        dom.innerHTML = this.__genHtml();\n        this.__node = dom.querySelector(this.tagName);\n      }\n    }\n    // 没有设置width/height则采用css计算形式\n    if(!this.width || !this.height) {\n      let css = window.getComputedStyle(dom, null);\n      if(!this.width) {\n        this.__width = parseInt(css.getPropertyValue('width'));\n        dom.setAttribute('width', this.width);\n      }\n      if(!this.height) {\n        this.__height = parseInt(css.getPropertyValue('height'));\n        dom.setAttribute('height', this.height);\n      }\n    }\n    // 只有canvas有ctx，svg用真实dom\n    let renderMode;\n    if(this.tagName === 'canvas') {\n      this.__ctx = this.__node.getContext('2d');\n      this.__ctx.clearRect(0, 0, this.width, this.height);\n      renderMode = mode.CANVAS;\n    }\n    else if(this.tagName === 'svg') {\n      renderMode = mode.SVG;\n    }\n    // canvas/svg作为根节点一定是block或flex，不会是inline\n    let { style } = this;\n    if(['flex', 'block'].indexOf(style.display) === -1) {\n      style.display = 'block';\n    }\n    // 同理position不能为absolute\n    if(style.position === 'absolute') {\n      style.position = 'static';\n    }\n    this.__traverse(this.__ctx, renderMode);\n    // canvas的宽高固定初始化\n    style.width = this.width;\n    style.height = this.height;\n    this.__initStyle();\n    this.__preLay({\n      x: 0,\n      y: 0,\n      w: this.width,\n      h: this.height,\n    });\n    this.__preLayAbs(this);\n    this.render(renderMode);\n    if(renderMode === mode.SVG) {\n      let nvd = this.virtualDom;\n      if(this.node.__karasInit) {\n        domDiff(this.node.firstChild, this.node.__ovd, nvd);\n      } else {\n        this.node.innerHTML = util.joinVirtualDom(nvd);\n      }\n      this.node.__ovd = nvd;\n    }\n    if(!this.node.__karasInit) {\n      this.node.__karasInit = true;\n      this.__initEvent();\n    }\n  }\n\n  get node() {\n    return this.__node;\n  }\n}\n\nexport default CS;\n","import Geom from './Geom';\nimport mode from '../mode';\n\nclass Line extends Geom {\n  constructor(tagName, props) {\n    super(tagName, props);\n    // start和end表明线段的首尾坐标，control表明控制点坐标\n    this.__start = [];\n    this.__end = [];\n    this.__control = [];\n    if(Array.isArray(this.props.start)) {\n      this.__start = this.props.start;\n    }\n    if(Array.isArray(this.props.end)) {\n      this.__end = this.props.end;\n    }\n    if(Array.isArray(this.props.control)) {\n      this.__control = this.props.control;\n    }\n  }\n\n  render(renderMode) {\n    super.render(renderMode);\n    let { x, y, width, height, style, ctx, start, end, control, virtualDom } = this;\n    if(start.length < 2 || end.length < 2) {\n      return;\n    }\n    let {\n      display,\n      borderTopWidth,\n      borderRightWidth,\n      borderBottomWidth,\n      borderLeftWidth,\n      marginTop,\n      marginRight,\n      marginBottom,\n      marginLeft,\n      paddingTop,\n      paddingRight,\n      paddingBottom,\n      paddingLeft,\n      stroke,\n      strokeWidth,\n      strokeDasharray,\n    } = style;\n    if(display === 'none') {\n      return;\n    }\n    let originX = x + borderLeftWidth.value + marginLeft.value + paddingLeft.value;\n    let originY = y + borderTopWidth.value + marginTop.value + paddingTop.value;\n    width -= borderLeftWidth.value + borderRightWidth.value + marginLeft.value + marginRight.value + paddingLeft.value + paddingRight.value;\n    height -= borderTopWidth.value + borderBottomWidth.value + marginTop.value + marginBottom.value + paddingTop.value + paddingBottom.value;\n    let x1 = originX + start[0] * width;\n    let y1 = originY + start[1] * height;\n    let x2 = originX + end[0] * width;\n    let y2 = originY + end[1] * height;\n    let curve = 0;\n    let cx1, cy1, cx2, cy2;\n    if(Array.isArray(control[0])) {\n      curve++;\n      cx1 = originX + control[0][0] * width;\n      cy1 = originY + control[0][1] * height;\n    }\n    if(Array.isArray(control[1])) {\n      curve++;\n      cx2 = originX + control[1][0] * width;\n      cy2 = originY + control[1][1] * height;\n    }\n    if(renderMode === mode.CANVAS) {\n      ctx.strokeStyle = stroke;\n      ctx.lineWidth = strokeWidth;\n      ctx.setLineDash(strokeDasharray);\n      ctx.beginPath();\n      ctx.moveTo(x1, y1);\n      if(curve === 2) {\n        ctx.bezierCurveTo(cx1, cy1, cx2, cy2, x2, y2);\n      }\n      else if(curve === 1) {\n        ctx.quadraticCurveTo(cx1, cy1, x2, y2);\n      }\n      else {\n        ctx.lineTo(x2, y2);\n      }\n      ctx.stroke();\n      ctx.closePath();\n    }\n    else if(renderMode === mode.SVG) {\n      if(curve === 2) {\n        virtualDom.content.push({\n          type: 'item',\n          tagName: 'path',\n          props: [\n            ['d', `M${x1} ${y1} C${cx1} ${cy1} ${cx2} ${cy2} ${x2} ${y2}`],\n            ['fill', 'none'],\n            ['stroke', stroke],\n            ['stroke-width', strokeWidth],\n            ['stroke-dasharray', strokeDasharray]\n          ],\n        });\n      }\n      else if(curve === 1) {\n        virtualDom.content.push({\n          type: 'item',\n          tagName: 'path',\n          props: [\n            ['d', `M${x1} ${y1} Q${cx1} ${cy1} ${x2} ${y2}`],\n            ['fill', 'none'],\n            ['stroke', stroke],\n            ['stroke-width', strokeWidth],\n            ['stroke-dasharray', strokeDasharray]\n          ],\n        });\n      }\n      else {\n        virtualDom.content.push({\n          type: 'item',\n          tagName: 'line',\n          props: [\n            ['x1', x1],\n            ['y1', y1],\n            ['x2', x2],\n            ['y2', y2],\n            ['stroke', stroke],\n            ['stroke-width', strokeWidth],\n            ['stroke-dasharray', strokeDasharray]\n          ],\n        });\n      }\n    }\n  }\n\n  get start() {\n    return this.__start;\n  }\n  get end() {\n    return this.__end;\n  }\n  get control() {\n    return this.__control;\n  }\n}\n\nexport default Line;\n","import Geom from './Geom';\nimport mode from '../mode';\n\nclass Polyline extends Geom {\n  constructor(tagName, props) {\n    super(tagName, props);\n    // 折线所有点的列表\n    this.__points = [];\n    if(Array.isArray(this.props.points)) {\n      this.__points = this.props.points;\n    }\n    // 原点位置，4个角，默认左下\n    if(['TOP_LEFT', 'TOP_RIGHT', 'BOTTOM_LEFT', 'BOTTOM_RIGHT'].indexOf(this.props.origin) > -1) {\n      this.__origin = this.props.origin;\n    }\n    else {\n      this.__origin = 'BOTTOM_LEFT';\n    }\n  }\n\n  render(renderMode) {\n    super.render(renderMode);\n    let { x, y, width, height, style, ctx, points, origin, virtualDom } = this;\n    if(points.length < 2) {\n      return;\n    }\n    for(let i = 0, len = points.length; i < len; i++) {\n      if(!Array.isArray(points[i]) || points[i].length < 2) {\n        return;\n      }\n    }\n    let {\n      display,\n      borderTopWidth,\n      borderLeftWidth,\n      marginTop,\n      marginLeft,\n      paddingTop,\n      paddingLeft,\n      stroke,\n      strokeWidth,\n      strokeDasharray,\n    } = style;\n    if(display === 'none') {\n      return;\n    }\n    let originX = x + borderLeftWidth.value + marginLeft.value + paddingLeft.value;\n    let originY = y + borderTopWidth.value + marginTop.value + paddingTop.value;\n    let pts = this.__pts = [];\n    if(origin === 'TOP_LEFT') {\n      points.forEach(item => {\n        pts.push([\n          originX + item[0] * width,\n          originY + item[1] * height\n        ]);\n      });\n    }\n    else if(origin === 'TOP_RIGHT') {\n      points.forEach(item => {\n        pts.push([\n          originX + width - item[0] * width,\n          originY + item[1] * height\n        ]);\n      });\n    }\n    else if(origin === 'BOTTOM_LEFT') {\n      points.forEach(item => {\n        pts.push([\n          originX + item[0] * width,\n          originY + height - item[1] * height\n        ]);\n      });\n    }\n    else if(origin === 'BOTTOM_RIGHT') {\n      points.forEach(item => {\n        pts.push([\n          originX + width - item[0] * width,\n          originY + height - item[1] * height\n        ]);\n      });\n    }\n    if(renderMode === mode.CANVAS) {\n      ctx.strokeStyle = stroke;\n      ctx.lineWidth = strokeWidth;\n      ctx.setLineDash(strokeDasharray);\n      ctx.beginPath();\n      ctx.moveTo(pts[0][0], originY + pts[0][1]);\n      for(let i = 1, len = pts.length; i < len; i++) {\n        let point = pts[i];\n        ctx.lineTo(point[0], point[1]);\n      }\n      if(strokeWidth && stroke !== 'transparent') {\n        ctx.stroke();\n      }\n      ctx.closePath();\n    }\n    else if(renderMode === mode.SVG) {\n      let points = '';\n      for(let i = 0, len = pts.length; i < len; i++) {\n        let point = pts[i];\n        points += `${point[0]},${point[1]} `;\n      }\n      virtualDom.content.push({\n        type: 'item',\n        tagName: 'polyline',\n        props: [\n          ['points', points],\n          ['fill', 'none'],\n          ['stroke', stroke],\n          ['stroke-width', strokeWidth],\n          ['stroke-dasharray', strokeDasharray]\n        ],\n      });\n    }\n  }\n\n  getPointsByX(x) {\n    let min = Infinity;\n    let len = this.__pts.length;\n    let res = [];\n    for(let i = 0; i < len; i++) {\n      let diff = Math.abs(this.__pts[i][0] - x);\n      if(diff < min) {\n        min = diff;\n      }\n    }\n    for(let i = 0; i < len; i++) {\n      let diff = Math.abs(this.__pts[i][0] - x);\n      if(diff === min) {\n        res.push({\n          index: i,\n          x: this.__pts[i][0],\n          y: this.__pts[i][1],\n        });\n      }\n    }\n    return res;\n  }\n\n  get points() {\n    return this.__points;\n  }\n  get origin() {\n    return this.__origin;\n  }\n}\n\nexport default Polyline;\n","import Geom from './Geom';\nimport mode from '../mode';\n\nclass Polygon extends Geom {\n  constructor(tagName, props) {\n    super(tagName, props);\n    // 所有点的列表\n    this.__points = [];\n    if(Array.isArray(this.props.points)) {\n      this.__points = this.props.points;\n    }\n  }\n\n  render(renderMode) {\n    super.render(renderMode);\n    let { x, y, width, height, style, ctx, points, virtualDom } = this;\n    if(points.length < 3) {\n      return;\n    }\n    for(let i = 0, len = points.length; i < len; i++) {\n      if(!Array.isArray(points[i]) || points[i].length < 2) {\n        return;\n      }\n    }\n    let {\n      display,\n      borderTopWidth,\n      borderLeftWidth,\n      marginTop,\n      marginLeft,\n      paddingTop,\n      paddingLeft,\n      stroke,\n      strokeWidth,\n      strokeDasharray,\n      fill,\n    } = style;\n    if(display === 'none') {\n      return;\n    }\n    let originX = x + borderLeftWidth.value + marginLeft.value + paddingLeft.value;\n    let originY = y + borderTopWidth.value + marginTop.value + paddingTop.value;\n    points.forEach(item => {\n      item[0] = originX + item[0] * width;\n      item[1] = originY + item[1] * height;\n    });\n    if(renderMode === mode.CANVAS) {\n      ctx.strokeStyle = stroke;\n      ctx.lineWidth = strokeWidth;\n      ctx.fillStyle = fill;\n      ctx.setLineDash(strokeDasharray);\n      ctx.beginPath();\n      ctx.moveTo(points[0][0], originY + points[0][1]);\n      for(let i = 1, len = points.length; i < len; i++) {\n        let point = points[i];\n        ctx.lineTo(point[0], point[1]);\n      }\n      ctx.fill();\n      if(strokeWidth && stroke !== 'transparent') {\n        ctx.stroke();\n      }\n      ctx.closePath();\n    }\n    else if(renderMode === mode.SVG) {\n      let points = '';\n      for(let i = 0, len = points.length; i < len; i++) {\n        let point = points[i];\n        points += `${point[0]},${point[1]} `;\n      }\n      virtualDom.content.push({\n        type: 'item',\n        tagName: 'polygon',\n        props: [\n          ['points', points],\n          ['fill', fill],\n          ['stroke', stroke],\n          ['stroke-width', strokeWidth],\n          ['stroke-dasharray', strokeDasharray]\n        ],\n      });\n    }\n  }\n\n  get points() {\n    return this.__points;\n  }\n}\n\nexport default Polygon;\n","import Geom from './Geom';\nimport mode from '../mode';\n\nconst OFFSET = Math.PI * 0.5;\n\nfunction getCoordByDegree(x, y, r, d) {\n  while(d > 360) {\n    d -= 360;\n  }\n  while(d < 0) {\n    d += 360;\n  }\n  if(d >= 0 && d < 90) {\n    return [\n      x + Math.sin(d * Math.PI / 180) * r,\n      y - Math.cos(d * Math.PI / 180) * r\n    ];\n  }\n  else if(d >= 90 && d < 180) {\n    return [\n      x + Math.cos((d - 90) * Math.PI / 180) * r,\n      y + Math.sin((d - 90) * Math.PI / 180) * r,\n    ];\n  }\n  else if(d >= 180 && d < 270) {\n    return [\n      x - Math.cos((270 - d) * Math.PI / 180) * r,\n      y + Math.sin((270 - d) * Math.PI / 180) * r,\n    ];\n  }\n  else {\n    return [\n      x - Math.sin((360 - d) * Math.PI / 180) * r,\n      y - Math.cos((360 - d) * Math.PI / 180) * r,\n    ];\n  }\n}\n\nclass Sector extends Geom {\n  constructor(tagName, props) {\n    super(tagName, props);\n    // 角度\n    this.__start = 0;\n    this.__end = 0;\n    if(this.props.start) {\n      this.__start = parseFloat(this.props.start);\n      if(isNaN(this.start)) {\n        this.__start = 0;\n      }\n    }\n    if(this.props.end) {\n      this.__end = parseFloat(this.props.end);\n      if(isNaN(this.end)) {\n        this.__end = 0;\n      }\n    }\n    // 半径0~1，默认1\n    this.__r = 1;\n    if(this.props.r) {\n      this.__r = parseFloat(this.props.r);\n      if(isNaN(this.r)) {\n        this.__r = 1;\n      }\n    }\n  }\n\n  render(renderMode) {\n    super.render(renderMode);\n    let { x, y, width, height, style, ctx, start, end, r, virtualDom } = this;\n    if(start === end) {\n      return;\n    }\n    let {\n      display,\n      borderTopWidth,\n      borderLeftWidth,\n      marginTop,\n      marginLeft,\n      paddingTop,\n      paddingLeft,\n      stroke,\n      strokeWidth,\n      strokeDasharray,\n      fill,\n    } = style;\n    if(display === 'none') {\n      return;\n    }\n    let originX = x + borderLeftWidth.value + marginLeft.value + paddingLeft.value;\n    let originY = y + borderTopWidth.value + marginTop.value + paddingTop.value;\n    originX += width * 0.5;\n    originY += height * 0.5;\n    r *= Math.min(width, height) * 0.5;\n    if(renderMode === mode.CANVAS) {\n      ctx.strokeStyle = stroke;\n      ctx.lineWidth = strokeWidth;\n      ctx.fillStyle = fill;\n      ctx.setLineDash(strokeDasharray);\n      ctx.beginPath();\n      ctx.moveTo(originX, originY);\n      ctx.arc(originX, originY, r, start * Math.PI / 180 - OFFSET, end * Math.PI / 180 - OFFSET);\n      ctx.fill();\n      if(strokeWidth && stroke !== 'transparent') {\n        ctx.stroke();\n      }\n      ctx.closePath();\n    }\n    else if(renderMode === mode.SVG) {\n      let x1, y1, x2, y2;\n      [ x1, y1 ] = getCoordByDegree(originX, originY, r, start);\n      [ x2, y2 ] = getCoordByDegree(originX, originY, r, end);\n      let large = (end - start) > 180 ? 1 : 0;\n      virtualDom.content.push({\n        type: 'item',\n        tagName: 'path',\n        props: [\n          ['d', `M${originX} ${originY} L${x1} ${y1} A${r} ${r} 0 ${large} 1 ${x2} ${y2} z`],\n          ['fill', fill],\n          ['stroke', stroke],\n          ['stroke-width', strokeWidth],\n          ['stroke-dasharray', strokeDasharray]\n        ],\n      });\n    }\n  }\n\n  get start() {\n    return this.__start;\n  }\n  get end() {\n    return this.__end;\n  }\n  get r() {\n    return this.__r;\n  }\n}\n\nexport default Sector;\n","import Geom from './Geom';\nimport mode from '../mode';\n\nclass Rect extends Geom {\n  constructor(tagName, props) {\n    super(tagName, props);\n  }\n\n  render(renderMode) {\n    super.render(renderMode);\n    let { x, y, width, height, style, ctx, virtualDom } = this;\n    let {\n      display,\n      borderTopWidth,\n      borderLeftWidth,\n      marginTop,\n      marginLeft,\n      paddingTop,\n      paddingLeft,\n      stroke,\n      strokeWidth,\n      strokeDasharray,\n      fill,\n    } = style;\n    if(display === 'none') {\n      return;\n    }\n    let originX = x + borderLeftWidth.value + marginLeft.value + paddingLeft.value;\n    let originY = y + borderTopWidth.value + marginTop.value + paddingTop.value;\n    if(renderMode === mode.CANVAS) {\n      ctx.strokeStyle = stroke;\n      ctx.lineWidth = strokeWidth;\n      ctx.fillStyle = fill;\n      ctx.setLineDash(strokeDasharray);\n      ctx.beginPath();\n      ctx.moveTo(originX, originY);\n      ctx.lineTo(originX + width, originY);\n      ctx.lineTo(originX + width, originY + height);\n      ctx.lineTo(originX, originY + height);\n      ctx.fill();\n      if(strokeWidth && stroke !== 'transparent') {\n        ctx.stroke();\n      }\n      ctx.closePath();\n    }\n    else if(renderMode === mode.SVG) {\n      virtualDom.content.push({\n        type: 'item',\n        tagName: 'rect',\n        props: [\n          ['x', x],\n          ['y', y],\n          ['width', width],\n          ['height', height],\n          ['fill', fill],\n          ['stroke', stroke],\n          ['stroke-width', strokeWidth],\n          ['stroke-dasharray', strokeDasharray]\n        ],\n      });\n    }\n  }\n}\n\nexport default Rect;\n","import Geom from './Geom';\nimport mode from '../mode';\n\nclass Circle extends Geom {\n  constructor(tagName, props) {\n    super(tagName, props);\n    // 半径0~1，默认1\n    this.__r = 1;\n    if(this.props.r) {\n      this.__r = parseFloat(this.props.r);\n      if(isNaN(this.r)) {\n        this.__r = 1;\n      }\n    }\n  }\n\n  render(renderMode) {\n    super.render(renderMode);\n    let { x, y, width, height, style, ctx, r, virtualDom } = this;\n    let {\n      display,\n      borderTopWidth,\n      borderLeftWidth,\n      marginTop,\n      marginLeft,\n      paddingTop,\n      paddingLeft,\n      stroke,\n      strokeWidth,\n      strokeDasharray,\n      fill,\n    } = style;\n    if(display === 'none') {\n      return;\n    }\n    let originX = x + borderLeftWidth.value + marginLeft.value + paddingLeft.value;\n    let originY = y + borderTopWidth.value + marginTop.value + paddingTop.value;\n    originX += width * 0.5;\n    originY += height * 0.5;\n    r *= Math.min(width, height) * 0.5;\n    if(renderMode === mode.CANVAS) {\n      ctx.strokeStyle = stroke;\n      ctx.lineWidth = strokeWidth;\n      ctx.fillStyle = fill;\n      ctx.setLineDash(strokeDasharray);\n      ctx.beginPath();\n      ctx.arc(originX, originY, r, 0, 2 * Math.PI);\n      if(fill !== 'transparent') {\n        ctx.fill();\n      }\n      if(strokeWidth && stroke !== 'transparent') {\n        ctx.stroke();\n      }\n      ctx.closePath();\n    }\n    else if(renderMode === mode.SVG) {\n      virtualDom.content.push({\n        type: 'item',\n        tagName: 'circle',\n        props: [\n          ['cx', originX],\n          ['cy', originY],\n          ['r', r],\n          ['fill', fill],\n          ['stroke', stroke],\n          ['stroke-width', strokeWidth],\n          ['stroke-dasharray', strokeDasharray]\n        ],\n      });\n    }\n  }\n\n  get r() {\n    return this.__r;\n  }\n}\n\nexport default Circle;\n","import Geom from './Geom';\nimport mode from '../mode';\n\nclass Ellipse extends Geom {\n  constructor(tagName, props) {\n    super(tagName, props);\n    // 半径0~1，默认1\n    this.__rx = 1;\n    if(this.props.rx) {\n      this.__rx = parseFloat(this.props.rx);\n      if(isNaN(this.rx)) {\n        this.__rx = 1;\n      }\n    }\n    this.__ry = 1;\n    if(this.props.ry) {\n      this.__ry = parseFloat(this.props.ry);\n      if(isNaN(this.rx)) {\n        this.__ry = 1;\n      }\n    }\n  }\n\n  render(renderMode) {\n    super.render(renderMode);\n    let { x, y, width, height, style, ctx, rx, ry, virtualDom } = this;\n    let {\n      display,\n      borderTopWidth,\n      borderLeftWidth,\n      marginTop,\n      marginLeft,\n      paddingTop,\n      paddingLeft,\n      stroke,\n      strokeWidth,\n      strokeDasharray,\n      fill,\n    } = style;\n    if(display === 'none') {\n      return;\n    }\n    let originX = x + borderLeftWidth.value + marginLeft.value + paddingLeft.value;\n    let originY = y + borderTopWidth.value + marginTop.value + paddingTop.value;\n    originX += width * 0.5;\n    originY += height * 0.5;\n    rx *= width * 0.5;\n    ry *= height * 0.5;\n    if(renderMode === mode.CANVAS) {\n      ctx.strokeStyle = stroke;\n      ctx.lineWidth = strokeWidth;\n      ctx.fillStyle = fill;\n      ctx.setLineDash(strokeDasharray);\n      ctx.beginPath();\n      ctx.moveTo(originX, originY);\n      ctx.ellipse && ctx.ellipse(originX, originY, rx, ry, 0, 0, 2 * Math.PI);\n      ctx.fill();\n      if(strokeWidth && stroke !== 'transparent') {\n        ctx.stroke();\n      }\n      ctx.closePath();\n    }\n    else if(renderMode === mode.SVG) {\n      virtualDom.content.push({\n        type: 'item',\n        tagName: 'ellipse',\n        props: [\n          ['cx', originX],\n          ['cy', originY],\n          ['rx', rx],\n          ['ry', ry],\n          ['fill', fill],\n          ['stroke', stroke],\n          ['stroke-width', strokeWidth],\n          ['stroke-dasharray', strokeDasharray]\n        ],\n      });\n    }\n  }\n\n  get rx() {\n    return this.__rx;\n  }\n  get ry() {\n    return this.__ry;\n  }\n}\n\nexport default Ellipse;\n","import Geom from './Geom';\nimport mode from '../mode';\n\nclass Grid extends Geom {\n  constructor(tagName, props) {\n    super(tagName, props);\n    // x,y被分为几格\n    this.__nx = 0;\n    if(this.props.nx) {\n      this.__nx = parseFloat(this.props.nx);\n      if(isNaN(this.nx)) {\n        this.__nx = 0;\n      }\n    }\n    this.__ny = 0;\n    if(this.props.ny) {\n      this.__ny = parseFloat(this.props.ny);\n      if(isNaN(this.ny)) {\n        this.__ny = 0;\n      }\n    }\n  }\n\n  render(renderMode) {\n    super.render(renderMode);\n    let { x, y, width, height, style, ctx, nx, ny, virtualDom } = this;\n    if(width <= 0 || height <= 0) {\n      return;\n    }\n    if(nx < 3 && ny < 3) {\n      return;\n    }\n    let {\n      display,\n      borderTopWidth,\n      borderLeftWidth,\n      marginTop,\n      marginLeft,\n      paddingTop,\n      paddingLeft,\n      stroke,\n      strokeWidth,\n      strokeDasharray,\n    } = style;\n    if(display === 'none') {\n      return;\n    }\n    let originX = x + borderLeftWidth.value + marginLeft.value + paddingLeft.value;\n    let originY = y + borderTopWidth.value + marginTop.value + paddingTop.value;\n    let endX = originX + width;\n    let endY = originY + height;\n    let lx = [];\n    let ly = [];\n    if(nx >= 3) {\n      let per = width / (nx - 1);\n      for(let i = 0; i < nx; i++) {\n        ly.push(originX + i * per);\n      }\n    }\n    if(ny >= 3) {\n      let per = height / (ny - 1);\n      for(let i = 0; i < ny; i++) {\n        lx.push(originY + i * per);\n      }\n    }\n    if(renderMode === mode.CANVAS) {\n      ctx.strokeStyle = stroke;\n      ctx.lineWidth = strokeWidth;\n      ctx.setLineDash(strokeDasharray);\n      ctx.beginPath();\n      lx.forEach(item => {\n        ctx.moveTo(originX, item);\n        ctx.lineTo(endX, item);\n      });\n      ly.forEach(item => {\n        ctx.moveTo(item, originY);\n        ctx.lineTo(item, endY);\n      });\n      if(strokeWidth && stroke !== 'transparent') {\n        ctx.stroke();\n      }\n      ctx.closePath();\n    }\n    else if(renderMode === mode.SVG) {\n      lx.forEach(item => {\n        virtualDom.content.push({\n          type: 'item',\n          tagName: 'line',\n          props: [\n            ['x1', originX],\n            ['y1', item],\n            ['x2', endX],\n            ['y2', item],\n            ['stroke', stroke],\n            ['stroke-width', strokeWidth],\n            ['stroke-dasharray', strokeDasharray]\n          ],\n        });\n      });\n      ly.forEach(item => {\n        virtualDom.content.push({\n          type: 'item',\n          tagName: 'line',\n          props: [\n            ['x1', item],\n            ['y1', originY],\n            ['x2', item],\n            ['y2', endY],\n            ['stroke', stroke],\n            ['stroke-width', strokeWidth],\n            ['stroke-dasharray', strokeDasharray]\n          ],\n        });\n      });\n    }\n  }\n\n  get nx() {\n    return this.__nx;\n  }\n  get ny() {\n    return this.__ny;\n  }\n  get dash() {\n    return this.__dash;\n  }\n}\n\nexport default Grid;\n","import Dom from './node/Dom';\nimport CS from './node/CS';\nimport Geom from './geom/Geom';\nimport Line from './geom/Line';\nimport Polyline from './geom/Polyline';\nimport Polygon from './geom/Polygon';\nimport Sector from './geom/Sector';\nimport Rect from './geom/Rect';\nimport Circle from './geom/Circle';\nimport Ellipse from './geom/Ellipse';\nimport Grid from './geom/Grid';\n\nGeom.register('$line', Line);\nGeom.register('$polyline', Polyline);\nGeom.register('$polygon', Polygon);\nGeom.register('$sector', Sector);\nGeom.register('$rect', Rect);\nGeom.register('$circle', Circle);\nGeom.register('$ellipse', Ellipse);\nGeom.register('$grid', Grid);\n\nlet karas = {\n  render(cs, dom) {\n    if(!(cs instanceof CS)) {\n      throw new Error('render root muse be canvas or svg');\n    }\n    if(dom) {\n      cs.appendTo(dom);\n    }\n    return cs;\n  },\n  createVd(tagName, props, children) {\n    if(['canvas', 'svg'].indexOf(tagName) > -1) {\n      return new CS(tagName, props, children);\n    }\n    if(Dom.isValid(tagName)) {\n      return new Dom(tagName, props, children);\n    }\n    throw new Error('can not use marker: ' + tagName);\n  },\n  createGm(tagName, props) {\n    let klass = Geom.getImplement(tagName);\n    return new klass(tagName, props);\n  },\n  createCp(cp, props) {\n    return new cp(props);\n  },\n  Geom,\n};\n\nif(typeof window != 'undefined') {\n  window.karas = karas;\n}\n\nexport default karas;\n"],"names":["div","Node","__x","__y","__width","__height","__prev","__next","__ctx","__parent","__style","__baseLine","__virtualDom","diff","this","s","style","document","createElement","position","left","top","visibility","body","appendChild","fontSize","innerText","css","window","getComputedStyle","parseFloat","width","Xom","tagName","props","Array","isArray","arr","hash","i","len","length","item","list","Object","keys","j","k","arr2hash","__props","temp","push","splice","spread","hash2arr","__tagName","_this","__listener","forEach","test","slice","toLowerCase","data","display","__preLayBlock","__preLayFlex","__preLayInline","parent","height","right","bottom","unit","value","__offsetX","__offsetY","renderMode","bb","ctx","x","y","virtualDom","backgroundColor","borderTopWidth","borderTopColor","borderRightWidth","borderRightColor","borderBottomWidth","borderBottomColor","borderLeftWidth","borderLeftColor","marginTop","marginLeft","paddingTop","paddingRight","paddingBottom","paddingLeft","x1","y1","w","h","mode","beginPath","fillStyle","rect","fill","closePath","type","x2","lineWidth","strokeStyle","moveTo","lineTo","stroke","y2","marginRight","marginBottom","lhr","car","blr","mdr","lgr","RESET","borderSizing","fontFamily","color","fontStyle","fontWeight","lineHeight","borderTopStyle","borderRightStyle","borderBottomStyle","borderLeftStyle","verticalAlign","flexGrow","flexShrink","flexBasis","flexDirection","justifyContent","alignItems","textAlign","strokeWidth","strokeDasharray","reset","v","toString","isType","obj","call","isNumber","stringify","isNil","util","isObject","isString","isFunction","isBoolean","isDate","joinSourceArray","res","encodeHtml","prop","replace","joinVirtualDom","vd","content","children","parserOneBorder","direction","key","exec","c","indexOf","normalize","hasOwnProperty","background","bgc","flex","border","borderTop","borderRight","borderBottom","borderLeft","margin","padding","font","Math","max","setFontStyle","getBaseLine","normal","LineBox","__content","fillText","CHAR_WIDTH_CACHE","Text","__lineBoxes","__charWidthList","__charWidth","__textWidth","charWidthList","cache","sum","char","charAt","mw","measureText","charWidth","isVirtual","maxX","lineBoxes","begin","count","lineBox","_this2","render","map","textWidth","n","min","last","baseLine","__renderMode","LineGroup","__list","__calBaseLine","IMPLEMENT","Geom","total","isDirectionRow","b","main","fixedHeight","fixedWidth","e","force","cb","event","xe","ye","covers","listener","outerWidth","outerHeight","target","name","Error","implement","TAG_NAME","INLINE","Dom","__children","__flowChildren","__absChildren","__lineGroups","__flowY","__traverseChildren","prev","_this3","__traverse","text","parentStyle","__initStyle","__measure","flowChildren","__tryLayInline","isRecursion","__calAutoBasis","b2","min2","max2","__preLay","__calAbs","Infinity","lineGroups","lineGroup","add","size","horizonAlign","growList","shrinkList","basisList","minList","growSum","shrinkSum","basisSum","maxSum","maxCross","isOverflow","shrink","grow","overflow","free","child","center","between","around","_this4","absChildren","container","flowY","pw","ph","__preLayAbs","w2","h2","width2","height2","widthPx","heightPx","hasChildEmit","__emitEvent","elem","ovd","nvd","diffBb","firstChild","ol","nl","lastChild","cns","childNodes","removeAt","insertAt","diffD2D","replaceWith","diffD2G","diffItem","diffT2T","diffG2D","diffG2G","obb","nbb","isText","op","setAttribute","removeAttribute","textContent","insertAdjacentHTML","parentNode","removeChild","index","CS","__node","undefined","parseInt","isNaN","touches","node","getBoundingClientRect","clientX","clientY","addEventListener","__cb","dom","o","querySelector","getDom","__initProps","nodeName","toUpperCase","innerHTML","__genHtml","getPropertyValue","getContext","clearRect","__karasInit","domDiff","__ovd","__initEvent","Line","__start","__end","__control","start","end","control","originX","originY","cx1","cy1","cx2","cy2","curve","setLineDash","bezierCurveTo","quadraticCurveTo","Polyline","__points","points","origin","__origin","pts","__pts","point","abs","Polygon","OFFSET","PI","getCoordByDegree","r","d","sin","cos","Sector","__r","arc","large","Rect","Circle","Ellipse","__rx","rx","__ry","ry","ellipse","Grid","__nx","nx","__ny","ny","endX","endY","lx","ly","per","__dash","register","karas","cs","appendTo","createVd","isValid","createGm","getImplement","createCp","cp"],"mappings":"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"}