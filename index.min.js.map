{"version":3,"file":"index.min.js","sources":["src/node/mode.js","src/node/Node.js","src/node/Xom.js","src/style/unit.js","src/style/font.js","src/style/reset.js","src/util.js","src/style/css.js","src/node/LineBox.js","src/node/Text.js","src/node/LineGroup.js","src/geom/Geom.js","src/node/Dom.js","src/node/CS.js","src/geom/Line.js","src/geom/Polygon.js","src/index.js"],"sourcesContent":["let mode = 0;\nlet measureDom;\nlet svgHtml;\n\nexport default {\n  setCanvas() {\n    mode = 0;\n  },\n  setSvg() {\n    mode = 1;\n    svgHtml = '';\n  },\n  isCanvas() {\n    return mode === 0;\n  },\n  isSvg() {\n    return mode === 1;\n  },\n  appendHtml(s) {\n    svgHtml += s;\n  },\n  get html() {\n    return svgHtml;\n  },\n  get measure() {\n    if(!measureDom) {\n      measureDom = document.createElement('div');\n      measureDom.style.position = 'absolute';\n      measureDom.style.left = '99999px';\n      measureDom.style.top = '-99999px';\n      measureDom.style.visibility = 'hidden';\n      document.body.appendChild(measureDom);\n    }\n    return measureDom;\n  }\n};\n","class Node {\n  constructor() {\n    this.__x = 0;\n    this.__y = 0;\n    this.__width = 0;\n    this.__height = 0;\n    this.__prev = null;\n    this.__next = null;\n    this.__ctx = null; // canvas的context\n    this.__parent = null;\n    this.__style = {}; // style被解析后的k-v形式\n    this.__baseLine = 0;\n  }\n\n  __offsetX(diff) {\n    this.__x += diff;\n  }\n\n  __offsetY(diff) {\n    this.__y += diff;\n  }\n\n  get x() {\n    return this.__x;\n  }\n  get y() {\n    return this.__y;\n  }\n  get width() {\n    return this.__width;\n  }\n  get height() {\n    return this.__height;\n  }\n  get outerWidth() {\n    return this.__width;\n  }\n  get outerHeight() {\n    return this.__height;\n  }\n  get prev() {\n    return this.__prev;\n  }\n  get next() {\n    return this.__next;\n  }\n  get parent() {\n    return this.__parent;\n  }\n  get style() {\n    return this.__style;\n  }\n  get ctx() {\n    return this.__ctx;\n  }\n  get baseLine() {\n    return this.__baseLine;\n  }\n}\n\nexport default Node;\n","import Node from './Node';\nimport mode from './mode';\n\nfunction arr2hash(arr) {\n  let hash = {};\n  for(let i = 0, len = arr.length; i < len; i++) {\n    let item = arr[i];\n    if(Array.isArray(item)) {\n      hash[item[0]] = item[1];\n    }\n    else {\n      for(let list = Object.keys(item), j = list.length - 1; j >= 0; j--) {\n        let k = list[j];\n        hash[k] = item[k];\n      }\n    }\n  }\n  return hash;\n}\n\nfunction hash2arr(hash) {\n  let arr = [];\n  for(let list = Object.keys(hash), i = 0, len = list.length; i < len; i++) {\n    let k = list[i];\n    arr.push([k, hash[k]]);\n  }\n  return arr;\n}\n\nfunction spread(arr) {\n  for(let i = 0, len = arr.length; i < len; i++) {\n    let item = arr[i];\n    if(!Array.isArray(item)) {\n      let temp = [];\n      for(let list = Object.keys(item), j = 0, len = list.length; j < len; j++) {\n        let k = list[j];\n        temp.push([k, item[k]]);\n      }\n      arr.splice(i, 1, ...temp);\n    }\n  }\n  return arr;\n}\n\nclass Xom extends Node {\n  constructor(tagName, props) {\n    super();\n    props = props || [];\n    // 构建工具中都是arr，手写可能出现hash情况\n    if(Array.isArray(props)) {\n      this.props = arr2hash(props);\n      this.__props = spread(props);\n    }\n    else {\n      this.props = props;\n      this.__props = hash2arr(props);\n    }\n    this.__tagName = tagName;\n    this.__style = this.props.style || {}; // style被解析后的k-v形式\n  }\n\n  __preLay(data) {\n    let { style } = this;\n    if(style.position === 'absolute') {\n      let raParent = this.raParent;\n    }\n    if(style.display === 'block') {\n      this.__preLayBlock(data);\n    }\n    else if(style.display === 'flex') {\n      this.__preLayFlex(data);\n    }\n    else {\n      this.__preLayInline(data);\n    }\n  }\n\n  render() {\n    let { ctx, style, x, y, width, height, outerWidth, outerHeight } = this;\n    let {\n      backgroundColor,\n      borderTopWidth,\n      borderTopColor,\n      borderRightWidth,\n      borderRightColor,\n      borderBottomWidth,\n      borderBottomColor,\n      borderLeftWidth,\n      borderLeftColor,\n      marginTop,\n      marginLeft,\n      paddingTop,\n      paddingRight,\n      paddingBottom,\n      paddingLeft,\n    } = style;\n    if(marginLeft) {\n      x += marginLeft.value;\n    }\n    if(marginTop) {\n      y += marginTop.value;\n    }\n    if(backgroundColor) {\n      let x1 = x;\n      if(borderLeftWidth) {\n        x1 += borderLeftWidth.value;\n      }\n      let y1 = y;\n      if(borderTopWidth) {\n        y1 += borderTopWidth.value;\n      }\n      let w = width + paddingLeft.value + paddingRight.value;\n      let h = height + paddingTop.value + paddingBottom.value;\n      if(mode.isCanvas()) {\n        ctx.beginPath();\n        ctx.fillStyle = backgroundColor;\n        ctx.rect(x1, y1, w, h);\n        ctx.fill();\n        ctx.closePath();\n      }\n      else if(mode.isSvg()) {\n        mode.appendHtml(`<rect x=\"${x1}\" y=\"${y1}\" width=\"${w}\" height=\"${h}\" fill=\"${backgroundColor}\"/>`);\n      }\n    }\n    if(borderTopWidth.value) {\n      let x1 = x + borderLeftWidth.value;\n      let y1 = y + borderTopWidth.value * 0.5;\n      let x2 = x1 + width;\n      if(paddingLeft) {\n        x2 += paddingLeft.value;\n      }\n      if(paddingRight) {\n        x2 += paddingRight.value;\n      }\n      if(mode.isCanvas()) {\n        ctx.beginPath();\n        ctx.lineWidth = borderTopWidth.value;\n        ctx.strokeStyle = borderTopColor;\n        ctx.moveTo(x1, y1);\n        ctx.lineTo(x2, y1);\n        ctx.stroke();\n        ctx.closePath();\n      }\n      else {\n        mode.appendHtml(`<line x1=\"${x1}\" y1=\"${y1}\" x2=\"${x2}\" y2=\"${y1}\" stroke-width=\"${borderTopWidth.value}\" stroke=\"${borderTopColor}\"/>`);\n      }\n    }\n    if(borderRightWidth.value) {\n      let x1 = x + width + borderLeftWidth.value + borderRightWidth.value * 0.5;\n      let y1 = y;\n      let y2 = y1 + height + borderTopWidth.value + borderBottomWidth.value;\n      if(paddingLeft) {\n        x1 += paddingLeft.value;\n      }\n      if(paddingRight) {\n        x1 += paddingRight.value;\n      }\n      if(paddingTop) {\n        y2 += paddingTop.value;\n      }\n      if(paddingBottom) {\n        y2 += paddingBottom.value;\n      }\n      if(mode.isCanvas()) {\n        ctx.beginPath();\n        ctx.lineWidth = borderRightWidth.value;\n        ctx.strokeStyle = borderRightColor;\n        ctx.moveTo(x1, y1);\n        ctx.lineTo(x1, y2);\n        ctx.stroke();\n        ctx.closePath();\n      }\n      else {\n        mode.appendHtml(`<line x1=\"${x1}\" y1=\"${y1}\" x2=\"${x1}\" y2=\"${y2}\" stroke-width=\"${borderRightWidth.value}\" stroke=\"${borderRightColor}\"/>`);\n      }\n    }\n    if(borderBottomWidth.value) {\n      let x1 = x + borderLeftWidth.value;\n      let y1 = y + height + borderTopWidth.value + borderBottomWidth.value * 0.5;\n      let x2 = x1 + width;\n      if(paddingLeft) {\n        x2 += paddingLeft.value;\n      }\n      if(paddingRight) {\n        x2 += paddingRight.value;\n      }\n      if(paddingTop) {\n        y1 += paddingTop.value;\n      }\n      if(paddingBottom) {\n        y1 += paddingBottom.value;\n      }\n      if(mode.isCanvas()) {\n        ctx.beginPath();\n        ctx.lineWidth = borderBottomWidth.value;\n        ctx.strokeStyle = borderBottomColor;\n        ctx.moveTo(x1, y1);\n        ctx.lineTo(x2, y1);\n        ctx.stroke();\n        ctx.closePath();\n      }\n      else {\n        mode.appendHtml(`<line x1=\"${x1}\" y1=\"${y1}\" x2=\"${x2}\" y2=\"${y1}\" stroke-width=\"${borderBottomWidth.value}\" stroke=\"${borderBottomColor}\"/>`);\n      }\n    }\n    if(borderLeftWidth.value) {\n      let x1 = x + borderLeftWidth.value * 0.5;\n      let y1 = y;\n      let y2 = y1 + height + borderTopWidth.value + borderBottomWidth.value;\n      if(paddingTop) {\n        y2 += paddingTop.value;\n      }\n      if(paddingBottom) {\n        y2 += paddingBottom.value;\n      }\n      if(mode.isCanvas()) {\n        ctx.beginPath();\n        ctx.lineWidth = borderLeftWidth.value;\n        ctx.strokeStyle = borderLeftColor;\n        ctx.moveTo(x1, y1);\n        ctx.lineTo(x1, y2);\n        ctx.stroke();\n        ctx.closePath();\n      }\n      else {\n        mode.appendHtml(`<line x1=\"${x1}\" y1=\"${y1}\" x2=\"${x1}\" y2=\"${y2}\" stroke-width=\"${borderLeftWidth.value}\" stroke=\"${borderLeftColor}\"/>`);\n      }\n    }\n  }\n\n  get tagName() {\n    return this.__tagName;\n  }\n  get outerWidth() {\n    let { style: {\n      borderLeftWidth,\n      borderRightWidth,\n      marginLeft,\n      marginRight,\n      paddingLeft,\n      paddingRight,\n    } } = this;\n    return this.width\n      + borderLeftWidth.value\n      + borderRightWidth.value\n      + marginLeft.value\n      + marginRight.value\n      + paddingLeft.value\n      + paddingRight.value;\n  }\n  get outerHeight() {\n    let { style: {\n      borderTopWidth,\n      borderBottomWidth,\n      marginTop,\n      marginBottom,\n      paddingTop,\n      paddingBottom,\n    } } = this;\n    return this.height\n      + borderTopWidth.value\n      + borderBottomWidth.value\n      + marginTop.value\n      + marginBottom.value\n      + paddingTop.value\n      + paddingBottom.value;\n  }\n  get raParent() {\n    let dom = this.parent;\n    while(dom.parent) {\n      if(['relative', 'absolute'].indexOf(dom.style.position) > -1) {\n        break;\n      }\n      dom = dom.parent;\n    }\n    return dom;\n  }\n}\n\nexport default Xom;\n","export default {\n  AUTO: 0,\n  PX: 1,\n  PERCENT: 2,\n};\n","'use strict';\n\nexport default {\n  arial: {\n    lhr: 1.14990234375, // 默认line-height ratio，(67+1854+434)/2048\n    car: 1.1171875, // content-area ratio，(1854+434)/2048\n    blr: 0.9052734375, // base-line ratio，1854/2048\n    mdr: 0.64599609375, // middle ratio，(1854-1062/2)/2048\n    lgr: 0.03271484375, // line-gap ratio，67/2048\n  },\n};\n","const RESET = {\n  position: 'static',\n  display: 'block',\n  borderSizing: 'content-box',\n  marginTop: 0,\n  marginRight: 0,\n  marginBottom: 0,\n  marginLeft: 0,\n  paddingTop: 0,\n  paddingRight: 0,\n  paddingBottom: 0,\n  paddingLeft: 0,\n  fontSize: 16,\n  fontFamily: 'arial',\n  color: '#000',\n  fontStyle: 'normal',\n  fontWeight: 400,\n  lineHeight: 'normal',\n  borderTopWidth: 0,\n  borderRightWidth: 0,\n  borderBottomWidth: 0,\n  borderLeftWidth: 0,\n  borderTopStyle: 'solid',\n  borderRightStyle: 'solid',\n  borderBottomStyle: 'solid',\n  borderLeftStyle: 'solid',\n  verticalAlign: 'baseline',\n  width: 'auto',\n  height: 'auto',\n  flexGrow: 0,\n  flexShrink: 1,\n  flexBasis: 'auto',\n  flexDirection: 'row',\n  justifyContent: 'flex-start',\n  alignItem: 'stretch',\n  textAlign: 'left',\n  stroke: '#000',\n  strokeWidth: 1,\n};\n\nlet reset = [];\n\nObject.keys(RESET).forEach(k => {\n  let v = RESET[k];\n  reset.push({\n    k,\n    v,\n  });\n});\n\nexport default reset;\n","let toString = {}.toString;\nfunction isType(type) {\n  return function(obj) {\n    return toString.call(obj) === '[object ' + type + ']';\n  }\n}\n\nlet isNumber = isType('Number');\n\nfunction joinSourceArray(arr) {\n  var res = '';\n  for(var i = 0, len = arr.length; i < len; i++) {\n    var item = arr[i];\n    if(Array.isArray(item)) {\n      res += joinSourceArray(item);\n    }\n    else {\n      res += stringify(item);\n    }\n  }\n  return res;\n}\n\nfunction stringify(s) {\n  if(isNil(s)) {\n    return '';\n  }\n  return s.toString();\n}\n\nfunction encodeHtml(s, prop) {\n  if(prop) {\n    return s.replace(/\"/g, '&quot;');\n  }\n  return s.replace(/&/g, '&amp;').replace(/</g, '&lt;');\n}\n\nfunction isNil(v) {\n  return v === undefined || v === null;\n}\n\nlet util = {\n  isObject: isType('Object'),\n  isString: isType('String'),\n  isFunction: isType('Function'),\n  isNumber,\n  isBoolean: isType('Boolean'),\n  isDate: isType('Date'),\n  stringify,\n  joinSourceArray(arr) {\n    return joinSourceArray(arr);\n  },\n  encodeHtml,\n  isNil,\n};\n\nexport default util;\n","import unit from './unit';\nimport font from './font';\nimport reset from './reset';\nimport util from '../util';\n\nfunction parserOneBorder(style, direction) {\n  let key = `border${direction}`;\n  if(!style[key]) {\n    return;\n  }\n  let w = /\\b\\d+px\\b/i.exec(style[key]);\n  if(w) {\n    style[key + 'Width'] = w[0];\n  }\n  let s = /\\bsolid\\b/i.exec(style[key]);\n  if(s) {\n    style[key + 'Style'] = s[0];\n  }\n  let c = /#[0-9a-f]{3,6}/i.exec(style[key]);\n  if(c && [4, 7].indexOf(c[0].length) > -1) {\n    style[key + 'Color'] = c[0];\n  }\n}\n\nfunction normalize(style) {\n  // 默认reset\n  reset.forEach(item => {\n    if(!style.hasOwnProperty(item.k)) {\n      style[item.k] = item.v;\n    }\n  });\n  // 处理缩写\n  // TODO: 重复声明时优先级\n  if(style.background) {\n    let bgc = /#[0-9a-f]{3,6}/i.exec(style.background);\n    if(bgc && [4, 7].indexOf(bgc[0].length) > -1) {\n      style.backgroundColor = bgc[0];\n    }\n  }\n  if(style.flex) {\n    if(style.flex === 'none') {\n      style.flexGrow = 0;\n      style.flexShrink = 0;\n      style.flexBasis = 'auto';\n    }\n    else if(style.flex === 'auto') {\n      style.flexGrow = 1;\n      style.flexShrink = 1;\n      style.flexBasis = 'auto';\n    }\n    else if(/^[\\d.]+$/.test(style.flex)) {\n      style.flexGrow = parseFloat(style.flex);\n      style.flexShrink = 1;\n      style.flexBasis = 0;\n    }\n    else if(/^[\\d.]+px$/.test(style.flex)) {}\n    else if(/^[\\d.]+%$/.test(style.flex)) {}\n    else {\n      style.flexGrow = 0;\n      style.flexShrink = 1;\n      style.flexBasis = 'auto';\n    }\n  }\n  if(style.border) {\n    style.borderTop = style.borderRight = style.borderBottom = style.borderLeft = style.border;\n  }\n  if(style.margin) {\n    style.marginTop = style.marginRight = style.marginBottom = style.marginLeft = style.margin;\n  }\n  if(style.padding) {\n    style.paddingTop = style.paddingRight = style.paddingBottom = style.paddingLeft = style.padding;\n  }\n  parserOneBorder(style, 'Top');\n  parserOneBorder(style, 'Right');\n  parserOneBorder(style, 'Bottom');\n  parserOneBorder(style, 'Left');\n  // 转化不同单位值为对象标准化\n  [\n    'marginTop',\n    'marginRight',\n    'marginBottom',\n    'marginLeft',\n    'paddingTop',\n    'paddingRight',\n    'paddingBottom',\n    'paddingLeft',\n    'borderTopWidth',\n    'borderRightWidth',\n    'borderBottomWidth',\n    'borderLeftWidth',\n    'width',\n    'height',\n    'flexBasis',\n  ].forEach(k => {\n    let v = style[k];\n    // 编译工具前置解析优化跳出\n    if(!util.isNil(v) && v.unit) {\n      return;\n    }\n    if(v === 'auto') {\n      style[k] = {\n        unit: unit.AUTO,\n      };\n    }\n    else if(/%$/.test(v)) {\n      v = parseFloat(v) || 0;\n      if(v <= 0) {\n        style[k] = {\n          value: 0,\n          unit: unit.PX,\n        };\n      }\n      else {\n        style[k] = {\n          value: v,\n          unit: unit.PERCENT,\n        };\n      }\n    }\n    else {\n      v = parseFloat(v) || 0;\n      style[k] = {\n        value: Math.max(v, 0),\n        unit: unit.PX,\n      };\n    }\n  });\n  // 计算lineHeight为px值，最小范围\n  let lineHeight = style.lineHeight;\n  if(lineHeight === 'normal') {\n    lineHeight = {\n      value: style.fontSize * font.arial.lhr,\n      unit: unit.PX,\n    };\n  }\n  else if(/px$/.test(lineHeight)) {\n    lineHeight = parseFloat(lineHeight);\n    lineHeight = {\n      value: Math.max(style.fontSize, lineHeight),\n      unit: unit.PX,\n    };\n  }\n  // 纯数字比例\n  else {\n    lineHeight = parseFloat(lineHeight) || 'normal';\n    // 非法数字\n    if(lineHeight === 'normal') {\n      lineHeight = {\n        value: style.fontSize * font.arial.lhr,\n        unit: unit.PX,\n      };\n    }\n    else {\n      lineHeight = {\n        value: lineHeight * style.fontSize,\n        unit: unit.PX,\n      };\n    }\n  }\n  style.lineHeight = lineHeight;\n}\n\nfunction setFontStyle(style) {\n  let { fontStyle, fontWeight, fontSize, fontFamily } = style;\n  return `${fontStyle} ${fontWeight} ${fontSize}px/${fontSize}px ${fontFamily}`;\n}\n\nfunction getBaseLine(style) {\n  let normal = style.fontSize * font.arial.lhr;\n  return (style.lineHeight.value - normal) * 0.5 + style.fontSize * font.arial.blr;\n}\n\nexport default {\n  normalize,\n  setFontStyle,\n  getBaseLine,\n};\n","import css from '../style/css';\nimport mode from './mode';\n\nclass LineBox {\n  constructor(ctx, x, y, content, style) {\n    this.__ctx = ctx;\n    this.__x = x;\n    this.__y = y;\n    this.__content = content;\n    this.__style = style;\n  }\n\n  render() {\n    let { ctx, style, content, x, y } = this;\n    if(mode.isCanvas()) {\n      ctx.fillStyle = style.color;\n      ctx.fillText(content, x, y + css.getBaseLine(style));\n    }\n    else if(mode.isSvg()) {\n      mode.appendHtml(`<text x=\"${x}\" y=\"${y + css.getBaseLine(style)}\" fill=\"${style.color}\" font-size=\"${style.fontSize}px\">${content}</text>`);\n    }\n  }\n\n  __offsetX(diff) {\n    this.__x += diff;\n  }\n\n  __offsetY(diff) {\n    this.__y += diff;\n  }\n\n  get ctx() {\n    return this.__ctx;\n  }\n  get x() {\n    return this.__x;\n  }\n  get y() {\n    return this.__y;\n  }\n  get content() {\n    return this.__content;\n  }\n  get style() {\n    return this.__style;\n  }\n  get baseLine() {\n    return css.getBaseLine(this.style);\n  }\n}\n\nexport default LineBox;\n","import Node from './Node';\nimport LineBox from './LineBox';\nimport css from '../style/css';\nimport mode from './mode';\n\nconst CHAR_WIDTH_CACHE = {};\n\nclass Text extends Node {\n  constructor(content) {\n    super();\n    this.__content = content.toString();\n    this.__lineBoxes = [];\n    this.__charWidthList = [];\n    this.__charWidth = 0;\n    this.__textWidth = 0;\n  }\n\n  // 预先计算每个字的宽度\n  __measure() {\n    this.__charWidthList = [];\n    let { ctx, content, style, charWidthList } = this;\n    if(mode.isCanvas()) {\n      ctx.font = css.setFontStyle(style);\n    }\n    let cache = CHAR_WIDTH_CACHE[style.fontSize] = CHAR_WIDTH_CACHE[style.fontSize] || {};\n    let length = content.length;\n    let sum = 0;\n    for(let i = 0; i < length; i++) {\n      let char = content.charAt(i);\n      let mw;\n      if(cache.hasOwnProperty(char)) {\n        mw = cache[char];\n      }\n      else if(mode.isCanvas()) {\n        mw = ctx.measureText(char).width;\n      }\n      else if(mode.isSvg()) {\n        let dom = mode.measure;\n        dom.style.fontSize = style.fontSize + 'px';\n        dom.innerText = char;\n        let css = window.getComputedStyle(dom, null);\n        mw = parseFloat(css.width);\n      }\n      charWidthList.push(mw);\n      sum += mw;\n      this.__charWidth = Math.max(this.charWidth, mw);\n    }\n    this.__textWidth = sum;\n  }\n\n  __preLay(data, isVirtual) {\n    let { x, y, w, h } = data;\n    this.__x = x;\n    this.__y = y;\n    let maxX = x;\n    let { ctx, content, style, lineBoxes, charWidthList } = this;\n    // 顺序尝试分割字符串为lineBox，形成多行\n    let begin = 0;\n    let i = 0;\n    let count = 0;\n    let length = content.length;\n    while(i < length) {\n      count += charWidthList[i];\n      if (count === w) {\n        let lineBox = new LineBox(ctx, x, y, content.slice(begin, i + 1), style);\n        lineBoxes.push(lineBox);\n        maxX = Math.max(maxX, x + count);\n        y += this.style.lineHeight.value;\n        begin = i + 1;\n        i = begin + 1;\n        count = 0;\n      }\n      else if (count > w) {\n        // 宽度不足时无法跳出循环，至少也要塞个字符形成一行\n        if(i === begin) {\n          i = begin + 1;\n        }\n        let lineBox = new LineBox(ctx, x, y, content.slice(begin, i), style);\n        lineBoxes.push(lineBox);\n        maxX = Math.max(maxX, x + count - charWidthList[i]);\n        y += this.style.lineHeight.value;\n        begin = i;\n        i = i + 1;\n        count = 0;\n      }\n      else {\n        i++;\n      }\n    }\n    if(begin < length && begin < i) {\n      let lineBox = new LineBox(ctx, x, y, content.slice(begin, i), style);\n      lineBoxes.push(lineBox);\n      maxX = Math.max(maxX, x + count);\n      y += this.style.lineHeight.value;\n    }\n    this.__width = maxX - x;\n    this.__height = y - data.y;\n    if(isVirtual) {\n      this.__lineBoxes = [];\n    }\n  }\n\n  render() {\n    if(mode.isCanvas()) {\n      this.ctx.font = css.setFontStyle(this.style);\n    }\n    this.lineBoxes.forEach(item => {\n      item.render();\n    });\n  }\n\n  __tryLayInline(w) {\n    this.ctx.font = css.setFontStyle(this.style);\n    let tw = this.ctx.measureText(this.content).width;\n    return w - tw;\n  }\n\n  __offsetX(diff) {\n    super.__offsetX(diff);\n    this.lineBoxes.forEach(item => {\n      item.__offsetX(diff);\n    });\n  }\n\n  __offsetY(diff) {\n    super.__offsetY(diff);\n    this.lineBoxes.forEach(item => {\n      item.__offsetY(diff);\n    });\n  }\n\n  __calMaxAndMinWidth() {\n    let n = 0;\n    this.charWidthList.forEach(item => {\n      n = Math.max(n, item);\n    });\n    return { max: this.textWidth, min: n };\n  }\n\n  get content() {\n    return this.__content;\n  }\n  set content(v) {\n    this.__content = v;\n  }\n  get lineBoxes() {\n    return this.__lineBoxes;\n  }\n  get charWidthList() {\n    return this.__charWidthList;\n  }\n  get charWidth() {\n    return this.__charWidth;\n  }\n  get textWidth() {\n    return this.__textWidth;\n  }\n  get baseLine() {\n    let last = this.lineBoxes[this.lineBoxes.length - 1];\n    return last.y - this.y + last.baseLine;\n  }\n}\n\nexport default Text;\n","class LineGroup {\n  constructor(x, y) {\n    this.__list = [];\n    this.__x = x;\n    this.__y = y;\n    this.__height = 0;\n    this.__baseLine = 0;\n  }\n\n  add(item) {\n    this.list.push(item);\n  }\n\n  __calBaseLine() {\n    let baseLine = 0;\n    this.list.forEach(item => {\n      baseLine = Math.max(baseLine, item.baseLine);\n    });\n    return baseLine;\n  }\n\n  __calHeight() {\n    let height = 0;\n    this.list.forEach(item => {\n      height = Math.max(height, item.height);\n    });\n    return height;\n  }\n\n  verticalAlign() {\n    this.__height = this.__calHeight();\n    this.__baseLine = this.__calBaseLine();\n    // 仅当有2个和以上时才需要vertical对齐调整\n    if(this.list.length > 1) {\n      this.list.forEach(item => {\n        if(item.baseLine !== this.baseLine) {\n          item.__offsetY(this.baseLine - item.baseLine);\n        }\n      });\n    }\n  }\n\n  get list() {\n    return this.__list;\n  }\n  get x() {\n    return this.__x;\n  }\n  get y() {\n    return this.__y;\n  }\n  get height() {\n    return this.__height;\n  }\n  get baseLine() {\n    return this.__baseLine;\n  }\n  get size() {\n    return this.__list.length;\n  }\n}\n\nexport default LineGroup;\n","import Xom from '../node/Xom';\nimport css from '../style/css';\nimport unit from '../style/unit';\n\nconst TAG_NAME = {\n  '$line': true,\n  '$polygon': true,\n};\n\nclass Geom extends Xom {\n  constructor(tagName, props) {\n    super(tagName, props);\n  }\n\n  __initStyle() {\n    css.normalize(this.style);\n  }\n\n  __tryLayInline(w, total) {\n    // 无children，直接以style的width为宽度，不定义则为0\n    let { style: { width } } = this;\n    if(width.unit === unit.PX) {\n      return w - width.value;\n    }\n    else if(width.unit === unit.PERCENT) {\n      return w - total * width.value * 0.01;\n    }\n    return w;\n  }\n\n  __calAutoBasis(isDirectionRow, w, h) {\n    let b = 0;\n    let min = 0;\n    let max = 0;\n    let { style } = this;\n    // 计算需考虑style的属性\n    let {\n      width,\n      height,\n      borderTopWidth,\n      borderRightWidth,\n      borderBottomWidth,\n      borderLeftWidth,\n    } = style;\n    let main = isDirectionRow ? width : height;\n    if(main.unit !== unit.AUTO) {\n      b = max += main.value;\n    }\n    // border也得计算在内\n    if(isDirectionRow) {\n      let w = borderRightWidth.value + borderLeftWidth.value;\n      b += w;\n      max += w;\n      min += w;\n    }\n    else {\n      let h = borderTopWidth.value + borderBottomWidth.value;\n      b += h;\n      max += h;\n      min += h;\n    }\n    return { b, min, max };\n  }\n\n  __preLayBlock(data) {\n    let { x, y, w, h } = data;\n    this.__x = x;\n    this.__y = y;\n    this.__width = w;\n    let { style } = this;\n    let {\n      width,\n      height,\n      borderTopWidth,\n      borderRightWidth,\n      borderBottomWidth,\n      borderLeftWidth,\n    } = style;\n    // 除了auto外都是固定高度\n    let fixedHeight;\n    if(width && width.unit !== unit.AUTO) {\n      switch(width.unit) {\n        case unit.PX:\n          w = width.value;\n          break;\n      }\n    }\n    if(height && height.unit !== unit.AUTO) {\n      fixedHeight = true;\n      switch(height.unit) {\n        case unit.PX:\n          h = height.value;\n          break;\n        case unit.PERCENT:\n          h *= height.value * 0.01;\n          break;\n      }\n    }\n    // border影响x和y和尺寸\n    x += borderLeftWidth.value;\n    data.x = x;\n    y += borderTopWidth.value;\n    data.y = y;\n    w -= borderLeftWidth.value + borderRightWidth.value;\n    h -= borderTopWidth.value + borderBottomWidth.value;\n    this.__width = w;\n    this.__height = fixedHeight ? h : 0;\n  }\n\n  __preLayFlex(data) {\n    // 无children所以等同于block\n    this.__preLayBlock(data);\n  }\n\n  __preLayInline(data) {\n    let { x, y, w, h } = data;\n    this.__x = x;\n    this.__y = y;\n    let { style } = this;\n    let {\n      width,\n      height,\n      borderTopWidth,\n      borderRightWidth,\n      borderBottomWidth,\n      borderLeftWidth,\n    } = style;\n    // 除了auto外都是固定高度\n    let fixedWidth;\n    let fixedHeight;\n    if(width && width.unit !== unit.AUTO) {\n      fixedWidth = true;\n      switch(width.unit) {\n        case unit.PX:\n          w = width.value;\n          break;\n      }\n    }\n    if(height && height.unit !== unit.AUTO) {\n      fixedHeight = true;\n      switch(height.unit) {\n        case unit.PX:\n          h = height.value;\n          break;\n      }\n    }\n    // border影响x和y\n    x += borderLeftWidth.value;\n    data.x = x;\n    y += borderTopWidth.value;\n    data.y = y;\n    w -= borderLeftWidth.value + borderRightWidth.value;\n    h -= borderTopWidth.value + borderBottomWidth.value;\n    // 元素的width不能超过父元素w\n    this.__width = fixedWidth ? w : x - data.x;\n    this.__height = fixedHeight ? h : y - data.y;\n  }\n\n  render() {\n    super.render();\n  }\n\n  get tagName() {\n    return this.__tagName;\n  }\n  get baseLine() {\n    return this.__height;\n  }\n  get origin() {\n    return this.__origin;\n  }\n  get min() {\n    return this.__min;\n  }\n  get max() {\n    return this.__max;\n  }\n\n  static isValid(s) {\n    return TAG_NAME.hasOwnProperty(s);\n  }\n}\n\nexport default Geom;\n","import Xom from './Xom';\nimport Text from './Text';\nimport LineGroup from './LineGroup';\nimport Geom from '../geom/Geom';\nimport util from '../util';\nimport css from '../style/css';\nimport unit from '../style/unit';\n\nconst TAG_NAME = {\n  'div': true,\n  'span': true,\n};\nconst INLINE = {\n  'span': true,\n};\n\nclass Dom extends Xom {\n  constructor(tagName, props, children) {\n    super(tagName, props);\n    this.__children = children;\n    this.__lineGroups = []; // 一行inline元素组成的LineGroup对象后的存放列表\n  }\n\n  /**\n   * 1. 封装string为Text节点\n   * 2. 打平children中的数组，变成一维\n   * 3. 合并相连的Text节点\n   * 4. 检测inline不能包含block和flex\n   * 5. 设置parent和prev/next和ctx\n   */\n  __traverse(ctx) {\n    let list = [];\n    this.__traverseChildren(this.children, list, ctx);\n    for(let i = list.length - 1; i > 0; i--) {\n      let item = list[i];\n      if(item instanceof Text) {\n        let prev = list[i - 1];\n        if(prev instanceof Text) {\n          prev.content += item.content;\n          list.splice(i, 1);\n        }\n        else {\n          i--;\n        }\n      }\n    }\n    if(this.style.display === 'inline' && this.parent.style.display !== 'flex') {\n      for(let i = list.length - 1; i >= 0; i--) {\n        let item = list[i];\n        if(item instanceof Dom && item.style.display !== 'inline') {\n          throw new Error('inline can not contain block/flex');\n        }\n      }\n    }\n    let prev = null;\n    list.forEach(item => {\n      item.__ctx = ctx;\n      if(prev) {\n        prev.__next = item;\n      }\n      item.__parent = this;\n      item.__prev = prev;\n    });\n    this.__children = list;\n  }\n\n  __traverseChildren(children, list, ctx) {\n    if(Array.isArray(children)) {\n      children.forEach(item => {\n        this.__traverseChildren(item, list, ctx);\n      });\n    }\n    else if(children instanceof Dom) {\n      list.push(children);\n      children.__traverse(ctx);\n    }\n    // 图形没有children\n    else if(children instanceof Geom) {\n      list.push(children);\n    }\n    // 排除掉空的文本\n    else if(!util.isNil(children)) {\n      list.push(new Text(children));\n    }\n  }\n\n  // 合并设置style，包括继承和默认值，修改一些自动值和固定值，测量所有文字的宽度\n  __initStyle() {\n    let style = this.__style;\n    // 仅支持flex/block/inline/none\n    if(!style.display || ['flex', 'block', 'inline', 'none'].indexOf(style.display) === -1) {\n      if(INLINE.hasOwnProperty(this.tagName)) {\n        style.display = 'inline';\n      }\n      else {\n        style.display = 'block';\n      }\n    }\n    // 继承父元素样式\n    let parent = this.parent;\n    if(parent) {\n      let parentStyle = parent.style;\n      ['fontSize', 'fontWeight', 'fontStyle', 'lineHeight', 'wordBreak', 'color', 'textAlign'].forEach(k => {\n        if(!style.hasOwnProperty(k) && parentStyle.hasOwnProperty(k)) {\n          style[k] = parentStyle[k];\n        }\n      });\n    }\n    // 标准化处理，默认值、简写属性\n    css.normalize(style);\n    this.children.forEach(item => {\n      if(item instanceof Dom || item instanceof Geom) {\n        item.__initStyle();\n      }\n      else {\n        item.__style = style;\n        // 文字首先测量所有字符宽度\n        item.__measure();\n      }\n    });\n  }\n\n  // 给定父宽度情况下，尝试行内放下后的剩余宽度，为负数即放不下\n  __tryLayInline(w, total) {\n    let { children, style: { width } } = this;\n    if(width.unit === unit.PX) {\n      return w - width.value;\n    }\n    else if(width.unit === unit.PERCENT) {\n      return w - total * width.value * 0.01;\n    }\n    for(let i = 0; i < children.length; i++) {\n      // 当放不下时直接返回，无需继续多余的尝试计算\n      if(w < 0) {\n        return w;\n      }\n      let item = children[i];\n      if(item instanceof Dom || item instanceof Geom) {\n        w -= item.__tryLayInline(w, total);\n      }\n      else {\n        w -= item.textWidth;\n      }\n    }\n    return w;\n  }\n\n  // 设置y偏移值，递归包括children，此举在flex行元素的child进行justify-content对齐用\n  __offsetX(diff) {\n    super.__offsetX(diff);\n    this.children.forEach(item => {\n      if(item) {\n        item.__offsetX(diff);\n      }\n    });\n  }\n\n  // 设置y偏移值，递归包括children，此举在初步确定inline布局后设置元素vertical-align用\n  __offsetY(diff) {\n    super.__offsetY(diff);\n    this.children.forEach(item => {\n      if(item) {\n        item.__offsetY(diff);\n      }\n    });\n  }\n\n  __calAutoBasis(isDirectionRow, w, h, isRecursion) {\n    let b = 0;\n    let min = 0;\n    let max = 0;\n    let { children, style } = this;\n    // 计算需考虑style的属性\n    let {\n      width,\n      height,\n      borderTopWidth,\n      borderRightWidth,\n      borderBottomWidth,\n      borderLeftWidth,\n      marginTop,\n      marginRight,\n      marginBottom,\n      marginLeft,\n      paddingTop,\n      paddingRight,\n      paddingBottom,\n      paddingLeft,\n    } = style;\n    let main = isDirectionRow ? width : height;\n    if(main.unit === unit.PX) {\n      b = max += main.value;\n      // 递归时children的长度会影响flex元素的最小宽度\n      if(isRecursion) {\n        min = b;\n      }\n    }\n    // 递归children取最大值\n    children.forEach(item => {\n      if(item instanceof Dom || item instanceof Geom) {\n        let { b: b2, min: min2, max: max2 } = item.__calAutoBasis(isDirectionRow, w, h, true);\n        b = Math.max(b, b2);\n        min = Math.max(min, min2);\n        max = Math.max(max, max2);\n      }\n      else if(isDirectionRow) {\n        min = Math.max(item.charWidth, min);\n        max = Math.max(item.textWidth, max);\n      }\n      else {\n        item.__preLay({\n          x: 0,\n          y: 0,\n          w,\n          h,\n        }, true);\n        min = Math.max(min, item.height);\n        max = Math.max(max, item.height);\n      }\n    });\n    // margin/padding/border也得计算在内\n    if(isDirectionRow) {\n      let w = borderRightWidth.value + borderLeftWidth.value + marginLeft.value + marginRight.value + paddingLeft.value + paddingRight.value;\n      b += w;\n      max += w;\n      min += w;\n    }\n    else {\n      let h = borderTopWidth.value + borderBottomWidth.value + marginTop.value + marginRight.value + paddingTop.value + paddingBottom.value;\n      b += h;\n      max += h;\n      min += h;\n    }\n    return { b, min, max };\n  }\n\n  // 本身block布局时计算好所有子元素的基本位置\n  __preLayBlock(data) {\n    let { x, y, w, h } = data;\n    this.__x = x;\n    this.__y = y;\n    this.__width = w;\n    let { children, style } = this;\n    let {\n      width,\n      height,\n      borderTopWidth,\n      borderRightWidth,\n      borderBottomWidth,\n      borderLeftWidth,\n      marginTop,\n      marginRight,\n      marginBottom,\n      marginLeft,\n      paddingTop,\n      paddingRight,\n      paddingBottom,\n      paddingLeft,\n    } = style;\n    // 除了auto外都是固定高度\n    let fixedHeight;\n    if(width && width.unit !== unit.AUTO) {\n      switch(width.unit) {\n        case unit.PX:\n          w = width.value;\n          break;\n        case unit.PERCENT:\n          w *= width.value * 0.01;\n          break;\n      }\n    }\n    if(height && height.unit !== unit.AUTO) {\n      fixedHeight = true;\n      switch(height.unit) {\n        case unit.PX:\n          h = height.value;\n          break;\n        case unit.PERCENT:\n          h *= height.value * 0.01;\n          break;\n      }\n    }\n    // margin/padding/border影响x和y和尺寸\n    x += borderLeftWidth.value + marginLeft.value + paddingLeft.value;\n    data.x = x;\n    y += borderTopWidth.value + marginTop.value + paddingTop.value;\n    data.y = y;\n    w -= borderLeftWidth.value + borderRightWidth.value + marginLeft.value + marginRight.value + paddingLeft.value + paddingRight.value;\n    h -= borderTopWidth.value + borderBottomWidth.value + marginTop.value + marginBottom.value + paddingTop.value + paddingBottom.value;\n    // 递归布局，将inline的节点组成lineGroup一行\n    let lineGroup = new LineGroup(x, y);\n    children.forEach(item => {\n      if(item instanceof Dom || item instanceof Geom) {\n        if(item.style.display === 'inline') {\n          // inline开头，不用考虑是否放得下直接放\n          if(x === data.x) {\n            lineGroup.add(item);\n            item.__preLayInline({\n              x,\n              y,\n              w,\n              h,\n            });\n            x += item.outerWidth;\n          }\n          else {\n            // 非开头先尝试是否放得下\n            let fw = item.__tryLayInline(w - x, w);\n            // 放得下继续\n            if(fw >= 0) {\n              item.__preLayInline({\n                x,\n                y,\n                w,\n                h,\n              });\n            }\n            // 放不下处理之前的lineGroup，并重新开头\n            else {\n              this.lineGroups.push(lineGroup);\n              lineGroup.verticalAlign();\n              x = data.x;\n              y += lineGroup.height;\n              item.__preLayInline({\n                x: data.x,\n                y,\n                w,\n                h,\n              });\n              lineGroup = new LineGroup(x, y);\n            }\n            x += item.outerWidth;\n            lineGroup.add(item);\n          }\n        }\n        else {\n          // block先处理之前可能的lineGroup\n          if(lineGroup.size) {\n            this.lineGroups.push(lineGroup);\n            lineGroup.verticalAlign();\n            y += lineGroup.height;\n            lineGroup = new LineGroup(data.x, y);\n          }\n          item.__preLay({\n            x: data.x,\n            y,\n            w,\n            h,\n          });\n          x = data.x;\n          y += item.outerHeight;\n        }\n      }\n      // 文字和inline类似\n      else {\n        // x开头，不用考虑是否放得下直接放\n        if(x === data.x) {\n          lineGroup.add(item);\n          item.__preLay({\n            x,\n            y,\n            w,\n            h,\n          });\n          x += item.width;\n        }\n        else {\n          // 非开头先尝试是否放得下\n          let fw = item.__tryLayInline(w - x, w);\n          // 放得下继续\n          if(fw >= 0) {\n            item.__preLay({\n              x,\n              y,\n              w,\n              h,\n            });\n          }\n          // 放不下处理之前的lineGroup，并重新开头\n          else {\n            this.lineGroups.push(lineGroup);\n            lineGroup.verticalAlign();\n            x = data.x;\n            y += lineGroup.height;\n            item.__preLay({\n              x: data.x,\n              y,\n              w,\n              h,\n            });\n            lineGroup = new LineGroup(x, y);\n          }\n          x += item.width;\n          lineGroup.add(item);\n        }\n      }\n    });\n    // 结束后处理可能遗留的最后的lineGroup\n    if(lineGroup.size) {\n      this.lineGroups.push(lineGroup);\n      lineGroup.verticalAlign();\n      y += lineGroup.height;\n    }\n    this.__width = w;\n    this.__height = fixedHeight ? h : y - data.y;\n  }\n\n  // 弹性布局时的计算位置\n  __preLayFlex(data) {\n    let { x, y, w, h } = data;\n    this.__x = x;\n    this.__y = y;\n    this.__width = w;\n    let { children, style } = this;\n    let {\n      width,\n      height,\n      flexDirection,\n      borderTopWidth,\n      borderRightWidth,\n      borderBottomWidth,\n      borderLeftWidth,\n      marginTop,\n      marginRight,\n      marginBottom,\n      marginLeft,\n      paddingTop,\n      paddingRight,\n      paddingBottom,\n      paddingLeft,\n      justifyContent,\n    } = style;\n    // 除了auto外都是固定高度\n    let fixedHeight;\n    if(width && width.unit !== unit.AUTO) {\n      switch(width.unit) {\n        case unit.PX:\n          w = width.value;\n          break;\n        case unit.PERCENT:\n          w *= width.value * 0.01;\n          break;\n      }\n    }\n    if(height && height.unit !== unit.AUTO) {\n      fixedHeight = true;\n      switch(height.unit) {\n        case unit.PX:\n          h = height.value;\n          break;\n        case unit.PERCENT:\n          h *= height.value * 0.01;\n          break;\n      }\n    }\n    // margin/padding/border影响x和y和尺寸\n    x += borderLeftWidth.value + marginLeft.value + paddingLeft.value;\n    data.x = x;\n    y += borderTopWidth.value + marginTop.value + paddingTop.value;\n    data.y = y;\n    w -= borderLeftWidth.value + borderRightWidth.value + marginLeft.value + marginRight.value + paddingLeft.value + paddingRight.value;\n    h -= borderTopWidth.value + borderBottomWidth.value + marginTop.value + marginBottom.value + paddingTop.value + paddingBottom.value;\n    let isDirectionRow = flexDirection === 'row';\n    // column时height可能为auto，此时取消伸展，退化为类似block布局，但所有子元素强制block\n    if(!isDirectionRow && !fixedHeight) {\n      children.forEach(item => {\n        if(item instanceof Dom || item instanceof Geom) {\n          const { style, style: { display, flexDirection, width, height }} = item;\n          // column的flex的child如果是inline，变为block\n          if(display === 'inline') {\n            style.display = 'block';\n          }\n          // 竖向flex的child如果是横向flex，宽度自动的话要等同于父flex的宽度\n          else if(display === 'flex' && flexDirection === 'row' && width.unit === unit.AUTO) {\n            width.value = w;\n            width.unit = unit.PX;\n          }\n          item.__preLay({\n            x,\n            y,\n            w,\n            h,\n          });\n          y += item.outerHeight;\n        }\n        else {\n          item.__preLay({\n            x,\n            y,\n            w,\n            h,\n          });\n          y += item.outerHeight;\n        }\n      });\n      this.__width = w;\n      this.__height = y - data.y;\n      return;\n    }\n    // 计算伸缩基数\n    let growList = [];\n    let shrinkList = [];\n    let basisList = [];\n    let minList = [];\n    let growSum = 0;\n    let shrinkSum = 0;\n    let basisSum = 0;\n    let maxSum = 0;\n    children.forEach(item => {\n      if(item instanceof Dom || item instanceof Geom) {\n        let { flexGrow, flexShrink, flexBasis } = item.style;\n        growList.push(flexGrow);\n        shrinkList.push(flexShrink);\n        growSum += flexGrow;\n        shrinkSum += flexShrink;\n        let { b, min, max } = item.__calAutoBasis(isDirectionRow, w, h);\n        // 根据basis不同，计算方式不同\n        if(flexBasis.unit === unit.AUTO) {\n          basisList.push(max);\n          basisSum += max;\n        }\n        else if(flexBasis.unit === unit.PX) {\n          b = flexBasis.value;\n          basisList.push(b);\n          basisSum += b;\n        }\n        else if(flexBasis.unit === unit.PERCENT) {\n          b = (isDirectionRow ? w : h) * flexBasis.value;\n          basisList.push(b);\n          basisSum += b;\n        }\n        maxSum += max;\n        minList.push(min);\n      }\n      else {\n        growList.push(0);\n        shrinkList.push(1);\n        shrinkSum += 1;\n        if(isDirectionRow) {\n          basisList.push(item.textWidth);\n          basisSum += item.textWidth;\n          maxSum += item.textWidth;\n          minList.push(item.charWidth);\n        }\n        else {\n          item.__preLay({\n            x: 0,\n            y: 0,\n            w,\n            h,\n          }, true);\n          basisList.push(item.height);\n          basisSum += item.height;\n          maxSum += item.height;\n          minList.push(item.height);\n        }\n      }\n    });\n    let maxCross = 0;\n    let free = 0;\n    // 判断是否超出，决定使用grow还是shrink\n    let isOverflow = maxSum > (isDirectionRow ? w : h);\n    children.forEach((item, i) => {\n      let main;\n      let shrink = shrinkList[i];\n      let grow = growList[i];\n      // 计算主轴长度\n      if(isOverflow) {\n        let overflow = basisSum - (isDirectionRow ? w : h);\n        main = shrink ? (basisList[i] - overflow * shrink / shrinkSum) : basisList[i];\n      }\n      else {\n        free = (isDirectionRow ? w : h) - basisSum;\n        main = grow ? (basisList[i] + free * grow / growSum) : basisList[i];\n      }\n      // 主轴长度的最小值不能小于元素的最小长度，比如横向时的字符宽度\n      main = Math.max(main, minList[i]);\n      if(item instanceof Dom || item instanceof Geom) {\n        const { style, style: { display, flexDirection, width, height }} = item;\n        if(isDirectionRow) {\n          // row的flex的child如果是inline，变为block\n          if(display === 'inline') {\n            style.display = 'block';\n          }\n          // 横向flex的child如果是竖向flex，高度自动的话要等同于父flex的高度\n          else if(display === 'flex' && flexDirection === 'column' && fixedHeight && height.unit === unit.AUTO) {\n            height.value = h;\n            height.unit = unit.PX;\n          }\n          item.__preLay({\n            x,\n            y,\n            w: main,\n            h,\n          })\n        }\n        else {\n          // column的flex的child如果是inline，变为block\n          if(display === 'inline') {\n            style.display = 'block';\n          }\n          // 竖向flex的child如果是横向flex，宽度自动的话要等同于父flex的宽度\n          else if(display === 'flex' && flexDirection === 'row' && width.unit === unit.AUTO) {\n            width.value = w;\n            width.unit = unit.PX;\n          }\n          item.__preLay({\n            x,\n            y,\n            w,\n            h: main,\n          });\n        }\n        // 重设因伸缩而导致的主轴长度\n        if(isOverflow && shrink) {\n          if(isDirectionRow) {\n            item.__width = main;\n          }\n          else {\n            item.__height = main;\n          }\n        }\n        else if(!isOverflow && grow) {\n          if(isDirectionRow) {\n            item.__width = main;\n          }\n          else {\n            item.__height = main;\n          }\n        }\n      }\n      else {\n        item.__preLay({\n          x,\n          y,\n          w: isDirectionRow ? main : w,\n          h: isDirectionRow ? h : main,\n        });\n      }\n      if(isDirectionRow) {\n        x += item.outerWidth;\n        maxCross = Math.max(maxCross, item.outerHeight);\n      }\n      else {\n        y += item.outerHeight;\n        maxCross = Math.max(maxCross, item.outerWidth);\n      }\n    });\n    // 计算主轴剩余时要用真实剩余空间而不能用伸缩剩余空间\n    let diff = isDirectionRow ? w - x + data.x : h - y + data.y;\n    // 主轴侧轴对齐方式\n    if(!isOverflow && growSum === 0 && free > 0 && diff > 0) {\n      let len = children.length;\n      if(justifyContent === 'flex-end') {\n        for(let i = 0; i < len; i++) {\n          let child = children[i];\n          isDirectionRow ? child.__offsetX(diff) : child.__offsetY(diff);\n        }\n      }\n      else if(justifyContent === 'center') {\n        let center = diff * 0.5;\n        for(let i = 0; i < len; i++) {\n          let child = children[i];\n          isDirectionRow ? child.__offsetX(center) : child.__offsetY(center);\n        }\n      }\n      else if(justifyContent === 'space-between') {\n        let between = diff / (len - 1);\n        for(let i = 1; i < len; i++) {\n          let child = children[i];\n          isDirectionRow ? child.__offsetX(between * i) : child.__offsetY(between * i);\n        }\n      }\n      else if(justifyContent === 'space-around') {\n        let around = diff / (len + 1);\n        for(let i = 0; i < len; i++) {\n          let child = children[i];\n          isDirectionRow ? child.__offsetX(around * (i + 1)) : child.__offsetY(around * (i + 1));\n        }\n      }\n    }\n    // 子元素侧轴伸展\n    if(isDirectionRow) {\n      // 父元素固定高度，子元素可能超过，侧轴最大长度取固定高度\n      if(fixedHeight) {\n        maxCross = h;\n      }\n      y += maxCross;\n    }\n    // 所有短侧轴的children伸张侧轴长度至相同，超过的不动，固定宽高的也不动\n    children.forEach(item => {\n      let { style } = item;\n      if(isDirectionRow) {\n        if(item.style.height.unit === unit.AUTO) {\n          item.__height = maxCross - style.borderTopWidth.value - style.borderBottomWidth.value;\n        }\n      }\n      else {\n        if(item.style.width.unit === unit.AUTO) {\n          item.__width = maxCross - style.borderRightWidth.value - style.borderLeftWidth.value;\n        }\n      }\n    });\n    this.__width = w;\n    this.__height = fixedHeight ? h : y - data.y;\n  }\n\n  // inline比较特殊，先简单顶部对其，后续还需根据vertical和lineHeight计算y偏移\n  __preLayInline(data) {\n    let { x, y, w, h } = data;\n    this.__x = x;\n    this.__y = y;\n    let maxX = x;\n    let { children, style } = this;\n    let {\n      width,\n      height,\n      borderTopWidth,\n      borderRightWidth,\n      borderBottomWidth,\n      borderLeftWidth,\n      marginTop,\n      marginRight,\n      marginBottom,\n      marginLeft,\n      paddingTop,\n      paddingRight,\n      paddingBottom,\n      paddingLeft,\n    } = style;\n    // 除了auto外都是固定高度\n    let fixedWidth;\n    let fixedHeight;\n    if(width && width.unit !== unit.AUTO) {\n      fixedWidth = true;\n      switch(width.unit) {\n        case unit.PX:\n          w = width.value;\n          break;\n        case unit.PERCENT:\n          w *= width.value * 0.01;\n          break;\n      }\n    }\n    if(height && height.unit !== unit.AUTO) {\n      fixedHeight = true;\n      switch(height.unit) {\n        case unit.PX:\n          h = height.value;\n          break;\n        case unit.PERCENT:\n          h *= height.value * 0.01;\n          break;\n      }\n    }\n    // margin/padding/border影响x和y和尺寸\n    x += borderLeftWidth.value + marginLeft.value + paddingLeft.value;\n    data.x = x;\n    y += borderTopWidth.value + marginTop.value + paddingTop.value;\n    data.y = y;\n    w -= borderLeftWidth.value + borderRightWidth.value + marginLeft.value + marginRight.value + paddingLeft.value + paddingRight.value;\n    h -= borderTopWidth.value + borderBottomWidth.value + marginTop.value + marginBottom.value + paddingTop.value + paddingBottom.value;\n    // 递归布局，将inline的节点组成lineGroup一行\n    let lineGroup = new LineGroup(x, y);\n    children.forEach(item => {\n      if(item instanceof Dom || item instanceof Geom) {\n        // inline开头，不用考虑是否放得下直接放\n        if(x === data.x) {\n          lineGroup.add(item);\n          item.__preLayInline({\n            x,\n            y,\n            w,\n            h,\n          });\n          x += item.outerWidth;\n          maxX = Math.max(maxX, x);\n        }\n        else {\n          // 非开头先尝试是否放得下\n          let fw = item.__tryLayInline(w - x, w);\n          // 放得下继续\n          if(fw >= 0) {\n            item.__preLayInline({\n              x,\n              y,\n              w,\n              h,\n            });\n          }\n          // 放不下处理之前的lineGroup，并重新开头\n          else {\n            this.lineGroups.push(lineGroup);\n            lineGroup.verticalAlign();\n            x = data.x;\n            y += lineGroup.height;\n            item.__preLayInline({\n              x: data.x,\n              y,\n              w,\n              h,\n            });\n            lineGroup = new LineGroup(x, y);\n          }\n          x += item.outerWidth;\n          maxX = Math.max(maxX, x);\n          lineGroup.add(item);\n        }\n      }\n      // inline里的其它只有文本\n      else {\n        if(x === data.x) {\n          lineGroup.add(item);\n          item.__preLay({\n            x,\n            y,\n            w,\n            h,\n          });\n          x += item.width;\n          maxX = Math.max(maxX, x);\n        }\n        else {\n          // 非开头先尝试是否放得下\n          let fw = item.__tryLayInline(w - x, w);\n          // 放得下继续\n          if(fw >= 0) {\n            item.__preLay({\n              x,\n              y,\n              w,\n              h,\n            });\n          }\n          // 放不下处理之前的lineGroup，并重新开头\n          else {\n            this.lineGroups.push(lineGroup);\n            lineGroup.verticalAlign();\n            x = data.x;\n            y += lineGroup.height;\n            item.__preLay({\n              x: data.x,\n              y,\n              w,\n              h,\n            });\n            lineGroup = new LineGroup(x, y);\n          }\n          x += item.width;\n          maxX = Math.max(maxX, x);\n          lineGroup.add(item);\n        }\n      }\n    });\n    // 结束后处理可能遗留的最后的lineGroup，children为空时可能size为空\n    if(lineGroup.size) {\n      this.lineGroups.push(lineGroup);\n      lineGroup.verticalAlign();\n      y += lineGroup.height;\n    }\n    // 元素的width不能超过父元素w\n    this.__width = fixedWidth ? w : maxX - data.x;\n    this.__height = fixedHeight ? h : y - data.y;\n  }\n\n  render() {\n    super.render();\n    this.children.forEach(item => {\n      if(item) {\n        item.render();\n      }\n    });\n  }\n\n  get tagName() {\n    return this.__tagName;\n  }\n  get children() {\n    return this.__children;\n  }\n  get lineGroups() {\n    return this.__lineGroups;\n  }\n  get baseLine() {\n    let len = this.lineGroups.length;\n    if(len) {\n      let last = this.lineGroups[len - 1];\n      return last.y - this.y + last.baseLine;\n    }\n    return this.y;\n  }\n\n  static isValid(s) {\n    return TAG_NAME.hasOwnProperty(s);\n  }\n}\n\nexport default Dom;\n","import Dom from '../node/Dom';\nimport util from '../util';\nimport mode from './mode';\n\nfunction getDom(dom) {\n  if(util.isString(dom)) {\n    let o = document.querySelector(dom);\n    if(!o) {\n      throw new Error('can not find dom of selector: ' + dom);\n    }\n    return o;\n  }\n  if(!dom) {\n    throw new Error('can not find dom: ' + dom);\n  }\n  return dom;\n}\n\nfunction renderProp(k, v) {\n  let s = Array.isArray(v) ? util.joinSourceArray(v) : util.stringify(v);\n  if(k === 'className') {\n    k = 'class';\n  }\n  return ' ' + k + '=\"' + util.encodeHtml(s, true) + '\"';\n}\n\nclass CS extends Dom {\n  constructor(tagName, props, children) {\n    super(tagName, props, children);\n    this.__node = null; // 真实DOM引用\n  }\n\n  __initProps() {\n    if(this.props.width !== undefined) {\n      let value = parseInt(this.props.width);\n      if(!isNaN(value) && value > 0) {\n        this.__width = value;\n      }\n    }\n    if(this.props.height !== undefined) {\n      let value = parseInt(this.props.height);\n      if(!isNaN(value) && value > 0) {\n        this.__height = value;\n      }\n    }\n  }\n\n  __genHtml() {\n    let res = `<${this.tagName}`;\n    // 拼接处理属性\n    for(let i = 0, len = this.__props.length; i < len; i++) {\n      let item = this.__props[i];\n      res += renderProp(item[0], item[1]);\n    }\n    res += `></${this.tagName}>`;\n    return res;\n  }\n\n  appendTo(dom) {\n    dom = getDom(dom);\n    this.__initProps();\n    // 已有canvas节点\n    if(dom.nodeName.toUpperCase() === this.tagName.toUpperCase()) {\n      this.__node = dom;\n      if(this.width) {\n        dom.setAttribute('width', this.width);\n      }\n      if(this.height) {\n        dom.setAttribute('height', this.height);\n      }\n    }\n    // 没有canvas节点则生成一个新的\n    else {\n      let s = this.__genHtml();\n      dom.insertAdjacentHTML('beforeend', s);\n      let canvas = dom.querySelectorAll(this.tagName);\n      this.__node = canvas[canvas.length - 1];\n    }\n    // 没有设置width/height则采用css计算形式\n    if(!this.width || !this.height) {\n      let css = window.getComputedStyle(dom, null);\n      if(!this.width) {\n        this.__width = parseInt(css.getPropertyValue('width'));\n        dom.setAttribute('width', this.width);\n      }\n      if(!this.height) {\n        this.__height = parseInt(css.getPropertyValue('height'));\n        dom.setAttribute('height', this.height);\n      }\n    }\n    // canvas作为根节点一定是block或flex，不会是inline\n    let { style } = this;\n    if(['flex', 'block'].indexOf(style.display) === -1) {\n      style.display = 'block';\n    }\n    // 只有canvas有ctx，svg用真实dom\n    if(this.tagName === 'canvas') {\n      this.__ctx = this.__node.getContext('2d');\n      mode.setCanvas();\n    }\n    else if(this.tagName === 'svg') {\n      mode.setSvg();\n    }\n    this.__traverse(this.__ctx);\n    // canvas的宽高固定初始化\n    style.width = this.width;\n    style.height = this.height;\n    this.__initStyle();\n    this.__preLay({\n      x: 0,\n      y: 0,\n      w: this.width,\n      h: this.height,\n    });\n    this.render();\n    if(mode.isSvg()) {\n      this.__node.innerHTML = mode.html;\n    }\n  }\n\n  get node() {\n    return this.__node;\n  }\n}\n\nexport default CS;\n","import Geom from './Geom';\nimport mode from '../node/mode';\n\nclass Line extends Geom {\n  constructor(props) {\n    super('$line', props);\n    // start和end表明线段的首尾坐标\n    this.__start = [];\n    this.__end = [];\n    if(Array.isArray(this.props.start)) {\n      this.__start = this.props.start;\n    }\n    if(Array.isArray(this.props.end)) {\n      this.__end = this.props.end;\n    }\n    // 原点位置，4个角，默认左下\n    if(['TOP_LEFT', 'TOP_RIGHT', 'BOTTOM_LEFT', 'BOTTOM_RIGHT'].indexOf(this.props.origin) > -1) {\n      this.__origin = this.props.origin;\n    }\n    else {\n      this.__origin = 'BOTTOM_LEFT';\n    }\n  }\n\n  render() {\n    super.render();\n    let { x, y, width, height, style, ctx, start, end, origin } = this;\n    if(start.length < 2 || end.length < 2) {\n      return;\n    }\n    let {\n      borderTopWidth,\n      borderRightWidth,\n      borderBottomWidth,\n      borderLeftWidth,\n      marginTop,\n      marginRight,\n      marginBottom,\n      marginLeft,\n      paddingTop,\n      paddingRight,\n      paddingBottom,\n      paddingLeft,\n      stroke,\n      strokeWidth,\n    } = style;\n    let x1, y1, x2, y2;\n    let originX = x + borderLeftWidth.value + marginLeft.value + paddingLeft.value;\n    let originY = y + borderTopWidth.value + marginTop.value + paddingTop.value;\n    width -= borderLeftWidth.value + borderRightWidth.value + marginLeft.value + marginRight.value + paddingLeft.value + paddingRight.value;\n    height -= borderTopWidth.value + borderBottomWidth.value + marginTop.value + marginBottom.value + paddingTop.value + paddingBottom.value;\n    if(origin === 'TOP_LEFT') {\n      x1 = originX + start[0] * width;\n      y1 = originY + start[1] * height;\n      x2 = originX + end[0] * width;\n      y2 = originY + end[1] * height;\n    }\n    else if(origin === 'TOP_RIGHT') {\n      x1 = originX + width - start[0] * width;\n      y1 = originY + start[1] * height;\n      x2 = originX + width - end[0] * width;\n      y2 = originY + end[1] * height;\n    }\n    else if(origin === 'BOTTOM_LEFT') {\n      x1 = originX + start[0] * width;\n      y1 = originY + height - start[1] * height;\n      x2 = originX + end[0] * width;\n      y2 = originY + height - end[1] * height;\n    }\n    else if(origin === 'BOTTOM_RIGHT') {\n      x1 = originX + width - start[0] * width;\n      y1 = originY + height - start[1] * height;\n      x2 = originX + width - end[0] * width;\n      y2 = originY + height - end[1] * height;\n    }\n    if(mode.isCanvas()) {\n      ctx.strokeStyle = stroke;\n      ctx.lineWidth = strokeWidth;\n      ctx.beginPath();\n      ctx.moveTo(x1, y1);\n      ctx.lineTo(x2, y2);\n      ctx.stroke();\n      ctx.closePath();\n    }\n    else if(mode.isSvg()) {\n      mode.appendHtml(`<line x1=\"${x1}\" y1=\"${y1}\" x2=\"${x2}\" y2=\"${y2}\" stroke-width=\"${strokeWidth}\" stroke=\"${stroke}\"/>`);\n    }\n  }\n\n  get start() {\n    return this.__start;\n  }\n  get end() {\n    return this.__end;\n  }\n}\n\nexport default Line;\n","import Geom from './Geom';\nimport mode from '../node/mode';\n\nclass Polygon extends Geom {\n  constructor(props) {\n    super('$polygon', props);\n    // 折线所有点的列表\n    this.__pointList = [];\n    if(Array.isArray(this.props.pointList)) {\n      this.__pointList = this.props.pointList;\n    }\n    // 原点位置，4个角，默认左下\n    if(['TOP_LEFT', 'TOP_RIGHT', 'BOTTOM_LEFT', 'BOTTOM_RIGHT'].indexOf(this.props.origin) > -1) {\n      this.__origin = this.props.origin;\n    }\n    else {\n      this.__origin = 'BOTTOM_LEFT';\n    }\n    // max和min默认取值坐标轴范围[0, 1]，可更改\n    if(this.props.min) {\n      this.__min = parseFloat(this.props.min) || 0;\n    }\n    else {\n      this.__min = 0;\n    }\n    if(this.props.max) {\n      let max = parseFloat(this.props.max);\n      if(isNaN(max)) {\n        max = 1;\n      }\n      this.__max = max;\n    }\n    else {\n      this.__max = 1;\n    }\n  }\n\n  render() {\n    super.render();\n    let { x, y, width, height, style, ctx, pointList, max, min, origin } = this;\n    if(pointList.length < 2) {\n      return;\n    }\n    for(let i = 0, len = pointList.length; i < len; i++) {\n      if(!Array.isArray(pointList[i]) || pointList[i].length < 2) {\n        return;\n      }\n    }\n    let {\n      borderTopWidth,\n      borderRightWidth,\n      borderBottomWidth,\n      borderLeftWidth,\n      marginTop,\n      marginRight,\n      marginBottom,\n      marginLeft,\n      paddingTop,\n      paddingRight,\n      paddingBottom,\n      paddingLeft,\n      stroke,\n      strokeWidth,\n    } = style;\n    let scale = max - min;\n    if(scale <= 0) {\n      throw new Error(`scale can not <= 0: max(${this.max}) - min(${this.min})`);\n    }\n    let originX = x + borderLeftWidth.value + marginLeft.value + paddingLeft.value;\n    let originY = y + borderTopWidth.value + marginTop.value + paddingTop.value;\n    width -= borderLeftWidth.value + borderRightWidth.value + marginLeft.value + marginRight.value + paddingLeft.value + paddingRight.value;\n    height -= borderTopWidth.value + borderBottomWidth.value + marginTop.value + marginBottom.value + paddingTop.value + paddingBottom.value;\n    if(origin === 'TOP_LEFT') {\n      pointList.forEach(item => {\n        item[0] = originX + item[0] * width;\n        item[1] = originY + (item[1] - min) * height / scale;\n      });\n    }\n    else if(origin === 'TOP_RIGHT') {\n      pointList.forEach(item => {\n        item[0] = originX + width - item[0] * width;\n        item[1] = originY + (item[1] - min) * height / scale;\n      });\n    }\n    else if(origin === 'BOTTOM_LEFT') {\n      pointList.forEach(item => {\n        item[0] = originX + item[0] * width;\n        item[1] = originY + height - (item[1] - min) * height / scale;\n      });\n    }\n    else if(origin === 'BOTTOM_RIGHT') {\n      pointList.forEach(item => {\n        item[0] = originX + width - item[0] * width;\n        item[1] = originY + height - (item[1] - min) * height / scale;\n      });\n    }\n    if(mode.isCanvas()) {\n      ctx.strokeStyle = stroke;\n      ctx.lineWidth = strokeWidth;\n      ctx.beginPath();\n      ctx.moveTo(pointList[0][0], originY + pointList[0][1]);\n      for(let i = 1, len = pointList.length; i < len; i++) {\n        let point = pointList[i];\n        ctx.lineTo(point[0], originY + point[1]);\n      }\n      ctx.stroke();\n      ctx.closePath();\n    }\n    else if(mode.isSvg()) {\n      let points = '';\n      for(let i = 0, len = pointList.length; i < len; i++) {\n        let point = pointList[i];\n        points += `${point[0]},${point[1]} `;\n      }\n      mode.appendHtml(`<polyline fill=\"none\" points=\"${points}\" stroke-width=\"${strokeWidth}\" stroke=\"${stroke}\"/>`);\n    }\n  }\n\n  get pointList() {\n    return this.__pointList;\n  }\n}\n\nexport default Polygon;\n","import Dom from './node/Dom';\nimport CS from './node/CS';\nimport Geom from './geom/Geom';\nimport Line from './geom/Line';\nimport Polygon from './geom/Polygon';\n\nlet karas = {\n  render(cs, dom) {\n    if(!(cs instanceof CS)) {\n      throw new Error('render root muse be canvas or svg');\n    }\n    if(dom) {\n      cs.appendTo(dom);\n    }\n    return cs;\n  },\n  createVd(tagName, props, children) {\n    if(['canvas', 'svg'].indexOf(tagName) > -1) {\n      return new CS(tagName, props, children);\n    }\n    if(Dom.isValid(tagName)) {\n      return new Dom(tagName, props, children);\n    }\n    throw new Error('can not use marker: ' + tagName);\n  },\n  createGm(tagName, props) {\n    if(Geom.isValid(tagName)) {\n      switch(tagName) {\n        case '$line':\n          return new Line(props);\n        case '$polygon':\n          return new Polygon(props);\n      }\n    }\n    throw new Error('can not use geom marker: ' + tagName);\n  },\n  createCp(tagName, props, children) {},\n};\n\nif(typeof window != 'undefined') {\n  window.karas = karas;\n}\n\nexport default karas;\n"],"names":["measureDom","svgHtml","Node","__x","__y","__width","__height","__prev","__next","__ctx","__parent","__style","__baseLine","diff","this","mode","setCanvas","setSvg","isCanvas","isSvg","appendHtml","s","document","createElement","style","position","left","top","visibility","body","appendChild","Xom","tagName","props","Array","isArray","arr","hash","i","len","length","item","list","Object","keys","j","k","arr2hash","__props","temp","push","splice","spread","hash2arr","__tagName","_this","data","raParent","display","__preLayBlock","__preLayFlex","__preLayInline","ctx","x","y","width","height","backgroundColor","outerWidth","outerHeight","borderTopWidth","borderTopColor","borderRightWidth","borderRightColor","borderBottomWidth","borderBottomColor","borderLeftWidth","borderLeftColor","marginTop","marginLeft","paddingTop","paddingRight","paddingBottom","paddingLeft","value","x1","y1","w","h","beginPath","fillStyle","rect","fill","closePath","x2","lineWidth","strokeStyle","moveTo","lineTo","stroke","y2","marginRight","marginBottom","dom","parent","indexOf","lhr","car","blr","mdr","lgr","RESET","borderSizing","fontSize","fontFamily","color","fontStyle","fontWeight","lineHeight","borderTopStyle","borderRightStyle","borderBottomStyle","borderLeftStyle","verticalAlign","flexGrow","flexShrink","flexBasis","flexDirection","justifyContent","alignItem","textAlign","strokeWidth","reset","forEach","v","toString","isType","type","obj","call","isNumber","stringify","isNil","util","isObject","isString","isFunction","isBoolean","isDate","joinSourceArray","res","encodeHtml","prop","replace","parserOneBorder","direction","key","exec","c","normalize","hasOwnProperty","background","bgc","flex","test","parseFloat","border","borderTop","borderRight","borderBottom","borderLeft","margin","padding","unit","Math","max","font","setFontStyle","getBaseLine","normal","LineBox","content","__content","fillText","css","CHAR_WIDTH_CACHE","Text","__lineBoxes","__charWidthList","__charWidth","__textWidth","charWidthList","cache","sum","char","charAt","mw","measureText","measure","innerText","window","getComputedStyle","charWidth","isVirtual","maxX","lineBoxes","begin","count","lineBox","slice","render","__offsetX","__offsetY","n","textWidth","min","last","baseLine","LineGroup","__list","__calHeight","__calBaseLine","TAG_NAME","Geom","total","isDirectionRow","b","main","fixedHeight","fixedWidth","__origin","__min","__max","INLINE","Dom","children","__children","__lineGroups","__traverseChildren","prev","Error","_this2","_this3","__traverse","parentStyle","__initStyle","__measure","__tryLayInline","isRecursion","__calAutoBasis","b2","min2","max2","__preLay","lineGroup","add","_this4","lineGroups","size","growList","shrinkList","basisList","minList","growSum","shrinkSum","basisSum","maxSum","maxCross","free","isOverflow","shrink","grow","overflow","child","center","between","around","_this5","CS","__node","undefined","parseInt","isNaN","o","querySelector","getDom","__initProps","nodeName","toUpperCase","setAttribute","__genHtml","insertAdjacentHTML","canvas","querySelectorAll","getPropertyValue","getContext","innerHTML","html","Line","__start","__end","start","end","origin","originX","originY","Polygon","__pointList","pointList","scale","point","points","karas","cs","appendTo","createVd","isValid","createGm","createCp"],"mappings":"s6CACIA,EACAC,ECFEC,yCAEGC,IAAM,OACNC,IAAM,OACNC,QAAU,OACVC,SAAW,OACXC,OAAS,UACTC,OAAS,UACTC,MAAQ,UACRC,SAAW,UACXC,QAAU,QACVC,WAAa,8CAGVC,QACHV,KAAOU,oCAGJA,QACHT,KAAOS,mCAILC,KAAKX,qCAGLW,KAAKV,yCAGLU,KAAKT,8CAGLS,KAAKR,mDAGLQ,KAAKT,mDAGLS,KAAKR,6CAGLQ,KAAKP,2CAGLO,KAAKN,6CAGLM,KAAKJ,8CAGLI,KAAKH,2CAGLG,KAAKL,8CAGLK,KAAKF,oBDxDZG,EAAO,IAII,CACbC,qBACED,EAAO,GAETE,kBACEF,EAAO,EACPd,EAAU,IAEZiB,2BACkB,IAATH,GAETI,wBACkB,IAATJ,GAETK,oBAAWC,GACTpB,GAAWoB,qBAGJpB,wBAGHD,KACFA,EAAasB,SAASC,cAAc,QACzBC,MAAMC,SAAW,WAC5BzB,EAAWwB,MAAME,KAAO,UACxB1B,EAAWwB,MAAMG,IAAM,WACvB3B,EAAWwB,MAAMI,WAAa,SAC9BN,SAASO,KAAKC,YAAY9B,IAErBA,QEWL+B,wBACQC,EAASC,oDAEnBA,EAAQA,GAAS,GAEdC,MAAMC,QAAQF,MACVA,MA/CX,SAAkBG,WACZC,EAAO,GACHC,EAAI,EAAGC,EAAMH,EAAII,OAAQF,EAAIC,EAAKD,IAAK,KACzCG,EAAOL,EAAIE,MACZJ,MAAMC,QAAQM,GACfJ,EAAKI,EAAK,IAAMA,EAAK,YAGjB,IAAIC,EAAOC,OAAOC,KAAKH,GAAOI,EAAIH,EAAKF,OAAS,EAAQ,GAALK,EAAQA,IAAK,KAC9DC,EAAIJ,EAAKG,GACbR,EAAKS,GAAKL,EAAKK,WAIdT,EAiCUU,CAASd,KACjBe,QAtBX,SAAgBZ,OACV,IAAIE,EAAI,EAAGC,EAAMH,EAAII,OAAQF,EAAIC,EAAKD,IAAK,KACzCG,EAAOL,EAAIE,OACXJ,MAAMC,QAAQM,GAAO,SACnBQ,EAAO,GACHP,EAAOC,OAAOC,KAAKH,GAAOI,EAAI,EAAGN,EAAMG,EAAKF,OAAQK,EAAIN,EAAKM,IAAK,KACpEC,EAAIJ,EAAKG,GACbI,EAAKC,KAAK,CAACJ,EAAGL,EAAKK,KAErBV,EAAIe,aAAJf,GAAWE,EAAG,UAAMW,YAGjBb,EAUYgB,CAAOnB,OAGjBA,MAAQA,IACRe,QAnCX,SAAkBX,WACZD,EAAM,GACFM,EAAOC,OAAOC,KAAKP,GAAOC,EAAI,EAAGC,EAAMG,EAAKF,OAAQF,EAAIC,EAAKD,IAAK,KACpEQ,EAAIJ,EAAKJ,GACbF,EAAIc,KAAK,CAACJ,EAAGT,EAAKS,YAEbV,EA6BYiB,CAASpB,MAErBqB,UAAYtB,IACZrB,QAAU4C,EAAKtB,MAAMT,OAAS,gBAdrBtB,uCAiBPsD,OACDhC,EAAUV,KAAVU,SACgB,aAAnBA,EAAMC,SACQX,KAAK2C,SAED,UAAlBjC,EAAMkC,aACFC,cAAcH,GAEK,SAAlBhC,EAAMkC,aACPE,aAAaJ,QAGbK,eAAeL,wCAKhBM,EAA6DhD,KAA7DgD,IAAKtC,EAAwDV,KAAxDU,MAAOuC,EAAiDjD,KAAjDiD,EAAGC,EAA8ClD,KAA9CkD,EAAGC,EAA2CnD,KAA3CmD,MAAOC,EAAoCpD,KAApCoD,OAE7BC,GAFiErD,KAA5BsD,WAA4BtD,KAAhBuD,YAiB/C7C,EAfF2C,iBACAG,EAcE9C,EAdF8C,eACAC,EAaE/C,EAbF+C,eACAC,EAYEhD,EAZFgD,iBACAC,EAWEjD,EAXFiD,iBACAC,EAUElD,EAVFkD,kBACAC,EASEnD,EATFmD,kBACAC,EAQEpD,EARFoD,gBACAC,EAOErD,EAPFqD,gBACAC,EAMEtD,EANFsD,UACAC,EAKEvD,EALFuD,WACAC,EAIExD,EAJFwD,WACAC,EAGEzD,EAHFyD,aACAC,EAEE1D,EAFF0D,cACAC,EACE3D,EADF2D,eAECJ,IACDhB,GAAKgB,EAAWK,OAEfN,IACDd,GAAKc,EAAUM,OAEdjB,EAAiB,KACdkB,EAAKtB,EACNa,IACDS,GAAMT,EAAgBQ,WAEpBE,EAAKtB,EACNM,IACDgB,GAAMhB,EAAec,WAEnBG,EAAItB,EAAQkB,EAAYC,MAAQH,EAAaG,MAC7CI,EAAItB,EAASc,EAAWI,MAAQF,EAAcE,MAC/CrE,EAAKG,YACN4C,EAAI2B,YACJ3B,EAAI4B,UAAYvB,EAChBL,EAAI6B,KAAKN,EAAIC,EAAIC,EAAGC,GACpB1B,EAAI8B,OACJ9B,EAAI+B,aAEE9E,EAAKI,SACXJ,EAAKK,8BAAuBiE,kBAAUC,sBAAcC,uBAAcC,qBAAYrB,aAG/EG,EAAec,MAAO,KACnBC,EAAKtB,EAAIa,EAAgBQ,MACzBE,EAAKtB,EAA2B,GAAvBM,EAAec,MACxBU,EAAKT,EAAKpB,EACXkB,IACDW,GAAMX,EAAYC,OAEjBH,IACDa,GAAMb,EAAaG,OAElBrE,EAAKG,YACN4C,EAAI2B,YACJ3B,EAAIiC,UAAYzB,EAAec,MAC/BtB,EAAIkC,YAAczB,EAClBT,EAAImC,OAAOZ,EAAIC,GACfxB,EAAIoC,OAAOJ,EAAIR,GACfxB,EAAIqC,SACJrC,EAAI+B,aAGJ9E,EAAKK,+BAAwBiE,mBAAWC,mBAAWQ,mBAAWR,6BAAqBhB,EAAec,2BAAkBb,aAGrHC,EAAiBY,MAAO,KACrBC,EAAKtB,EAAIE,EAAQW,EAAgBQ,MAAiC,GAAzBZ,EAAiBY,MAC1DE,EAAKtB,EACLoC,EAAKd,EAAKpB,EAASI,EAAec,MAAQV,EAAkBU,MAC7DD,IACDE,GAAMF,EAAYC,OAEjBH,IACDI,GAAMJ,EAAaG,OAElBJ,IACDoB,GAAMpB,EAAWI,OAEhBF,IACDkB,GAAMlB,EAAcE,OAEnBrE,EAAKG,YACN4C,EAAI2B,YACJ3B,EAAIiC,UAAYvB,EAAiBY,MACjCtB,EAAIkC,YAAcvB,EAClBX,EAAImC,OAAOZ,EAAIC,GACfxB,EAAIoC,OAAOb,EAAIe,GACftC,EAAIqC,SACJrC,EAAI+B,aAGJ9E,EAAKK,+BAAwBiE,mBAAWC,mBAAWD,mBAAWe,6BAAqB5B,EAAiBY,2BAAkBX,aAGvHC,EAAkBU,MAAO,KACtBC,EAAKtB,EAAIa,EAAgBQ,MACzBE,EAAKtB,EAAIE,EAASI,EAAec,MAAkC,GAA1BV,EAAkBU,MAC3DU,EAAKT,EAAKpB,EACXkB,IACDW,GAAMX,EAAYC,OAEjBH,IACDa,GAAMb,EAAaG,OAElBJ,IACDM,GAAMN,EAAWI,OAEhBF,IACDI,GAAMJ,EAAcE,OAEnBrE,EAAKG,YACN4C,EAAI2B,YACJ3B,EAAIiC,UAAYrB,EAAkBU,MAClCtB,EAAIkC,YAAcrB,EAClBb,EAAImC,OAAOZ,EAAIC,GACfxB,EAAIoC,OAAOJ,EAAIR,GACfxB,EAAIqC,SACJrC,EAAI+B,aAGJ9E,EAAKK,+BAAwBiE,mBAAWC,mBAAWQ,mBAAWR,6BAAqBZ,EAAkBU,2BAAkBT,aAGxHC,EAAgBQ,MAAO,KACpBC,EAAKtB,EAA4B,GAAxBa,EAAgBQ,MACzBE,EAAKtB,EACLoC,EAAKd,EAAKpB,EAASI,EAAec,MAAQV,EAAkBU,MAC7DJ,IACDoB,GAAMpB,EAAWI,OAEhBF,IACDkB,GAAMlB,EAAcE,OAEnBrE,EAAKG,YACN4C,EAAI2B,YACJ3B,EAAIiC,UAAYnB,EAAgBQ,MAChCtB,EAAIkC,YAAcnB,EAClBf,EAAImC,OAAOZ,EAAIC,GACfxB,EAAIoC,OAAOb,EAAIe,GACftC,EAAIqC,SACJrC,EAAI+B,aAGJ9E,EAAKK,+BAAwBiE,mBAAWC,mBAAWD,mBAAWe,6BAAqBxB,EAAgBQ,2BAAkBP,kDAMlH/D,KAAKwC,mDAUNxC,KAPAU,MACJoD,IAAAA,gBACAJ,IAAAA,iBACAO,IAAAA,WACAsB,IAAAA,YACAlB,IAAAA,YACAF,IAAAA,oBAEKnE,KAAKmD,MACRW,EAAgBQ,MAChBZ,EAAiBY,MACjBL,EAAWK,MACXiB,EAAYjB,MACZD,EAAYC,MACZH,EAAaG,gDAUXtE,KAPAU,MACJ8C,IAAAA,eACAI,IAAAA,kBACAI,IAAAA,UACAwB,IAAAA,aACAtB,IAAAA,WACAE,IAAAA,qBAEKpE,KAAKoD,OACRI,EAAec,MACfV,EAAkBU,MAClBN,EAAUM,MACVkB,EAAalB,MACbJ,EAAWI,MACXF,EAAcE,+CAGdmB,EAAMzF,KAAK0F,OACTD,EAAIC,WACmD,EAAxD,CAAC,WAAY,YAAYC,QAAQF,EAAI/E,MAAMC,YAG9C8E,EAAMA,EAAIC,cAELD,aClRH,IACF,IACK,ICAF,CACLG,IAAK,cACLC,IAAK,UACLC,IAAK,YACLC,IAAK,aACLC,IAAK,cCRHC,EAAQ,CACZtF,SAAU,SACViC,QAAS,QACTsD,aAAc,cACdlC,UAAW,EACXuB,YAAa,EACbC,aAAc,EACdvB,WAAY,EACZC,WAAY,EACZC,aAAc,EACdC,cAAe,EACfC,YAAa,EACb8B,SAAU,GACVC,WAAY,QACZC,MAAO,OACPC,UAAW,SACXC,WAAY,IACZC,WAAY,SACZhD,eAAgB,EAChBE,iBAAkB,EAClBE,kBAAmB,EACnBE,gBAAiB,EACjB2C,eAAgB,QAChBC,iBAAkB,QAClBC,kBAAmB,QACnBC,gBAAiB,QACjBC,cAAe,WACf1D,MAAO,OACPC,OAAQ,OACR0D,SAAU,EACVC,WAAY,EACZC,UAAW,OACXC,cAAe,MACfC,eAAgB,aAChBC,UAAW,UACXC,UAAW,OACX/B,OAAQ,OACRgC,YAAa,GAGXC,EAAQ,GAEZzF,OAAOC,KAAKmE,GAAOsB,QAAQ,SAAAvF,OACrBwF,EAAIvB,EAAMjE,GACdsF,EAAMlF,KAAK,CACTJ,EAAAA,EACAwF,EAAAA,MC9CJ,IAAIC,EAAW,GAAGA,SAClB,SAASC,EAAOC,UACP,SAASC,UACPH,EAASI,KAAKD,KAAS,WAAaD,EAAO,KAItD,IAAIG,EAAWJ,EAAO,UAgBtB,SAASK,EAAUxH,UACdyH,EAAMzH,GACA,GAEFA,EAAEkH,WAUX,SAASO,EAAMR,UACNA,MAAAA,EAGT,IAAIS,EAAO,CACTC,SAAUR,EAAO,UACjBS,SAAUT,EAAO,UACjBU,WAAYV,EAAO,YACnBI,SAAAA,EACAO,UAAWX,EAAO,WAClBY,OAAQZ,EAAO,QACfK,UAAAA,EACAQ,yBAAgBjH,UAxClB,SAASiH,EAAgBjH,WACnBkH,EAAM,GACFhH,EAAI,EAAGC,EAAMH,EAAII,OAAQF,EAAIC,EAAKD,IAAK,KACzCG,EAAOL,EAAIE,GACZJ,MAAMC,QAAQM,GACf6G,GAAOD,EAAgB5G,GAGvB6G,GAAOT,EAAUpG,UAGd6G,EA8BED,CAAgBjH,IAEzBmH,WAtBF,SAAoBlI,EAAGmI,UAClBA,EACMnI,EAAEoI,QAAQ,KAAM,UAElBpI,EAAEoI,QAAQ,KAAM,SAASA,QAAQ,KAAM,SAmB9CX,MAAAA,GChDF,SAASY,EAAgBlI,EAAOmI,OAC1BC,kBAAeD,MACfnI,EAAMoI,QAGNrE,EAAI,aAAasE,KAAKrI,EAAMoI,IAC7BrE,IACD/D,EAAMoI,EAAM,SAAWrE,EAAE,QAEvBlE,EAAI,aAAawI,KAAKrI,EAAMoI,IAC7BvI,IACDG,EAAMoI,EAAM,SAAWvI,EAAE,QAEvByI,EAAI,kBAAkBD,KAAKrI,EAAMoI,IAClCE,IAAoC,EAA/B,CAAC,EAAG,GAAGrD,QAAQqD,EAAE,GAAGtH,UAC1BhB,EAAMoI,EAAM,SAAWE,EAAE,WAwJd,CACbC,UArJF,SAAmBvI,MAEjB4G,EAAMC,QAAQ,SAAA5F,GACRjB,EAAMwI,eAAevH,EAAKK,KAC5BtB,EAAMiB,EAAKK,GAAKL,EAAK6F,KAKtB9G,EAAMyI,WAAY,KACfC,EAAM,kBAAkBL,KAAKrI,EAAMyI,YACpCC,IAAwC,EAAjC,CAAC,EAAG,GAAGzD,QAAQyD,EAAI,GAAG1H,UAC9BhB,EAAM2C,gBAAkB+F,EAAI,IAG7B1I,EAAM2I,OACW,SAAf3I,EAAM2I,MACP3I,EAAMoG,SAAW,EACjBpG,EAAMqG,WAAa,EACnBrG,EAAMsG,UAAY,QAEG,SAAftG,EAAM2I,MACZ3I,EAAMoG,SAAW,EACjBpG,EAAMqG,WAAa,EACnBrG,EAAMsG,UAAY,QAEZ,WAAWsC,KAAK5I,EAAM2I,OAC5B3I,EAAMoG,SAAWyC,WAAW7I,EAAM2I,MAClC3I,EAAMqG,WAAa,EACnBrG,EAAMsG,UAAY,GAEZ,aAAasC,KAAK5I,EAAM2I,OACxB,YAAYC,KAAK5I,EAAM2I,QAE7B3I,EAAMoG,SAAW,EACjBpG,EAAMqG,WAAa,EACnBrG,EAAMsG,UAAY,SAGnBtG,EAAM8I,SACP9I,EAAM+I,UAAY/I,EAAMgJ,YAAchJ,EAAMiJ,aAAejJ,EAAMkJ,WAAalJ,EAAM8I,QAEnF9I,EAAMmJ,SACPnJ,EAAMsD,UAAYtD,EAAM6E,YAAc7E,EAAM8E,aAAe9E,EAAMuD,WAAavD,EAAMmJ,QAEnFnJ,EAAMoJ,UACPpJ,EAAMwD,WAAaxD,EAAMyD,aAAezD,EAAM0D,cAAgB1D,EAAM2D,YAAc3D,EAAMoJ,SAE1FlB,EAAgBlI,EAAO,OACvBkI,EAAgBlI,EAAO,SACvBkI,EAAgBlI,EAAO,UACvBkI,EAAgBlI,EAAO,SAGrB,YACA,cACA,eACA,aACA,aACA,eACA,gBACA,cACA,iBACA,mBACA,oBACA,kBACA,QACA,SACA,aACA6G,QAAQ,SAAAvF,OACJwF,EAAI9G,EAAMsB,IAEViG,EAAKD,MAAMR,IAAMA,EAAEuC,OAGd,SAANvC,EACD9G,EAAMsB,GAAK,CACT+H,KAAMA,GAGF,KAAKT,KAAK9B,IAChBA,EAAI+B,WAAW/B,IAAM,EAEnB9G,EAAMsB,GADLwF,GAAK,EACK,CACTlD,MAAO,EACPyF,KAAMA,GAIG,CACTzF,MAAOkD,EACPuC,KAAMA,KAKVvC,EAAI+B,WAAW/B,IAAM,EACrB9G,EAAMsB,GAAK,CACTsC,MAAO0F,KAAKC,IAAIzC,EAAG,GACnBuC,KAAMA,WAKRvD,EAAa9F,EAAM8F,WAErBA,EADgB,WAAfA,EACY,CACXlC,MAAO5D,EAAMyF,SAAW+D,EAAWtE,IACnCmE,KAAMA,GAGF,MAAMT,KAAK9C,IACjBA,EAAa+C,WAAW/C,GACX,CACXlC,MAAO0F,KAAKC,IAAIvJ,EAAMyF,SAAUK,GAChCuD,KAAMA,IAOU,YAFlBvD,EAAa+C,WAAW/C,IAAe,UAGxB,CACXlC,MAAO5D,EAAMyF,SAAW+D,EAAWtE,IACnCmE,KAAMA,GAIK,CACXzF,MAAOkC,EAAa9F,EAAMyF,SAC1B4D,KAAMA,GAIZrJ,EAAM8F,WAAaA,GAenB2D,aAZF,SAAsBzJ,OACd4F,EAAgD5F,EAAhD4F,UAAWC,EAAqC7F,EAArC6F,WAAYJ,EAAyBzF,EAAzByF,SAAUC,EAAe1F,EAAf0F,2BAC7BE,cAAaC,cAAcJ,gBAAcA,gBAAcC,IAWjEgE,YARF,SAAqB1J,OACf2J,EAAS3J,EAAMyF,SAAW+D,EAAWtE,UACE,IAAnClF,EAAM8F,WAAWlC,MAAQ+F,GAAgB3J,EAAMyF,SAAW+D,EAAWpE,MCtKzEwE,wBACQtH,EAAKC,EAAGC,EAAGqH,EAAS7J,kBACzBf,MAAQqD,OACR3D,IAAM4D,OACN3D,IAAM4D,OACNsH,UAAYD,OACZ1K,QAAUa,iDAITsC,EAA8BhD,KAA9BgD,IAAKtC,EAAyBV,KAAzBU,MAAO6J,EAAkBvK,KAAlBuK,QAAStH,EAASjD,KAATiD,EAAGC,EAAMlD,KAANkD,EAC3BjD,EAAKG,YACN4C,EAAI4B,UAAYlE,EAAM2F,MACtBrD,EAAIyH,SAASF,EAAStH,EAAGC,EAAIwH,EAAIN,YAAY1J,KAEvCT,EAAKI,SACXJ,EAAKK,8BAAuB2C,kBAASC,EAAIwH,EAAIN,YAAY1J,sBAAiBA,EAAM2F,8BAAqB3F,EAAMyF,wBAAeoE,gDAIpHxK,QACHV,KAAOU,oCAGJA,QACHT,KAAOS,qCAILC,KAAKL,uCAGLK,KAAKX,qCAGLW,KAAKV,2CAGLU,KAAKwK,+CAGLxK,KAAKH,gDAGL6K,EAAIN,YAAYpK,KAAKU,gBC1C1BiK,EAAmB,GAEnBC,wBACQL,sDAELC,UAAYD,EAAQ9C,aACpBoD,YAAc,KACdC,gBAAkB,KAClBC,YAAc,IACdC,YAAc,eAPJ5L,+CAYV0L,gBAAkB,OACjB9H,EAAuChD,KAAvCgD,IAAKuH,EAAkCvK,KAAlCuK,QAAS7J,EAAyBV,KAAzBU,MAAOuK,EAAkBjL,KAAlBiL,cACxBhL,EAAKG,aACN4C,EAAIkH,KAAOQ,EAAIP,aAAazJ,YAE1BwK,EAAQP,EAAiBjK,EAAMyF,UAAYwE,EAAiBjK,EAAMyF,WAAa,GAC/EzE,EAAS6I,EAAQ7I,OACjByJ,EAAM,EACF3J,EAAI,EAAGA,EAAIE,EAAQF,IAAK,KAC1B4J,EAAOb,EAAQc,OAAO7J,GACtB8J,YACDJ,EAAMhC,eAAekC,GACtBE,EAAKJ,EAAME,QAER,GAAGnL,EAAKG,WACXkL,EAAKtI,EAAIuI,YAAYH,GAAMjI,WAExB,GAAGlD,EAAKI,QAAS,KAChBoF,EAAMxF,EAAKuL,QACf/F,EAAI/E,MAAMyF,SAAWzF,EAAMyF,SAAW,KACtCV,EAAIgG,UAAYL,MACZV,EAAMgB,OAAOC,iBAAiBlG,EAAK,MACvC6F,EAAK/B,WAAWmB,EAAIvH,OAEtB8H,EAAc7I,KAAKkJ,GACnBH,GAAOG,OACFP,YAAcf,KAAKC,IAAIjK,KAAK4L,UAAWN,QAEzCN,YAAcG,mCAGZzI,EAAMmJ,OACP5I,EAAeP,EAAfO,EAAGC,EAAYR,EAAZQ,EAAGuB,EAAS/B,EAAT+B,EAAS/B,EAANgC,OACVrF,IAAM4D,OACN3D,IAAM4D,UACP4I,EAAO7I,EACLD,EAAkDhD,KAAlDgD,IAAKuH,EAA6CvK,KAA7CuK,QAAS7J,EAAoCV,KAApCU,MAAOqL,EAA6B/L,KAA7B+L,UAAWd,EAAkBjL,KAAlBiL,cAElCe,EAAQ,EACRxK,EAAI,EACJyK,EAAQ,EACRvK,EAAS6I,EAAQ7I,OACfF,EAAIE,OACRuK,GAAShB,EAAczJ,MACTiD,EAAG,KACXyH,EAAU,IAAI5B,EAAQtH,EAAKC,EAAGC,EAAGqH,EAAQ4B,MAAMH,EAAOxK,EAAI,GAAId,GAClEqL,EAAU3J,KAAK8J,GACfJ,EAAO9B,KAAKC,IAAI6B,EAAM7I,EAAIgJ,GAC1B/I,GAAKlD,KAAKU,MAAM8F,WAAWlC,MAE3B9C,GADAwK,EAAQxK,EAAI,GACA,EACZyK,EAAQ,OAEL,GAAYxH,EAARwH,EAAW,CAEfzK,IAAMwK,IACPxK,EAAIwK,EAAQ,OAEVE,EAAU,IAAI5B,EAAQtH,EAAKC,EAAGC,EAAGqH,EAAQ4B,MAAMH,EAAOxK,GAAId,GAC9DqL,EAAU3J,KAAK8J,GACfJ,EAAO9B,KAAKC,IAAI6B,EAAM7I,EAAIgJ,EAAQhB,EAAczJ,IAChD0B,GAAKlD,KAAKU,MAAM8F,WAAWlC,MAC3B0H,EAAQxK,EACRA,GAAQ,EACRyK,EAAQ,OAGRzK,OAGDwK,EAAQtK,GAAUsK,EAAQxK,EAAG,KAC1B0K,EAAU,IAAI5B,EAAQtH,EAAKC,EAAGC,EAAGqH,EAAQ4B,MAAMH,EAAOxK,GAAId,GAC9DqL,EAAU3J,KAAK8J,GACfJ,EAAO9B,KAAKC,IAAI6B,EAAM7I,EAAIgJ,GAC1B/I,GAAKlD,KAAKU,MAAM8F,WAAWlC,WAExB/E,QAAUuM,EAAO7I,OACjBzD,SAAW0D,EAAIR,EAAKQ,EACtB2I,SACIhB,YAAc,qCAKlB5K,EAAKG,kBACD4C,IAAIkH,KAAOQ,EAAIP,aAAanK,KAAKU,aAEnCqL,UAAUxE,QAAQ,SAAA5F,GACrBA,EAAKyK,kDAIM3H,eACRzB,IAAIkH,KAAOQ,EAAIP,aAAanK,KAAKU,OAE/B+D,EADEzE,KAAKgD,IAAIuI,YAAYvL,KAAKuK,SAASpH,wCAIpCpD,gDACQA,QACXgM,UAAUxE,QAAQ,SAAA5F,GACrBA,EAAK0K,UAAUtM,uCAITA,gDACQA,QACXgM,UAAUxE,QAAQ,SAAA5F,GACrBA,EAAK2K,UAAUvM,uDAKbwM,EAAI,cACHtB,cAAc1D,QAAQ,SAAA5F,GACzB4K,EAAIvC,KAAKC,IAAIsC,EAAG5K,KAEX,CAAEsI,IAAKjK,KAAKwM,UAAWC,IAAKF,0CAI5BvM,KAAKwK,wBAEFhD,QACLgD,UAAYhD,2CAGVxH,KAAK6K,yDAGL7K,KAAK8K,yDAGL9K,KAAK+K,qDAGL/K,KAAKgL,iDAGR0B,EAAO1M,KAAK+L,UAAU/L,KAAK+L,UAAUrK,OAAS,UAC3CgL,EAAKxJ,EAAIlD,KAAKkD,EAAIwJ,EAAKC,kBC/J5BC,wBACQ3J,EAAGC,kBACR2J,OAAS,QACTxN,IAAM4D,OACN3D,IAAM4D,OACN1D,SAAW,OACXM,WAAa,wCAGhB6B,QACGC,KAAKQ,KAAKT,+CAIXgL,EAAW,cACV/K,KAAK2F,QAAQ,SAAA5F,GAChBgL,EAAW3C,KAAKC,IAAI0C,EAAUhL,EAAKgL,YAE9BA,4CAIHvJ,EAAS,cACRxB,KAAK2F,QAAQ,SAAA5F,GAChByB,EAAS4G,KAAKC,IAAI7G,EAAQzB,EAAKyB,UAE1BA,0DAIF5D,SAAWQ,KAAK8M,mBAChBhN,WAAaE,KAAK+M,gBAED,EAAnB/M,KAAK4B,KAAKF,aACNE,KAAK2F,QAAQ,SAAA5F,GACbA,EAAKgL,WAAalK,EAAKkK,UACxBhL,EAAK2K,UAAU7J,EAAKkK,SAAWhL,EAAKgL,gDAOnC3M,KAAK6M,wCAGL7M,KAAKX,qCAGLW,KAAKV,0CAGLU,KAAKR,iDAGLQ,KAAKF,+CAGLE,KAAK6M,OAAOnL,gBCtDjBsL,EAAW,QACN,YACG,GAGRC,wBACQ/L,EAASC,0CACbD,EAASC,eAFAF,4CAMfyJ,EAAIzB,UAAUjJ,KAAKU,8CAGN+D,EAAGyI,OAED/J,EAAYnD,KAArBU,MAASyC,aACZA,EAAM4G,OAASA,EACTtF,EAAItB,EAAMmB,MAEXnB,EAAM4G,OAASA,EACdtF,EAAIyI,EAAQ/J,EAAMmB,MAAQ,IAE5BG,yCAGM0I,EAAgB1I,EAAGC,OAC5B0I,EAAI,EACJX,EAAM,EACNxC,EAAM,EACJvJ,EAAUV,KAAVU,MAGJyC,EAMEzC,EANFyC,MACAC,EAKE1C,EALF0C,OACAI,EAIE9C,EAJF8C,eACAE,EAGEhD,EAHFgD,iBACAE,EAEElD,EAFFkD,kBACAE,EACEpD,EADFoD,gBAEEuJ,EAAOF,EAAiBhK,EAAQC,KACjCiK,EAAKtD,OAASA,IACfqD,EAAInD,GAAOoD,EAAK/I,OAGf6I,EAAgB,KACb1I,EAAIf,EAAiBY,MAAQR,EAAgBQ,MACjD8I,GAAK3I,EACLwF,GAAOxF,EACPgI,GAAOhI,MAEJ,KACCC,EAAIlB,EAAec,MAAQV,EAAkBU,MACjD8I,GAAK1I,EACLuF,GAAOvF,EACP+H,GAAO/H,QAEF,CAAE0I,EAAAA,EAAGX,IAAAA,EAAKxC,IAAAA,yCAGLvH,OACNO,EAAeP,EAAfO,EAAGC,EAAYR,EAAZQ,EAAGuB,EAAS/B,EAAT+B,EAAGC,EAAMhC,EAANgC,OACVrF,IAAM4D,OACN3D,IAAM4D,OACN3D,QAAUkF,MAWX6I,EAVE5M,EAAUV,KAAVU,MAEJyC,EAMEzC,EANFyC,MACAC,EAKE1C,EALF0C,OACAI,EAIE9C,EAJF8C,eACAE,EAGEhD,EAHFgD,iBACAE,EAEElD,EAFFkD,kBACAE,EACEpD,EADFoD,mBAICX,GAASA,EAAM4G,OAASA,SAClB5G,EAAM4G,WACNA,EACHtF,EAAItB,EAAMmB,SAIblB,GAAUA,EAAO2G,OAASA,SAC3BuD,GAAc,EACPlK,EAAO2G,WACPA,EACHrF,EAAItB,EAAOkB,iBAERyF,EACHrF,GAAoB,IAAftB,EAAOkB,MAKlBrB,GAAKa,EAAgBQ,MACrB5B,EAAKO,EAAIA,EACTC,GAAKM,EAAec,MACpB5B,EAAKQ,EAAIA,EACTuB,GAAKX,EAAgBQ,MAAQZ,EAAiBY,MAC9CI,GAAKlB,EAAec,MAAQV,EAAkBU,WACzC/E,QAAUkF,OACVjF,SAAW8N,EAAc5I,EAAI,uCAGvBhC,QAENG,cAAcH,0CAGNA,OACPO,EAAeP,EAAfO,EAAGC,EAAYR,EAAZQ,EAAGuB,EAAS/B,EAAT+B,EAAGC,EAAMhC,EAANgC,OACVrF,IAAM4D,OACN3D,IAAM4D,MAWPqK,EACAD,EAXE5M,EAAUV,KAAVU,MAEJyC,EAMEzC,EANFyC,MACAC,EAKE1C,EALF0C,OACAI,EAIE9C,EAJF8C,eACAE,EAGEhD,EAHFgD,iBACAE,EAEElD,EAFFkD,kBACAE,EACEpD,EADFoD,mBAKCX,GAASA,EAAM4G,OAASA,SACzBwD,GAAa,EACNpK,EAAM4G,WACNA,EACHtF,EAAItB,EAAMmB,SAIblB,GAAUA,EAAO2G,OAASA,SAC3BuD,GAAc,EACPlK,EAAO2G,WACPA,EACHrF,EAAItB,EAAOkB,MAKjBrB,GAAKa,EAAgBQ,MACrB5B,EAAKO,EAAIA,EACTC,GAAKM,EAAec,MACpB5B,EAAKQ,EAAIA,EACTuB,GAAKX,EAAgBQ,MAAQZ,EAAiBY,MAC9CI,GAAKlB,EAAec,MAAQV,EAAkBU,WAEzC/E,QAAUgO,EAAa9I,EAAIxB,EAAIP,EAAKO,OACpCzD,SAAW8N,EAAc5I,EAAIxB,EAAIR,EAAKQ,qHAQpClD,KAAKwC,kDAGLxC,KAAKR,+CAGLQ,KAAKwN,4CAGLxN,KAAKyN,yCAGLzN,KAAK0N,wCAGCnN,UACNyM,EAAS9D,eAAe3I,YC3K7ByM,EAAW,MACR,QACC,GAEJW,EAAS,OACL,GAGJC,wBACQ1M,EAASC,EAAO0M,mDACpB3M,EAASC,KACV2M,WAAaD,IACbE,aAAe,gBAJN9M,yCAcL+B,cACLpB,EAAO,QACNoM,mBAAmBhO,KAAK6N,SAAUjM,EAAMoB,OACzC,IAAIxB,EAAII,EAAKF,OAAS,EAAO,EAAJF,EAAOA,IAAK,KACnCG,EAAOC,EAAKJ,MACbG,aAAgBiJ,EAAM,KACnBqD,EAAOrM,EAAKJ,EAAI,GACjByM,aAAgBrD,GACjBqD,EAAK1D,SAAW5I,EAAK4I,QACrB3I,EAAKS,OAAOb,EAAG,IAGfA,QAIoB,WAAvBxB,KAAKU,MAAMkC,SAAsD,SAA9B5C,KAAK0F,OAAOhF,MAAMkC,YAClD,IAAIpB,EAAII,EAAKF,OAAS,EAAQ,GAALF,EAAQA,IAAK,KACpCG,EAAOC,EAAKJ,MACbG,aAAgBiM,GAA8B,WAAvBjM,EAAKjB,MAAMkC,cAC7B,IAAIsL,MAAM,qCAKtBtM,EAAK2F,QAAQ,SAAA5F,GACXA,EAAKhC,MAAQqD,EAIbrB,EAAK/B,SAAWuO,EAChBxM,EAAKlC,OAPI,YASNqO,WAAalM,6CAGDiM,EAAUjM,EAAMoB,cAC9B5B,MAAMC,QAAQwM,GACfA,EAAStG,QAAQ,SAAA5F,GACfyM,EAAKJ,mBAAmBrM,EAAMC,EAAMoB,KAGhC6K,aAAoBD,GAC1BhM,EAAKQ,KAAKyL,GACVA,EAASQ,WAAWrL,IAGd6K,aAAoBZ,EAC1BrL,EAAKQ,KAAKyL,GAGH5F,EAAKD,MAAM6F,IAClBjM,EAAKQ,KAAK,IAAIwI,EAAKiD,8CAMjBnN,EAAQV,KAAKH,QAEba,EAAMkC,UAA2E,IAAhE,CAAC,OAAQ,QAAS,SAAU,QAAQ+C,QAAQjF,EAAMkC,WAClE+K,EAAOzE,eAAelJ,KAAKkB,SAC5BR,EAAMkC,QAAU,SAGhBlC,EAAMkC,QAAU,aAIhB8C,EAAS1F,KAAK0F,UACfA,EAAQ,KACL4I,EAAc5I,EAAOhF,OACxB,WAAY,aAAc,YAAa,aAAc,YAAa,QAAS,aAAa6G,QAAQ,SAAAvF,IAC3FtB,EAAMwI,eAAelH,IAAMsM,EAAYpF,eAAelH,KACxDtB,EAAMsB,GAAKsM,EAAYtM,MAK7B0I,EAAIzB,UAAUvI,QACTmN,SAAStG,QAAQ,SAAA5F,GACjBA,aAAgBiM,GAAOjM,aAAgBsL,EACxCtL,EAAK4M,eAGL5M,EAAK9B,QAAUa,EAEfiB,EAAK6M,sDAMI/J,EAAGyI,OACVW,EAA+B7N,KAA/B6N,SAAmB1K,EAAYnD,KAArBU,MAASyC,SACtBA,EAAM4G,OAASA,SACTtF,EAAItB,EAAMmB,MAEd,GAAGnB,EAAM4G,OAASA,SACdtF,EAAIyI,EAAQ/J,EAAMmB,MAAQ,QAE/B,IAAI9C,EAAI,EAAGA,EAAIqM,EAASnM,OAAQF,IAAK,IAEpCiD,EAAI,SACEA,MAEL9C,EAAOkM,EAASrM,GAElBiD,GADC9C,aAAgBiM,GAAOjM,aAAgBsL,EACnCtL,EAAK8M,eAAehK,EAAGyI,GAGvBvL,EAAK6K,iBAGP/H,oCAIC1E,gDACQA,QACX8N,SAAStG,QAAQ,SAAA5F,GACjBA,GACDA,EAAK0K,UAAUtM,uCAMXA,gDACQA,QACX8N,SAAStG,QAAQ,SAAA5F,GACjBA,GACDA,EAAK2K,UAAUvM,4CAKNoN,EAAgB1I,EAAGC,EAAGgK,OAC/BtB,EAAI,EACJX,EAAM,EACNxC,EAAM,EACJ4D,EAAoB7N,KAApB6N,SAAUnN,EAAUV,KAAVU,MAGdyC,EAcEzC,EAdFyC,MACAC,EAaE1C,EAbF0C,OACAI,EAYE9C,EAZF8C,eACAE,EAWEhD,EAXFgD,iBACAE,EAUElD,EAVFkD,kBACAE,EASEpD,EATFoD,gBACAE,EAQEtD,EARFsD,UACAuB,EAOE7E,EAPF6E,YAEAtB,GAKEvD,EANF8E,aAME9E,EALFuD,YACAC,EAIExD,EAJFwD,WACAC,EAGEzD,EAHFyD,aACAC,EAEE1D,EAFF0D,cACAC,EACE3D,EADF2D,YAEEgJ,EAAOF,EAAiBhK,EAAQC,KACjCiK,EAAKtD,OAASA,IACfqD,EAAInD,GAAOoD,EAAK/I,MAEboK,IACDjC,EAAMW,IAIVS,EAAStG,QAAQ,SAAA5F,MACZA,aAAgBiM,GAAOjM,aAAgBsL,EAAM,OACRtL,EAAKgN,eAAexB,EAAgB1I,EAAGC,GAAG,GAAvEkK,IAAHxB,EAAYyB,IAALpC,IAAgBqC,IAAL7E,IACxBmD,EAAIpD,KAAKC,IAAImD,EAAGwB,GAChBnC,EAAMzC,KAAKC,IAAIwC,EAAKoC,GACpB5E,EAAMD,KAAKC,IAAIA,EAAK6E,QAIpB7E,EAFMkD,GACNV,EAAMzC,KAAKC,IAAItI,EAAKiK,UAAWa,GACzBzC,KAAKC,IAAItI,EAAK6K,UAAWvC,KAG/BtI,EAAKoN,SAAS,CACZ9L,EAAG,EACHC,EAAG,EACHuB,EAAAA,EACAC,EAAAA,IACC,GACH+H,EAAMzC,KAAKC,IAAIwC,EAAK9K,EAAKyB,QACnB4G,KAAKC,IAAIA,EAAKtI,EAAKyB,WAI1B+J,EAAgB,KACb1I,EAAIf,EAAiBY,MAAQR,EAAgBQ,MAAQL,EAAWK,MAAQiB,EAAYjB,MAAQD,EAAYC,MAAQH,EAAaG,MACjI8I,GAAK3I,EACLwF,GAAOxF,EACPgI,GAAOhI,MAEJ,KACCC,EAAIlB,EAAec,MAAQV,EAAkBU,MAAQN,EAAUM,MAAQiB,EAAYjB,MAAQJ,EAAWI,MAAQF,EAAcE,MAChI8I,GAAK1I,EACLuF,GAAOvF,EACP+H,GAAO/H,QAEF,CAAE0I,EAAAA,EAAGX,IAAAA,EAAKxC,IAAAA,yCAILvH,cACNO,EAAeP,EAAfO,EAAGC,EAAYR,EAAZQ,EAAGuB,EAAS/B,EAAT+B,EAAGC,EAAMhC,EAANgC,OACVrF,IAAM4D,OACN3D,IAAM4D,OACN3D,QAAUkF,MAmBX6I,EAlBEO,EAAoB7N,KAApB6N,SAAUnN,EAAUV,KAAVU,MAEdyC,EAcEzC,EAdFyC,MACAC,EAaE1C,EAbF0C,OACAI,EAYE9C,EAZF8C,eACAE,EAWEhD,EAXFgD,iBACAE,EAUElD,EAVFkD,kBACAE,EASEpD,EATFoD,gBACAE,EAQEtD,EARFsD,UACAuB,EAOE7E,EAPF6E,YACAC,EAME9E,EANF8E,aACAvB,EAKEvD,EALFuD,WACAC,EAIExD,EAJFwD,WACAC,EAGEzD,EAHFyD,aACAC,EAEE1D,EAFF0D,cACAC,EACE3D,EADF2D,eAIClB,GAASA,EAAM4G,OAASA,SAClB5G,EAAM4G,WACNA,EACHtF,EAAItB,EAAMmB,iBAEPyF,EACHtF,GAAmB,IAAdtB,EAAMmB,SAIdlB,GAAUA,EAAO2G,OAASA,SAC3BuD,GAAc,EACPlK,EAAO2G,WACPA,EACHrF,EAAItB,EAAOkB,iBAERyF,EACHrF,GAAoB,IAAftB,EAAOkB,MAKlBrB,GAAKa,EAAgBQ,MAAQL,EAAWK,MAAQD,EAAYC,MAC5D5B,EAAKO,EAAIA,EACTC,GAAKM,EAAec,MAAQN,EAAUM,MAAQJ,EAAWI,MACzD5B,EAAKQ,EAAIA,EACTuB,GAAKX,EAAgBQ,MAAQZ,EAAiBY,MAAQL,EAAWK,MAAQiB,EAAYjB,MAAQD,EAAYC,MAAQH,EAAaG,MAC9HI,GAAKlB,EAAec,MAAQV,EAAkBU,MAAQN,EAAUM,MAAQkB,EAAalB,MAAQJ,EAAWI,MAAQF,EAAcE,UAE1H0K,EAAY,IAAIpC,EAAU3J,EAAGC,GACjC2K,EAAStG,QAAQ,SAAA5F,GACZA,aAAgBiM,GAAOjM,aAAgBsL,EACd,WAAvBtL,EAAKjB,MAAMkC,QAETK,IAAMP,EAAKO,GACZ+L,EAAUC,IAAItN,GACdA,EAAKoB,eAAe,CAClBE,EAAAA,EACAC,EAAAA,EACAuB,EAAAA,EACAC,EAAAA,IAEFzB,GAAKtB,EAAK2B,aAMD,GAFA3B,EAAK8M,eAAehK,EAAIxB,EAAGwB,GAGlC9C,EAAKoB,eAAe,CAClBE,EAAAA,EACAC,EAAAA,EACAuB,EAAAA,EACAC,EAAAA,KAKFwK,EAAKC,WAAW/M,KAAK4M,GACrBA,EAAUnI,gBACV5D,EAAIP,EAAKO,EACTC,GAAK8L,EAAU5L,OACfzB,EAAKoB,eAAe,CAClBE,EAAGP,EAAKO,EACRC,EAAAA,EACAuB,EAAAA,EACAC,EAAAA,IAEFsK,EAAY,IAAIpC,EAAU3J,EAAGC,IAE/BD,GAAKtB,EAAK2B,WACV0L,EAAUC,IAAItN,KAKbqN,EAAUI,OACXF,EAAKC,WAAW/M,KAAK4M,GACrBA,EAAUnI,gBACV3D,GAAK8L,EAAU5L,OACf4L,EAAY,IAAIpC,EAAUlK,EAAKO,EAAGC,IAEpCvB,EAAKoN,SAAS,CACZ9L,EAAGP,EAAKO,EACRC,EAAAA,EACAuB,EAAAA,EACAC,EAAAA,IAEFzB,EAAIP,EAAKO,EACTC,GAAKvB,EAAK4B,aAMTN,IAAMP,EAAKO,GACZ+L,EAAUC,IAAItN,GACdA,EAAKoN,SAAS,CACZ9L,EAAAA,EACAC,EAAAA,EACAuB,EAAAA,EACAC,EAAAA,IAEFzB,GAAKtB,EAAKwB,QAMD,GAFAxB,EAAK8M,eAAehK,EAAIxB,EAAGwB,GAGlC9C,EAAKoN,SAAS,CACZ9L,EAAAA,EACAC,EAAAA,EACAuB,EAAAA,EACAC,EAAAA,KAKFwK,EAAKC,WAAW/M,KAAK4M,GACrBA,EAAUnI,gBACV5D,EAAIP,EAAKO,EACTC,GAAK8L,EAAU5L,OACfzB,EAAKoN,SAAS,CACZ9L,EAAGP,EAAKO,EACRC,EAAAA,EACAuB,EAAAA,EACAC,EAAAA,IAEFsK,EAAY,IAAIpC,EAAU3J,EAAGC,IAE/BD,GAAKtB,EAAKwB,MACV6L,EAAUC,IAAItN,MAKjBqN,EAAUI,YACND,WAAW/M,KAAK4M,GACrBA,EAAUnI,gBACV3D,GAAK8L,EAAU5L,aAEZ7D,QAAUkF,OACVjF,SAAW8N,EAAc5I,EAAIxB,EAAIR,EAAKQ,uCAIhCR,OACLO,EAAeP,EAAfO,EAAGC,EAAYR,EAAZQ,EAAGuB,EAAS/B,EAAT+B,EAAGC,EAAMhC,EAANgC,OACVrF,IAAM4D,OACN3D,IAAM4D,OACN3D,QAAUkF,MAqBX6I,EApBEO,EAAoB7N,KAApB6N,SAAUnN,EAAUV,KAAVU,MAEdyC,EAgBEzC,EAhBFyC,MACAC,EAeE1C,EAfF0C,OACA6D,EAcEvG,EAdFuG,cACAzD,EAaE9C,EAbF8C,eACAE,EAYEhD,EAZFgD,iBACAE,EAWElD,EAXFkD,kBACAE,EAUEpD,EAVFoD,gBACAE,EASEtD,EATFsD,UACAuB,EAQE7E,EARF6E,YACAC,EAOE9E,EAPF8E,aACAvB,EAMEvD,EANFuD,WACAC,EAKExD,EALFwD,WACAC,EAIEzD,EAJFyD,aACAC,EAGE1D,EAHF0D,cACAC,EAEE3D,EAFF2D,YACA6C,EACExG,EADFwG,kBAIC/D,GAASA,EAAM4G,OAASA,SAClB5G,EAAM4G,WACNA,EACHtF,EAAItB,EAAMmB,iBAEPyF,EACHtF,GAAmB,IAAdtB,EAAMmB,SAIdlB,GAAUA,EAAO2G,OAASA,SAC3BuD,GAAc,EACPlK,EAAO2G,WACPA,EACHrF,EAAItB,EAAOkB,iBAERyF,EACHrF,GAAoB,IAAftB,EAAOkB,MAKlBrB,GAAKa,EAAgBQ,MAAQL,EAAWK,MAAQD,EAAYC,MAC5D5B,EAAKO,EAAIA,EACTC,GAAKM,EAAec,MAAQN,EAAUM,MAAQJ,EAAWI,MACzD5B,EAAKQ,EAAIA,EACTuB,GAAKX,EAAgBQ,MAAQZ,EAAiBY,MAAQL,EAAWK,MAAQiB,EAAYjB,MAAQD,EAAYC,MAAQH,EAAaG,MAC9HI,GAAKlB,EAAec,MAAQV,EAAkBU,MAAQN,EAAUM,MAAQkB,EAAalB,MAAQJ,EAAWI,MAAQF,EAAcE,UAC1H6I,EAAmC,QAAlBlG,MAEjBkG,IAAmBG,SACrBO,EAAStG,QAAQ,SAAA5F,MACZA,aAAgBiM,GAAOjM,aAAgBsL,EAAM,KACtCvM,EAA2DiB,EAA3DjB,QAA2DiB,EAApDjB,MAASkC,IAAAA,QAASqE,IAAAA,cAAe9D,IAAAA,QAAOC,OAExC,WAAZR,EACDlC,EAAMkC,QAAU,QAGE,SAAZA,GAAwC,QAAlBqE,GAA2B9D,EAAM4G,OAASA,IACtE5G,EAAMmB,MAAQG,EACdtB,EAAM4G,KAAOA,GAEfpI,EAAKoN,SAAS,CACZ9L,EAAAA,EACAC,EAAAA,EACAuB,EAAAA,EACAC,EAAAA,IAEFxB,GAAKvB,EAAK4B,iBAGV5B,EAAKoN,SAAS,CACZ9L,EAAAA,EACAC,EAAAA,EACAuB,EAAAA,EACAC,EAAAA,IAEFxB,GAAKvB,EAAK4B,mBAGThE,QAAUkF,YACVjF,SAAW0D,EAAIR,EAAKQ,OAIvBmM,EAAW,GACXC,EAAa,GACbC,EAAY,GACZC,EAAU,GACVC,EAAU,EACVC,EAAY,EACZC,EAAW,EACXC,EAAS,EACb/B,EAAStG,QAAQ,SAAA5F,MACZA,aAAgBiM,GAAOjM,aAAgBsL,EAAM,OACJtL,EAAKjB,MAAzCoG,IAAAA,SAAUC,IAAAA,WAAYC,IAAAA,UAC5BqI,EAASjN,KAAK0E,GACdwI,EAAWlN,KAAK2E,GAChB0I,GAAW3I,EACX4I,GAAa3I,QACSpF,EAAKgN,eAAexB,EAAgB1I,EAAGC,GAAvD0I,IAAAA,EAAGX,IAAAA,IAAKxC,IAAAA,IAEXjD,EAAU+C,OAASA,GACpBwF,EAAUnN,KAAK6H,GACf0F,GAAY1F,GAENjD,EAAU+C,OAASA,GACzBqD,EAAIpG,EAAU1C,MACdiL,EAAUnN,KAAKgL,GACfuC,GAAYvC,GAENpG,EAAU+C,OAASA,IACzBqD,GAAKD,EAAiB1I,EAAIC,GAAKsC,EAAU1C,MACzCiL,EAAUnN,KAAKgL,GACfuC,GAAYvC,GAEdwC,GAAU3F,EACVuF,EAAQpN,KAAKqK,QAGb4C,EAASjN,KAAK,GACdkN,EAAWlN,KAAK,GAChBsN,GAAa,EACVvC,GACDoC,EAAUnN,KAAKT,EAAK6K,WACpBmD,GAAYhO,EAAK6K,UACjBoD,GAAUjO,EAAK6K,UACfgD,EAAQpN,KAAKT,EAAKiK,aAGlBjK,EAAKoN,SAAS,CACZ9L,EAAG,EACHC,EAAG,EACHuB,EAAAA,EACAC,EAAAA,IACC,GACH6K,EAAUnN,KAAKT,EAAKyB,QACpBuM,GAAYhO,EAAKyB,OACjBwM,GAAUjO,EAAKyB,OACfoM,EAAQpN,KAAKT,EAAKyB,eAIpByM,EAAW,EACXC,EAAO,EAEPC,GAAuB5C,EAAiB1I,EAAIC,GAA/BkL,EACjB/B,EAAStG,QAAQ,SAAC5F,EAAMH,OAClB6L,EACA2C,EAASV,EAAW9N,GACpByO,EAAOZ,EAAS7N,MAEjBuO,EAAY,KACTG,EAAWP,GAAYxC,EAAiB1I,EAAIC,GAChD2I,EAAO2C,EAAUT,EAAU/N,GAAK0O,EAAWF,EAASN,EAAaH,EAAU/N,QAG3EsO,GAAQ3C,EAAiB1I,EAAIC,GAAKiL,EAClCtC,EAAO4C,EAAQV,EAAU/N,GAAKsO,EAAOG,EAAOR,EAAWF,EAAU/N,MAGnE6L,EAAOrD,KAAKC,IAAIoD,EAAMmC,EAAQhO,IAC3BG,aAAgBiM,GAAOjM,aAAgBsL,EAAM,KACtCvM,EAA2DiB,EAA3DjB,QAA2DiB,EAApDjB,MAASkC,IAAAA,QAASqE,IAAAA,cAAe9D,IAAAA,MAAOC,IAAAA,OACpD+J,GAEc,WAAZvK,EACDlC,EAAMkC,QAAU,QAGE,SAAZA,GAAwC,WAAlBqE,GAA8BqG,GAAelK,EAAO2G,OAASA,IACzF3G,EAAOkB,MAAQI,EACftB,EAAO2G,KAAOA,GAEhBpI,EAAKoN,SAAS,CACZ9L,EAAAA,EACAC,EAAAA,EACAuB,EAAG4I,EACH3I,EAAAA,MAKa,WAAZ9B,EACDlC,EAAMkC,QAAU,QAGE,SAAZA,GAAwC,QAAlBqE,GAA2B9D,EAAM4G,OAASA,IACtE5G,EAAMmB,MAAQG,EACdtB,EAAM4G,KAAOA,GAEfpI,EAAKoN,SAAS,CACZ9L,EAAAA,EACAC,EAAAA,EACAuB,EAAAA,EACAC,EAAG2I,KAIJ0C,GAAcC,EACZ7C,EACDxL,EAAKpC,QAAU8N,EAGf1L,EAAKnC,SAAW6N,GAGX0C,GAAcE,IAClB9C,EACDxL,EAAKpC,QAAU8N,EAGf1L,EAAKnC,SAAW6N,QAKpB1L,EAAKoN,SAAS,CACZ9L,EAAAA,EACAC,EAAAA,EACAuB,EAAG0I,EAAiBE,EAAO5I,EAC3BC,EAAGyI,EAAiBzI,EAAI2I,IAK1BwC,EAFC1C,GACDlK,GAAKtB,EAAK2B,WACC0G,KAAKC,IAAI4F,EAAUlO,EAAK4B,eAGnCL,GAAKvB,EAAK4B,YACCyG,KAAKC,IAAI4F,EAAUlO,EAAK2B,mBAInCvD,EAAOoN,EAAiB1I,EAAIxB,EAAIP,EAAKO,EAAIyB,EAAIxB,EAAIR,EAAKQ,MAEtD6M,GAA0B,IAAZN,GAAwB,EAAPK,GAAmB,EAAP/P,EAAU,KACnD0B,EAAMoM,EAASnM,UACG,aAAnBwF,MACG,IAAI1F,EAAI,EAAGA,EAAIC,EAAKD,IAAK,KACvB2O,EAAQtC,EAASrM,GACrB2L,EAAiBgD,EAAM9D,UAAUtM,GAAQoQ,EAAM7D,UAAUvM,QAGxD,GAAsB,WAAnBmH,UACFkJ,EAAgB,GAAPrQ,EACLyB,EAAI,EAAGA,EAAIC,EAAKD,IAAK,KACvB2O,EAAQtC,EAASrM,GACrB2L,EAAiBgD,EAAM9D,UAAU+D,GAAUD,EAAM7D,UAAU8D,QAG1D,GAAsB,kBAAnBlJ,UACFmJ,EAAUtQ,GAAQ0B,EAAM,GACpBD,EAAI,EAAGA,EAAIC,EAAKD,IAAK,KACvB2O,EAAQtC,EAASrM,GACrB2L,EAAiBgD,EAAM9D,UAAUgE,EAAU7O,GAAK2O,EAAM7D,UAAU+D,EAAU7O,QAGzE,GAAsB,iBAAnB0F,UACFoJ,EAASvQ,GAAQ0B,EAAM,GACnBD,EAAI,EAAGA,EAAIC,EAAKD,IAAK,KACvB2O,EAAQtC,EAASrM,GACrB2L,EAAiBgD,EAAM9D,UAAUiE,GAAU9O,EAAI,IAAM2O,EAAM7D,UAAUgE,GAAU9O,EAAI,KAKtF2L,IAEEG,IACDuC,EAAWnL,GAEbxB,GAAK2M,GAGPhC,EAAStG,QAAQ,SAAA5F,OACTjB,EAAUiB,EAAVjB,MACHyM,EACExL,EAAKjB,MAAM0C,OAAO2G,OAASA,IAC5BpI,EAAKnC,SAAWqQ,EAAWnP,EAAM8C,eAAec,MAAQ5D,EAAMkD,kBAAkBU,OAI/E3C,EAAKjB,MAAMyC,MAAM4G,OAASA,IAC3BpI,EAAKpC,QAAUsQ,EAAWnP,EAAMgD,iBAAiBY,MAAQ5D,EAAMoD,gBAAgBQ,cAIhF/E,QAAUkF,OACVjF,SAAW8N,EAAc5I,EAAIxB,EAAIR,EAAKQ,yCAI9BR,cACPO,EAAeP,EAAfO,EAAGC,EAAYR,EAAZQ,EAAGuB,EAAS/B,EAAT+B,EAAGC,EAAMhC,EAANgC,OACVrF,IAAM4D,OACN3D,IAAM4D,MAoBPqK,EACAD,EApBAxB,EAAO7I,EACL4K,EAAoB7N,KAApB6N,SAAUnN,EAAUV,KAAVU,MAEdyC,EAcEzC,EAdFyC,MACAC,EAaE1C,EAbF0C,OACAI,EAYE9C,EAZF8C,eACAE,EAWEhD,EAXFgD,iBACAE,EAUElD,EAVFkD,kBACAE,EASEpD,EATFoD,gBACAE,EAQEtD,EARFsD,UACAuB,EAOE7E,EAPF6E,YACAC,EAME9E,EANF8E,aACAvB,EAKEvD,EALFuD,WACAC,EAIExD,EAJFwD,WACAC,EAGEzD,EAHFyD,aACAC,EAEE1D,EAFF0D,cACAC,EACE3D,EADF2D,eAKClB,GAASA,EAAM4G,OAASA,SACzBwD,GAAa,EACNpK,EAAM4G,WACNA,EACHtF,EAAItB,EAAMmB,iBAEPyF,EACHtF,GAAmB,IAAdtB,EAAMmB,SAIdlB,GAAUA,EAAO2G,OAASA,SAC3BuD,GAAc,EACPlK,EAAO2G,WACPA,EACHrF,EAAItB,EAAOkB,iBAERyF,EACHrF,GAAoB,IAAftB,EAAOkB,MAKlBrB,GAAKa,EAAgBQ,MAAQL,EAAWK,MAAQD,EAAYC,MAC5D5B,EAAKO,EAAIA,EACTC,GAAKM,EAAec,MAAQN,EAAUM,MAAQJ,EAAWI,MACzD5B,EAAKQ,EAAIA,EACTuB,GAAKX,EAAgBQ,MAAQZ,EAAiBY,MAAQL,EAAWK,MAAQiB,EAAYjB,MAAQD,EAAYC,MAAQH,EAAaG,MAC9HI,GAAKlB,EAAec,MAAQV,EAAkBU,MAAQN,EAAUM,MAAQkB,EAAalB,MAAQJ,EAAWI,MAAQF,EAAcE,UAE1H0K,EAAY,IAAIpC,EAAU3J,EAAGC,GACjC2K,EAAStG,QAAQ,SAAA5F,GACZA,aAAgBiM,GAAOjM,aAAgBsL,EAErChK,IAAMP,EAAKO,GACZ+L,EAAUC,IAAItN,GACdA,EAAKoB,eAAe,CAClBE,EAAAA,EACAC,EAAAA,EACAuB,EAAAA,EACAC,EAAAA,IAEFzB,GAAKtB,EAAK2B,WACVwI,EAAO9B,KAAKC,IAAI6B,EAAM7I,KAMb,GAFAtB,EAAK8M,eAAehK,EAAIxB,EAAGwB,GAGlC9C,EAAKoB,eAAe,CAClBE,EAAAA,EACAC,EAAAA,EACAuB,EAAAA,EACAC,EAAAA,KAKF6L,EAAKpB,WAAW/M,KAAK4M,GACrBA,EAAUnI,gBACV5D,EAAIP,EAAKO,EACTC,GAAK8L,EAAU5L,OACfzB,EAAKoB,eAAe,CAClBE,EAAGP,EAAKO,EACRC,EAAAA,EACAuB,EAAAA,EACAC,EAAAA,IAEFsK,EAAY,IAAIpC,EAAU3J,EAAGC,IAE/BD,GAAKtB,EAAK2B,WACVwI,EAAO9B,KAAKC,IAAI6B,EAAM7I,GACtB+L,EAAUC,IAAItN,IAKbsB,IAAMP,EAAKO,GACZ+L,EAAUC,IAAItN,GACdA,EAAKoN,SAAS,CACZ9L,EAAAA,EACAC,EAAAA,EACAuB,EAAAA,EACAC,EAAAA,IAEFzB,GAAKtB,EAAKwB,MACV2I,EAAO9B,KAAKC,IAAI6B,EAAM7I,KAMb,GAFAtB,EAAK8M,eAAehK,EAAIxB,EAAGwB,GAGlC9C,EAAKoN,SAAS,CACZ9L,EAAAA,EACAC,EAAAA,EACAuB,EAAAA,EACAC,EAAAA,KAKF6L,EAAKpB,WAAW/M,KAAK4M,GACrBA,EAAUnI,gBACV5D,EAAIP,EAAKO,EACTC,GAAK8L,EAAU5L,OACfzB,EAAKoN,SAAS,CACZ9L,EAAGP,EAAKO,EACRC,EAAAA,EACAuB,EAAAA,EACAC,EAAAA,IAEFsK,EAAY,IAAIpC,EAAU3J,EAAGC,IAE/BD,GAAKtB,EAAKwB,MACV2I,EAAO9B,KAAKC,IAAI6B,EAAM7I,GACtB+L,EAAUC,IAAItN,MAKjBqN,EAAUI,YACND,WAAW/M,KAAK4M,GACrBA,EAAUnI,gBACV3D,GAAK8L,EAAU5L,aAGZ7D,QAAUgO,EAAa9I,EAAIqH,EAAOpJ,EAAKO,OACvCzD,SAAW8N,EAAc5I,EAAIxB,EAAIR,EAAKQ,mFAKtC2K,SAAStG,QAAQ,SAAA5F,GACjBA,GACDA,EAAKyK,kDAMFpM,KAAKwC,kDAGLxC,KAAK8N,qDAGL9N,KAAK+N,kDAGRtM,EAAMzB,KAAKmP,WAAWzN,UACvBD,EAAK,KACFiL,EAAO1M,KAAKmP,WAAW1N,EAAM,UAC1BiL,EAAKxJ,EAAIlD,KAAKkD,EAAIwJ,EAAKC,gBAEzB3M,KAAKkD,oCAGC3C,UACNyM,EAAS9D,eAAe3I,gBCn2B7BiQ,wBACQtP,EAASC,EAAO0M,mDACpB3M,EAASC,EAAO0M,KACjB4C,OAAS,kBAHD7C,oDAOW8C,IAArB1Q,KAAKmB,MAAMgC,MAAqB,KAC7BmB,EAAQqM,SAAS3Q,KAAKmB,MAAMgC,QAC5ByN,MAAMtM,IAAkB,EAARA,SACb/E,QAAU+E,WAGMoM,IAAtB1Q,KAAKmB,MAAMiC,OAAsB,KAC9BkB,EAAQqM,SAAS3Q,KAAKmB,MAAMiC,SAC5BwN,MAAMtM,IAAkB,EAARA,SACb9E,SAAW8E,gDAxBJtC,EAAGwF,EACjBjH,EA6BEiI,aAAUxI,KAAKkB,SAEXM,EAAI,EAAGC,EAAMzB,KAAKkC,QAAQR,OAAQF,EAAIC,EAAKD,IAAK,KAClDG,EAAO3B,KAAKkC,QAAQV,GACxBgH,IAlCcxG,EAkCIL,EAAK,GAlCN6F,EAkCU7F,EAAK,QAjChCpB,EAAAA,EAAIa,MAAMC,QAAQmG,GAAKS,EAAKM,gBAAgBf,GAAKS,EAAKF,UAAUP,GAC3D,cAANxF,IACDA,EAAI,SAEC,IAAMA,EAAI,KAAOiG,EAAKQ,WAAWlI,GAAG,GAAQ,YA+BjDiI,gBAAaxI,KAAKkB,8CAIXuE,MACPA,EAvDJ,SAAgBA,MACXwC,EAAKE,SAAS1C,GAAM,KACjBoL,EAAIrQ,SAASsQ,cAAcrL,OAC3BoL,QACI,IAAI3C,MAAM,iCAAmCzI,UAE9CoL,MAELpL,QACI,IAAIyI,MAAM,qBAAuBzI,UAElCA,EA4CCsL,CAAOtL,QACRuL,cAEFvL,EAAIwL,SAASC,gBAAkBlR,KAAKkB,QAAQgQ,mBACxCT,OAAShL,EACXzF,KAAKmD,OACNsC,EAAI0L,aAAa,QAASnR,KAAKmD,OAE9BnD,KAAKoD,QACNqC,EAAI0L,aAAa,SAAUnR,KAAKoD,YAI/B,KACC7C,EAAIP,KAAKoR,YACb3L,EAAI4L,mBAAmB,YAAa9Q,OAChC+Q,EAAS7L,EAAI8L,iBAAiBvR,KAAKkB,cAClCuP,OAASa,EAAOA,EAAO5P,OAAS,OAGnC1B,KAAKmD,QAAUnD,KAAKoD,OAAQ,KAC1BsH,EAAMgB,OAAOC,iBAAiBlG,EAAK,MACnCzF,KAAKmD,aACF5D,QAAUoR,SAASjG,EAAI8G,iBAAiB,UAC7C/L,EAAI0L,aAAa,QAASnR,KAAKmD,QAE7BnD,KAAKoD,cACF5D,SAAWmR,SAASjG,EAAI8G,iBAAiB,WAC9C/L,EAAI0L,aAAa,SAAUnR,KAAKoD,aAI9B1C,EAAUV,KAAVU,OAC2C,IAA9C,CAAC,OAAQ,SAASiF,QAAQjF,EAAMkC,WACjClC,EAAMkC,QAAU,SAGE,WAAjB5C,KAAKkB,cACDvB,MAAQK,KAAKyQ,OAAOgB,WAAW,MACpCxR,EAAKC,aAEkB,QAAjBF,KAAKkB,SACXjB,EAAKE,cAEFkO,WAAWrO,KAAKL,OAErBe,EAAMyC,MAAQnD,KAAKmD,MACnBzC,EAAM0C,OAASpD,KAAKoD,YACfmL,mBACAQ,SAAS,CACZ9L,EAAG,EACHC,EAAG,EACHuB,EAAGzE,KAAKmD,MACRuB,EAAG1E,KAAKoD,cAELgJ,SACFnM,EAAKI,eACDoQ,OAAOiB,UAAYzR,EAAK0R,0CAKxB3R,KAAKyQ,gBCtHVmB,wBACQzQ,mDACJ,QAASA,KAEV0Q,QAAU,KACVC,MAAQ,GACV1Q,MAAMC,QAAQoB,EAAKtB,MAAM4Q,WACrBF,QAAUpP,EAAKtB,MAAM4Q,OAEzB3Q,MAAMC,QAAQoB,EAAKtB,MAAM6Q,SACrBF,MAAQrP,EAAKtB,MAAM6Q,MAGgE,EAAvF,CAAC,WAAY,YAAa,cAAe,gBAAgBrM,QAAQlD,EAAKtB,MAAM8Q,UACxEzE,SAAW/K,EAAKtB,MAAM8Q,SAGtBzE,SAAW,2BAjBHP,sFAuBThK,EAAwDjD,KAAxDiD,EAAGC,EAAqDlD,KAArDkD,EAAGC,EAAkDnD,KAAlDmD,MAAOC,EAA2CpD,KAA3CoD,OAAQ1C,EAAmCV,KAAnCU,MAAOsC,EAA4BhD,KAA5BgD,IAAK+O,EAAuB/R,KAAvB+R,MAAOC,EAAgBhS,KAAhBgS,IAAKC,EAAWjS,KAAXiS,YAChDF,EAAMrQ,OAAS,GAAKsQ,EAAItQ,OAAS,QAmBhC6C,EAAIC,EAAIQ,EAAIM,EAfd9B,EAcE9C,EAdF8C,eACAE,EAaEhD,EAbFgD,iBACAE,EAYElD,EAZFkD,kBACAE,EAWEpD,EAXFoD,gBACAE,EAUEtD,EAVFsD,UACAuB,EASE7E,EATF6E,YACAC,EAQE9E,EARF8E,aACAvB,EAOEvD,EAPFuD,WACAC,EAMExD,EANFwD,WACAC,EAKEzD,EALFyD,aACAC,EAIE1D,EAJF0D,cACAC,EAGE3D,EAHF2D,YACAgB,EAEE3E,EAFF2E,OACAgC,EACE3G,EADF2G,YAGE6K,EAAUjP,EAAIa,EAAgBQ,MAAQL,EAAWK,MAAQD,EAAYC,MACrE6N,EAAUjP,EAAIM,EAAec,MAAQN,EAAUM,MAAQJ,EAAWI,MACtEnB,GAASW,EAAgBQ,MAAQZ,EAAiBY,MAAQL,EAAWK,MAAQiB,EAAYjB,MAAQD,EAAYC,MAAQH,EAAaG,MAClIlB,GAAUI,EAAec,MAAQV,EAAkBU,MAAQN,EAAUM,MAAQkB,EAAalB,MAAQJ,EAAWI,MAAQF,EAAcE,MACrH,aAAX2N,GACD1N,EAAK2N,EAAUH,EAAM,GAAK5O,EAC1BqB,EAAK2N,EAAUJ,EAAM,GAAK3O,EAC1B4B,EAAKkN,EAAUF,EAAI,GAAK7O,EACxBmC,EAAK6M,EAAUH,EAAI,GAAK5O,GAEP,cAAX6O,GACN1N,EAAK2N,EAAU/O,EAAQ4O,EAAM,GAAK5O,EAClCqB,EAAK2N,EAAUJ,EAAM,GAAK3O,EAC1B4B,EAAKkN,EAAU/O,EAAQ6O,EAAI,GAAK7O,EAChCmC,EAAK6M,EAAUH,EAAI,GAAK5O,GAEP,gBAAX6O,GACN1N,EAAK2N,EAAUH,EAAM,GAAK5O,EAC1BqB,EAAK2N,EAAU/O,EAAS2O,EAAM,GAAK3O,EACnC4B,EAAKkN,EAAUF,EAAI,GAAK7O,EACxBmC,EAAK6M,EAAU/O,EAAS4O,EAAI,GAAK5O,GAEhB,iBAAX6O,IACN1N,EAAK2N,EAAU/O,EAAQ4O,EAAM,GAAK5O,EAClCqB,EAAK2N,EAAU/O,EAAS2O,EAAM,GAAK3O,EACnC4B,EAAKkN,EAAU/O,EAAQ6O,EAAI,GAAK7O,EAChCmC,EAAK6M,EAAU/O,EAAS4O,EAAI,GAAK5O,GAEhCnD,EAAKG,YACN4C,EAAIkC,YAAcG,EAClBrC,EAAIiC,UAAYoC,EAChBrE,EAAI2B,YACJ3B,EAAImC,OAAOZ,EAAIC,GACfxB,EAAIoC,OAAOJ,EAAIM,GACftC,EAAIqC,SACJrC,EAAI+B,aAEE9E,EAAKI,SACXJ,EAAKK,+BAAwBiE,mBAAWC,mBAAWQ,mBAAWM,6BAAqB+B,uBAAwBhC,gDAKtGrF,KAAK6R,2CAGL7R,KAAK8R,eC1FVM,wBACQjR,+CACJ,WAAYA,KAEbkR,YAAc,GAChBjR,MAAMC,QAAQoB,EAAKtB,MAAMmR,eACrBD,YAAc5P,EAAKtB,MAAMmR,YAG0D,EAAvF,CAAC,WAAY,YAAa,cAAe,gBAAgB3M,QAAQlD,EAAKtB,MAAM8Q,UACxEzE,SAAW/K,EAAKtB,MAAM8Q,SAGtBzE,SAAW,cAGf/K,EAAKtB,MAAMsL,MACPgB,MAAQlE,WAAW9G,EAAKtB,MAAMsL,MAAQ,IAGtCgB,MAAQ,EAEZhL,EAAKtB,MAAM8I,IAAK,KACbA,EAAMV,WAAW9G,EAAKtB,MAAM8I,KAC7B2G,MAAM3G,KACPA,EAAM,KAEHyD,MAAQzD,SAGRyD,MAAQ,sBA9BGT,sFAoCZhK,EAAiEjD,KAAjEiD,EAAGC,EAA8DlD,KAA9DkD,EAAGC,EAA2DnD,KAA3DmD,MAAOC,EAAoDpD,KAApDoD,OAAQ1C,EAA4CV,KAA5CU,MAAOsC,EAAqChD,KAArCgD,IAAKsP,EAAgCtS,KAAhCsS,UAAWrI,EAAqBjK,KAArBiK,IAAKwC,EAAgBzM,KAAhByM,IAAKwF,EAAWjS,KAAXiS,YACzDK,EAAU5Q,OAAS,QAGlB,IAAIF,EAAI,EAAGC,EAAM6Q,EAAU5Q,OAAQF,EAAIC,EAAKD,QAC1CJ,MAAMC,QAAQiR,EAAU9Q,KAAO8Q,EAAU9Q,GAAGE,OAAS,aAKzD8B,EAcE9C,EAdF8C,eACAE,EAaEhD,EAbFgD,iBACAE,EAYElD,EAZFkD,kBACAE,EAWEpD,EAXFoD,gBACAE,EAUEtD,EAVFsD,UACAuB,EASE7E,EATF6E,YACAC,EAQE9E,EARF8E,aACAvB,EAOEvD,EAPFuD,WACAC,EAMExD,EANFwD,WACAC,EAKEzD,EALFyD,aACAC,EAIE1D,EAJF0D,cACAC,EAGE3D,EAHF2D,YACAgB,EAEE3E,EAFF2E,OACAgC,EACE3G,EADF2G,YAEEkL,EAAQtI,EAAMwC,KACf8F,GAAS,QACJ,IAAIrE,wCAAiClO,KAAKiK,uBAAcjK,KAAKyM,cAEjEyF,EAAUjP,EAAIa,EAAgBQ,MAAQL,EAAWK,MAAQD,EAAYC,MACrE6N,EAAUjP,EAAIM,EAAec,MAAQN,EAAUM,MAAQJ,EAAWI,SACtEnB,GAASW,EAAgBQ,MAAQZ,EAAiBY,MAAQL,EAAWK,MAAQiB,EAAYjB,MAAQD,EAAYC,MAAQH,EAAaG,MAClIlB,GAAUI,EAAec,MAAQV,EAAkBU,MAAQN,EAAUM,MAAQkB,EAAalB,MAAQJ,EAAWI,MAAQF,EAAcE,MACrH,aAAX2N,EACDK,EAAU/K,QAAQ,SAAA5F,GAChBA,EAAK,GAAKuQ,EAAUvQ,EAAK,GAAKwB,EAC9BxB,EAAK,GAAKwQ,GAAWxQ,EAAK,GAAK8K,GAAOrJ,EAASmP,IAGhC,cAAXN,EACNK,EAAU/K,QAAQ,SAAA5F,GAChBA,EAAK,GAAKuQ,EAAU/O,EAAQxB,EAAK,GAAKwB,EACtCxB,EAAK,GAAKwQ,GAAWxQ,EAAK,GAAK8K,GAAOrJ,EAASmP,IAGhC,gBAAXN,EACNK,EAAU/K,QAAQ,SAAA5F,GAChBA,EAAK,GAAKuQ,EAAUvQ,EAAK,GAAKwB,EAC9BxB,EAAK,GAAKwQ,EAAU/O,GAAUzB,EAAK,GAAK8K,GAAOrJ,EAASmP,IAGzC,iBAAXN,GACNK,EAAU/K,QAAQ,SAAA5F,GAChBA,EAAK,GAAKuQ,EAAU/O,EAAQxB,EAAK,GAAKwB,EACtCxB,EAAK,GAAKwQ,EAAU/O,GAAUzB,EAAK,GAAK8K,GAAOrJ,EAASmP,IAGzDtS,EAAKG,WAAY,CAClB4C,EAAIkC,YAAcG,EAClBrC,EAAIiC,UAAYoC,EAChBrE,EAAI2B,YACJ3B,EAAImC,OAAOmN,EAAU,GAAG,GAAIH,EAAUG,EAAU,GAAG,QAC/C,IAAI9Q,EAAI,EAAGC,EAAM6Q,EAAU5Q,OAAQF,EAAIC,EAAKD,IAAK,KAC/CgR,EAAQF,EAAU9Q,GACtBwB,EAAIoC,OAAOoN,EAAM,GAAIL,EAAUK,EAAM,IAEvCxP,EAAIqC,SACJrC,EAAI+B,iBAED,GAAG9E,EAAKI,QAAS,SAChBoS,EAAS,GACLjR,EAAI,EAAGC,EAAM6Q,EAAU5Q,OAAQF,EAAIC,EAAKD,IAAK,KAC/CgR,EAAQF,EAAU9Q,GACtBiR,aAAaD,EAAM,eAAMA,EAAM,QAEjCvS,EAAKK,mDAA4CmS,6BAAyBpL,uBAAwBhC,qDAK7FrF,KAAKqS,qBCjHZK,EAAQ,CACVtG,gBAAOuG,EAAIlN,QACJkN,aAAcnC,SACX,IAAItC,MAAM,4CAEfzI,GACDkN,EAAGC,SAASnN,GAEPkN,GAETE,kBAAS3R,EAASC,EAAO0M,OACkB,EAAtC,CAAC,SAAU,OAAOlI,QAAQzE,UACpB,IAAIsP,EAAGtP,EAASC,EAAO0M,MAE7BD,EAAIkF,QAAQ5R,UACN,IAAI0M,EAAI1M,EAASC,EAAO0M,SAE3B,IAAIK,MAAM,uBAAyBhN,IAE3C6R,kBAAS7R,EAASC,MACb8L,EAAK6F,QAAQ5R,UACPA,OACA,eACI,IAAI0Q,EAAKzQ,OACb,kBACI,IAAIiR,EAAQjR,SAGnB,IAAI+M,MAAM,4BAA8BhN,IAEhD8R,kBAAS9R,EAASC,EAAO0M,YAGP,oBAAVnC,SACRA,OAAOgH,MAAQA"}