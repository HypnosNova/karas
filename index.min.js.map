{"version":3,"file":"index.min.js","sources":["src/mode.js","src/node/Node.js","src/style/unit.js","src/util.js","src/style/transform.js","src/style/gradient.js","src/style/border.js","src/node/Xom.js","src/style/font.js","src/style/reset.js","src/style/css.js","src/node/LineBox.js","src/node/Text.js","src/node/LineGroup.js","src/geom/Geom.js","src/node/Dom.js","src/domDiff.js","src/node/Defs.js","src/node/Root.js","src/geom/Line.js","src/geom/Polyline.js","src/geom/Polygon.js","src/geom/Sector.js","src/geom/Rect.js","src/geom/Circle.js","src/geom/Ellipse.js","src/geom/Grid.js","src/index.js"],"sourcesContent":["const CANVAS = 0;\nconst SVG = 1;\n\nlet div;\n\nexport default {\n  CANVAS,\n  SVG,\n  measure(s, style) {\n    if(!div) {\n      div = document.createElement('div');\n      div.style.position = 'absolute';\n      div.style.left = '99999px';\n      div.style.top = '-99999px';\n      div.style.visibility = 'hidden';\n      document.body.appendChild(div);\n    }\n    div.style.fontSize = style.fontSize + 'px';\n    div.innerText = s;\n    let css = window.getComputedStyle(div, null);\n    return parseFloat(css.width);\n  }\n};\n","class Node {\n  constructor() {\n    this.__x = 0;\n    this.__y = 0;\n    this.__ox = 0; // relative/margin:auto/text-align等造成的偏移量\n    this.__oy = 0;\n    this.__width = 0;\n    this.__height = 0;\n    this.__prev = null;\n    this.__next = null;\n    this.__ctx = null; // canvas的context\n    this.__defs = null; // svg的defs\n    this.__parent = null;\n    this.__style = {}; // style被解析后的k-v形式\n    this.__baseLine = 0;\n    this.__virtualDom = {};\n  }\n\n  __offsetX(diff) {\n    this.__ox += diff;\n  }\n\n  __offsetY(diff) {\n    this.__oy += diff;\n  }\n\n  get x() {\n    return this.__x;\n  }\n  get y() {\n    return this.__y;\n  }\n  get ox() {\n    return this.__ox;\n  }\n  get oy() {\n    return this.__oy;\n  }\n  get rx() {\n    return this.x + this.ox;\n  }\n  get ry() {\n    return this.y + this.oy;\n  }\n  get width() {\n    return this.__width;\n  }\n  get height() {\n    return this.__height;\n  }\n  get outerWidth() {\n    return this.__width;\n  }\n  get outerHeight() {\n    return this.__height;\n  }\n  get prev() {\n    return this.__prev;\n  }\n  get next() {\n    return this.__next;\n  }\n  get parent() {\n    return this.__parent;\n  }\n  get root() {\n    if(this.parent) {\n      return this.parent.root;\n    }\n    return this;\n  }\n  get style() {\n    return this.__style;\n  }\n  get ctx() {\n    return this.__ctx;\n  }\n  get defs() {\n    return this.__defs;\n  }\n  get baseLine() {\n    return this.__baseLine;\n  }\n  get virtualDom() {\n    return this.__virtualDom;\n  }\n}\n\nexport default Node;\n","export default {\n  AUTO: 0,\n  PX: 1,\n  PERCENT: 2,\n  POSITION: 3,\n};\n","let toString = {}.toString;\nfunction isType(type) {\n  return function(obj) {\n    return toString.call(obj) === '[object ' + type + ']';\n  }\n}\n\nlet isNumber = isType('Number');\n\nfunction joinSourceArray(arr) {\n  var res = '';\n  for(var i = 0, len = arr.length; i < len; i++) {\n    var item = arr[i];\n    if(Array.isArray(item)) {\n      res += joinSourceArray(item);\n    }\n    else {\n      res += stringify(item);\n    }\n  }\n  return res;\n}\n\nfunction stringify(s) {\n  if(isNil(s)) {\n    return '';\n  }\n  return s.toString();\n}\n\nfunction encodeHtml(s, prop) {\n  if(prop) {\n    return s.replace(/\"/g, '&quot;');\n  }\n  return s.replace(/&/g, '&amp;').replace(/</g, '&lt;');\n}\n\nfunction isNil(v) {\n  return v === undefined || v === null;\n}\n\nfunction joinVirtualDom(vd, nd) {\n  let s = '<defs>';\n  nd.forEach(item => {\n    s += joinDef(item);\n  });\n  s += '</defs><g>';\n  vd.bb.forEach(item => {\n    s += joinVd(item);\n  });\n  s += '</g><g>';\n  vd.children.forEach(item => {\n    s += joinVd(item);\n  });\n  s += '</g>';\n  return s;\n}\n\nfunction joinVd(vd) {\n  if(vd.type === 'item') {\n    let s = '';\n    vd.props.forEach(item => {\n      s += ` ${item[0]}=\"${item[1]}\"`;\n    });\n    if(vd.tagName === 'text') {\n      return `<text${s}>${vd.content}</text>`;\n    }\n    return `<${vd.tagName}${s}/>`;\n  }\n  else if(vd.type === 'text') {\n    let s = ``;\n    vd.children.forEach(item => {\n      s += joinVd(item);\n    });\n    return `<g>${s}</g>`;\n  }\n  else if(vd.type === 'dom' || vd.type === 'geom') {\n    let s = '<g>';\n    vd.bb.forEach(item => {\n      s += joinVd(item);\n    });\n    s += '</g><g>';\n    vd.children.forEach(item => {\n      s += joinVd(item);\n    });\n    s += '</g>';\n    return `<g transform=\"${joinTransform(vd.transform)}\">${s}</g>`;\n  }\n}\n\nfunction joinTransform(transform) {\n  let s = '';\n  transform.forEach(item => {\n    s += `${item[0]}(${item[1]}) `;\n  });\n  return s;\n}\n\nfunction joinDef(def) {\n  let s = `<${def.tagName} id=\"${def.uuid}\" gradientUnits=\"userSpaceOnUse\"`;\n  def.props.forEach(item => {\n    s += ` ${item[0]}=\"${item[1]}\"`;\n  });\n  s += '>';\n  def.stop.forEach(item => {\n    s += `<stop stop-color=\"${item[0]}\" offset=\"${item[1] * 100}%\"/>`;\n  });\n  s += `</${def.tagName}>`;\n  return s;\n}\n\nfunction r2d(n) {\n  return n * Math.PI / 180;\n}\n\nfunction rgb2int(color) {\n  let res = [];\n  if(color.charAt(0) === '#') {\n    color = color.slice(1);\n    if(color.length === 3) {\n      res.push(parseInt(color.charAt(0) + color.charAt(0), 16));\n      res.push(parseInt(color.charAt(1) + color.charAt(1), 16));\n      res.push(parseInt(color.charAt(2) + color.charAt(2), 16));\n    } else if(color.length === 6) {\n      res.push(parseInt(color.slice(0, 2), 16));\n      res.push(parseInt(color.slice(2, 4), 16));\n      res.push(parseInt(color.slice(4), 16));\n    }\n  }\n  else {\n    let c = color.match(/rgba?\\s*\\(\\s*(\\d+)\\s*,\\s*(\\d+)\\s*,\\s*(\\d+)(?:\\s*,\\s*([\\d.]+))?\\s*\\)/i);\n    if(c) {\n      res = [parseInt(c[1]), parseInt(c[2]), parseInt(c[3])];\n      if(c[4]) {\n        res[3] = parseFloat(c[4]);\n      }\n\n    }\n  }\n  return res;\n}\n\nfunction arr2hash(arr) {\n  let hash = {};\n  for(let i = 0, len = arr.length; i < len; i++) {\n    let item = arr[i];\n    if(Array.isArray(item)) {\n      hash[item[0]] = item[1];\n    }\n    else {\n      for(let list = Object.keys(item), j = list.length - 1; j >= 0; j--) {\n        let k = list[j];\n        hash[k] = item[k];\n      }\n    }\n  }\n  return hash;\n}\n\nfunction hash2arr(hash) {\n  let arr = [];\n  for(let list = Object.keys(hash), i = 0, len = list.length; i < len; i++) {\n    let k = list[i];\n    arr.push([k, hash[k]]);\n  }\n  return arr;\n}\n\nlet util = {\n  isObject: isType('Object'),\n  isString: isType('String'),\n  isFunction: isType('Function'),\n  isNumber,\n  isBoolean: isType('Boolean'),\n  isDate: isType('Date'),\n  stringify,\n  joinSourceArray(arr) {\n    return joinSourceArray(arr);\n  },\n  encodeHtml,\n  isNil,\n  joinVirtualDom,\n  joinVd,\n  joinTransform,\n  joinDef,\n  r2d,\n  rgb2int,\n  arr2hash,\n  hash2arr,\n};\n\nexport default util;\n","import unit from '../style/unit';\nimport util from '../util';\n\nfunction calMatrix(transform, ox, oy) {\n  let matrix = identity();\n  matrix[12] = ox;\n  matrix[13] = oy;\n  let deg = 0;\n  transform.forEach(item => {\n    let [k, v] = item;\n    let target = identity();\n    if(k === 'translateX') {\n      target[12] = v;\n    }\n    else if(k === 'translateY') {\n      target[13] = v;\n    }\n    else if(k === 'scaleX') {\n      target[0] = v;\n    }\n    else if(k === 'scaleY') {\n      target[5] = v;\n    }\n    else if(k === 'skewX') {\n      v = util.r2d(v);\n      let tan = Math.tan(v);\n      target[4] = tan;\n    }\n    else if(k === 'skewY') {\n      v = util.r2d(v);\n      let tan = Math.tan(v);\n      target[1] = tan;\n    }\n    else if(k === 'rotateZ') {\n      v = util.r2d(v);\n      deg += v;\n      let sin = Math.sin(v);\n      let cos = Math.cos(v);\n      target[0] = target[5] = cos;\n      target[1] = sin;\n      target[4] = -sin;\n    }\n    matrix = multiply(matrix, target);\n  });\n  let target = identity();\n  target[12] = -ox;\n  target[13] = -oy;\n  matrix = multiply(matrix, target);\n  return [\n    matrix[0], matrix[1],\n    matrix[4], matrix[5],\n    matrix[12], matrix[13]\n  ];\n}\n\n// 生成4*4单位矩阵\nfunction identity() {\n  const matrix = [];\n  for (let i = 0; i < 16; i++) {\n    matrix.push(i % 5 === 0 ? 1 : 0);\n  }\n  return matrix;\n}\n\n// 矩阵a*b\nfunction multiply(a, b) {\n  let res = [];\n  for(let i = 0; i < 4; i++) {\n    const row = [a[i], a[i + 4], a[i + 8], a[i + 12]];\n    for(let j = 0; j < 4; j++) {\n      let k = j * 4;\n      let col = [b[k], b[k + 1], b[k + 2], b[k + 3]];\n      let n = row[0] * col[0] + row[1] * col[1] + row[2] * col[2] + row[3] * col[3];\n      res[i + k] = n;\n    }\n  }\n  return res;\n}\n\nfunction transformPoint(matrix, x, y) {\n  let [a, b, c, d, e, f] = matrix;\n  return [a * x + c * y + e, b * x + d * y + f];\n}\n\n// 向量积\nfunction vectorProduct(x1, y1, x2, y2) {\n  return x1 * y2 - x2 * y1;\n}\n\nfunction pointInQuadrilateral(x, y, x1, y1, x2, y2, x3, y3, x4, y4, matrix) {\n  if(matrix) {\n    [x1, y1] = transformPoint(matrix, x1, y1);\n    [x2, y2] = transformPoint(matrix, x2, y2);\n    [x3, y3] = transformPoint(matrix, x3, y3);\n    [x4, y4] = transformPoint(matrix, x4, y4);\n    if(vectorProduct(x2 - x1, y2 - y1, x - x1, y - y1) > 0\n      && vectorProduct(x4 - x2, y4 - y2, x - x2, y - y2) > 0\n      && vectorProduct(x3 - x4, y3 - y4, x - x4, y - y4) > 0\n      && vectorProduct(x1 - x3, y1 - y3, x - x3, y - y3) > 0) {\n      return true;\n    }\n  }\n  else {\n    return x >= x1 && y >= y1 && x <= x4 && y <= y4;\n  }\n}\n\nfunction normalize(transform, ox, oy, w, h) {\n  let res = [];\n  transform.forEach(item => {\n    let [k, v] = item;\n    if(k === 'translateX') {\n      if(v.unit === unit.PERCENT) {\n        res.push([item[0], v.value * w * 0.01]);\n      }\n      else {\n        res.push([item[0], item[1].value]);\n      }\n    }\n    else if(k === 'translateY') {\n      if(v.unit === unit.PERCENT) {\n        res.push([item[0], v.value * h * 0.01]);\n      }\n      else {\n        res.push([item[0], item[1].value]);\n      }\n    }\n    else {\n      res.push([item[0], item[1]]);\n    }\n  });\n  return res;\n}\n\nfunction getOrigin(transformOrigin, x, y, w, h) {\n  let tfo = [];\n  transformOrigin.forEach((item, i) => {\n    if(item.unit === unit.PX) {\n      tfo.push(item.value);\n    }\n    else if(item.unit === unit.PERCENT) {\n      tfo.push((i ? y : x) + item.value * (i ? h : w) * 0.01);\n    }\n    else if(item.value === 'left') {\n      tfo.push(x);\n    }\n    else if(item.value === 'right') {\n      tfo.push(x + w);\n    }\n    else if(item.value === 'top') {\n      tfo.push(y);\n    }\n    else if(item.value === 'bottom') {\n      tfo.push(y + h);\n    }\n    else {\n      tfo.push(i ? (y + h * 0.5) : (x + w * 0.5));\n    }\n  });\n  return tfo;\n}\n\nfunction mergeMatrix(a, b) {\n  let m1 = identity();\n  m1[0] = a[0];\n  m1[1] = a[1];\n  m1[4] = a[2];\n  m1[5] = a[3];\n  m1[12] = a[4];\n  m1[13] = a[5];\n  let m2 = identity();\n  m2[0] = b[0];\n  m2[1] = b[1];\n  m2[4] = b[2];\n  m2[5] = b[3];\n  m2[12] = b[4];\n  m2[13] = b[5];\n  let matrix = multiply(m1, m2);\n  return [\n    matrix[0], matrix[1],\n    matrix[4], matrix[5],\n    matrix[12], matrix[13]\n  ];\n}\n\nexport default {\n  calMatrix,\n  pointInQuadrilateral,\n  normalize,\n  getOrigin,\n  mergeMatrix,\n};\n","import util from \"../util\";\n\nfunction getLinearDeg(v) {\n  let deg = 180;\n  if(v[0] === 'to top') {\n    deg = 0;\n  }\n  else if(v[0] === 'to top right') {\n    deg = 45;\n  }\n  else if(v[0] === 'to right') {\n    deg = 90;\n  }\n  else if(v[0] === 'to bottom right') {\n    deg = 135;\n  }\n  else if(v[0] === 'to bottom') {\n  }\n  else if(v[0] === 'to bottom left') {\n    deg = 225;\n  }\n  else if(v[0] === 'to left') {\n    deg = 270;\n  }\n  else if(v[0] === 'to top left') {\n    deg = 315;\n  }\n  // 数字角度，没有的话取默认角度\n  else {\n    let match = /([\\d.]+)deg/.exec(v[0]);\n    if(match) {\n      deg = parseFloat(match[1]);\n    }\n    else {\n      v.unshift(null);\n    }\n  }\n  while(deg >= 360) {\n    deg = deg % 360;\n  }\n  while(deg < 0) {\n    deg += 360;\n  }\n  return deg;\n}\n\n// 获取color-stop区间范围，去除无用值\nfunction getColorStop(v, length) {\n  let list = [];\n  // 先把已经声明距离的换算成[0,1]以数组形式存入，未声明的原样存入\n  for(let i = 1, len = v.length; i < len; i++) {\n    let item = v[i];\n    // 考虑是否声明了位置\n    let arr = item.trim().split(/\\s+/);\n    if(arr.length > 1) {\n      let c = arr[0];\n      let p = arr[1];\n      if(/%$/.test(p)) {\n        list.push([c, parseFloat(p) * 0.01]);\n      }\n      else {\n        list.push([c, parseFloat(p) / length]);\n      }\n    }\n    else {\n      list.push(arr[0]);\n    }\n  }\n  // 首尾不声明默认为[0, 1]\n  if(list.length > 1) {\n    if(!Array.isArray(list[0])) {\n      list[0] = [list[0], 0];\n    }\n    if(!Array.isArray(list[list.length - 1])) {\n      list[list.length - 1] = [list[list.length - 1], 1];\n    }\n  }\n  else if(!Array.isArray(list[0])) {\n    list[0] = [list[0], 0];\n  }\n  // 不是数组形式的是未声明的，需区间计算，找到连续的未声明的，前后的区间平分\n  let start = list[0][1];\n  for(let i = 1, len = list.length; i < len - 1; i++) {\n    let item = list[i];\n    if(Array.isArray(item)) {\n      start = item[1];\n    }\n    else {\n      let j = i + 1;\n      let end = list[list.length - 1][1];\n      for(; j < len - 1; j++) {\n        let item = list[j];\n        if(Array.isArray(item)) {\n          end = item[1];\n          break;\n        }\n      }\n      let num = j - i + 1;\n      let per = (end - start) / num;\n      for(let k = i;k < j; k++) {\n        let item = list[k];\n        list[k] = [item, start + per * (k + 1 - i)];\n      }\n      i = j;\n    }\n  }\n  // 每个不能小于前面的，canvas/svg不能兼容这种情况，需处理\n  for(let i = 1, len = list.length; i < len; i++) {\n    let item = list[i];\n    let prev = list[i - 1];\n    if(item[1] < prev[1]) {\n      item[1] = prev[1];\n    }\n  }\n  // 0之前的和1之后的要过滤掉\n  for(let i = 0, len = list.length; i < len - 1; i++) {\n    let item = list[i];\n    if(item[1] > 1) {\n      list.splice(i + 1);\n      break;\n    }\n  }\n  for(let i = list.length - 1; i > 0; i--) {\n    let item = list[i];\n    if(item[1] < 0) {\n      list.splice(0, i);\n      break;\n    }\n  }\n  // 可能存在超限情况，如在使用px单位超过len或<len时，canvas会报错超过[0,1]区间，需手动换算至区间内\n  let len = list.length;\n  // 在只有1个的情况下可简化\n  if(len === 1) {\n    list[0][1] = 0;\n  }\n  else {\n    // 全部都在[0,1]之外也可以简化\n    let allBefore = true;\n    let allAfter = true;\n    for(let i = len - 1; i >= 0; i--) {\n      let item = list[i];\n      let p = item[1];\n      if(p > 0) {\n        allBefore = false;\n      }\n      if(p < 1) {\n        allAfter = false;\n      }\n    }\n    if(allBefore) {\n      list.splice(0, len - 1);\n      list[0][1] = 0;\n    }\n    else if(allAfter) {\n      list.splice(1);\n      list[0][1] = 0;\n    }\n    // 部分在区间之外需复杂计算\n    else {\n      let first = list[0];\n      let last = list[len - 1];\n      // 只要2个的情况下就是首尾都落在外面\n      if(len === 2) {\n        if(first[1] < 0 && last[1] > 1) {\n          getCsLimit(first, last, length);\n        }\n      }\n      // 只有1个在外面的情况较为容易\n      else {\n        if(first[1] < 0) {\n          let next = list[1];\n          let c1 = util.rgb2int(first[0]);\n          let c2 = util.rgb2int(next[0]);\n          let c = getCsStartLimit(c1, first[1], c2, next[1], length);\n          first[0] = `rgba(${c[0]},${c[1]},${c[2]},${c[3]})`;\n          first[1] = 0;\n        }\n        if(last[1] > 1) {\n          let prev = list[len - 2];\n          let c1 = util.rgb2int(prev[0]);\n          let c2 = util.rgb2int(last[0]);\n          let c = getCsEndLimit(c1, prev[1], c2, last[1], length);\n          last[0] = `rgba(${c[0]},${c[1]},${c[2]},${c[3]})`;\n          last[1] = 1;\n        }\n      }\n    }\n  }\n  // 防止精度计算溢出[0,1]\n  list.forEach(item => {\n    if(item[1] < 0) {\n      item[1] = 0;\n    }\n    else if(item[1] > 1) {\n      item[1] = 1;\n    }\n  });\n  return list;\n}\n\n// 根据角度和圆心获取渐变的4个点坐标\nfunction calLinearCoords(deg, length, cx, cy) {\n  let x0;\n  let y0;\n  let x1;\n  let y1;\n  if(deg >= 270) {\n    let r = util.r2d(360 - deg);\n    x0 = cx + Math.sin(r) * length;\n    y0 = cy + Math.cos(r) * length;\n    x1 = cx - Math.sin(r) * length;\n    y1 = cy - Math.cos(r) * length;\n  }\n  else if(deg >= 180) {\n    let r = util.r2d(deg - 180);\n    x0 = cx + Math.sin(r) * length;\n    y0 = cy - Math.cos(r) * length;\n    x1 = cx - Math.sin(r) * length;\n    y1 = cy + Math.cos(r) * length;\n  }\n  else if(deg >= 90) {\n    let r = util.r2d(180 - deg);\n    x0 = cx - Math.sin(r) * length;\n    y0 = cy - Math.cos(r) * length;\n    x1 = cx + Math.sin(r) * length;\n    y1 = cy + Math.cos(r) * length;\n  }\n  else {\n    let r = util.r2d(deg);\n    x0 = cx - Math.sin(r) * length;\n    y0 = cy + Math.cos(r) * length;\n    x1 = cx + Math.sin(r) * length;\n    y1 = cy - Math.cos(r) * length;\n  }\n  return [x0, y0, x1, y1];\n}\n\n// 获取径向渐变半径\nfunction calRadialRadius(v, iw, ih, cx, cy, x2, y2, x3, y3) {\n  let size = 'farthest-corner';\n  let r; // 半径\n  if(/circle|ellipse|at|closest|farthest/i.test(v[0])\n    || !/#[0-9a-f]{3,6}/i.test(v[0]) && !/\\brgba?\\(.*\\)/i.test(v[0])) {\n    let i = v[0].indexOf('at');\n    let at;\n    let s;\n    if(i > -1) {\n      at = v[0].slice(i + 2);\n      s = v[0].slice(0, i - 1);\n    }\n    s = /(closest|farthest)-(side|corner)/.exec(s);\n    if(s) {\n      size = s[0];\n    }\n    // 指定宽高后size失效，置null标识\n    else {\n      s = /\\s+(-?[\\d.]+(?:px|%))\\s*(-?[\\d.]+(?:px|%))?/.exec(s);\n      if(s) {\n        size = null;\n        if(s[1].indexOf('px') > -1) {\n          r = parseFloat(s[1]) * 0.5;\n        }\n        else {\n          r = parseFloat(s[1]) * iw * 0.005;\n        }\n      }\n    }\n    if(at) {\n      s = /\\s+(-?[\\d.]+(?:px|%))\\s*(-?[\\d.]+(?:px|%))?/.exec(at);\n      if(s) {\n        if(s[1].indexOf('px') > -1) {\n          cx = x2 + parseFloat(s[1]);\n        }\n        else {\n          cx =  x2 + parseFloat(s[1]) * iw * 0.01;\n        }\n        // y可以省略，此时等同于x\n        let by = s[2] || s[1];\n        if(by.indexOf('px') > -1) {\n          cy = y2 + parseFloat(by);\n        }\n        else {\n          cy = y2 + parseFloat(by) * ih * 0.01;\n        }\n      }\n    }\n  }\n  else {\n    v.unshift(null);\n  }\n  if(size) {\n    if(size === 'closest-side') {\n      // 在边外特殊情况只有end颜色填充\n      if(cx <= x2 || cx >= x3 || cy <= y2 || cy >= y3) {\n        r = 0;\n      }\n      else {\n        let xl;\n        let yl;\n        if(cx < x2 + iw * 0.5) {\n          xl = cx - x2;\n        } else {\n          xl = x3 - cx;\n        }\n        if(cy < y2 + ih * 0.5) {\n          yl = cy - y2;\n        } else {\n          yl = y3 - cy;\n        }\n        r = Math.min(xl, yl);\n      }\n    }\n    else if(size === 'closest-corner') {\n      let xl;\n      let yl;\n      if(cx < x2 + iw * 0.5) {\n        xl = cx - x2;\n      }\n      else {\n        xl = x3 - cx;\n      }\n      if(cy < y2 + ih * 0.5) {\n        yl = cy - y2;\n      }\n      else {\n        yl = y3 - cy;\n      }\n      r = Math.sqrt(Math.pow(xl, 2) + Math.pow(yl, 2));\n    }\n    else if(size === 'farthest-side') {\n      if(cx <= x2) {\n        r = x2 - cx + iw;\n      }\n      else if(cx >= x3) {\n        r = cx - x3 + iw;\n      }\n      else if(cy <= y2) {\n        r = y2 - cy + ih;\n      }\n      else if(cx >= y3) {\n        r = cy - y3 + ih;\n      }\n      else {\n        let xl = Math.max(x3 - cx, cx - x2);\n        let yl = Math.max(y3 - cy, cy - y2);\n        r = Math.max(xl, yl);\n      }\n    }\n    // 默认farthest-corner\n    else {\n      let xl;\n      let yl;\n      if(cx < x2 + iw * 0.5) {\n        xl = x3 - cx;\n      }\n      else {\n        xl = cx - x2;\n      }\n      if(cy < y2 + ih * 0.5) {\n        yl = y3 - cy;\n      }\n      else {\n        yl = cy - y2;\n      }\n      r = Math.sqrt(Math.pow(xl, 2) + Math.pow(yl, 2));\n    }\n  }\n  return [r, cx, cy];\n}\n\n// 当linear-gradient的值超过[0,1]区间限制时，计算其对应区间1的值\nfunction getCsStartLimit(c1, p1, c2, p2, length) {\n  let [ r1, g1, b1, a1 = 1 ] = c1;\n  let [ r2, g2, b2, a2 = 1 ] = c2;\n  let l1 = Math.abs(p1) * length;\n  let l2 = p2 * length;\n  let p = l1 / (l2 + l1);\n  let r = Math.floor(r1 + (r2 - r1) * p);\n  let g = Math.floor(g1 + (g2 - g1) * p);\n  let b = Math.floor(b1 + (b2 - b1) * p);\n  let a = a1 + (a2 - a1) * p;\n  return [r, g, b, a];\n}\n\nfunction getCsEndLimit(c1, p1, c2, p2, length) {\n  let [ r1, g1, b1, a1 = 1 ] = c1;\n  let [ r2, g2, b2, a2 = 1 ] = c2;\n  let l1 = p1 * length;\n  let l2 = p2 * length;\n  let p = (length - l1) / (l2 - l1);\n  let r = Math.floor(r1 + (r2 - r1) * p);\n  let g = Math.floor(g1 + (g2 - g1) * p);\n  let b = Math.floor(b1 + (b2 - b1) * p);\n  let a = a1 + (a2 - a1) * p;\n  return [r, g, b, a];\n}\n\nfunction getCsLimit(first, last, length) {\n  let c1 = util.rgb2int(first[0]);\n  let c2 = util.rgb2int(last[0]);\n  let [ r1, g1, b1, a1 = 1 ] = c1;\n  let [ r2, g2, b2, a2 = 1 ] = c2;\n  let l1 = Math.abs(first[1]) * length;\n  let l2 = last[1] * length;\n  let p = l1 / (l1 + l2);\n  let r = Math.floor(r1 + (r2 - r1) * p);\n  let g = Math.floor(g1 + (g2 - g1) * p);\n  let b = Math.floor(b1 + (b2 - b1) * p);\n  let a = a1 + (a2 - a1) * p;\n  first[0] = `rgba(${r},${g},${b},${a})`;\n  first[1] = 0;\n  p = (length + l1) / (l1 + l2);\n  r = Math.floor(r1 + (r2 - r1) * p);\n  g = Math.floor(g1 + (g2 - g1) * p);\n  b = Math.floor(b1 + (b2 - b1) * p);\n  a = a1 + (a2 - a1) * p;\n  last[0] = `rgba(${r},${g},${b},${a})`;\n  last[1] = 1;\n}\n\nexport default {\n  getLinearDeg,\n  getColorStop,\n  calLinearCoords,\n  calRadialRadius,\n};\n","/* 获取合适的虚线实体空白宽度ps/pd和数量n\n * 总长total，start边长bs，end边长be，内容长w，\n * 实体长范围[smin,smax]，空白长范围[dmin,dmax]\n */\nfunction calFitDashed(total, bs, be, w, smin, smax, dmin, dmax) {\n  let n = 1;\n  let ps = 1;\n  let pd = 1;\n  // 从最大实体空白长开始尝试\n  outer:\n  for(let i = smax; i >= smin; i--) {\n    for(let j = dmax; j >= dmin; j--) {\n      // 已知实体空白长度，n实体和n-1空白组成total，计算获取n数量\n      let per = i + j;\n      let num = Math.floor((total + j) / per);\n      let k = j;\n      // 可能除不尽，此时扩展空白长\n      if(num * per < j + total) {\n        let free = total - num * i;\n        k = free / (num - 1);\n        if(k > dmax) {\n          continue;\n        }\n      }\n      per = i + k;\n      // bs比实体大才有效，因为小的话必定和第一个实体完整相连\n      if(bs > 1 && bs > i) {\n        let mo = bs % per;\n        if(mo > i) {\n          continue;\n        }\n        if(be > 1) {\n          let mo = (bs + w) % per;\n          if(mo > i) {\n            continue;\n          }\n        }\n      }\n      if(be > 1) {\n        let mo = (bs + w) % per;\n        if(mo > i) {\n          continue;\n        }\n      }\n      if(num > 0) {\n        n = num;\n        ps = i;\n        pd = k;\n      }\n      break outer;\n    }\n  }\n  return {\n    n,\n    ps,\n    pd,\n  };\n}\n\n// dashed时n个实线和n-1虚线默认以3:1宽度组成，dotted则是n和n以1:1组成\nfunction calDashed(style, m1, m2, m3, m4, bw) {\n  let total = m4 - m1;\n  let w = m3 - m2;\n  let bs = m2 - m1;\n  let be = m4 - m3;\n  if(style === 'dotted') {\n    return calFitDashed(total, bs, be, w, bw, bw, Math.max(1, bw * 0.25), bw * 2);\n  }\n  else {\n    let { n, ps, pd } = calFitDashed(total, bs, be, w, bw, bw * 3, Math.max(1, bw * 0.25), bw * 2);\n    if(n === 1) {\n      return calFitDashed(total, bs, be, w, bw, bw, Math.max(1, bw * 0.25), bw * 2);\n    }\n    // 降级为dotted\n    return { n, ps, pd };\n  }\n}\n\nexport default {\n  calDashed,\n};\n","import Node from './Node';\nimport mode from '../mode';\nimport unit from '../style/unit';\nimport tf from '../style/transform';\nimport gradient from '../style/gradient';\nimport border from '../style/border';\nimport util from '../util';\n\nfunction renderBorder(renderMode, points, color, ctx, xom) {\n  if(renderMode === mode.CANVAS) {\n    points.forEach(point => {\n      ctx.beginPath();\n      ctx.fillStyle = color;\n      ctx.moveTo(point[0], point[1]);\n      for(let i = 2, len = point.length; i < len; i += 2) {\n        ctx.lineTo(point[i], point[i + 1]);\n      }\n      ctx.fill();\n      ctx.closePath();\n    });\n  }\n  else if(renderMode === mode.SVG) {\n    let s = '';\n    points.forEach(point => {\n      s += `M ${point[0]} ${point[1]}`;\n      for(let i = 2, len = point.length; i < len; i += 2) {\n        s += `L ${point[i]} ${point[i + 1]} `;\n      }\n    });\n    let item = {\n      type: 'item',\n      tagName: 'path',\n      props: [\n        ['d', s],\n        ['fill', color],\n      ],\n    };\n    xom.addBorder([\n      ['d', s],\n      ['fill', color],\n    ]);\n  }\n}\n\nclass Xom extends Node {\n  constructor(tagName, props) {\n    super();\n    props = props || [];\n    // 构建工具中都是arr，手写可能出现hash情况\n    if(Array.isArray(props)) {\n      this.props = util.arr2hash(props);\n      this.__props = props;\n    }\n    else {\n      this.props = props;\n      this.__props = util.hash2arr(props);\n    }\n    this.__tagName = tagName;\n    this.__style = this.props.style || {}; // style被解析后的k-v形式\n    this.__listener = {};\n    this.__props.forEach(item => {\n      let k = item[0];\n      if(/^on[a-zA-Z]/.test(k)) {\n        this.__listener[k.slice(2).toLowerCase()] = item[1];\n      }\n    });\n    // margin和padding的宽度\n    this.__mtw = 0;\n    this.__mrw = 0;\n    this.__mbw = 0;\n    this.__mlw = 0;\n    this.__ptw = 0;\n    this.__prw = 0;\n    this.__pbw = 0;\n    this.__plw = 0;\n    this.__matrix = null;\n    this.__matrixSelf = null;\n    this.__tfo = null;\n  }\n\n  __layout(data) {\n    let { w } = data;\n    let { style: {\n      display,\n      width,\n      marginTop,\n      marginRight,\n      marginBottom,\n      marginLeft,\n      paddingTop,\n      paddingRight,\n      paddingBottom,\n      paddingLeft,\n    } } = this;\n    if(display === 'none') {\n      return;\n    }\n    if(width && width.unit !== unit.AUTO) {\n      switch(width.unit) {\n        case unit.PX:\n          w = width.value;\n          break;\n        case unit.PERCENT:\n          w *= width.value * 0.01;\n          break;\n      }\n    }\n    this.__mlw = this.__mpWidth(marginLeft, w);\n    this.__mtw = this.__mpWidth(marginTop, w);\n    this.__mrw = this.__mpWidth(marginRight, w);\n    this.__mbw = this.__mpWidth(marginBottom, w);\n    this.__plw = this.__mpWidth(paddingLeft, w);\n    this.__ptw = this.__mpWidth(paddingTop, w);\n    this.__prw = this.__mpWidth(paddingRight, w);\n    this.__pbw = this.__mpWidth(paddingBottom, w);\n    if(display === 'block') {\n      this.__layoutBlock(data);\n    }\n    else if(display === 'flex') {\n      this.__layoutFlex(data);\n    }\n    else if(display === 'inline') {\n      this.__layoutInline(data);\n    }\n  }\n\n  isGeom() {\n    return this.tagName.charAt(0) === '$';\n  }\n\n  // 获取margin/padding的实际值\n  __mpWidth(mp, w) {\n    if(mp.unit === unit.PX) {\n      return mp.value;\n    }\n    else if(mp.unit === unit.PERCENT) {\n      return mp.value * w * 0.01;\n    }\n    return 0;\n  }\n\n  __preLayout(data) {\n    let { x, y, w, h } = data;\n    this.__x = x;\n    this.__y = y;\n    let { style, mlw, mtw, mrw, mbw, plw, ptw, prw, pbw } = this;\n    let {\n      width,\n      height,\n      borderTopWidth,\n      borderRightWidth,\n      borderBottomWidth,\n      borderLeftWidth,\n    } = style;\n    // 除了auto外都是固定宽高度\n    let fixedWidth;\n    let fixedHeight;\n    if(width && width.unit !== unit.AUTO) {\n      fixedWidth = true;\n      switch(width.unit) {\n        case unit.PX:\n          w = width.value;\n          break;\n        case unit.PERCENT:\n          w *= width.value * 0.01;\n          break;\n      }\n    }\n    if(height && height.unit !== unit.AUTO) {\n      fixedHeight = true;\n      switch(height.unit) {\n        case unit.PX:\n          h = height.value;\n          break;\n        case unit.PERCENT:\n          h *= height.value * 0.01;\n          break;\n      }\n    }\n    // margin/padding/border影响x和y和尺寸\n    x += borderLeftWidth.value + mlw + plw;\n    data.x = x;\n    y += borderTopWidth.value + mtw + ptw;\n    data.y = y;\n    if(width.unit === unit.AUTO) {\n      w -= borderLeftWidth.value + borderRightWidth.value + mlw + mrw + plw + prw;\n    }\n    if(height.unit === unit.AUTO) {\n      h -= borderTopWidth.value + borderBottomWidth.value + mtw + mbw + ptw + pbw;\n    }\n    return {\n      fixedWidth,\n      fixedHeight,\n      x,\n      y,\n      w,\n      h,\n    };\n  }\n\n  render(renderMode) {\n    this.__renderMode = renderMode;\n    if(renderMode === mode.SVG) {\n      this.__virtualDom = {\n        bb: [],\n        children: [],\n        transform: [],\n      };\n    }\n    let { ctx, style, width, height, mlw, mrw, mtw, mbw, plw, ptw, prw, pbw } = this;\n    // 恢复默认，防止其它matrix影响\n    if(renderMode === mode.CANVAS) {\n      ctx.setTransform(1, 0, 0, 1, 0, 0);\n    }\n    let {\n      display,\n      position,\n      top,\n      right,\n      bottom,\n      left,\n      backgroundGradient: bgg,\n      backgroundColor: bgc,\n      borderTopWidth,\n      borderTopColor: btc,\n      borderTopStyle: bts,\n      borderRightWidth,\n      borderRightColor: brc,\n      borderRightStyle: brs,\n      borderBottomWidth,\n      borderBottomColor: bbc,\n      borderBottomStyle: bbs,\n      borderLeftWidth,\n      borderLeftColor: blc,\n      borderLeftStyle : bls,\n      transform,\n      transformOrigin,\n    } = style;\n    if(display === 'none') {\n      return;\n    }\n    // 除root节点外relative渲染时做偏移，百分比基于父元素，若父元素没有一定高则为0\n    if(position === 'relative' && this.parent) {\n      let { width, height } = this.parent;\n      let h = this.parent.style.height;\n      if(left.unit !== unit.AUTO) {\n        let diff = left.unit === unit.PX ? left.value : left.value * width * 0.01;\n        this.__offsetX(diff);\n      }\n      else if(right.unit !== unit.AUTO) {\n        let diff = right.unit === unit.PX ? right.value : right.value * width * 0.01;\n        this.__offsetX(-diff);\n      }\n      if(top.unit !== unit.AUTO) {\n        let diff = top.unit === unit.PX ? top.value : top.value * height * 0.01 * (h.unit === unit.AUTO ? 0 : 1);\n        this.__offsetY(diff);\n      }\n      else if(bottom.unit !== unit.AUTO) {\n        let diff = bottom.unit === unit.PX ? bottom.value : bottom.value * height * 0.01 * (h.unit === unit.AUTO ? 0 : 1);\n        this.__offsetY(-diff);\n      }\n    }\n    // 使用rx和ry渲染位置，考虑了relative和translate影响\n    let { rx: x, ry: y } = this;\n    let btw = borderTopWidth.value;\n    let brw = borderRightWidth.value;\n    let bbw = borderBottomWidth.value;\n    let blw = borderLeftWidth.value;\n    let x1 = x + mlw;\n    let x2 = x1 + blw;\n    let x3 = x2 + width + plw + prw;\n    let x4 = x3 + brw;\n    let y1 = y + mtw;\n    let y2 = y1 + btw;\n    let y3 = y2 + height + ptw + pbw;\n    let y4 = y3 + bbw;\n    let iw = width + plw + prw;\n    let ih = height + ptw + pbw;\n    // translate相对于自身\n    if(transform) {\n      let x4 = x + mlw + blw + iw + brw + mrw;\n      let y4 = y + mtw + btw + ih + bbw + mbw;\n      let ow = x4 - x;\n      let oh = y4 - y;\n      let tfo = tf.getOrigin(transformOrigin, x, y, ow, oh);\n      let list = tf.normalize(transform, tfo[0], tfo[1], ow, oh);\n      let matrixSelf = tf.calMatrix(list, tfo[0], tfo[1]);\n      // 单位矩阵无需变换\n      if(matrixSelf[0] !== 1\n        || matrixSelf[1] !== 0\n        || matrixSelf[2] !== 0\n        || matrixSelf[3] !== 1\n        || matrixSelf[4] !== 0\n        || matrixSelf[5] !== 0) {\n        this.__tfo = tfo;\n        this.__matrixSelf = matrixSelf;\n        // canvas的matrix不叠加，需手动计算，另svg绘制自动叠加，但响应事件也需手动计算\n        let matrix = matrixSelf;\n        let parent = this.parent;\n        while(parent) {\n          if(parent.matrixSelf) {\n            matrix = tf.mergeMatrix(parent.matrixSelf, matrix);\n          }\n          parent = parent.parent;\n        }\n        this.__matrix = matrix;\n        if(renderMode === mode.CANVAS) {\n          ctx.setTransform(...matrix);\n        }\n        else if(renderMode === mode.SVG) {\n          this.addTransform(['matrix', matrixSelf.join(',')]);\n        }\n      }\n    }\n    // 先渲染渐变，没有则背景色\n    if(bgg) {\n      let { k, v } = bgg;\n      let cx = x2 + iw * 0.5;\n      let cy = y2 + ih * 0.5;\n      if(k === 'linear') {\n        let deg = gradient.getLinearDeg(v);\n        // 需计算角度 https://www.w3cplus.com/css3/do-you-really-understand-css-linear-gradients.html\n        let r = util.r2d(deg);\n        let length = Math.abs(iw * Math.sin(r)) + Math.abs(ih * Math.cos(r));\n        let [xx0, yy0, xx1, yy1] = gradient.calLinearCoords(deg, length * 0.5, cx, cy);\n        let list = gradient.getColorStop(v, length);\n        if(renderMode === mode.CANVAS) {\n          let lg = ctx.createLinearGradient(xx0, yy0, xx1, yy1);\n          list.forEach(item => {\n            lg.addColorStop(item[1], item[0]);\n          });\n          ctx.beginPath();\n          ctx.fillStyle = lg;\n          ctx.rect(x2, y2, iw, ih);\n          ctx.fill();\n          ctx.closePath();\n        }\n        else if(renderMode === mode.SVG) {\n          let uuid = this.defs.add({\n            tagName: 'linearGradient',\n            props: [\n              ['x1', xx0],\n              ['y1', yy0],\n              ['x2', xx1],\n              ['y2', yy1]\n            ],\n            stop: list,\n          });\n          this.addBackground([\n            ['x', x2],\n            ['y', y2],\n            ['width', iw],\n            ['height', ih],\n            ['fill', `url(#${uuid})`]\n          ]);\n        }\n      }\n      else if(k === 'radial') {\n        let [r, cx2, cy2] = gradient.calRadialRadius(v, iw, ih, cx, cy, x2, y2, x3, y3);\n        // 计算colorStop\n        let list = gradient.getColorStop(v, r * 2);\n        // 超限情况等同于只显示end的bgc\n        if(r <= 0) {\n          let end = list[list.length - 1];\n          end[1] = 0;\n          list = [end];\n          cx2 = x2;\n          cy2 = y2;\n          // 肯定大于最长直径\n          r = iw + ih;\n        }\n        if(renderMode === mode.CANVAS) {\n          let rg = ctx.createRadialGradient(cx2, cy2, 0, cx2, cy2, r);\n          list.forEach(item => {\n            rg.addColorStop(item[1], item[0]);\n          });\n          ctx.beginPath();\n          ctx.fillStyle = rg;\n          ctx.rect(x2, y2, iw, ih);\n          ctx.fill();\n          ctx.closePath();\n        }\n        else if(renderMode === mode.SVG) {\n          let uuid = this.defs.add({\n            tagName: 'radialGradient',\n            props: [\n              ['cx', cx2],\n              ['cy', cy2],\n              ['r', r]\n            ],\n            stop: list,\n          });\n          this.addBackground([\n            ['x', x2],\n            ['y', y2],\n            ['width', iw],\n            ['height', ih],\n            ['fill', `url(#${uuid})`]\n          ]);\n        }\n      }\n    }\n    else if(bgc && bgc !== 'transparent') {\n      if(renderMode === mode.CANVAS) {\n        ctx.beginPath();\n        ctx.fillStyle = bgc;\n        ctx.rect(x2, y2, iw, ih);\n        ctx.fill();\n        ctx.closePath();\n      }\n      else if(renderMode === mode.SVG) {\n        this.addBackground([\n          ['x', x2],\n          ['y', y2],\n          ['width', iw],\n          ['height', ih],\n          ['fill', bgc]\n        ]);\n      }\n    }\n    // 边框需考虑尖角，两条相交边平分45°夹角\n    if(btw > 0 && btc !== 'transparent') {\n      let points = [];\n      if(['dashed', 'dotted'].indexOf(bts) > -1) {\n        // 寻找一个合适的虚线线段长度和之间空白边距长度\n        let { n, ps, pd } = border.calDashed(bts, x1, x2, x3, x4, btw);\n        if(n <= 1) {\n          points.push([x1, y1, x4, y1, x3, y2, x2, y2]);\n        }\n        else {\n          let deg1 = Math.atan(btw / blw);\n          let deg2 = Math.atan(btw / brw);\n          for(let i = 0; i < n; i++) {\n            // 最后一个可能没有到底，延长之\n            let isLast = i === n - 1;\n            let xx1 = i ? (x1 + ps * i + pd * i) : x1;\n            let xx4 = xx1 + ps;\n            let yy1;\n            let yy2;\n            // 整个和borderLeft重叠\n            if(xx4 < x2) {\n              if(isLast) {\n                points.push([x1, y1, x4, y1, x3, y2, x2, y2]);\n              }\n              else {\n                yy1 = y1 + (xx1 - x1) * Math.tan(deg1);\n                yy2 = y1 + (xx4 - x1) * Math.tan(deg1);\n                points.push([xx1, y1, xx4, y1, xx4, yy2, xx1, yy1]);\n              }\n            }\n            // 整个和borderRight重叠\n            else if(xx1 > x3) {\n              yy1 = y1 + (x4 - xx1) * Math.tan(deg2);\n              yy2 = y1 + (x4 - xx4) * Math.tan(deg2);\n              if(isLast) {\n                points.push([xx1, y1, x4, y1, xx1, yy1]);\n              }\n              else {\n                points.push([xx1, y1, xx4, y1, xx4, yy2, xx1, yy1]);\n              }\n            }\n            // 不被整个重叠的情况再细分\n            else {\n              // 上部分和borderLeft重叠\n              if(xx1 < x2) {\n                yy1 = y1 + (xx1 - x1) * Math.tan(deg1);\n                if(isLast) {\n                  points.push([xx1, y1, x4, y1, x3, y2, x2, y2, xx1, yy1]);\n                }\n                else {\n                  // 下部分和borderRight重叠\n                  if(xx4 > x3) {\n                    points.push([xx1, y1, xx4, y1, x3, y2, x2, y2, xx1, yy1]);\n                  }\n                  // 下部独立\n                  else {\n                    points.push([xx1, y1, xx4, y1, xx4, y2, x2, y2, xx1, yy1]);\n                  }\n                }\n              }\n              // 下部分和borderRight重叠\n              else if(xx4 > x3) {\n                yy1 = y1 + (x4 - xx4) * Math.tan(deg2);\n                // 上部分和borderLeft重叠\n                if(xx1 < x2) {\n                  if(isLast) {\n                    points.push([xx1, y1, x4, y1, x3, y2, x2, y2, xx1, yy1]);\n                  }\n                  else {\n                    points.push([xx1, y1, xx4, y1, xx4, yy1, x3, y2, x2, y2, xx1, yy1]);\n                  }\n                }\n                // 上部独立\n                else {\n                  if(isLast) {\n                    points.push([xx1, y1, x4, y1, x3, y2, xx1, y2]);\n                  }\n                  else {\n                    points.push([xx1, y1, xx4, y1, xx4, yy1, x3, y2, xx1, y2]);\n                  }\n                }\n              }\n              // 完全独立\n              else {\n                if(isLast) {\n                  points.push([xx1, y1, x4, y1, x3, y2, xx1, y2]);\n                }\n                else {\n                  points.push([xx1, y1, xx4, y1, xx4, y2, xx1, y2]);\n                }\n              }\n            }\n          }\n        }\n      }\n      else {\n        points.push([x1, y1, x4, y1, x3, y2, x2, y2]);\n      }\n      renderBorder(renderMode, points, btc, ctx, this);\n    }\n    if(brw > 0 && brc !== 'transparent') {\n      let points = [];\n      if(['dashed', 'dotted'].indexOf(brs) > -1) {\n        // 寻找一个合适的虚线线段长度和之间空白边距长度\n        let { n, ps, pd } = border.calDashed(brs, y1, y2, y3, y4, brw);\n        if(n <= 1) {\n          points.push([x3, y2, x4, y1, x4, y4, x3, y3]);\n        }\n        else {\n          let deg1 = Math.atan(brw / btw);\n          let deg2 = Math.atan(brw / bbw);\n          for(let i = 0; i < n; i++) {\n            // 最后一个可能没有到底，延长之\n            let isLast = i === n - 1;\n            let yy1 = i ? (y1 + ps * i + pd * i) : y1;\n            let yy4 = yy1 + ps;\n            let xx1;\n            let xx2;\n            // 整个和borderTop重叠\n            if(yy4 < y2) {\n              if(isLast) {\n                points.push([x3, y2, x4, y1, x4, y4, x3, y3]);\n              }\n              else {\n                xx1 = x4 - (yy4 - y1) * Math.tan(deg1);\n                xx2 = x4 - (yy1 - y1) * Math.tan(deg1);\n                points.push([xx1, yy4, xx2, yy1, x4, yy1, x4, yy4]);\n              }\n            }\n            // 整个和borderBottom重叠\n            else if(yy1 > y3) {\n              xx1 = x3 + (yy1 - y3) * Math.tan(deg2);\n              xx2 = x3 + (yy4 - y3) * Math.tan(deg2);\n              if(isLast) {\n                points.push([xx1, yy1, x4, yy1, x4, y4]);\n              }\n              else {\n                points.push([xx1, yy1, x4, yy1, x4, yy4, xx2, yy4]);\n              }\n            }\n            // 不被整个重叠的情况再细分\n            else {\n              // 上部分和borderTop重叠\n              if(yy1 < y2) {\n                xx1 = x3 + (y2 - yy1) * Math.tan(deg1);\n                if(isLast) {\n                  points.push([x3, y2, xx1, yy1, x4, yy1, x4, y4, x3, y4]);\n                }\n                else {\n                  // 下部分和borderBottom重叠\n                  if(yy4 > y3) {\n                    points.push([x3, y2, xx1, yy1, x4, yy1, x4, yy4, xx1, yy4, x3, y3]);\n                  }\n                  // 下部独立\n                  else {\n                    points.push([x3, y2, xx1, yy1, x4, yy1, x4, yy4, x3, yy4]);\n                  }\n                }\n              }\n              // 下部分和borderBottom重叠\n              else if(yy4 > y3) {\n                xx1 = x3 + (yy4 - y3) * Math.tan(deg2);\n                // 上部分和borderTop重叠\n                if(yy1 < y2) {\n                  if(isLast) {\n                    points.push([x3, y2, xx1, yy1, x4, yy1, x4, y4, x3, y3]);\n                  }\n                  else {\n                    points.push([x3, y2, xx1, yy1, x4, yy1, x4, yy4, xx1, yy4, x3, y3]);\n                  }\n                }\n                // 上部独立\n                else {\n                  if(isLast) {\n                    points.push([x3, yy1, x4, yy1, x4, y4, x3, y3]);\n                  }\n                  else {\n                    points.push([x3, yy1, x4, yy1, x4, yy4, xx1, yy4, x3, y3]);\n                  }\n                }\n              }\n              // 完全独立\n              else {\n                if(isLast) {\n                  points.push([x3, yy1, x4, yy1, x4, y4, x3, y3]);\n                }\n                else {\n                  points.push([x3, yy1, x4, yy1, x4, yy4, x3, yy4]);\n                }\n              }\n            }\n          }\n        }\n      }\n      else {\n        points.push([x3, y2, x4, y1, x4, y4, x3, y3]);\n      }\n      renderBorder(renderMode, points, brc, ctx, this);\n    }\n    if(bbw > 0 && bbc !== 'transparent') {\n      let points = [];\n      // 寻找一个合适的虚线线段长度和之间空白边距长度\n      if(['dashed', 'dotted'].indexOf(bbs) > -1) {\n        // 寻找一个合适的虚线线段长度和之间空白边距长度\n        let { n, ps, pd } = border.calDashed(bbs, x1, x2, x3, x4, bbw);\n        let deg1 = Math.atan(bbw / blw);\n        let deg2 = Math.atan(bbw / brw);\n        for(let i = 0; i < n; i++) {\n          // 最后一个可能没有到底，延长之\n          let isLast = i === n - 1;\n          let xx1 = i ? (x1 + ps * i + pd * i) : x1;\n          let xx4 = xx1 + ps;\n          let yy1;\n          let yy2;\n          // 整个和borderLeft重叠\n          if(xx4 < x2) {\n            if(isLast) {\n              points.push([x1, y4, x2, y3, x3, y3, x4, y4]);\n            }\n            else {\n              yy1 = y4 - (xx1 - x1) * Math.tan(deg1);\n              yy2 = y4 - (xx4 - x1) * Math.tan(deg1);\n              points.push([xx1, yy1, xx4, yy2, xx4, y4, xx1, y4]);\n            }\n          }\n          // 整个和borderRight重叠\n          else if(xx1 > x3) {\n            yy1 = y4 - (xx1 - x1) * Math.tan(deg2);\n            yy2 = y4 - (xx4 - x1) * Math.tan(deg2);\n            if(isLast) {\n              points.push([xx1, yy1, x4, y4, xx1, y4]);\n            }\n            else {\n              points.push([xx1, yy1, xx4, yy2, xx4, y4, xx1, y4]);\n            }\n          }\n          // 不被整个重叠的情况再细分\n          else {\n            // 上部分和borderLeft重叠\n            if(xx1 < x2) {\n              yy1 = y3 + (xx1 - x1) * Math.tan(deg1);\n              if(isLast) {\n                points.push([xx1, yy1, x2, y3, x3, y3, x4, y4, xx1, y4]);\n              }\n              else {\n                // 下部分和borderRight重叠\n                if(xx4 > x3) {\n                  points.push([xx1, yy1, x2, y3, x3, y3, xx4, y4, xx1, y4]);\n                }\n                // 下部独立\n                else {\n                  points.push([xx1, yy1, x2, y3, xx4, y3, xx4, y4, xx1, y4]);\n                }\n              }\n            }\n            // 下部分和borderRight重叠\n            else if(xx4 > x3) {\n              yy1 = y4 - (x4 - xx4) * Math.tan(deg2);\n              // 上部分和borderLeft重叠\n              if(xx1 < x2) {\n                if(isLast) {\n                  points.push([xx1, yy1, x3, y3, x4, y4, xx1, y4]);\n                }\n                else {\n                  points.push([xx1, yy1, x3, y3, xx4, yy1, xx4, y4, xx1, y4]);\n                }\n              }\n              // 上部独立\n              else {\n                if(isLast) {\n                  points.push([xx1, y3, x3, y3, x4, y4, xx1, y4]);\n                }\n                else {\n                  points.push([xx1, y3, x3, y3, xx4, yy1, xx4, y4, xx1, y4]);\n                }\n              }\n            }\n            // 完全独立\n            else {\n              if(isLast) {\n                points.push([xx1, y3, x3, y3, x4, y4, xx1, y4]);\n              }\n              else {\n                points.push([xx1, y3, xx4, y3, xx4, y4, xx1, y4]);\n              }\n            }\n          }\n        }\n      }\n      else {\n        points.push([x1, y4, x2, y3, x3, y3, x4, y4]);\n      }\n      renderBorder(renderMode, points, bbc, ctx, this);\n    }\n    if(blw > 0 && blc !== 'transparent') {\n      let points = [];\n      if(['dashed', 'dotted'].indexOf(bls) > -1) {\n        // 寻找一个合适的虚线线段长度和之间空白边距长度\n        let { n, ps, pd } = border.calDashed(bls, y1, y2, y3, y4, blw);\n        if(n <= 1) {\n          points.push([x1, y1, x2, y2, x2, y3, x1, y4]);\n        }\n        else {\n          let deg1 = Math.atan(blw / btw);\n          let deg2 = Math.atan(blw / bbw);\n          for(let i = 0; i < n; i++) {\n            // 最后一个可能没有到底，延长之\n            let isLast = i === n - 1;\n            let yy1 = i ? (y1 + ps * i + pd * i) : y1;\n            let yy4 = yy1 + ps;\n            let xx1;\n            let xx2;\n            // 整个和borderTop重叠\n            if(yy4 < y2) {\n              if(isLast) {\n                points.push([x1, y1, x2, y2, x2, y3, x1, y4]);\n              }\n              else {\n                xx1 = x1 + (yy1 - y1) * Math.tan(deg1);\n                xx2 = x1 + (yy4 - y1) * Math.tan(deg1);\n                points.push([x1, yy1, xx1, yy1, xx2, yy4, x1, yy4]);\n              }\n            }\n            // 整个和borderBottom重叠\n            else if(yy1 > y3) {\n              xx1 = x1 + (y4 - yy1) * Math.tan(deg2);\n              xx2 = x1 + (y4 - yy4) * Math.tan(deg2);\n              if(isLast) {\n                points.push([x1, yy1, xx1, yy1, x1, y4]);\n              }\n              else {\n                points.push([x1, yy1, xx1, yy1, xx2, yy4, x1, yy4]);\n              }\n            }\n            // 不被整个重叠的情况再细分\n            else {\n              // 上部分和borderTop重叠\n              if(yy1 < y2) {\n                xx1 = x1 + (yy1 - y1) * Math.tan(deg1);\n                if(isLast) {\n                  points.push([x1, yy1, xx1, yy1, x2, y2, x2, y3, x1, y4]);\n                }\n                else {\n                  // 下部分和borderBottom重叠\n                  if(yy4 > y3) {\n                    points.push([x1, yy1, xx1, yy1, x2, y2, x2, y3, xx1, yy4, x1, yy4]);\n                  }\n                  // 下部独立\n                  else {\n                    points.push([x1, yy1, xx1, yy1, x2, y2, x2, yy4, x1, yy4]);\n                  }\n                }\n              }\n              // 下部分和borderBottom重叠\n              else if(yy4 > y3) {\n                xx1 = x1 + (y4 - yy4) * Math.tan(deg2);\n                // 上部分和borderTop重叠\n                if(yy1 < y2) {\n                  if(isLast) {\n                    points.push([x1, yy1, xx1, yy1, x2, y2, x2, y3, x1, y4]);\n                  }\n                  else {\n                    points.push([x1, yy1, xx1, yy1, x2, y2, x2, y3, xx1, yy4, x1, yy4]);\n                  }\n                }\n                // 上部独立\n                else {\n                  if(isLast) {\n                    points.push([x1, yy1, x2, yy1, x2, y3, x1, y4]);\n                  }\n                  else {\n                    points.push([x1, yy1, x2, yy1, x2, y3, xx1, yy4, x1, yy4]);\n                  }\n                }\n              }\n              // 完全独立\n              else {\n                if(isLast) {\n                  points.push([x1, yy1, x2, yy1, x2, y3, x1, y4]);\n                }\n                else {\n                  points.push([x1, yy1, x2, yy1, x2, yy4, x1, yy4]);\n                }\n              }\n            }\n          }\n        }\n      }\n      else {\n        points.push([x1, y1, x2, y2, x2, y3, x1, y4]);\n      }\n      renderBorder(renderMode, points, blc, ctx, this);\n    }\n  }\n\n  // 先查找到注册了事件的节点，再捕获冒泡判断增加性能\n  __emitEvent(e, force) {\n    let { event: { type }, x, y, covers } = e;\n    let { listener, children, style, outerWidth, outerHeight, matrix } = this;\n    if(style.display === 'none') {\n      return;\n    }\n    let cb;\n    if(listener.hasOwnProperty(type)) {\n      cb = listener[type];\n    }\n    // touchend之类强制的直接通知即可\n    if(force) {\n      children.forEach(child => {\n        if(child instanceof Xom && !child.isGeom()) {\n          child.__emitEvent(e, force);\n        }\n      });\n      cb && cb(e);\n      return;\n    }\n    let childWillResponse;\n    if(!this.isGeom()) {\n      // 先响应absolute/relative高优先级，从后往前遮挡顺序\n      for(let i = children.length - 1; i >= 0; i--) {\n        let child = children[i];\n        if(child instanceof Xom && ['absolute', 'relative'].indexOf(child.style.position) > -1) {\n          if(child.__emitEvent(e)) {\n            childWillResponse = true;\n          }\n        }\n      }\n      // 再看普通流，从后往前遮挡顺序\n      for(let i = children.length - 1; i >= 0; i--) {\n        let child = children[i];\n        if(child instanceof Xom && ['absolute', 'relative'].indexOf(child.style.position) === -1) {\n          if(child.__emitEvent(e)) {\n            childWillResponse = true;\n          }\n        }\n      }\n    }\n    // child触发则parent一定触发，否则判断事件坐标是否在节点内且未被遮挡\n    if(childWillResponse || this.willResponseEvent(e)) {\n      // 根据是否matrix存入遮罩坐标\n      covers.push({\n        x,\n        y,\n        w: outerWidth,\n        h: outerHeight,\n        matrix,\n      });\n      if(!e.target) {\n        e.target = this;\n      }\n      cb && cb(e);\n    }\n  }\n\n  willResponseEvent(e) {\n    let { x, y, covers } = e;\n    let { rx, ry, outerWidth, outerHeight, matrix } = this;\n    let inThis = tf.pointInQuadrilateral(x - rx, y - ry,\n      0, 0,\n      outerWidth,0,\n      0, outerHeight,\n      outerWidth, outerHeight,\n      matrix);\n    if(inThis) {\n      // 不能被遮挡\n      for(let i = 0, len = covers.length; i < len; i++) {\n        let { x: x2, y: y2, w, h, matrix } = covers[i];\n        if(tf.pointInQuadrilateral(x - rx, y - ry,\n          x2 - rx, y2 - ry,\n          x2 - rx + w,y2 - ry,\n          x2 - rx, y2 - ry + h,\n          x2 - rx + w, y2 - ry + h,\n          matrix)\n        ) {\n          return;\n        }\n      }\n      if(!e.target) {\n        e.target = this;\n      }\n      return true;\n    }\n  }\n\n  addBorder(props) {\n    this.virtualDom.bb.push({\n      type: 'item',\n      tagName: 'path',\n      props,\n    });\n  }\n\n  addBackground(props) {\n    this.virtualDom.bb.push({\n      type: 'item',\n      tagName: 'rect',\n      props,\n    });\n  }\n\n  addTransform(props) {\n    this.virtualDom.transform.push(props);\n  }\n\n  get tagName() {\n    return this.__tagName;\n  }\n  get mtw() {\n    return this.__mtw;\n  }\n  get mrw() {\n    return this.__mrw;\n  }\n  get mbw() {\n    return this.__mbw;\n  }\n  get mlw() {\n    return this.__mlw;\n  }\n  get ptw() {\n    return this.__ptw;\n  }\n  get prw() {\n    return this.__prw;\n  }\n  get pbw() {\n    return this.__pbw;\n  }\n  get plw() {\n    return this.__plw;\n  }\n  get outerWidth() {\n    let { mlw, mrw, plw, prw, style: {\n      borderLeftWidth,\n      borderRightWidth,\n    } } = this;\n    return this.width\n      + borderLeftWidth.value\n      + borderRightWidth.value\n      + mlw\n      + mrw\n      + plw\n      + prw;\n  }\n  get outerHeight() {\n    let { mtw, mbw, ptw, pbw, style: {\n      borderTopWidth,\n      borderBottomWidth,\n    } } = this;\n    return this.height\n      + borderTopWidth.value\n      + borderBottomWidth.value\n      + mtw\n      + mbw\n      + ptw\n      + pbw;\n  }\n  get listener() {\n    return this.__listener;\n  }\n  get renderMode() {\n    return this.__renderMode;\n  }\n  get matrix() {\n    return this.__matrix;\n  }\n  get matrixSelf() {\n    return this.__matrixSelf;\n  }\n  get tfo() {\n    return this.__tfo;\n  }\n}\n\nexport default Xom;\n","'use strict';\n\nexport default {\n  arial: {\n    lhr: 1.14990234375, // 默认line-height ratio，(67+1854+434)/2048\n    car: 1.1171875, // content-area ratio，(1854+434)/2048\n    blr: 0.9052734375, // base-line ratio，1854/2048\n    mdr: 0.64599609375, // middle ratio，(1854-1062/2)/2048\n    lgr: 0.03271484375, // line-gap ratio，67/2048\n  },\n};\n","const RESET = {\n  position: 'static',\n  display: 'block',\n  borderSizing: 'content-box',\n  top: 'auto',\n  right: 'auto',\n  bottom: 'auto',\n  left: 'auto',\n  marginTop: 0,\n  marginRight: 0,\n  marginBottom: 0,\n  marginLeft: 0,\n  paddingTop: 0,\n  paddingRight: 0,\n  paddingBottom: 0,\n  paddingLeft: 0,\n  fontSize: 16,\n  fontFamily: 'arial',\n  color: '#000',\n  fontStyle: 'normal',\n  fontWeight: 400,\n  lineHeight: 'normal',\n  borderTopWidth: 0,\n  borderRightWidth: 0,\n  borderBottomWidth: 0,\n  borderLeftWidth: 0,\n  borderTopColor: '#000',\n  borderRightColor: '#000',\n  borderBottomColor: '#000',\n  borderLeftColor: '#000',\n  borderTopStyle: 'solid',\n  borderRightStyle: 'solid',\n  borderBottomStyle: 'solid',\n  borderLeftStyle: 'solid',\n  borderTopLeftRadius: 0,\n  borderTopRightRadius: 0,\n  borderBottomLeftRadius: 0,\n  borderBottomRightRadius: 0,\n  verticalAlign: 'baseline',\n  width: 'auto',\n  height: 'auto',\n  flexGrow: 0,\n  flexShrink: 1,\n  flexBasis: 'auto',\n  flexDirection: 'row',\n  justifyContent: 'flex-start',\n  alignItems: 'stretch',\n  textAlign: 'left',\n  visibility: 'visible',\n  transformOrigin: 'center',\n  fill: '#000',\n  stroke: '#000',\n  strokeWidth: 0,\n  strokeDasharray: [],\n};\n\nlet reset = [];\n\nObject.keys(RESET).forEach(k => {\n  let v = RESET[k];\n  reset.push({\n    k,\n    v,\n  });\n});\n\nexport default reset;\n","import unit from './unit';\nimport font from './font';\nimport reset from './reset';\n\nfunction parserOneBorder(style, direction) {\n  let key = `border${direction}`;\n  if(!style[key]) {\n    return;\n  }\n  let w = /\\b\\d+px\\b/i.exec(style[key]);\n  if(w) {\n    style[key + 'Width'] = w[0];\n  }\n  let s = /\\b(solid|dashed|dotted)\\b/i.exec(style[key]);\n  if(s) {\n    style[key + 'Style'] = s[1];\n  }\n  let c = /#[0-9a-f]{3,6}/i.exec(style[key]);\n  if(c && [4, 7].indexOf(c[0].length) > -1) {\n    style[key + 'Color'] = c[0];\n  }\n  else if(/\\btransparent\\b/i.test(style[key])) {\n    style[key + 'Color'] = 'transparent';\n  }\n  else {\n    c = /rgba?\\(.+\\)/i.exec(style[key]);\n    if(c) {\n      style[key + 'Color'] = c[0];\n    }\n  }\n}\n\nfunction calUnit(obj, k, v) {\n  if(v === 'auto') {\n    obj[k] = {\n      unit: unit.AUTO,\n    };\n  }\n  else if(/px$/.test(v)) {\n    v = parseFloat(v) || 0;\n    obj[k] = {\n      value: v,\n      unit: unit.PX,\n    };\n  }\n  else if(/%$/.test(v)) {\n    // border不支持百分比\n    if(k.toString().indexOf('border') === 0) {\n      obj[k] = {\n        value: 0,\n        unit: unit.PX,\n      };\n    }\n    else {\n      v = parseFloat(v) || 0;\n      obj[k] = {\n        value: v,\n        unit: unit.PERCENT,\n      };\n    }\n  }\n  else {\n    v = parseFloat(v) || 0;\n    obj[k] = {\n      value: v,\n      unit: unit.PX,\n    };\n  }\n  return obj;\n}\n\nfunction normalize(style) {\n  // 默认reset\n  reset.forEach(item => {\n    if(!style.hasOwnProperty(item.k)) {\n      style[item.k] = item.v;\n    }\n  });\n  let temp = style.background;\n  // 处理缩写\n  if(temp) {\n    // 优先gradient，没有再考虑颜色\n    let gradient = /\\b(\\w+)-gradient\\((.+)\\)/.exec(temp);\n    if(gradient) {\n      style.backgroundGradient = {\n        k: gradient[1],\n        v: gradient[2].split(/\\s*,\\s*/),\n      };\n    }\n    else {\n      let bgc = /#[0-9a-f]{3,6}/i.exec(temp);\n      if(bgc && [4, 7].indexOf(bgc[0].length) > -1) {\n        style.backgroundColor = bgc[0];\n      } else {\n        bgc = /rgba?\\(.+\\)/i.exec(temp);\n        if(bgc) {\n          style.backgroundColor = bgc[0];\n        }\n      }\n    }\n  }\n  temp = style.flex;\n  if(temp) {\n    if(temp === 'none') {\n      style.flexGrow = 0;\n      style.flexShrink = 0;\n      style.flexBasis = 'auto';\n    }\n    else if(temp === 'auto') {\n      style.flexGrow = 1;\n      style.flexShrink = 1;\n      style.flexBasis = 'auto';\n    }\n    else if(/^[\\d.]+$/.test(temp)) {\n      style.flexGrow = parseFloat(temp);\n      style.flexShrink = 1;\n      style.flexBasis = 0;\n    }\n    else if(/^[\\d.]+px$/.test(temp)) {}\n    else if(/^[\\d.]+%$/.test(temp)) {}\n    else {\n      style.flexGrow = 0;\n      style.flexShrink = 1;\n      style.flexBasis = 'auto';\n    }\n  }\n  temp = style.border;\n  if(temp) {\n    style.borderTop = style.borderRight = style.borderBottom = style.borderLeft = temp;\n  }\n  temp = style.margin;\n  if(temp) {\n    let match = temp.toString().match(/(-?[\\d.]+(px|%)?)|(auto)/ig);\n    if(match) {\n      if(match.length === 1) {\n        match[3] = match[2] = match[1] = match[0];\n      }\n      else if(match.length === 2) {\n        match[2] = match[0];\n        match[3] = match[1];\n      }\n      else if(match.length === 3) {\n        match[3] = match[1];\n      }\n      style.marginTop = match[0];\n      style.marginRight = match[1];\n      style.marginBottom = match[2];\n      style.marginLeft = match[3];\n    }\n  }\n  temp = style.padding;\n  if(temp) {\n    let match = temp.toString().match(/(-?[\\d.]+(px|%)?)|(auto)/ig);\n    if(match) {\n      if(match.length === 1) {\n        match[3] = match[2] = match[1] = match[0];\n      }\n      else if(match.length === 2) {\n        match[2] = match[0];\n        match[3] = match[1];\n      }\n      else if(match.length === 3) {\n        match[3] = match[1];\n      }\n      style.paddingTop = match[0];\n      style.paddingRight = match[1];\n      style.paddingBottom = match[2];\n      style.paddingLeft = match[3];\n    }\n  }\n  temp = style.borderRadius;\n  if(temp) {\n    style.borderTopRightRadius = style.borderTopLeftRadius = style.borderBottomRightRadius = style.borderBottomLeftRadius = temp;\n  }\n  temp = style.transform;\n  if(temp) {\n    let match = temp.toString().match(/\\w+\\(.+?\\)/g);\n    if(match) {\n      let transform = style.transform = [];\n      match.forEach(item => {\n        let i = item.indexOf('(');\n        let k = item.slice(0, i);\n        let v = item.slice(i + 1, item.length - 1);\n        if(k === 'matrix') {\n          let arr = v.split(/\\s*,\\s*/);\n          arr = arr.map(item => parseFloat(item));\n          if(arr.length > 6) {\n            arr = arr.slice(0, 6);\n          }\n          else if(arr.length < 6) {\n            while(arr.length < 6) {\n              arr.push(0);\n            }\n          }\n          transform.push(['matrix', arr]);\n        }\n        else if(k === 'translateX') {\n          let arr = ['translateX', v];\n          transform.push(calUnit(arr, 1, v));\n        }\n        else if(k === 'translateY') {\n          let arr = ['translateY', v];\n          transform.push(calUnit(arr, 1, v));\n        }\n        else if(k === 'translate') {\n          let arr = v.split(/\\s*,\\s*/);\n          let arr1 = ['translateX', arr[0]];\n          let arr2 = ['translateY', arr[1]];\n          transform.push(calUnit(arr1, 1, v));\n          transform.push(calUnit(arr2, 1, v));\n        }\n        else if(k === 'scaleX') {\n          transform.push(['scaleX', parseFloat(v) || 0]);\n        }\n        else if(k === 'scaleY') {\n          transform.push(['scaleY', parseFloat(v) || 0]);\n        }\n        else if(k === 'scale') {\n          let arr = v.split(/\\s*,\\s*/);\n          let x = parseFloat(arr[0]) || 0;\n          let y = parseFloat(arr[arr.length - 1]) || 0;\n          transform.push(['scaleX', x]);\n          transform.push(['scaleY', y]);\n        }\n        else if(k === 'rotateZ' || k === 'rotate') {\n          transform.push(['rotateZ', parseFloat(v) || 0]);\n        }\n        else if(k === 'skewX') {\n          transform.push(['skewX', parseFloat(v) || 0]);\n        }\n        else if(k === 'skewY') {\n          transform.push(['skewY', parseFloat(v) || 0]);\n        }\n        else if(k === 'skew') {\n          let arr = v.split(/\\s*,\\s*/);\n          let x = parseFloat(arr[0]) || 0;\n          let y = parseFloat(arr[arr.length - 1]) || 0;\n          transform.push(['skewX', x]);\n          transform.push(['skewY', y]);\n        }\n      });\n    }\n  }\n  temp = style.transformOrigin;\n  if(temp) {\n    let match = temp.toString().match(/(-?[\\d.]+(px|%)?)|(left|top|right|bottom|center)/ig);\n    if(match) {\n      if(match.length === 1) {\n        match[1] = match[0];\n      }\n      let tfo = [];\n      for(let i = 0; i < 2; i++) {\n        let item = match[i];\n        if(/px$/.test(item)) {\n          tfo.push({\n            value: parseFloat(item),\n            unit: unit.PX,\n          });\n        }\n        else if(/%$/.test(item)) {\n          tfo.push({\n            value: parseFloat(item),\n            unit: unit.PERCENT,\n          });\n        }\n        else {\n          tfo.push({\n            value: item,\n            unit: unit.POSITION,\n          });\n        }\n      }\n      style.transformOrigin = tfo;\n    }\n  }\n  parserOneBorder(style, 'Top');\n  parserOneBorder(style, 'Right');\n  parserOneBorder(style, 'Bottom');\n  parserOneBorder(style, 'Left');\n  // 转化不同单位值为对象标准化\n  [\n    'marginTop',\n    'marginRight',\n    'marginBottom',\n    'marginLeft',\n    'paddingTop',\n    'paddingRight',\n    'paddingBottom',\n    'paddingLeft',\n    'borderTopWidth',\n    'borderRightWidth',\n    'borderBottomWidth',\n    'borderLeftWidth',\n    'borderTopLeftRadius',\n    'borderTopRightRadius',\n    'borderBottomLeftRadius',\n    'borderBottomRightRadius',\n    'top',\n    'right',\n    'bottom',\n    'left',\n    'width',\n    'height',\n    'flexBasis',\n  ].forEach(k => {\n    let v = style[k];\n    calUnit(style, k, v);\n  });\n  // 计算lineHeight为px值，最小范围\n  let lineHeight = style.lineHeight;\n  if(lineHeight === 'normal') {\n    lineHeight = {\n      value: style.fontSize * font.arial.lhr,\n      unit: unit.PX,\n    };\n  }\n  else if(/px$/.test(lineHeight)) {\n    lineHeight = parseFloat(lineHeight);\n    lineHeight = {\n      value: Math.max(style.fontSize, lineHeight),\n      unit: unit.PX,\n    };\n  }\n  // 纯数字比例\n  else {\n    lineHeight = parseFloat(lineHeight) || 'normal';\n    // 非法数字\n    if(lineHeight === 'normal') {\n      lineHeight = {\n        value: style.fontSize * font.arial.lhr,\n        unit: unit.PX,\n      };\n    }\n    else {\n      lineHeight = {\n        value: lineHeight * style.fontSize,\n        unit: unit.PX,\n      };\n    }\n  }\n  style.lineHeight = lineHeight;\n}\n\nfunction setFontStyle(style) {\n  let { fontStyle, fontWeight, fontSize, fontFamily } = style;\n  return `${fontStyle} ${fontWeight} ${fontSize}px/${fontSize}px ${fontFamily}`;\n}\n\nfunction getBaseLine(style) {\n  let normal = style.fontSize * font.arial.lhr;\n  return (style.lineHeight.value - normal) * 0.5 + style.fontSize * font.arial.blr;\n}\n\nexport default {\n  normalize,\n  setFontStyle,\n  getBaseLine,\n};\n","import css from '../style/css';\nimport mode from '../mode';\n\nclass LineBox {\n  constructor(parent, x, y, w, content, style) {\n    this.__parent = parent;\n    this.__x = x;\n    this.__y = y;\n    this.__width = w;\n    this.__content = content;\n    this.__style = style;\n    this.__virtualDom = {};\n  }\n\n  render(renderMode, ctx) {\n    let { style, content, x, y, parent: { ox, oy } } = this;\n    y += css.getBaseLine(style);\n    x += ox;\n    y += oy;\n    if(renderMode === mode.CANVAS) {\n      ctx.fillText(content, x, y);\n    }\n    else if(renderMode === mode.SVG) {\n      this.__virtualDom = {\n        type: 'item',\n        tagName: 'text',\n        props: [\n          ['x', x],\n          ['y', y],\n          ['fill', style.color],\n          ['font-size', `${style.fontSize}px`]\n        ],\n        content,\n      };\n    }\n  }\n\n  __offsetX(diff) {\n    this.__x += diff;\n  }\n\n  __offsetY(diff) {\n    this.__y += diff;\n  }\n\n  get x() {\n    return this.__x;\n  }\n  get y() {\n    return this.__y;\n  }\n  get width() {\n    return this.__width;\n  }\n  get content() {\n    return this.__content;\n  }\n  get style() {\n    return this.__style;\n  }\n  get baseLine() {\n    return css.getBaseLine(this.style);\n  }\n  get virtualDom() {\n    return this.__virtualDom;\n  }\n  get parent() {\n    return this.__parent;\n  }\n}\n\nexport default LineBox;\n","import Node from './Node';\nimport LineBox from './LineBox';\nimport css from '../style/css';\nimport mode from '../mode';\n\nconst CHAR_WIDTH_CACHE = {};\n\nclass Text extends Node {\n  constructor(content) {\n    super();\n    this.__content = content.toString();\n    this.__lineBoxes = [];\n    this.__charWidthList = [];\n    this.__charWidth = 0;\n    this.__textWidth = 0;\n  }\n\n  // 预先计算每个字的宽度\n  __measure() {\n    this.__charWidthList = [];\n    let { ctx, content, style, charWidthList, renderMode } = this;\n    if(renderMode === mode.CANVAS) {\n      ctx.font = css.setFontStyle(style);\n    }\n    let cache = CHAR_WIDTH_CACHE[style.fontSize] = CHAR_WIDTH_CACHE[style.fontSize] || {};\n    let length = content.length;\n    let sum = 0;\n    for(let i = 0; i < length; i++) {\n      let char = content.charAt(i);\n      let mw;\n      if(cache.hasOwnProperty(char)) {\n        mw = cache[char];\n      }\n      else if(renderMode === mode.CANVAS) {\n        mw = cache[char] = ctx.measureText(char).width;\n      }\n      else if(renderMode === mode.SVG) {\n        mw = cache[char] = mode.measure(char, style);\n      }\n      charWidthList.push(mw);\n      sum += mw;\n      this.__charWidth = Math.max(this.charWidth, mw);\n    }\n    this.__textWidth = sum;\n  }\n\n  __layout(data, isVirtual) {\n    let { x, y, w, h } = data;\n    this.__x = x;\n    this.__y = y;\n    let maxX = x;\n    let { ctx, content, style, lineBoxes, charWidthList, renderMode } = this;\n    // 顺序尝试分割字符串为lineBox，形成多行\n    let begin = 0;\n    let i = 0;\n    let count = 0;\n    let length = content.length;\n    while(i < length) {\n      count += charWidthList[i];\n      if (count === w) {\n        let lineBox = new LineBox(this, x, y, count, content.slice(begin, i + 1), style);\n        lineBoxes.push(lineBox);\n        maxX = Math.max(maxX, x + count);\n        y += this.style.lineHeight.value;\n        begin = i + 1;\n        i = begin + 1;\n        count = 0;\n      }\n      else if (count > w) {\n        // 宽度不足时无法跳出循环，至少也要塞个字符形成一行\n        if(i === begin) {\n          i = begin + 1;\n        }\n        let lineBox = new LineBox(this, x, y, count - charWidthList[i], content.slice(begin, i), style);\n        lineBoxes.push(lineBox);\n        maxX = Math.max(maxX, x + count - charWidthList[i]);\n        y += this.style.lineHeight.value;\n        begin = i;\n        i = i + 1;\n        count = 0;\n      }\n      else {\n        i++;\n      }\n    }\n    if(begin < length && begin < i) {\n      count = 0;\n      for(i = begin ;i < length; i++) {\n        count += charWidthList[i];\n      }\n      let lineBox = new LineBox(this, x, y, count, content.slice(begin, length), style);\n      lineBoxes.push(lineBox);\n      maxX = Math.max(maxX, x + count);\n      y += style.lineHeight.value;\n    }\n    this.__width = maxX - x;\n    this.__height = y - data.y;\n    if(isVirtual) {\n      this.__lineBoxes = [];\n    }\n    else {\n      let { textAlign } = style;\n      if(['center', 'right'].indexOf(textAlign) > -1) {\n        lineBoxes.forEach(lineBox => {\n          let diff = this.__width - lineBox.width;\n          if(diff > 0) {\n            lineBox.__offsetX(textAlign === 'center' ? diff * 0.5 : diff);\n          }\n        });\n      }\n    }\n  }\n\n  render(renderMode) {\n    const { ctx, style } = this;\n    if(renderMode === mode.CANVAS) {\n      ctx.font = css.setFontStyle(style);\n      ctx.fillStyle = style.color;\n    }\n    this.lineBoxes.forEach(item => {\n      item.render(renderMode, ctx);\n    });\n    if(renderMode === mode.SVG) {\n      this.__virtualDom = {\n        type: 'text',\n        children: this.lineBoxes.map(lineBox => lineBox.virtualDom),\n      };\n    }\n  }\n\n  __tryLayInline(w) {\n    return w - this.textWidth;\n  }\n\n  __calMaxAndMinWidth() {\n    let n = 0;\n    this.charWidthList.forEach(item => {\n      n = Math.max(n, item);\n    });\n    return { max: this.textWidth, min: n };\n  }\n\n  get content() {\n    return this.__content;\n  }\n  set content(v) {\n    this.__content = v;\n  }\n  get lineBoxes() {\n    return this.__lineBoxes;\n  }\n  get charWidthList() {\n    return this.__charWidthList;\n  }\n  get charWidth() {\n    return this.__charWidth;\n  }\n  get textWidth() {\n    return this.__textWidth;\n  }\n  get baseLine() {\n    let last = this.lineBoxes[this.lineBoxes.length - 1];\n    return last.y - this.y + last.baseLine;\n  }\n  get renderMode() {\n    return this.__renderMode;\n  }\n}\n\nexport default Text;\n","class LineGroup {\n  constructor(x, y) {\n    this.__list = [];\n    this.__x = x;\n    this.__y = y;\n    this.__baseLine = 0;\n  }\n\n  add(item) {\n    this.list.push(item);\n  }\n\n  __calBaseLine() {\n    let baseLine = 0;\n    this.list.forEach(item => {\n      baseLine = Math.max(baseLine, item.baseLine);\n    });\n    return baseLine;\n  }\n\n  verticalAlign() {\n    this.__baseLine = this.__calBaseLine();\n    // 仅当有2个和以上时才需要vertical对齐调整\n    if(this.list.length > 1) {\n      this.list.forEach(item => {\n        if(item.baseLine !== this.baseLine) {\n          item.__offsetY(this.baseLine - item.baseLine);\n        }\n      });\n    }\n  }\n\n  horizonAlign(diff) {\n    this.list.forEach(item => {\n      item.__offsetX(diff);\n    });\n  }\n\n  get list() {\n    return this.__list;\n  }\n  get x() {\n    return this.__x;\n  }\n  get y() {\n    return this.__y;\n  }\n  get width() {\n    let width = 0;\n    this.list.forEach(item => {\n      width += item.width;\n    });\n    return width;\n  }\n  get height() {\n    let height = 0;\n    this.list.forEach(item => {\n      height = Math.max(height, item.height);\n    });\n    return height;\n  }\n  get baseLine() {\n    return this.__baseLine;\n  }\n  get size() {\n    return this.__list.length;\n  }\n}\n\nexport default LineGroup;\n","import Xom from '../node/Xom';\nimport css from '../style/css';\nimport unit from '../style/unit';\nimport mode from '../mode';\n\nconst IMPLEMENT = {};\n\nclass Geom extends Xom {\n  constructor(tagName, props) {\n    super(tagName, props);\n  }\n\n  __initStyle() {\n    css.normalize(this.style);\n  }\n\n  __tryLayInline(w, total) {\n    // 无children，直接以style的width为宽度，不定义则为0\n    let { style: { width } } = this;\n    if(width.unit === unit.PX) {\n      return w - width.value;\n    }\n    else if(width.unit === unit.PERCENT) {\n      return w - total * width.value * 0.01;\n    }\n    return w;\n  }\n\n  __calAutoBasis(isDirectionRow, w, h) {\n    let b = 0;\n    let min = 0;\n    let max = 0;\n    let { style } = this;\n    // 计算需考虑style的属性\n    let {\n      width,\n      height,\n      borderTopWidth,\n      borderRightWidth,\n      borderBottomWidth,\n      borderLeftWidth,\n    } = style;\n    let main = isDirectionRow ? width : height;\n    if(main.unit !== unit.AUTO) {\n      b = max += main.value;\n    }\n    // border也得计算在内\n    if(isDirectionRow) {\n      let w = borderRightWidth.value + borderLeftWidth.value;\n      b += w;\n      max += w;\n      min += w;\n    }\n    else {\n      let h = borderTopWidth.value + borderBottomWidth.value;\n      b += h;\n      max += h;\n      min += h;\n    }\n    return { b, min, max };\n  }\n\n  __layoutBlock(data) {\n    let { fixedHeight, w, h } = this.__preLayout(data);\n    this.__width = w;\n    this.__height = fixedHeight ? h : 0;\n  }\n\n  __layoutFlex(data) {\n    // 无children所以等同于block\n    this.__layoutBlock(data);\n  }\n\n  __layoutInline(data) {\n    let { fixedWidth, fixedHeight, x, y, w, h } = this.__preLayout(data);\n    // 元素的width不能超过父元素w\n    this.__width = fixedWidth ? w : x - data.x;\n    this.__height = fixedHeight ? h : y - data.y;\n  }\n\n  __calAbs() {\n    return 0;\n  }\n\n  render(renderMode) {\n    super.render(renderMode);\n    if(renderMode === mode.SVG) {\n      this.__virtualDom = {\n        ...super.virtualDom,\n        type: 'geom',\n      };\n    }\n  }\n\n  get tagName() {\n    return this.__tagName;\n  }\n  get baseLine() {\n    return this.__height;\n  }\n\n  static getImplement(name) {\n    if(!IMPLEMENT.hasOwnProperty(name)) {\n      throw new Error(`Geom has not register: ${name}`);\n    }\n    return IMPLEMENT[name];\n  }\n  static register(name, implement) {\n    if(IMPLEMENT.hasOwnProperty(name)) {\n      throw new Error(`Geom has already register: ${name}`);\n    }\n    IMPLEMENT[name] = implement;\n  }\n}\n\nexport default Geom;\n","import Xom from './Xom';\nimport Text from './Text';\nimport LineGroup from './LineGroup';\nimport Geom from '../geom/Geom';\nimport util from '../util';\nimport css from '../style/css';\nimport unit from '../style/unit';\nimport mode from '../mode';\n\nconst TAG_NAME = {\n  'div': true,\n  'span': true,\n};\nconst INLINE = {\n  'span': true,\n};\n\nclass Dom extends Xom {\n  constructor(tagName, props, children) {\n    super(tagName, props);\n    this.__children = children;\n    this.__flowChildren = []; // 非绝对定位孩子\n    this.__absChildren = []; // 绝对定位孩子\n    this.__lineGroups = []; // 一行inline元素组成的LineGroup对象后的存放列表\n    this.__flowY = 0; // 文档流布局结束后的y坐标，供absolute布局默认位置使用\n  }\n\n  /**\n   * 1. 封装string为Text节点\n   * 2. 打平children中的数组，变成一维\n   * 3. 合并相连的Text节点\n   * 4. 检测inline不能包含block和flex\n   * 5. 设置parent和prev/next和ctx和defs和mode\n   */\n  __traverse(ctx, defs, renderMode) {\n    let list = [];\n    this.__traverseChildren(this.children, list, ctx, defs, renderMode);\n    for(let i = list.length - 1; i > 0; i--) {\n      let item = list[i];\n      if(item instanceof Text) {\n        let prev = list[i - 1];\n        if(prev instanceof Text) {\n          prev.content += item.content;\n          list.splice(i, 1);\n        }\n        else {\n          i--;\n        }\n      }\n    }\n    if(this.style.display === 'inline' && this.parent.style.display !== 'flex') {\n      for(let i = list.length - 1; i >= 0; i--) {\n        let item = list[i];\n        if(item instanceof Dom && item.style.display !== 'inline') {\n          throw new Error('inline can not contain block/flex');\n        }\n      }\n    }\n    let prev = null;\n    list.forEach(item => {\n      item.__ctx = ctx;\n      item.__defs = defs;\n      if(prev) {\n        prev.__next = item;\n      }\n      item.__parent = this;\n      item.__prev = prev;\n      if(item instanceof Text || item.style.position !== 'absolute') {\n        this.__flowChildren.push(item);\n      }\n      else {\n        this.__absChildren.push(item);\n      }\n    });\n    this.__children = list;\n  }\n\n  __traverseChildren(children, list, ctx, defs, renderMode) {\n    if(Array.isArray(children)) {\n      children.forEach(item => {\n        this.__traverseChildren(item, list, ctx, defs, renderMode);\n      });\n    }\n    else if(children instanceof Dom) {\n      list.push(children);\n      children.__traverse(ctx, defs, renderMode);\n    }\n    // 图形没有children\n    else if(children instanceof Geom) {\n      list.push(children);\n    }\n    // 排除掉空的文本\n    else if(!util.isNil(children)) {\n      let text = new Text(children);\n      text.__renderMode = renderMode;\n      list.push(text);\n    }\n  }\n\n  // 合并设置style，包括继承和默认值，修改一些自动值和固定值，测量所有文字的宽度\n  __initStyle() {\n    let style = this.__style;\n    // 仅支持flex/block/inline/none\n    if(!style.display || ['flex', 'block', 'inline', 'none'].indexOf(style.display) === -1) {\n      if(INLINE.hasOwnProperty(this.tagName)) {\n        style.display = 'inline';\n      }\n      else {\n        style.display = 'block';\n      }\n    }\n    // 继承父元素样式\n    let parent = this.parent;\n    if(parent) {\n      let parentStyle = parent.style;\n      ['fontSize', 'fontWeight', 'fontStyle', 'lineHeight', 'wordBreak', 'color', 'textAlign'].forEach(k => {\n        if(!style.hasOwnProperty(k) && parentStyle.hasOwnProperty(k)) {\n          style[k] = parentStyle[k];\n        }\n      });\n    }\n    // 标准化处理，默认值、简写属性\n    css.normalize(style);\n    this.children.forEach(item => {\n      if(item instanceof Xom) {\n        item.__initStyle();\n      }\n      else {\n        item.__style = style;\n        // 文字首先测量所有字符宽度\n        item.__measure();\n      }\n    });\n  }\n\n  // 给定父宽度情况下，尝试行内放下后的剩余宽度，为负数即放不下\n  __tryLayInline(w, total) {\n    let { flowChildren, style: { width } } = this;\n    if(width.unit === unit.PX) {\n      return w - width.value;\n    }\n    else if(width.unit === unit.PERCENT) {\n      return w - total * width.value * 0.01;\n    }\n    for(let i = 0; i < flowChildren.length; i++) {\n      // 当放不下时直接返回，无需继续多余的尝试计算\n      if(w < 0) {\n        return w;\n      }\n      let item = flowChildren[i];\n      if(item instanceof Xom) {\n        w -= item.__tryLayInline(w, total);\n      }\n      else {\n        w -= item.textWidth;\n      }\n    }\n    return w;\n  }\n\n  // 设置y偏移值，递归包括children，此举在flex行元素的child进行justify-content对齐用\n  __offsetX(diff) {\n    super.__offsetX(diff);\n    this.flowChildren.forEach(item => {\n      if(item) {\n        item.__offsetX(diff);\n      }\n    });\n  }\n\n  // 设置y偏移值，递归包括children，此举在初步确定inline布局后设置元素vertical-align用\n  __offsetY(diff) {\n    super.__offsetY(diff);\n    this.flowChildren.forEach(item => {\n      if(item) {\n        item.__offsetY(diff);\n      }\n    });\n  }\n\n  __calAutoBasis(isDirectionRow, w, h, isRecursion) {\n    let b = 0;\n    let min = 0;\n    let max = 0;\n    let { mtw, mrw, mbw, mlw, ptw, prw, pbw, plw, flowChildren, style } = this;\n    // 计算需考虑style的属性\n    let {\n      width,\n      height,\n      borderTopWidth,\n      borderRightWidth,\n      borderBottomWidth,\n      borderLeftWidth,\n    } = style;\n    let main = isDirectionRow ? width : height;\n    if(main.unit === unit.PX) {\n      b = max = main.value;\n      // 递归时children的长度会影响flex元素的最小宽度\n      if(isRecursion) {\n        min = b;\n      }\n    }\n    // 递归children取最大值\n    flowChildren.forEach(item => {\n      if(item instanceof Xom) {\n        let { b: b2, min: min2, max: max2 } = item.__calAutoBasis(isDirectionRow, w, h, true);\n        b = Math.max(b, b2);\n        min = Math.max(min, min2);\n        max = Math.max(max, max2);\n      }\n      else if(isDirectionRow) {\n        min = Math.max(item.charWidth, min);\n        max = Math.max(item.textWidth, max);\n      }\n      else {\n        item.__layout({\n          x: 0,\n          y: 0,\n          w,\n          h,\n        }, true);\n        min = Math.max(min, item.height);\n        max = Math.max(max, item.height);\n      }\n    });\n    // margin/padding/border也得计算在内\n    if(isDirectionRow) {\n      let w = borderRightWidth.value + borderLeftWidth.value + mlw + mrw + plw + prw;\n      b += w;\n      max += w;\n      min += w;\n    }\n    else {\n      let h = borderTopWidth.value + borderBottomWidth.value + mtw + mbw + ptw + pbw;\n      b += h;\n      max += h;\n      min += h;\n    }\n    return { b, min, max };\n  }\n\n  __calAbs(isDirectionRow) {\n    let max = 0;\n    let { mtw, mrw, mbw, mlw, ptw, prw, pbw, plw, flowChildren, style } = this;\n    // 计算需考虑style的属性\n    let {\n      width,\n      height,\n      borderTopWidth,\n      borderRightWidth,\n      borderBottomWidth,\n      borderLeftWidth,\n    } = style;\n    let main = isDirectionRow ? width : height;\n    if(main.unit === unit.PX) {\n      max = main.value;\n    }\n    // 递归children取最大值\n    flowChildren.forEach(item => {\n      if(item instanceof Xom) {\n        let max2 = item.__calAbs(isDirectionRow);\n        max = Math.max(max, max2);\n      }\n      else if(isDirectionRow) {\n        max = Math.max(item.textWidth, max);\n      }\n      else {\n        item.__layout({\n          x: 0,\n          y: 0,\n          w: Infinity,\n          h: Infinity,\n        }, true);\n        max = Math.max(max, item.height);\n      }\n    });\n    // margin/padding/border也得计算在内\n    if(isDirectionRow) {\n      let w = borderRightWidth.value + borderLeftWidth.value + mlw + mrw + plw + prw;\n      max += w;\n    }\n    else {\n      let h = borderTopWidth.value + borderBottomWidth.value + mtw + mbw + ptw + pbw;\n      max += h;\n    }\n    return max;\n  }\n\n  // 本身block布局时计算好所有子元素的基本位置\n  __layoutBlock(data) {\n    let { flowChildren, style, lineGroups } = this;\n    let {\n      width,\n      marginLeft,\n      marginRight,\n      textAlign,\n    } = style;\n    let { fixedHeight, x, y, w, h } = this.__preLayout(data);\n    // 递归布局，将inline的节点组成lineGroup一行\n    let lineGroup = new LineGroup(x, y);\n    flowChildren.forEach(item => {\n      if(item instanceof Xom) {\n        if(item.style.display === 'inline') {\n          // inline开头，不用考虑是否放得下直接放\n          if(x === data.x) {\n            lineGroup.add(item);\n            item.__layout({\n              x,\n              y,\n              w,\n              h,\n            });\n            x += item.outerWidth;\n          }\n          else {\n            // 非开头先尝试是否放得下\n            let fw = item.__tryLayInline(w - x, w);\n            // 放得下继续\n            if(fw >= 0) {\n              item.__layout({\n                x,\n                y,\n                w,\n                h,\n              });\n            }\n            // 放不下处理之前的lineGroup，并重新开头\n            else {\n              lineGroups.push(lineGroup);\n              lineGroup.verticalAlign();\n              x = data.x;\n              y += lineGroup.height;\n              item.__layout({\n                x: data.x,\n                y,\n                w,\n                h,\n              });\n              lineGroup = new LineGroup(x, y);\n            }\n            x += item.outerWidth;\n            lineGroup.add(item);\n          }\n        }\n        else {\n          // block先处理之前可能的lineGroup\n          if(lineGroup.size) {\n            lineGroups.push(lineGroup);\n            lineGroup.verticalAlign();\n            y += lineGroup.height;\n            lineGroup = new LineGroup(data.x, y);\n          }\n          item.__layout({\n            x: data.x,\n            y,\n            w,\n            h,\n          });\n          x = data.x;\n          y += item.outerHeight;\n        }\n      }\n      // 文字和inline类似\n      else {\n        // x开头，不用考虑是否放得下直接放\n        if(x === data.x) {\n          lineGroup.add(item);\n          item.__layout({\n            x,\n            y,\n            w,\n            h,\n          });\n          x += item.width;\n        }\n        else {\n          // 非开头先尝试是否放得下\n          let fw = item.__tryLayInline(w - x, w);\n          // 放得下继续\n          if(fw >= 0) {\n            item.__layout({\n              x,\n              y,\n              w,\n              h,\n            });\n          }\n          // 放不下处理之前的lineGroup，并重新开头\n          else {\n            lineGroups.push(lineGroup);\n            lineGroup.verticalAlign();\n            x = data.x;\n            y += lineGroup.height;\n            item.__layout({\n              x: data.x,\n              y,\n              w,\n              h,\n            });\n            lineGroup = new LineGroup(x, y);\n          }\n          x += item.width;\n          lineGroup.add(item);\n        }\n      }\n    });\n    // 结束后处理可能遗留的最后的lineGroup\n    if(lineGroup.size) {\n      lineGroups.push(lineGroup);\n      lineGroup.verticalAlign();\n      y += lineGroup.height;\n    }\n    // text-align\n    if(['center', 'right'].indexOf(textAlign) > -1) {\n      lineGroups.forEach(lineGroup => {\n        let diff = w - lineGroup.width;\n        if(diff > 0) {\n          lineGroup.horizonAlign(textAlign === 'center' ? diff * 0.5 : diff);\n        }\n      });\n    }\n    this.__width = w;\n    this.__height = fixedHeight ? h : y - data.y;\n    this.__flowY = y;\n    // 处理margin:xx auto居中对齐\n    if(marginLeft.unit === unit.AUTO && marginRight.unit === unit.AUTO && width.unit !== unit.AUTO) {\n      let ow = this.outerWidth;\n      if(ow < data.w) {\n        this.__offsetX((data.w - ow) * 0.5);\n      }\n    }\n  }\n\n  // 弹性布局时的计算位置\n  __layoutFlex(data) {\n    let { flowChildren, style } = this;\n    let {\n      marginLeft,\n      marginRight,\n      flexDirection,\n      justifyContent,\n      alignItems,\n    } = style;\n    let { fixedWidth, fixedHeight, x, y, w, h } = this.__preLayout(data);\n    let isDirectionRow = flexDirection === 'row';\n    // column时height可能为auto，此时取消伸展，退化为类似block布局，但所有子元素强制block\n    if(!isDirectionRow && !fixedHeight) {\n      flowChildren.forEach(item => {\n        if(item instanceof Xom) {\n          const { style, style: { display, flexDirection, width }} = item;\n          // column的flex的child如果是inline，变为block\n          if(display === 'inline') {\n            style.display = 'block';\n          }\n          // 竖向flex的child如果是横向flex，宽度自动的话要等同于父flex的宽度\n          else if(display === 'flex' && flexDirection === 'row' && width.unit === unit.AUTO) {\n            width.value = w;\n            width.unit = unit.PX;\n          }\n          item.__layout({\n            x,\n            y,\n            w,\n            h,\n          });\n          y += item.outerHeight;\n        }\n        else {\n          item.__layout({\n            x,\n            y,\n            w,\n            h,\n          });\n          y += item.outerHeight;\n        }\n      });\n      this.__width = w;\n      this.__height = y - data.y;\n      return;\n    }\n    // 计算伸缩基数\n    let growList = [];\n    let shrinkList = [];\n    let basisList = [];\n    let minList = [];\n    let growSum = 0;\n    let shrinkSum = 0;\n    let basisSum = 0;\n    let maxSum = 0;\n    flowChildren.forEach(item => {\n      if(item instanceof Xom) {\n        let { flexGrow, flexShrink, flexBasis } = item.style;\n        growList.push(flexGrow);\n        shrinkList.push(flexShrink);\n        growSum += flexGrow;\n        shrinkSum += flexShrink;\n        let { b, min, max } = item.__calAutoBasis(isDirectionRow, w, h);\n        // 根据basis不同，计算方式不同\n        if(flexBasis.unit === unit.AUTO) {\n          basisList.push(max);\n          basisSum += max;\n        }\n        else if(flexBasis.unit === unit.PX) {\n          b = flexBasis.value;\n          basisList.push(b);\n          basisSum += b;\n        }\n        else if(flexBasis.unit === unit.PERCENT) {\n          b = (isDirectionRow ? w : h) * flexBasis.value;\n          basisList.push(b);\n          basisSum += b;\n        }\n        maxSum += max;\n        minList.push(min);\n      }\n      else {\n        growList.push(0);\n        shrinkList.push(1);\n        shrinkSum += 1;\n        if(isDirectionRow) {\n          basisList.push(item.textWidth);\n          basisSum += item.textWidth;\n          maxSum += item.textWidth;\n          minList.push(item.charWidth);\n        }\n        else {\n          item.__layout({\n            x: 0,\n            y: 0,\n            w,\n            h,\n          }, true);\n          basisList.push(item.height);\n          basisSum += item.height;\n          maxSum += item.height;\n          minList.push(item.height);\n        }\n      }\n    });\n    let maxCross = 0;\n    // 判断是否超出，决定使用grow还是shrink\n    let isOverflow = maxSum > (isDirectionRow ? w : h);\n    flowChildren.forEach((item, i) => {\n      let main;\n      let shrink = shrinkList[i];\n      let grow = growList[i];\n      // 计算主轴长度\n      if(isOverflow) {\n        let overflow = basisSum - (isDirectionRow ? w : h);\n        main = shrink ? (basisList[i] - overflow * shrink / shrinkSum) : basisList[i];\n      }\n      else {\n        let free = (isDirectionRow ? w : h) - basisSum;\n        main = grow ? (basisList[i] + free * grow / growSum) : basisList[i];\n      }\n      // 主轴长度的最小值不能小于元素的最小长度，比如横向时的字符宽度\n      main = Math.max(main, minList[i]);\n      if(item instanceof Xom) {\n        const { style, mlw, mtw, mrw, mbw, plw, ptw, prw, pbw, style: {\n          display,\n          flexDirection,\n          width,\n          height,\n          borderTopWidth,\n          borderRightWidth,\n          borderBottomWidth,\n          borderLeftWidth,\n        }} = item;\n        if(isDirectionRow) {\n          // row的flex的child如果是inline，变为block\n          if(display === 'inline') {\n            style.display = 'block';\n          }\n          // 横向flex的child如果是竖向flex，高度自动的话要等同于父flex的高度\n          else if(display === 'flex' && flexDirection === 'column' && fixedHeight && height.unit === unit.AUTO) {\n            height.value = h;\n            height.unit = unit.PX;\n          }\n          item.__layout({\n            x,\n            y,\n            w: main,\n            h,\n          })\n        }\n        else {\n          // column的flex的child如果是inline，变为block\n          if(display === 'inline') {\n            style.display = 'block';\n          }\n          // 竖向flex的child如果是横向flex，宽度自动的话要等同于父flex的宽度\n          else if(display === 'flex' && flexDirection === 'row' && width.unit === unit.AUTO) {\n            width.value = w;\n            width.unit = unit.PX;\n          }\n          item.__layout({\n            x,\n            y,\n            w,\n            h: main,\n          });\n        }\n        // 重设因伸缩而导致的主轴长度\n        if(isOverflow && shrink) {\n          if(isDirectionRow) {\n            item.__width = main - mlw - mrw - plw - prw - borderLeftWidth.value - borderRightWidth.value;\n          }\n          else {\n            item.__height = main - mtw - mbw - ptw - pbw - borderTopWidth.value - borderBottomWidth.value;\n          }\n        }\n        else if(!isOverflow && grow) {\n          if(isDirectionRow) {\n            item.__width = main - mlw - mrw - plw - prw - borderLeftWidth.value - borderRightWidth.value;\n          }\n          else {\n            item.__height = main - mtw - mbw - ptw - pbw - borderTopWidth.value - borderBottomWidth.value;\n          }\n        }\n      }\n      else {\n        item.__layout({\n          x,\n          y,\n          w: isDirectionRow ? main : w,\n          h: isDirectionRow ? h : main,\n        });\n      }\n      if(isDirectionRow) {\n        x += item.outerWidth;\n        maxCross = Math.max(maxCross, item.outerHeight);\n      }\n      else {\n        y += item.outerHeight;\n        maxCross = Math.max(maxCross, item.outerWidth);\n      }\n    });\n    // 计算主轴剩余时要用真实剩余空间而不能用伸缩剩余空间\n    let diff = isDirectionRow ? w - x + data.x : h - y + data.y;\n    // 主轴侧轴对齐方式\n    if(!isOverflow && growSum === 0 && diff > 0) {\n      let len = flowChildren.length;\n      if(justifyContent === 'flex-end') {\n        for(let i = 0; i < len; i++) {\n          let child = flowChildren[i];\n          isDirectionRow ? child.__offsetX(diff) : child.__offsetY(diff);\n        }\n      }\n      else if(justifyContent === 'center') {\n        let center = diff * 0.5;\n        for(let i = 0; i < len; i++) {\n          let child = flowChildren[i];\n          isDirectionRow ? child.__offsetX(center) : child.__offsetY(center);\n        }\n      }\n      else if(justifyContent === 'space-between') {\n        let between = diff / (len - 1);\n        for(let i = 1; i < len; i++) {\n          let child = flowChildren[i];\n          isDirectionRow ? child.__offsetX(between * i) : child.__offsetY(between * i);\n        }\n      }\n      else if(justifyContent === 'space-around') {\n        let around = diff / (len + 1);\n        for(let i = 0; i < len; i++) {\n          let child = flowChildren[i];\n          isDirectionRow ? child.__offsetX(around * (i + 1)) : child.__offsetY(around * (i + 1));\n        }\n      }\n    }\n    // 子元素侧轴伸展\n    if(isDirectionRow) {\n      // 父元素固定高度，子元素可能超过，侧轴最大长度取固定高度\n      if(fixedHeight) {\n        maxCross = h;\n      }\n      y += maxCross;\n    }\n    else {\n      if(fixedWidth) {\n        maxCross = w;\n      }\n    }\n    // 侧轴对齐\n    if(alignItems === 'stretch') {\n      // 短侧轴的children伸张侧轴长度至相同，超过的不动，固定宽高的也不动\n      flowChildren.forEach(item => {\n        let { style, mlw, mtw, mrw, mbw, ptw, prw, plw, pbw } = item;\n        if(isDirectionRow) {\n          if(style.height.unit === unit.AUTO) {\n            item.__height = maxCross - mtw - mbw - ptw - pbw\n              - style.borderTopWidth.value\n              - style.borderBottomWidth.value;\n          }\n        }\n        else {\n          if(style.width.unit === unit.AUTO) {\n            item.__width = maxCross - mlw - mrw - plw - prw\n              - style.borderRightWidth.value\n              - style.borderLeftWidth.value;\n          }\n        }\n      });\n    }\n    else if(alignItems === 'center') {\n      flowChildren.forEach(item => {\n        let diff = maxCross - item.outerHeight;\n        if(diff > 0) {\n          item.__offsetY(diff * 0.5);\n        }\n      });\n    }\n    else if(alignItems === 'flex-end') {\n      flowChildren.forEach(item => {\n        let diff = maxCross - item.outerHeight;\n        if(diff > 0) {\n          item.__offsetY(diff);\n        }\n      });\n    }\n    this.__width = w;\n    this.__height = fixedHeight ? h : y - data.y;\n    this.__flowY = y;\n    // 处理margin:xx auto居中对齐\n    if(marginLeft.unit === unit.AUTO && marginRight.unit === unit.AUTO && width.unit !== unit.AUTO) {\n      let ow = this.outerWidth;\n      if(ow < data.w) {\n        this.__offsetX((data.w - ow) * 0.5);\n      }\n    }\n  }\n\n  // inline比较特殊，先简单顶部对其，后续还需根据vertical和lineHeight计算y偏移\n  __layoutInline(data) {\n    let { flowChildren, style, lineGroups } = this;\n    let {\n      width,\n      marginLeft,\n      marginRight,\n      textAlign,\n    } = style;\n    let { fixedWidth, fixedHeight, x, y, w, h } = this.__preLayout(data);\n    let maxX = x;\n    // 递归布局，将inline的节点组成lineGroup一行\n    let lineGroup = new LineGroup(x, y);\n    flowChildren.forEach(item => {\n      if(item instanceof Xom) {\n        // 绝对定位跳过\n        if(item.style.position === 'absolute') {\n          this.absChildren.push(item);\n          return;\n        }\n        item.style.display = 'inline';\n        // inline开头，不用考虑是否放得下直接放\n        if(x === data.x) {\n          lineGroup.add(item);\n          item.__layout({\n            x,\n            y,\n            w,\n            h,\n          });\n          x += item.outerWidth;\n          maxX = Math.max(maxX, x);\n        }\n        else {\n          // 非开头先尝试是否放得下\n          let fw = item.__tryLayInline(w - x, w);\n          // 放得下继续\n          if(fw >= 0) {\n            item.__layout({\n              x,\n              y,\n              w,\n              h,\n            });\n          }\n          // 放不下处理之前的lineGroup，并重新开头\n          else {\n            lineGroups.push(lineGroup);\n            lineGroup.verticalAlign();\n            x = data.x;\n            y += lineGroup.height;\n            item.__layout({\n              x: data.x,\n              y,\n              w,\n              h,\n            });\n            lineGroup = new LineGroup(x, y);\n          }\n          x += item.outerWidth;\n          maxX = Math.max(maxX, x);\n          lineGroup.add(item);\n        }\n      }\n      // inline里的其它只有文本\n      else {\n        if(x === data.x) {\n          lineGroup.add(item);\n          item.__layout({\n            x,\n            y,\n            w,\n            h,\n          });\n          x += item.width;\n          maxX = Math.max(maxX, x);\n        }\n        else {\n          // 非开头先尝试是否放得下\n          let fw = item.__tryLayInline(w - x, w);\n          // 放得下继续\n          if(fw >= 0) {\n            item.__layout({\n              x,\n              y,\n              w,\n              h,\n            });\n          }\n          // 放不下处理之前的lineGroup，并重新开头\n          else {\n            lineGroups.push(lineGroup);\n            lineGroup.verticalAlign();\n            x = data.x;\n            y += lineGroup.height;\n            item.__layout({\n              x: data.x,\n              y,\n              w,\n              h,\n            });\n            lineGroup = new LineGroup(x, y);\n          }\n          x += item.width;\n          maxX = Math.max(maxX, x);\n          lineGroup.add(item);\n        }\n      }\n    });\n    // 结束后处理可能遗留的最后的lineGroup，children为空时可能size为空\n    if(lineGroup.size) {\n      lineGroups.push(lineGroup);\n      lineGroup.verticalAlign();\n      y += lineGroup.height;\n    }\n    // text-align\n    if(['center', 'right'].indexOf(textAlign) > -1) {\n      lineGroups.forEach(lineGroup => {\n        let diff = w - lineGroup.width;\n        if(diff > 0) {\n          lineGroup.horizonAlign(textAlign === 'center' ? diff * 0.5 : diff);\n        }\n      });\n    }\n    // 元素的width不能超过父元素w\n    this.__width = fixedWidth ? w : maxX - data.x;\n    this.__height = fixedHeight ? h : y - data.y;\n    this.__flowY = y;\n    // 处理margin:xx auto居中对齐\n    if(marginLeft.unit === unit.AUTO && marginRight.unit === unit.AUTO && width.unit !== unit.AUTO) {\n      let ow = this.outerWidth;\n      if(ow < data.w) {\n        this.__offsetX((data.w - ow) * 0.5);\n      }\n    }\n  }\n\n  // 只针对绝对定位children布局\n  __layoutAbs(container) {\n    let { x, y, flowY, width, height, children, absChildren, style, mlw, mtw, plw, ptw, prw, pbw } = this;\n    let {\n      borderTopWidth,\n      borderLeftWidth,\n    } = style;\n    x += mlw + borderLeftWidth.value;\n    y += mtw + borderTopWidth.value;\n    let pw = width + plw + prw;\n    let ph = height + ptw + pbw;\n    // 递归进行，遇到absolute/relative的设置新容器\n    children.forEach(item => {\n      if(item instanceof Dom) {\n        item.__layoutAbs(['absolute', 'relative'].indexOf(item.style.position) > -1 ? item : container);\n      }\n    });\n    // 对absolute的元素进行相对容器布局\n    absChildren.forEach(item => {\n      let { style, style: {\n        left, top, right, bottom, width: width2, height: height2\n      } } = item;\n      let x2, y2, w2, h2;\n      // width优先级高于right高于left，即最高left+right，其次left+width，再次right+width，然后仅申明单个，最次全部auto\n      if(left.unit !== unit.AUTO && right.unit !== unit.AUTO) {\n        x2 = left.unit === unit.PX ? x + left.value : x + width * left.value * 0.01;\n        w2 = right.unit === unit.PX ? x + pw - right.value - x2 : x + pw - width * right.value * 0.01 - x2;\n      }\n      else if(left.unit !== unit.AUTO && width2.unit !== unit.AUTO) {\n        x2 = left.unit === unit.PX ? x + left.value : x + width * left.value * 0.01;\n        w2 = width2.unit === unit.PX ? width2.value : width;\n      }\n      else if(right.unit !== unit.AUTO && width2.unit !== unit.AUTO) {\n        w2 = width2.unit === unit.PX ? width2.value : width;\n        let widthPx = width2.unit === unit.PX ? width2.value : width * width2.value * 0.01;\n        x2 = right.unit === unit.PX ? x + pw - right.value - widthPx : x + pw - width * right.value * 0.01 - widthPx;\n      }\n      else if(left.unit !== unit.AUTO) {\n        x2 = left.unit === unit.PX ? x + left.value : x + width * left.value * 0.01;\n        w2 = item.__calAbs(true);\n      }\n      else if(right.unit !== unit.AUTO) {\n        w2 = item.__calAbs(true);\n        x2 = right.unit === unit.PX ? x + pw - right.value - w2 : x + pw - width * right.value * 0.01 - w2;\n      }\n      else if(width2.unit !== unit.AUTO) {\n        x2 = x;\n        w2 = width2.unit === unit.PX ? width2.value : width;\n      }\n      else {\n        x2 = x;\n        w2 = item.__calAbs(true);\n      }\n      // top/bottom/height优先级同上\n      if(top.unit !== unit.AUTO && bottom.unit !== unit.AUTO) {\n        y2 = top.unit === unit.PX ? y + top.value : y + height * top.value * 0.01;\n        h2 = bottom.unit === unit.PX ? y + ph - bottom.value - y2 : y + ph - height * bottom.value * 0.01 - y2;\n        style.height = {\n          value: h2,\n          unit: unit.PX,\n        };\n      }\n      else if(top.unit !== unit.AUTO && height2.unit !== unit.AUTO) {\n        y2 = top.unit === unit.PX ? y + top.value : y + height * top.value * 0.01;\n        h2 = height2.unit === unit.PX ? height2.value : height;\n      }\n      else if(bottom.unit !== unit.AUTO && height2.unit !== unit.AUTO) {\n        h2 = height2.unit === unit.PX ? height2.value : height;\n        let heightPx = height2.unit === unit.PX ? height2.value : height * height2.value * 0.01;\n        y2 = bottom.unit === unit.PX ? y + ph - bottom.value - heightPx : y + ph - height * bottom.value * 0.01 - heightPx;\n      }\n      else if(top.unit !== unit.AUTO) {\n        y2 = top.unit === unit.PX ? y + top.value : y + height * top.value * 0.01;\n        h2 = item.__calAbs();\n      }\n      else if(bottom.unit !== unit.AUTO) {\n        h2 = item.__calAbs();\n        y2 = bottom.unit === unit.PX ? y + ph - bottom.value - h2 : y + ph - height * bottom.value * 0.01 - h2;\n      }\n      else if(height2.unit !== unit.AUTO) {\n        y2 = flowY + mtw + borderTopWidth.value;\n        h2 = height2.unit === unit.PX ? height2.value : height;\n      }\n      else {\n        y2 = flowY + mtw + borderTopWidth.value;\n        h2 = item.__calAbs();\n      }\n      // absolute时inline强制block\n      if(style.display === 'inline') {\n        style.display = 'block';\n      }\n      item.__layout({\n        x: x2,\n        y: y2,\n        w: w2,\n        h: h2,\n      });\n    });\n  }\n\n  render(renderMode) {\n    super.render(renderMode);\n    let { style: { display }, flowChildren, children } = this;\n    if(display === 'none') {\n      return;\n    }\n    // 先绘制static\n    flowChildren.forEach(item => {\n      if(item instanceof Text || item.style.position === 'static') {\n        item.render(renderMode);\n      }\n    });\n    // 再绘制relative和absolute\n    children.forEach(item => {\n      if((item instanceof Xom) && ['relative', 'absolute'].indexOf(item.style.position) > -1) {\n        item.render(renderMode);\n      }\n    });\n    if(renderMode === mode.SVG) {\n      this.__virtualDom = {\n        ...super.virtualDom,\n        type: 'dom',\n        children: this.children.map(item => item.virtualDom),\n      };\n    }\n  }\n\n  get tagName() {\n    return this.__tagName;\n  }\n  get children() {\n    return this.__children;\n  }\n  get flowChildren() {\n    return this.__flowChildren;\n  }\n  get absChildren() {\n    return this.__absChildren;\n  }\n  get lineGroups() {\n    return this.__lineGroups;\n  }\n  get baseLine() {\n    let len = this.lineGroups.length;\n    if(len) {\n      let last = this.lineGroups[len - 1];\n      return last.y - this.y + last.baseLine;\n    }\n    return this.y;\n  }\n  get flowY() {\n    return this.__flowY;\n  }\n\n  static isValid(s) {\n    return TAG_NAME.hasOwnProperty(s);\n  }\n}\n\nexport default Dom;\n","import util from './util';\n\nfunction diff(elem, ovd, nvd) {\n  let cns = elem.childNodes;\n  diffDefs(cns[0], ovd.defs, nvd.defs);\n  diffBb(cns[1], ovd.bb, nvd.bb);\n  diffD2D(elem, ovd, nvd, true);\n}\n\nfunction diffDefs(elem, od, nd) {\n  let ol = od.length;\n  let nl = nd.length;\n  let i = 0;\n  let cns = elem.childNodes;\n  for(; i < Math.min(ol, nl); i++) {\n    diffDef(cns[i], od[i], nd[i]);\n  }\n}\n\nfunction diffDef(elem, od, nd) {\n  if(od.k !== nd.k) {\n    elem.insertAdjacentHTML('afterend', util.joinDef(nd));\n    elem.parentNode.removeChild(elem);\n  }\n  else {\n    for(let i = 0; i < 4; i++) {\n      if(od.c[i] !== nd.c[i]) {\n        elem.setAttribute(['x1', 'y1', 'x2', 'y2'][i], nd.c[i]);\n      }\n    }\n    let ol = od.v.length;\n    let nl = nd.v.length;\n    let i = 0;\n    let cns = elem.childNodes;\n    for(; i < Math.min(ol, nl); i++) {\n      let o = od.v[i];\n      let n = nd.v[i];\n      if(o[0] !== n[0]) {\n        cns[i].setAttribute('stop-color', n[0]);\n      }\n      if(o[1] !== n[1]) {\n        cns[i].setAttribute('offset', n[1]);\n      }\n    }\n    if(i < ol) {\n      for(; i < ol; i++) {\n        removeAt(elem, cns, i);\n      }\n    }\n    else if(i < nl) {\n      for(; i < nl; i++) {\n        insertAt(elem, cns, i, util.joinDef(nd.v[i]));\n      }\n    }\n  }\n}\n\nfunction diffChild(elem, ovd, nvd) {\n  if(ovd.type === 'dom') {\n    if(nvd.type === 'dom') {\n      diffD2D(elem, ovd, nvd);\n    }\n    else if(nvd.type === 'text') {\n      replaceWith(elem, nvd);\n    }\n    else if(nvd.type === 'geom') {\n      diffD2G(elem, ovd, nvd);\n    }\n  }\n  else if(nvd.type === 'text') {\n    if(nvd.type === 'dom') {\n      replaceWith(elem, nvd);\n    }\n    else if(nvd.type === 'text') {\n      diffT2T(elem, ovd, nvd);\n    }\n    else if(nvd.type === 'geom') {\n      replaceWith(elem, nvd);\n    }\n  }\n  else if(nvd.type === 'geom') {\n    if(nvd.type === 'dom') {\n      diffG2D(elem, ovd, nvd);\n    }\n    else if(nvd.type === 'text') {\n      replaceWith(elem, nvd);\n    }\n    else if(nvd.type === 'geom') {\n      diffG2G(elem, ovd, nvd);\n    }\n  }\n}\n\nfunction diffD2D(elem, ovd, nvd, root) {\n  if(!root) {\n    diffBb(elem.firstChild, ovd.bb, nvd.bb);\n  }\n  let ol = ovd.children.length;\n  let nl = nvd.children.length;\n  let i = 0;\n  let lastChild = elem.lastChild;\n  let cns = lastChild.childNodes;\n  for(; i < Math.min(ol, nl); i++) {\n    diffChild(cns[i], ovd.children[i], nvd.children[i]);\n  }\n  if(i < ol) {\n    for(; i < ol; i++) {\n      removeAt(lastChild, cns, i);\n    }\n  }\n  else if(i < nl) {\n    for(; i < nl; i++) {\n      insertAt(lastChild, cns, i, util.joinVd(nvd.children[i]));\n    }\n  }\n}\n\nfunction diffD2G(elem, ovd, nvd) {\n  diffBb(elem.firstChild, ovd.bb, nvd.bb);\n  replaceWith(elem.lastChild, nvd.content);\n}\n\nfunction diffT2T(elem, ovd, nvd) {\n  let ol = ovd.children.length;\n  let nl = nvd.children.length;\n  let i = 0;\n  for(; i < Math.min(ol, nl); i++) {\n    diffItem(elem, i, ovd.children[i], nvd.children[i], true);\n  }\n  let cns = elem.childNodes;\n  if(i < ol) {\n    for(; i < ol; i++) {\n      removeAt(elem, cns, i);\n    }\n  }\n  else if(i < nl) {\n    for(; i < nl; i++) {\n      insertAt(elem, cns, i, util.joinVd(nvd.children[i]));\n    }\n  }\n}\n\nfunction diffG2D(elem, ovd, nvd) {\n  diffBb(elem.firstChild, ovd.bb, nvd.bb);\n  replaceWith(elem.lastChild, nvd.children);\n}\n\nfunction diffG2G(elem, ovd, nvd) {\n  if(!equalArr(ovd.transform, nvd.transform)) {\n    let transform = util.joinTransform(nvd.transform);\n    if(elem.getAttribute('transform') !== transform) {\n      elem.setAttribute('transform', transform);\n    }\n  }\n  diffBb(elem.firstChild, ovd.bb, nvd.bb);\n  let ol = ovd.content.length;\n  let nl = nvd.content.length;\n  let i = 0;\n  let lastChild = elem.lastChild;\n  let cns = lastChild.childNodes;\n  for(; i < Math.min(ol, nl); i++) {\n    diffItem(lastChild, i, ovd.content[i], nvd.content[i]);\n  }\n  if(i < ol) {\n    for(; i < ol; i++) {\n      removeAt(lastChild, cns, i);\n    }\n  }\n  else if(i < nl) {\n    for(; i < nl; i++) {\n      insertAt(lastChild, cns, i, util.joinVd(nvd.content[i]));\n    }\n  }\n}\n\nfunction diffBb(elem, obb, nbb) {\n  let ol = obb.length;\n  let nl = nbb.length;\n  let i = 0;\n  for(; i < Math.min(ol, nl); i++) {\n    diffItem(elem, i, obb[i], nbb[i]);\n  }\n  let cns = elem.childNodes;\n  if(i < ol) {\n    for(; i < ol; i++) {\n      removeAt(elem, cns, i);\n    }\n  }\n  else if(i < nl) {\n    for(; i < nl; i++) {\n      insertAt(elem, cns, i, util.joinVd(nbb[i]));\n    }\n  }\n}\n\nfunction diffItem(elem, i, ovd, nvd, isText) {\n  let cns = elem.childNodes;\n  if(ovd.tagName !== nvd.tagName) {\n    replaceWith(cns[i], nvd);\n  }\n  else {\n    let op = {};\n    for(let j = 0, len = ovd.props.length; j < len; j++) {\n      let prop = ovd.props[j];\n      let [k, v] = prop;\n      op[k] = v;\n    }\n    for(let j = 0, len = nvd.props.length; j < len; j++) {\n      let prop = nvd.props[j];\n      let [k, v] = prop;\n      // 已有不等更新，没有添加\n      if(op.hasOwnProperty(k)) {\n        if(op[k] !== v) {\n          cns[i].setAttribute(k, v);\n        }\n        delete op[k];\n      }\n      else {\n        cns[i].setAttribute(k, v);\n      }\n    }\n    // 多余的删除\n    for(var k in op) {\n      if(op.hasOwnProperty(k)) {\n        cns[i].removeAttribute(k);\n      }\n    }\n    if(isText && ovd.content !== nvd.content) {\n      cns[i].textContent = nvd.content;\n    }\n  }\n}\n\nfunction replaceWith(elem, vd) {\n  let res;\n  if(Array.isArray(vd)) {\n    res = '';\n    vd.forEach(item => {\n      res += util.joinVd(item);\n    });\n  }\n  else {\n    res = util.joinVd(vd);\n  }\n  elem.insertAdjacentHTML('afterend', res);\n  elem.parentNode.removeChild(elem);\n}\n\nfunction insertAt(elem, cns, index, html) {\n  if(index >= cns.length) {\n    elem.insertAdjacentHTML('beforeend', html);\n  }\n  else {\n    cns[index].insertAdjacentHTML('beforebegin', html);\n  }\n}\n\nfunction removeAt(elem, cns, index) {\n  if(cns[index]) {\n    elem.removeChild(cns[index]);\n  }\n}\n\nfunction equalArr(a, b) {\n  if(a.length !== b.length) {\n    return false;\n  }\n  for(let i = 0, len = a.length; i < len; i++) {\n    if(a[i] !== b[i]) {\n      return false;\n    }\n  }\n  return true;\n}\n\nexport default diff;\n","class Defs {\n  constructor(uuid) {\n    this.id = uuid;\n    this.count = 0;\n    this.list = [];\n  }\n  add(data) {\n    data.uuid = `karas-defs-${this.id}-${this.count++}`;\n    this.list.push(data);\n    return data.uuid;\n  }\n  clear() {\n    this.list = [];\n    this.count = 0;\n  }\n\n  get value() {\n    return this.list;\n  }\n\n  static getInstance(uuid) {\n    return new Defs(uuid);\n  }\n}\n\nexport default Defs;\n","import Dom from '../node/Dom';\nimport util from '../util';\nimport mode from '../mode';\nimport domDiff from '../domDiff';\nimport Defs from './Defs';\n\nfunction getDom(dom) {\n  if(util.isString(dom)) {\n    let o = document.querySelector(dom);\n    if(!o) {\n      throw new Error('can not find dom of selector: ' + dom);\n    }\n    return o;\n  }\n  if(!dom) {\n    throw new Error('can not find dom: ' + dom);\n  }\n  return dom;\n}\n\nfunction renderProp(k, v) {\n  let s = Array.isArray(v) ? util.joinSourceArray(v) : util.stringify(v);\n  if(k === 'className') {\n    k = 'class';\n  }\n  return ' ' + k + '=\"' + util.encodeHtml(s, true) + '\"';\n}\n\nlet uuid = 0;\n\nclass Root extends Dom {\n  constructor(tagName, props, children) {\n    super(tagName, props, children);\n    this.__node = null; // 真实DOM引用\n  }\n\n  __initProps() {\n    if(this.props.width !== undefined) {\n      let value = parseInt(this.props.width);\n      if(!isNaN(value) && value > 0) {\n        this.__width = value;\n      }\n    }\n    if(this.props.height !== undefined) {\n      let value = parseInt(this.props.height);\n      if(!isNaN(value) && value > 0) {\n        this.__height = value;\n      }\n    }\n  }\n\n  __genHtml() {\n    let res = `<${this.tagName}`;\n    // 拼接处理属性\n    for(let i = 0, len = this.__props.length; i < len; i++) {\n      let item = this.__props[i];\n      res += renderProp(item[0], item[1]);\n    }\n    res += `></${this.tagName}>`;\n    return res;\n  }\n\n  // 类似touchend/touchcancel这种无需判断是否发生于元素上，直接强制响应\n  __cb(e, force) {\n    if(e.touches && e.touches.length > 1) {\n      return;\n    }\n    let { node } = this;\n    let { x, y, top, right } = node.getBoundingClientRect();\n    x = x || top || 0;\n    y = y || right || 0;\n    let { clientX, clientY } = e.touches ? (e.touches[0] || {}) : e;\n    x = clientX - x;\n    y = clientY - y;\n    this.__emitEvent({\n      event: e,\n      x,\n      y,\n      covers: [],\n    }, force);\n  }\n\n  __initEvent() {\n    let { node } = this;\n    ['click', 'dblclick', 'mousedown', 'mousemove', 'mouseup', 'touchstart', 'touchmove', 'touchend', 'touchcancel'].forEach(type => {\n      node.addEventListener(type, e => {\n        this.__cb(e, ['touchend', 'touchcancel'].indexOf(type) > -1);\n      });\n    });\n  }\n\n  appendTo(dom) {\n    dom = getDom(dom);\n    this.__initProps();\n    // 已有root节点\n    if(dom.nodeName.toUpperCase() === this.tagName.toUpperCase()) {\n      this.__node = dom;\n      if(this.width) {\n        dom.setAttribute('width', this.width);\n      }\n      if(this.height) {\n        dom.setAttribute('height', this.height);\n      }\n    }\n    // 没有canvas/svg节点则生成一个新的\n    else {\n      this.__node = dom.querySelector(this.tagName);\n      if(!this.__node) {\n        dom.innerHTML = this.__genHtml();\n        this.__node = dom.querySelector(this.tagName);\n      }\n    }\n    this.__uuid = this.__node.__uuid || uuid++;\n    this.__defs = Defs.getInstance(this.__uuid);\n    this.__defs.clear();\n    // 没有设置width/height则采用css计算形式\n    if(!this.width || !this.height) {\n      let css = window.getComputedStyle(dom, null);\n      if(!this.width) {\n        this.__width = parseInt(css.getPropertyValue('width'));\n        dom.setAttribute('width', this.width);\n      }\n      if(!this.height) {\n        this.__height = parseInt(css.getPropertyValue('height'));\n        dom.setAttribute('height', this.height);\n      }\n    }\n    // 只有canvas有ctx，svg用真实dom\n    let renderMode;\n    if(this.tagName === 'canvas') {\n      this.__ctx = this.__node.getContext('2d');\n      this.__ctx.clearRect(0, 0, this.width, this.height);\n      renderMode = mode.CANVAS;\n    }\n    else if(this.tagName === 'svg') {\n      renderMode = mode.SVG;\n    }\n    // canvas/svg作为根节点一定是block或flex，不会是inline\n    let { style } = this;\n    if(['flex', 'block'].indexOf(style.display) === -1) {\n      style.display = 'block';\n    }\n    // 同理position不能为absolute\n    if(style.position === 'absolute') {\n      style.position = 'static';\n    }\n    this.__traverse(this.__ctx, this.__defs, renderMode);\n    // canvas的宽高固定初始化\n    style.width = this.width;\n    style.height = this.height;\n    this.__initStyle();\n    this.__layout({\n      x: 0,\n      y: 0,\n      w: this.width,\n      h: this.height,\n    });\n    this.__layoutAbs(this);\n    this.render(renderMode);\n    if(renderMode === mode.SVG) {\n      let nvd = this.virtualDom;\n      let nd = this.__defs.value;\n      nvd.defs = nd;\n      if(this.node.__karasInit) {\n        domDiff(this.node, this.node.__ovd, nvd);\n      } else {\n        this.node.innerHTML = util.joinVirtualDom(nvd, nd);\n      }\n      this.node.__ovd = nvd;\n      this.node.__od = nd;\n    }\n    if(!this.node.__karasInit) {\n      this.node.__karasInit = true;\n      this.__initEvent();\n    }\n  }\n\n  get node() {\n    return this.__node;\n  }\n  get imageData() {\n    return this.__imageData;\n  }\n}\n\nexport default Root;\n","import Geom from './Geom';\nimport mode from '../mode';\n\nclass Line extends Geom {\n  constructor(tagName, props) {\n    super(tagName, props);\n    // start和end表明线段的首尾坐标，control表明控制点坐标\n    this.__start = [];\n    this.__end = [];\n    this.__control = [];\n    if(Array.isArray(this.props.start)) {\n      this.__start = this.props.start;\n    }\n    if(Array.isArray(this.props.end)) {\n      this.__end = this.props.end;\n    }\n    if(Array.isArray(this.props.control)) {\n      this.__control = this.props.control;\n    }\n  }\n\n  render(renderMode) {\n    super.render(renderMode);\n    let { rx: x, ry: y, width, height, mlw, mtw, plw, ptw, style, ctx, start, end, control, virtualDom } = this;\n    if(start.length < 2 || end.length < 2) {\n      return;\n    }\n    let {\n      display,\n      borderTopWidth,\n      borderRightWidth,\n      borderBottomWidth,\n      borderLeftWidth,\n      stroke,\n      strokeWidth,\n      strokeDasharray,\n    } = style;\n    if(display === 'none') {\n      return;\n    }\n    let originX = x + borderLeftWidth.value + mlw + plw;\n    let originY = y + borderTopWidth.value + mtw + ptw;\n    let x1 = originX + start[0] * width;\n    let y1 = originY + start[1] * height;\n    let x2 = originX + end[0] * width;\n    let y2 = originY + end[1] * height;\n    let curve = 0;\n    let cx1, cy1, cx2, cy2;\n    if(Array.isArray(control[0])) {\n      curve++;\n      cx1 = originX + control[0][0] * width;\n      cy1 = originY + control[0][1] * height;\n    }\n    if(Array.isArray(control[1])) {\n      curve++;\n      cx2 = originX + control[1][0] * width;\n      cy2 = originY + control[1][1] * height;\n    }\n    if(renderMode === mode.CANVAS) {\n      ctx.strokeStyle = stroke;\n      ctx.lineWidth = strokeWidth;\n      ctx.setLineDash(strokeDasharray);\n      ctx.beginPath();\n      ctx.moveTo(x1, y1);\n      if(curve === 2) {\n        ctx.bezierCurveTo(cx1, cy1, cx2, cy2, x2, y2);\n      }\n      else if(curve === 1) {\n        ctx.quadraticCurveTo(cx1, cy1, x2, y2);\n      }\n      else {\n        ctx.lineTo(x2, y2);\n      }\n      ctx.stroke();\n      ctx.closePath();\n    }\n    else if(renderMode === mode.SVG) {\n      if(curve === 2) {\n        virtualDom.children.push({\n          type: 'item',\n          tagName: 'path',\n          props: [\n            ['d', `M${x1} ${y1} C${cx1} ${cy1} ${cx2} ${cy2} ${x2} ${y2}`],\n            ['fill', 'none'],\n            ['stroke', stroke],\n            ['stroke-width', strokeWidth],\n            ['stroke-dasharray', strokeDasharray]\n          ],\n        });\n      }\n      else if(curve === 1) {\n        virtualDom.children.push({\n          type: 'item',\n          tagName: 'path',\n          props: [\n            ['d', `M${x1} ${y1} Q${cx1} ${cy1} ${x2} ${y2}`],\n            ['fill', 'none'],\n            ['stroke', stroke],\n            ['stroke-width', strokeWidth],\n            ['stroke-dasharray', strokeDasharray]\n          ],\n        });\n      }\n      else {\n        virtualDom.children.push({\n          type: 'item',\n          tagName: 'line',\n          props: [\n            ['x1', x1],\n            ['y1', y1],\n            ['x2', x2],\n            ['y2', y2],\n            ['stroke', stroke],\n            ['stroke-width', strokeWidth],\n            ['stroke-dasharray', strokeDasharray]\n          ],\n        });\n      }\n    }\n  }\n\n  get start() {\n    return this.__start;\n  }\n  get end() {\n    return this.__end;\n  }\n  get control() {\n    return this.__control;\n  }\n}\n\nexport default Line;\n","import Geom from './Geom';\nimport mode from '../mode';\n\nclass Polyline extends Geom {\n  constructor(tagName, props) {\n    super(tagName, props);\n    // 折线所有点的列表\n    this.__points = [];\n    if(Array.isArray(this.props.points)) {\n      this.__points = this.props.points;\n    }\n    // 原点位置，4个角，默认左下\n    if(['TOP_LEFT', 'TOP_RIGHT', 'BOTTOM_LEFT', 'BOTTOM_RIGHT'].indexOf(this.props.origin) > -1) {\n      this.__origin = this.props.origin;\n    }\n    else {\n      this.__origin = 'BOTTOM_LEFT';\n    }\n  }\n\n  render(renderMode) {\n    super.render(renderMode);\n    let { rx: x, ry: y, width, height, mlw, mtw, plw, ptw, style, ctx, points, origin, virtualDom } = this;\n    if(points.length < 2) {\n      return;\n    }\n    for(let i = 0, len = points.length; i < len; i++) {\n      if(!Array.isArray(points[i]) || points[i].length < 2) {\n        return;\n      }\n    }\n    let {\n      display,\n      borderTopWidth,\n      borderLeftWidth,\n      stroke,\n      strokeWidth,\n      strokeDasharray,\n    } = style;\n    if(display === 'none') {\n      return;\n    }\n    let originX = x + borderLeftWidth.value + mlw + plw;\n    let originY = y + borderTopWidth.value + mtw + ptw;\n    let pts = this.__pts = [];\n    if(origin === 'TOP_LEFT') {\n      points.forEach(item => {\n        pts.push([\n          originX + item[0] * width,\n          originY + item[1] * height\n        ]);\n      });\n    }\n    else if(origin === 'TOP_RIGHT') {\n      points.forEach(item => {\n        pts.push([\n          originX + width - item[0] * width,\n          originY + item[1] * height\n        ]);\n      });\n    }\n    else if(origin === 'BOTTOM_LEFT') {\n      points.forEach(item => {\n        pts.push([\n          originX + item[0] * width,\n          originY + height - item[1] * height\n        ]);\n      });\n    }\n    else if(origin === 'BOTTOM_RIGHT') {\n      points.forEach(item => {\n        pts.push([\n          originX + width - item[0] * width,\n          originY + height - item[1] * height\n        ]);\n      });\n    }\n    if(renderMode === mode.CANVAS) {\n      ctx.strokeStyle = stroke;\n      ctx.lineWidth = strokeWidth;\n      ctx.setLineDash(strokeDasharray);\n      ctx.beginPath();\n      ctx.moveTo(pts[0][0], originY + pts[0][1]);\n      for(let i = 1, len = pts.length; i < len; i++) {\n        let point = pts[i];\n        ctx.lineTo(point[0], point[1]);\n      }\n      if(strokeWidth && stroke !== 'transparent') {\n        ctx.stroke();\n      }\n      ctx.closePath();\n    }\n    else if(renderMode === mode.SVG) {\n      let points = '';\n      for(let i = 0, len = pts.length; i < len; i++) {\n        let point = pts[i];\n        points += `${point[0]},${point[1]} `;\n      }\n      virtualDom.children.push({\n        type: 'item',\n        tagName: 'polyline',\n        props: [\n          ['points', points],\n          ['fill', 'none'],\n          ['stroke', stroke],\n          ['stroke-width', strokeWidth],\n          ['stroke-dasharray', strokeDasharray]\n        ],\n      });\n    }\n  }\n\n  getPointsByX(x) {\n    let min = Infinity;\n    let len = this.__pts.length;\n    let res = [];\n    for(let i = 0; i < len; i++) {\n      let diff = Math.abs(this.__pts[i][0] - x);\n      if(diff < min) {\n        min = diff;\n      }\n    }\n    for(let i = 0; i < len; i++) {\n      let diff = Math.abs(this.__pts[i][0] - x);\n      if(diff === min) {\n        res.push({\n          index: i,\n          x: this.__pts[i][0],\n          y: this.__pts[i][1],\n        });\n      }\n    }\n    return res;\n  }\n\n  get points() {\n    return this.__points;\n  }\n  get origin() {\n    return this.__origin;\n  }\n}\n\nexport default Polyline;\n","import Geom from './Geom';\nimport mode from '../mode';\n\nclass Polygon extends Geom {\n  constructor(tagName, props) {\n    super(tagName, props);\n    // 所有点的列表\n    this.__points = [];\n    if(Array.isArray(this.props.points)) {\n      this.__points = this.props.points;\n    }\n  }\n\n  render(renderMode) {\n    super.render(renderMode);\n    let { rx: x, ry: y, width, height, mlw, mtw, plw, ptw, style, ctx, points, virtualDom } = this;\n    if(points.length < 3) {\n      return;\n    }\n    for(let i = 0, len = points.length; i < len; i++) {\n      if(!Array.isArray(points[i]) || points[i].length < 2) {\n        return;\n      }\n    }\n    let {\n      display,\n      borderTopWidth,\n      borderLeftWidth,\n      stroke,\n      strokeWidth,\n      strokeDasharray,\n      fill,\n    } = style;\n    if(display === 'none') {\n      return;\n    }\n    let originX = x + borderLeftWidth.value + mlw + plw;\n    let originY = y + borderTopWidth.value + mtw + ptw;\n    points.forEach(item => {\n      item[0] = originX + item[0] * width;\n      item[1] = originY + item[1] * height;\n    });\n    if(renderMode === mode.CANVAS) {\n      ctx.strokeStyle = stroke;\n      ctx.lineWidth = strokeWidth;\n      ctx.fillStyle = fill;\n      ctx.setLineDash(strokeDasharray);\n      ctx.beginPath();\n      ctx.moveTo(points[0][0], originY + points[0][1]);\n      for(let i = 1, len = points.length; i < len; i++) {\n        let point = points[i];\n        ctx.lineTo(point[0], point[1]);\n      }\n      ctx.fill();\n      if(strokeWidth && stroke !== 'transparent') {\n        ctx.stroke();\n      }\n      ctx.closePath();\n    }\n    else if(renderMode === mode.SVG) {\n      let points = '';\n      for(let i = 0, len = points.length; i < len; i++) {\n        let point = points[i];\n        points += `${point[0]},${point[1]} `;\n      }\n      virtualDom.children.push({\n        type: 'item',\n        tagName: 'polygon',\n        props: [\n          ['points', points],\n          ['fill', fill],\n          ['stroke', stroke],\n          ['stroke-width', strokeWidth],\n          ['stroke-dasharray', strokeDasharray]\n        ],\n      });\n    }\n  }\n\n  get points() {\n    return this.__points;\n  }\n}\n\nexport default Polygon;\n","import Geom from './Geom';\nimport mode from '../mode';\n\nconst OFFSET = Math.PI * 0.5;\n\nfunction getCoordByDegree(x, y, r, d) {\n  while(d > 360) {\n    d -= 360;\n  }\n  while(d < 0) {\n    d += 360;\n  }\n  if(d >= 0 && d < 90) {\n    return [\n      x + Math.sin(d * Math.PI / 180) * r,\n      y - Math.cos(d * Math.PI / 180) * r\n    ];\n  }\n  else if(d >= 90 && d < 180) {\n    return [\n      x + Math.cos((d - 90) * Math.PI / 180) * r,\n      y + Math.sin((d - 90) * Math.PI / 180) * r,\n    ];\n  }\n  else if(d >= 180 && d < 270) {\n    return [\n      x - Math.cos((270 - d) * Math.PI / 180) * r,\n      y + Math.sin((270 - d) * Math.PI / 180) * r,\n    ];\n  }\n  else {\n    return [\n      x - Math.sin((360 - d) * Math.PI / 180) * r,\n      y - Math.cos((360 - d) * Math.PI / 180) * r,\n    ];\n  }\n}\n\nclass Sector extends Geom {\n  constructor(tagName, props) {\n    super(tagName, props);\n    // 角度\n    this.__start = 0;\n    this.__end = 0;\n    if(this.props.start) {\n      this.__start = parseFloat(this.props.start);\n      if(isNaN(this.start)) {\n        this.__start = 0;\n      }\n    }\n    if(this.props.end) {\n      this.__end = parseFloat(this.props.end);\n      if(isNaN(this.end)) {\n        this.__end = 0;\n      }\n    }\n    // 半径0~1，默认1\n    this.__r = 1;\n    if(this.props.r) {\n      this.__r = parseFloat(this.props.r);\n      if(isNaN(this.r)) {\n        this.__r = 1;\n      }\n    }\n  }\n\n  render(renderMode) {\n    super.render(renderMode);\n    let { rx: x, ry: y, width, height, mlw, mtw, plw, ptw, style, ctx, start, end, r, virtualDom } = this;\n    if(start === end) {\n      return;\n    }\n    let {\n      display,\n      borderTopWidth,\n      borderLeftWidth,\n      stroke,\n      strokeWidth,\n      strokeDasharray,\n      fill,\n    } = style;\n    if(display === 'none') {\n      return;\n    }\n    let originX = x + borderLeftWidth.value + mlw + plw;\n    let originY = y + borderTopWidth.value + mtw + ptw;\n    originX += width * 0.5;\n    originY += height * 0.5;\n    r *= Math.min(width, height) * 0.5;\n    if(renderMode === mode.CANVAS) {\n      ctx.strokeStyle = stroke;\n      ctx.lineWidth = strokeWidth;\n      ctx.fillStyle = fill;\n      ctx.setLineDash(strokeDasharray);\n      ctx.beginPath();\n      ctx.moveTo(originX, originY);\n      ctx.arc(originX, originY, r, start * Math.PI / 180 - OFFSET, end * Math.PI / 180 - OFFSET);\n      ctx.fill();\n      if(strokeWidth && stroke !== 'transparent') {\n        ctx.stroke();\n      }\n      ctx.closePath();\n    }\n    else if(renderMode === mode.SVG) {\n      let x1, y1, x2, y2;\n      [ x1, y1 ] = getCoordByDegree(originX, originY, r, start);\n      [ x2, y2 ] = getCoordByDegree(originX, originY, r, end);\n      let large = (end - start) > 180 ? 1 : 0;\n      virtualDom.children.push({\n        type: 'item',\n        tagName: 'path',\n        props: [\n          ['d', `M${originX} ${originY} L${x1} ${y1} A${r} ${r} 0 ${large} 1 ${x2} ${y2} z`],\n          ['fill', fill],\n          ['stroke', stroke],\n          ['stroke-width', strokeWidth],\n          ['stroke-dasharray', strokeDasharray]\n        ],\n      });\n    }\n  }\n\n  get start() {\n    return this.__start;\n  }\n  get end() {\n    return this.__end;\n  }\n  get r() {\n    return this.__r;\n  }\n}\n\nexport default Sector;\n","import Geom from './Geom';\nimport mode from '../mode';\n\nclass Rect extends Geom {\n  constructor(tagName, props) {\n    super(tagName, props);\n  }\n\n  render(renderMode) {\n    super.render(renderMode);\n    let { rx: x, ry: y, width, height, mlw, mtw, plw, ptw, style, ctx, virtualDom } = this;\n    let {\n      display,\n      borderTopWidth,\n      borderLeftWidth,\n      stroke,\n      strokeWidth,\n      strokeDasharray,\n      fill,\n    } = style;\n    if(display === 'none') {\n      return;\n    }\n    let originX = x + borderLeftWidth.value + mlw + plw;\n    let originY = y + borderTopWidth.value + mtw + ptw;\n    if(renderMode === mode.CANVAS) {\n      ctx.strokeStyle = stroke;\n      ctx.lineWidth = strokeWidth;\n      ctx.fillStyle = fill;\n      ctx.setLineDash(strokeDasharray);\n      ctx.beginPath();\n      ctx.moveTo(originX, originY);\n      ctx.lineTo(originX + width, originY);\n      ctx.lineTo(originX + width, originY + height);\n      ctx.lineTo(originX, originY + height);\n      ctx.fill();\n      if(strokeWidth && stroke !== 'transparent') {\n        ctx.stroke();\n      }\n      ctx.closePath();\n    }\n    else if(renderMode === mode.SVG) {\n      virtualDom.children.push({\n        type: 'item',\n        tagName: 'rect',\n        props: [\n          ['x', x],\n          ['y', y],\n          ['width', width],\n          ['height', height],\n          ['fill', fill],\n          ['stroke', stroke],\n          ['stroke-width', strokeWidth],\n          ['stroke-dasharray', strokeDasharray]\n        ],\n      });\n    }\n  }\n}\n\nexport default Rect;\n","import Geom from './Geom';\nimport mode from '../mode';\n\nclass Circle extends Geom {\n  constructor(tagName, props) {\n    super(tagName, props);\n    // 半径0~1，默认1\n    this.__r = 1;\n    if(this.props.r) {\n      this.__r = parseFloat(this.props.r);\n      if(isNaN(this.r)) {\n        this.__r = 1;\n      }\n    }\n  }\n\n  render(renderMode) {\n    super.render(renderMode);\n    let { rx: x, ry: y, width, height, mlw, mtw, plw, ptw, style, ctx, r, virtualDom } = this;\n    let {\n      display,\n      borderTopWidth,\n      borderLeftWidth,\n      stroke,\n      strokeWidth,\n      strokeDasharray,\n      fill,\n    } = style;\n    if(display === 'none') {\n      return;\n    }\n    let originX = x + borderLeftWidth.value + mlw + plw;\n    let originY = y + borderTopWidth.value + mtw + ptw;\n    originX += width * 0.5;\n    originY += height * 0.5;\n    r *= Math.min(width, height) * 0.5;\n    if(renderMode === mode.CANVAS) {\n      ctx.strokeStyle = stroke;\n      ctx.lineWidth = strokeWidth;\n      ctx.fillStyle = fill;\n      ctx.setLineDash(strokeDasharray);\n      ctx.beginPath();\n      ctx.arc(originX, originY, r, 0, 2 * Math.PI);\n      if(fill !== 'transparent') {\n        ctx.fill();\n      }\n      if(strokeWidth && stroke !== 'transparent') {\n        ctx.stroke();\n      }\n      ctx.closePath();\n    }\n    else if(renderMode === mode.SVG) {\n      virtualDom.children.push({\n        type: 'item',\n        tagName: 'circle',\n        props: [\n          ['cx', originX],\n          ['cy', originY],\n          ['r', r],\n          ['fill', fill],\n          ['stroke', stroke],\n          ['stroke-width', strokeWidth],\n          ['stroke-dasharray', strokeDasharray]\n        ],\n      });\n    }\n  }\n\n  get r() {\n    return this.__r;\n  }\n}\n\nexport default Circle;\n","import Geom from './Geom';\nimport mode from '../mode';\n\nclass Ellipse extends Geom {\n  constructor(tagName, props) {\n    super(tagName, props);\n    // 半径0~1，默认1\n    this.__rx = 1;\n    if(this.props.rx) {\n      this.__rx = parseFloat(this.props.rx);\n      if(isNaN(this.rx)) {\n        this.__rx = 1;\n      }\n    }\n    this.__ry = 1;\n    if(this.props.ry) {\n      this.__ry = parseFloat(this.props.ry);\n      if(isNaN(this.rx)) {\n        this.__ry = 1;\n      }\n    }\n  }\n\n  render(renderMode) {\n    super.render(renderMode);\n    let { rx: x, ry: y, width, height, mlw, mtw, plw, ptw, style, ctx, rx, ry, virtualDom } = this;\n    let {\n      display,\n      borderTopWidth,\n      borderLeftWidth,\n      stroke,\n      strokeWidth,\n      strokeDasharray,\n      fill,\n    } = style;\n    if(display === 'none') {\n      return;\n    }\n    let originX = x + borderLeftWidth.value + mlw + plw;\n    let originY = y + borderTopWidth.value + mtw + ptw;\n    originX += width * 0.5;\n    originY += height * 0.5;\n    rx *= width * 0.5;\n    ry *= height * 0.5;\n    if(renderMode === mode.CANVAS) {\n      ctx.strokeStyle = stroke;\n      ctx.lineWidth = strokeWidth;\n      ctx.fillStyle = fill;\n      ctx.setLineDash(strokeDasharray);\n      ctx.beginPath();\n      ctx.moveTo(originX, originY);\n      ctx.ellipse && ctx.ellipse(originX, originY, rx, ry, 0, 0, 2 * Math.PI);\n      ctx.fill();\n      if(strokeWidth && stroke !== 'transparent') {\n        ctx.stroke();\n      }\n      ctx.closePath();\n    }\n    else if(renderMode === mode.SVG) {\n      virtualDom.children.push({\n        type: 'item',\n        tagName: 'ellipse',\n        props: [\n          ['cx', originX],\n          ['cy', originY],\n          ['rx', rx],\n          ['ry', ry],\n          ['fill', fill],\n          ['stroke', stroke],\n          ['stroke-width', strokeWidth],\n          ['stroke-dasharray', strokeDasharray]\n        ],\n      });\n    }\n  }\n\n  get rx() {\n    return this.__rx;\n  }\n  get ry() {\n    return this.__ry;\n  }\n}\n\nexport default Ellipse;\n","import Geom from './Geom';\nimport mode from '../mode';\n\nclass Grid extends Geom {\n  constructor(tagName, props) {\n    super(tagName, props);\n    // x,y被分为几格\n    this.__nx = 0;\n    if(this.props.nx) {\n      this.__nx = parseFloat(this.props.nx);\n      if(isNaN(this.nx)) {\n        this.__nx = 0;\n      }\n    }\n    this.__ny = 0;\n    if(this.props.ny) {\n      this.__ny = parseFloat(this.props.ny);\n      if(isNaN(this.ny)) {\n        this.__ny = 0;\n      }\n    }\n  }\n\n  render(renderMode) {\n    super.render(renderMode);\n    let { rx: x, ry: y, width, height, mlw, mtw, plw, ptw, style, ctx, nx, ny, virtualDom } = this;\n    if(width <= 0 || height <= 0) {\n      return;\n    }\n    if(nx < 3 && ny < 3) {\n      return;\n    }\n    let {\n      display,\n      borderTopWidth,\n      borderLeftWidth,\n      stroke,\n      strokeWidth,\n      strokeDasharray,\n    } = style;\n    if(display === 'none') {\n      return;\n    }\n    let originX = x + borderLeftWidth.value + mlw + plw;\n    let originY = y + borderTopWidth.value + mtw + ptw;\n    let endX = originX + width;\n    let endY = originY + height;\n    let lx = [];\n    let ly = [];\n    if(nx >= 3) {\n      let per = width / (nx - 1);\n      for(let i = 0; i < nx; i++) {\n        ly.push(originX + i * per);\n      }\n    }\n    if(ny >= 3) {\n      let per = height / (ny - 1);\n      for(let i = 0; i < ny; i++) {\n        lx.push(originY + i * per);\n      }\n    }\n    if(renderMode === mode.CANVAS) {\n      ctx.strokeStyle = stroke;\n      ctx.lineWidth = strokeWidth;\n      ctx.setLineDash(strokeDasharray);\n      ctx.beginPath();\n      lx.forEach(item => {\n        ctx.moveTo(originX, item);\n        ctx.lineTo(endX, item);\n      });\n      ly.forEach(item => {\n        ctx.moveTo(item, originY);\n        ctx.lineTo(item, endY);\n      });\n      if(strokeWidth && stroke !== 'transparent') {\n        ctx.stroke();\n      }\n      ctx.closePath();\n    }\n    else if(renderMode === mode.SVG) {\n      lx.forEach(item => {\n        virtualDom.children.push({\n          type: 'item',\n          tagName: 'line',\n          props: [\n            ['x1', originX],\n            ['y1', item],\n            ['x2', endX],\n            ['y2', item],\n            ['stroke', stroke],\n            ['stroke-width', strokeWidth],\n            ['stroke-dasharray', strokeDasharray]\n          ],\n        });\n      });\n      ly.forEach(item => {\n        virtualDom.children.push({\n          type: 'item',\n          tagName: 'line',\n          props: [\n            ['x1', item],\n            ['y1', originY],\n            ['x2', item],\n            ['y2', endY],\n            ['stroke', stroke],\n            ['stroke-width', strokeWidth],\n            ['stroke-dasharray', strokeDasharray]\n          ],\n        });\n      });\n    }\n  }\n\n  get nx() {\n    return this.__nx;\n  }\n  get ny() {\n    return this.__ny;\n  }\n  get dash() {\n    return this.__dash;\n  }\n}\n\nexport default Grid;\n","import Dom from './node/Dom';\nimport Root from './node/Root';\nimport mode from './mode';\nimport Geom from './geom/Geom';\nimport Line from './geom/Line';\nimport Polyline from './geom/Polyline';\nimport Polygon from './geom/Polygon';\nimport Sector from './geom/Sector';\nimport Rect from './geom/Rect';\nimport Circle from './geom/Circle';\nimport Ellipse from './geom/Ellipse';\nimport Grid from './geom/Grid';\n\nGeom.register('$line', Line);\nGeom.register('$polyline', Polyline);\nGeom.register('$polygon', Polygon);\nGeom.register('$sector', Sector);\nGeom.register('$rect', Rect);\nGeom.register('$circle', Circle);\nGeom.register('$ellipse', Ellipse);\nGeom.register('$grid', Grid);\n\nlet karas = {\n  render(root, dom) {\n    if(!(root instanceof Root)) {\n      throw new Error('render root muse be canvas or svg');\n    }\n    if(dom) {\n      root.appendTo(dom);\n    }\n    return root;\n  },\n  createVd(tagName, props, children) {\n    if(['canvas', 'svg'].indexOf(tagName) > -1) {\n      return new Root(tagName, props, children);\n    }\n    if(Dom.isValid(tagName)) {\n      return new Dom(tagName, props, children);\n    }\n    throw new Error('can not use marker: ' + tagName);\n  },\n  createGm(tagName, props) {\n    let klass = Geom.getImplement(tagName);\n    return new klass(tagName, props);\n  },\n  createCp(cp, props) {\n    return new cp(props);\n  },\n  Geom,\n  mode,\n};\n\nif(typeof window != 'undefined') {\n  window.karas = karas;\n}\n\nexport default karas;\n"],"names":["div","Node","__x","__y","__ox","__oy","__width","__height","__prev","__next","__ctx","__defs","__parent","__style","__baseLine","__virtualDom","diff","this","x","ox","y","oy","parent","root","CANVAS","SVG","measure","s","style","document","createElement","position","left","top","visibility","body","appendChild","fontSize","innerText","css","window","getComputedStyle","parseFloat","width","AUTO","PX","PERCENT","POSITION","toString","isType","type","obj","call","isNumber","stringify","isNil","v","joinVd","vd","props","forEach","item","tagName","content","children","bb","joinTransform","transform","joinDef","def","uuid","stop","util","isObject","isString","isFunction","isBoolean","isDate","joinSourceArray","arr","res","i","len","length","Array","isArray","encodeHtml","prop","replace","joinVirtualDom","nd","r2d","n","Math","PI","rgb2int","color","charAt","slice","push","parseInt","c","match","arr2hash","hash","list","Object","keys","j","k","hash2arr","identity","matrix","multiply","a","b","row","col","transformPoint","d","vectorProduct","x1","y1","x2","y2","calMatrix","target","tan","sin","cos","pointInQuadrilateral","x3","y3","x4","y4","normalize","w","h","unit","value","getOrigin","transformOrigin","tfo","mergeMatrix","m1","m2","getLinearDeg","deg","exec","unshift","getColorStop","trim","split","p","test","start","end","per","prev","splice","allBefore","allAfter","first","last","c1","c2","r1","g1","b1","a1","r2","g2","b2","a2","l1","abs","l2","r","floor","g","getCsLimit","next","p1","p2","getCsStartLimit","getCsEndLimit","calLinearCoords","cx","cy","x0","y0","calRadialRadius","iw","ih","xl","yl","size","at","indexOf","by","min","sqrt","pow","max","calFitDashed","total","bs","be","smin","smax","dmin","dmax","ps","pd","outer","num","calDashed","m3","m4","bw","renderBorder","renderMode","points","ctx","xom","mode","point","beginPath","fillStyle","moveTo","lineTo","fill","closePath","addBorder","Xom","__props","__tagName","_this","__listener","toLowerCase","__mtw","__mrw","__mbw","__mlw","__ptw","__prw","__pbw","__plw","__matrix","__matrixSelf","__tfo","data","display","marginTop","marginRight","marginBottom","marginLeft","paddingTop","paddingRight","paddingBottom","paddingLeft","__mpWidth","__layoutBlock","__layoutFlex","__layoutInline","mp","fixedWidth","fixedHeight","mlw","mtw","mrw","mbw","plw","ptw","prw","pbw","height","borderTopWidth","borderRightWidth","borderBottomWidth","borderLeftWidth","__renderMode","setTransform","right","bottom","bgg","backgroundGradient","bgc","backgroundColor","btc","borderTopColor","bts","borderTopStyle","brc","borderRightColor","brs","borderRightStyle","bbc","borderBottomColor","bbs","borderBottomStyle","blc","borderLeftColor","bls","borderLeftStyle","__offsetX","__offsetY","rx","ry","btw","brw","bbw","blw","ow","oh","tf","matrixSelf","addTransform","join","gradient","xx0","yy0","xx1","yy1","lg","createLinearGradient","addColorStop","rect","defs","add","addBackground","cx2","cy2","rg","createRadialGradient","border","deg1","atan","deg2","isLast","xx4","yy2","yy4","xx2","e","force","event","covers","listener","outerWidth","outerHeight","cb","childWillResponse","hasOwnProperty","child","isGeom","__emitEvent","willResponseEvent","virtualDom","lhr","car","blr","mdr","lgr","RESET","borderSizing","fontFamily","fontStyle","fontWeight","lineHeight","borderTopLeftRadius","borderTopRightRadius","borderBottomLeftRadius","borderBottomRightRadius","verticalAlign","flexGrow","flexShrink","flexBasis","flexDirection","justifyContent","alignItems","textAlign","stroke","strokeWidth","strokeDasharray","reset","parserOneBorder","direction","key","calUnit","temp","background","flex","borderTop","borderRight","borderBottom","borderLeft","margin","padding","borderRadius","map","arr1","arr2","font","setFontStyle","getBaseLine","normal","LineBox","__content","fillText","CHAR_WIDTH_CACHE","Text","__lineBoxes","__charWidthList","__charWidth","__textWidth","charWidthList","cache","sum","char","mw","measureText","charWidth","isVirtual","maxX","lineBoxes","begin","count","lineBox","_this2","render","textWidth","baseLine","LineGroup","__list","__calBaseLine","IMPLEMENT","Geom","isDirectionRow","main","__preLayout","name","Error","implement","TAG_NAME","INLINE","Dom","__children","__flowChildren","__absChildren","__lineGroups","__flowY","__traverseChildren","_this3","__traverse","text","parentStyle","__initStyle","__measure","flowChildren","__tryLayInline","isRecursion","__calAutoBasis","min2","max2","__layout","__calAbs","Infinity","lineGroups","lineGroup","horizonAlign","growList","shrinkList","basisList","minList","growSum","shrinkSum","basisSum","maxSum","maxCross","isOverflow","shrink","grow","overflow","free","center","between","around","_this4","absChildren","container","flowY","pw","ph","__layoutAbs","w2","h2","width2","height2","widthPx","heightPx","elem","ovd","nvd","cns","childNodes","od","ol","nl","diffDef","diffDefs","diffBb","diffD2D","insertAdjacentHTML","parentNode","removeChild","setAttribute","o","removeAt","insertAt","diffChild","replaceWith","firstChild","lastChild","diffD2G","diffItem","diffT2T","diffG2D","equalArr","getAttribute","diffG2G","obb","nbb","isText","op","removeAttribute","textContent","index","html","Defs","id","Root","__node","undefined","isNaN","touches","node","getBoundingClientRect","clientX","clientY","addEventListener","__cb","dom","querySelector","getDom","__initProps","nodeName","toUpperCase","innerHTML","__genHtml","__uuid","getInstance","clear","getPropertyValue","getContext","clearRect","__karasInit","domDiff","__ovd","__od","__initEvent","__imageData","Line","__start","__end","__control","control","cx1","cy1","originX","originY","curve","strokeStyle","lineWidth","setLineDash","bezierCurveTo","quadraticCurveTo","Polyline","__points","origin","__origin","pts","__pts","Polygon","OFFSET","getCoordByDegree","Sector","__r","arc","large","Rect","Circle","Ellipse","__rx","__ry","ellipse","Grid","__nx","nx","__ny","ny","endX","endY","lx","ly","__dash","register","karas","appendTo","createVd","isValid","createGm","getImplement","createCp","cp"],"mappings":"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"}