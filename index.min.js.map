{"version":3,"file":"index.min.js","sources":["src/mode.js","src/node/Node.js","src/style/unit.js","src/util.js","src/style/transform.js","src/node/Xom.js","src/style/font.js","src/style/reset.js","src/style/css.js","src/node/LineBox.js","src/node/Text.js","src/node/LineGroup.js","src/geom/Geom.js","src/node/Dom.js","src/domDiff.js","src/node/Defs.js","src/node/Root.js","src/geom/Line.js","src/geom/Polyline.js","src/geom/Polygon.js","src/geom/Sector.js","src/geom/Rect.js","src/geom/Circle.js","src/geom/Ellipse.js","src/geom/Grid.js","src/index.js"],"sourcesContent":["const CANVAS = 0;\nconst SVG = 1;\n\nlet div;\n\nexport default {\n  CANVAS,\n  SVG,\n  measure(s, style) {\n    if(!div) {\n      div = document.createElement('div');\n      div.style.position = 'absolute';\n      div.style.left = '99999px';\n      div.style.top = '-99999px';\n      div.style.visibility = 'hidden';\n      document.body.appendChild(div);\n    }\n    div.style.fontSize = style.fontSize + 'px';\n    div.innerText = s;\n    let css = window.getComputedStyle(div, null);\n    return parseFloat(css.width);\n  }\n};\n","class Node {\n  constructor() {\n    this.__x = 0;\n    this.__y = 0;\n    this.__ox = 0; // relative/margin:auto/text-align等造成的偏移量\n    this.__oy = 0;\n    this.__width = 0;\n    this.__height = 0;\n    this.__prev = null;\n    this.__next = null;\n    this.__ctx = null; // canvas的context\n    this.__defs = null; // svg的defs\n    this.__parent = null;\n    this.__style = {}; // style被解析后的k-v形式\n    this.__baseLine = 0;\n    this.__virtualDom = {};\n  }\n\n  __offsetX(diff) {\n    this.__ox += diff;\n  }\n\n  __offsetY(diff) {\n    this.__oy += diff;\n  }\n\n  get x() {\n    return this.__x;\n  }\n  get y() {\n    return this.__y;\n  }\n  get ox() {\n    return this.__ox;\n  }\n  get oy() {\n    return this.__oy;\n  }\n  get rx() {\n    return this.x + this.ox;\n  }\n  get ry() {\n    return this.y + this.oy;\n  }\n  get width() {\n    return this.__width;\n  }\n  get height() {\n    return this.__height;\n  }\n  get outerWidth() {\n    return this.__width;\n  }\n  get outerHeight() {\n    return this.__height;\n  }\n  get prev() {\n    return this.__prev;\n  }\n  get next() {\n    return this.__next;\n  }\n  get parent() {\n    return this.__parent;\n  }\n  get root() {\n    if(this.parent) {\n      return this.parent.root;\n    }\n    return this;\n  }\n  get style() {\n    return this.__style;\n  }\n  get ctx() {\n    return this.__ctx;\n  }\n  get defs() {\n    return this.__defs;\n  }\n  get baseLine() {\n    return this.__baseLine;\n  }\n  get virtualDom() {\n    return this.__virtualDom;\n  }\n}\n\nexport default Node;\n","export default {\n  AUTO: 0,\n  PX: 1,\n  PERCENT: 2,\n  POSITION: 3,\n};\n","let toString = {}.toString;\nfunction isType(type) {\n  return function(obj) {\n    return toString.call(obj) === '[object ' + type + ']';\n  }\n}\n\nlet isNumber = isType('Number');\n\nfunction joinSourceArray(arr) {\n  var res = '';\n  for(var i = 0, len = arr.length; i < len; i++) {\n    var item = arr[i];\n    if(Array.isArray(item)) {\n      res += joinSourceArray(item);\n    }\n    else {\n      res += stringify(item);\n    }\n  }\n  return res;\n}\n\nfunction stringify(s) {\n  if(isNil(s)) {\n    return '';\n  }\n  return s.toString();\n}\n\nfunction encodeHtml(s, prop) {\n  if(prop) {\n    return s.replace(/\"/g, '&quot;');\n  }\n  return s.replace(/&/g, '&amp;').replace(/</g, '&lt;');\n}\n\nfunction isNil(v) {\n  return v === undefined || v === null;\n}\n\nfunction joinVirtualDom(vd, nd) {\n  let s = '<defs>';\n  nd.forEach(item => {\n    s += joinDef(item);\n  });\n  s += '</defs><g>';\n  vd.bb.forEach(item => {\n    s += joinVd(item);\n  });\n  s += '</g><g>';\n  vd.children.forEach(item => {\n    s += joinVd(item);\n  });\n  s += '</g>';\n  return s;\n}\n\nfunction joinVd(vd) {\n  if(vd.type === 'item') {\n    let s = '';\n    vd.props.forEach(item => {\n      s += ` ${item[0]}=\"${item[1]}\"`;\n    });\n    if(vd.tagName === 'text') {\n      return `<text${s}>${vd.content}</text>`;\n    }\n    return `<${vd.tagName}${s}/>`;\n  }\n  else if(vd.type === 'text') {\n    let s = ``;\n    vd.children.forEach(item => {\n      s += joinVd(item);\n    });\n    return `<g>${s}</g>`;\n  }\n  else if(vd.type === 'dom' || vd.type === 'geom') {\n    let s = '<g>';\n    vd.bb.forEach(item => {\n      s += joinVd(item);\n    });\n    s += '</g><g>';\n    vd.children.forEach(item => {\n      s += joinVd(item);\n    });\n    s += '</g>';\n    return `<g transform=\"${joinTransform(vd.transform)}\">${s}</g>`;\n  }\n}\n\nfunction joinTransform(transform) {\n  let s = '';\n  transform.forEach(item => {\n    s += `${item[0]}(${item[1]}) `;\n  });\n  return s;\n}\n\nfunction joinDef(def) {\n  let s = `<${def.tagName} id=\"${def.uuid}\" gradientUnits=\"userSpaceOnUse\"`;\n  def.props.forEach(item => {\n    s += ` ${item[0]}=\"${item[1]}\"`;\n  });\n  s += '>';\n  def.stop.forEach(item => {\n    s += `<stop stop-color=\"${item[0]}\" offset=\"${item[1] * 100}%\"/>`;\n  });\n  s += `</${def.tagName}>`;\n  return s;\n}\n\nfunction r2d(n) {\n  return n * Math.PI / 180;\n}\n\nfunction rgb2int(color) {\n  let res = [];\n  if(color.charAt(0) === '#') {\n    color = color.slice(1);\n    if(color.length === 3) {\n      res.push(parseInt(color.charAt(0) + color.charAt(0), 16));\n      res.push(parseInt(color.charAt(1) + color.charAt(1), 16));\n      res.push(parseInt(color.charAt(2) + color.charAt(2), 16));\n    } else if(color.length === 6) {\n      res.push(parseInt(color.slice(0, 2), 16));\n      res.push(parseInt(color.slice(2, 4), 16));\n      res.push(parseInt(color.slice(4), 16));\n    }\n  }\n  else {\n    let c = color.match(/rgba?\\s*\\(\\s*(\\d+)\\s*,\\s*(\\d+)\\s*,\\s*(\\d+)(?:\\s*,\\s*([\\d.]+))?\\s*\\)/i);\n    if(c) {\n      res = [parseInt(c[1]), parseInt(c[2]), parseInt(c[3])];\n      if(c[4]) {\n        res[3] = parseFloat(c[4]);\n      }\n\n    }\n  }\n  return res;\n}\n\nfunction arr2hash(arr) {\n  let hash = {};\n  for(let i = 0, len = arr.length; i < len; i++) {\n    let item = arr[i];\n    if(Array.isArray(item)) {\n      hash[item[0]] = item[1];\n    }\n    else {\n      for(let list = Object.keys(item), j = list.length - 1; j >= 0; j--) {\n        let k = list[j];\n        hash[k] = item[k];\n      }\n    }\n  }\n  return hash;\n}\n\nfunction hash2arr(hash) {\n  let arr = [];\n  for(let list = Object.keys(hash), i = 0, len = list.length; i < len; i++) {\n    let k = list[i];\n    arr.push([k, hash[k]]);\n  }\n  return arr;\n}\n\nlet util = {\n  isObject: isType('Object'),\n  isString: isType('String'),\n  isFunction: isType('Function'),\n  isNumber,\n  isBoolean: isType('Boolean'),\n  isDate: isType('Date'),\n  stringify,\n  joinSourceArray(arr) {\n    return joinSourceArray(arr);\n  },\n  encodeHtml,\n  isNil,\n  joinVirtualDom,\n  joinVd,\n  joinTransform,\n  joinDef,\n  r2d,\n  rgb2int,\n  arr2hash,\n  hash2arr,\n};\n\nexport default util;\n","import unit from '../style/unit';\nimport util from '../util';\n\nfunction calMatrix(transform, ox, oy) {\n  let matrix = [1, 0, 0, 1, 0, 0];\n  let tx = 0;\n  let ty = 0;\n  let rd = 0;\n  let sdx = 0;\n  let sdy = 0;\n  let sx = 1;\n  let sy = 1;\n  let hasRotate;\n  transform.forEach(item => {\n    let [k, v] = item;\n    if(k === 'translateX') {\n      tx += v;\n      if(hasRotate) {\n        ox -= v;\n      }\n    }\n    else if(k === 'translateY') {\n      ty += v;\n      if(hasRotate) {\n        oy -= v;\n      }\n    }\n    else if(k === 'scaleX') {\n      sx *= v;\n    }\n    else if(k === 'scaleY') {\n      sy *= v;\n    }\n    else if(k === 'skewX') {\n      sdx += v;\n    }\n    else if(k === 'skewY') {\n      sdy += v;\n    }\n    else if(k === 'rotate') {\n      rd += v;\n      hasRotate = true;\n    }\n  });\n  rd = util.r2d(rd);\n  sdx = util.r2d(sdx);\n  sdy = util.r2d(sdy);\n  matrix[0] = sx * Math.cos(rd);\n  matrix[1] = sy * Math.sin(rd) + sy * Math.tan(sdy);\n  matrix[2] = -sx * Math.sin(rd) + sx * Math.tan(sdx);\n  matrix[3] = sy * Math.cos(rd);\n  matrix[4] = (-ox * Math.cos(rd) + oy * Math.sin(rd) + ox) * sx + tx + ox - sx * ox;\n  matrix[5] = (-ox * Math.sin(rd) - oy * Math.cos(rd) + oy) * sy + ty + oy - sy * oy;\n  return matrix;\n}\n\nfunction transformPoint(matrix, x, y) {\n  let [a, b, c, d, e, f] = matrix;\n  return [a * x + c * y + e, b * x + d * y + f];\n}\n\n// 向量积\nfunction vectorProduct(x1, y1, x2, y2) {\n  return x1 * y2 - x2 * y1;\n}\n\nfunction pointInQuadrilateral(x, y, x1, y1, x2, y2, x3, y3, x4, y4, matrix) {\n  if(matrix) {\n    [x1, y1] = transformPoint(matrix, x1, y1);\n    [x2, y2] = transformPoint(matrix, x2, y2);\n    [x3, y3] = transformPoint(matrix, x3, y3);\n    [x4, y4] = transformPoint(matrix, x4, y4);\n    if(vectorProduct(x2 - x1, y2 - y1, x - x1, y - y1) > 0\n      && vectorProduct(x4 - x2, y4 - y2, x - x2, y - y2) > 0\n      && vectorProduct(x3 - x4, y3 - y4, x - x4, y - y4) > 0\n      && vectorProduct(x1 - x3, y1 - y3, x - x3, y - y3) > 0) {\n      return true;\n    }\n  }\n  else {\n    return x >= x1 && y >= y1 && x <= x4 && y <= y4;\n  }\n}\n\nfunction normalize(transform, ox, oy, w, h) {\n  transform.forEach(item => {\n    let [k, v] = item;\n    if(k === 'translateX') {\n      if(v.unit === unit.PERCENT) {\n        item[1] = v.value * w * 0.01;\n      }\n      else {\n        item[1] = v.value;\n      }\n    }\n    else if(k === 'translateY') {\n      if(v.unit === unit.PERCENT) {\n        item[1] = v.value * h * 0.01;\n      }\n      else {\n        item[1] = v.value;\n      }\n    }\n  });\n  return transform;\n}\n\nexport default {\n  calMatrix,\n  pointInQuadrilateral,\n  normalize,\n};\n","import Node from './Node';\nimport mode from '../mode';\nimport unit from '../style/unit';\nimport tf from '../style/transform';\nimport util from '../util';\n\n/* 获取合适的虚线实体空白宽度ps/pd和数量n\n * 总长total，start边长bs，end边长be，内容长w，\n * 实体长范围[smin,smax]，空白长范围[dmin,dmax]\n */\nfunction getFitDashed(total, bs, be, w, smin, smax, dmin, dmax) {\n  let n = 1;\n  let ps = 1;\n  let pd = 1;\n  // 从最大实体空白长开始尝试\n  outer:\n  for(let i = smax; i >= smin; i--) {\n    for(let j = dmax; j >= dmin; j--) {\n      // 已知实体空白长度，n实体和n-1空白组成total，计算获取n数量\n      let per = i + j;\n      let num = Math.floor((total + j) / per);\n      let k = j;\n      // 可能除不尽，此时扩展空白长\n      if(num * per < j + total) {\n        let free = total - num * i;\n        k = free / (num - 1);\n        if(k > dmax) {\n          continue;\n        }\n      }\n      per = i + k;\n      // bs比实体大才有效，因为小的话必定和第一个实体完整相连\n      if(bs > 1 && bs > i) {\n        let mo = bs % per;\n        if(mo > i) {\n          continue;\n        }\n        if(be > 1) {\n          let mo = (bs + w) % per;\n          if(mo > i) {\n            continue;\n          }\n        }\n      }\n      if(be > 1) {\n        let mo = (bs + w) % per;\n        if(mo > i) {\n          continue;\n        }\n      }\n      if(num > 0) {\n        n = num;\n        ps = i;\n        pd = k;\n      }\n      break outer;\n    }\n  }\n  return {\n    n,\n    ps,\n    pd,\n  };\n}\n\n// dashed时n个实线和n-1虚线默认以3:1宽度组成，dotted则是n和n以1:1组成\nfunction getDashed(style, m1, m2, m3, m4, bw) {\n  let total = m4 - m1;\n  let w = m3 - m2;\n  let bs = m2 - m1;\n  let be = m4 - m3;\n  if(style === 'dotted') {\n    return getFitDashed(total, bs, be, w, bw, bw, Math.max(1, bw * 0.25), bw * 2);\n  }\n  else {\n    let { n, ps, pd } = getFitDashed(total, bs, be, w, bw, bw * 3, Math.max(1, bw * 0.25), bw * 2);\n    if(n === 1) {\n      return getFitDashed(total, bs, be, w, bw, bw, Math.max(1, bw * 0.25), bw * 2);\n    }\n    // 降级为dotted\n    return { n, ps, pd };\n  }\n}\n\nfunction renderBorder(renderMode, points, color, ctx, xom) {\n  if(renderMode === mode.CANVAS) {\n    points.forEach(point => {\n      ctx.beginPath();\n      ctx.fillStyle = color;\n      ctx.moveTo(point[0], point[1]);\n      for(let i = 2, len = point.length; i < len; i += 2) {\n        ctx.lineTo(point[i], point[i + 1]);\n      }\n      ctx.fill();\n      ctx.closePath();\n    });\n  }\n  else if(renderMode === mode.SVG) {\n    let s = '';\n    points.forEach(point => {\n      s += `M ${point[0]} ${point[1]}`;\n      for(let i = 2, len = point.length; i < len; i += 2) {\n        s += `L ${point[i]} ${point[i + 1]} `;\n      }\n    });\n    let item = {\n      type: 'item',\n      tagName: 'path',\n      props: [\n        ['d', s],\n        ['fill', color],\n      ],\n    };\n    xom.addBorder([\n      ['d', s],\n      ['fill', color],\n    ]);\n  }\n}\n\n// 当linear-gradient的值超过[0,1]区间限制时，计算其对应区间1的值\nfunction getCsStartLimit(c1, p1, c2, p2, length) {\n  let [ r1, g1, b1, a1 = 1 ] = c1;\n  let [ r2, g2, b2, a2 = 1 ] = c2;\n  let l1 = Math.abs(p1) * length;\n  let l2 = p2 * length;\n  let p = l1 / (l2 + l1);\n  let r = Math.floor(r1 + (r2 - r1) * p);\n  let g = Math.floor(g1 + (g2 - g1) * p);\n  let b = Math.floor(b1 + (b2 - b1) * p);\n  let a = a1 + (a2 - a1) * p;\n  return [r, g, b, a];\n}\n\nfunction getCsEndLimit(c1, p1, c2, p2, length) {\n  let [ r1, g1, b1, a1 = 1 ] = c1;\n  let [ r2, g2, b2, a2 = 1 ] = c2;\n  let l1 = p1 * length;\n  let l2 = p2 * length;\n  let p = (length - l1) / (l2 - l1);\n  let r = Math.floor(r1 + (r2 - r1) * p);\n  let g = Math.floor(g1 + (g2 - g1) * p);\n  let b = Math.floor(b1 + (b2 - b1) * p);\n  let a = a1 + (a2 - a1) * p;\n  return [r, g, b, a];\n}\n\nfunction getCsLimit(first, last, length) {\n  let c1 = util.rgb2int(first[0]);\n  let c2 = util.rgb2int(last[0]);\n  let [ r1, g1, b1, a1 = 1 ] = c1;\n  let [ r2, g2, b2, a2 = 1 ] = c2;\n  let l1 = Math.abs(first[1]) * length;\n  let l2 = last[1] * length;\n  let p = l1 / (l1 + l2);\n  let r = Math.floor(r1 + (r2 - r1) * p);\n  let g = Math.floor(g1 + (g2 - g1) * p);\n  let b = Math.floor(b1 + (b2 - b1) * p);\n  let a = a1 + (a2 - a1) * p;\n  first[0] = `rgba(${r},${g},${b},${a})`;\n  first[1] = 0;\n  p = (length + l1) / (l1 + l2);\n  r = Math.floor(r1 + (r2 - r1) * p);\n  g = Math.floor(g1 + (g2 - g1) * p);\n  b = Math.floor(b1 + (b2 - b1) * p);\n  a = a1 + (a2 - a1) * p;\n  last[0] = `rgba(${r},${g},${b},${a})`;\n  last[1] = 1;\n}\n\n// 获取color-stop区间范围，去除无用值\nfunction getColorStop(v, length) {\n  let list = [];\n  // 先把已经声明距离的换算成[0,1]以数组形式存入，未声明的原样存入\n  for(let i = 1, len = v.length; i < len; i++) {\n    let item = v[i];\n    // 考虑是否声明了位置\n    let arr = item.trim().split(/\\s+/);\n    if(arr.length > 1) {\n      let c = arr[0];\n      let p = arr[1];\n      if(/%$/.test(p)) {\n        list.push([c, parseFloat(p) * 0.01]);\n      }\n      else {\n        list.push([c, parseFloat(p) / length]);\n      }\n    }\n    else {\n      list.push(arr[0]);\n    }\n  }\n  // 首尾不声明默认为[0, 1]\n  if(list.length > 1) {\n    if(!Array.isArray(list[0])) {\n      list[0] = [list[0], 0];\n    }\n    if(!Array.isArray(list[list.length - 1])) {\n      list[list.length - 1] = [list[list.length - 1], 1];\n    }\n  }\n  else if(!Array.isArray(list[0])) {\n    list[0] = [list[0], 0];\n  }\n  // 不是数组形式的是未声明的，需区间计算，找到连续的未声明的，前后的区间平分\n  let start = list[0][1];\n  for(let i = 1, len = list.length; i < len - 1; i++) {\n    let item = list[i];\n    if(Array.isArray(item)) {\n      start = item[1];\n    }\n    else {\n      let j = i + 1;\n      let end = list[list.length - 1][1];\n      for(; j < len - 1; j++) {\n        let item = list[j];\n        if(Array.isArray(item)) {\n          end = item[1];\n          break;\n        }\n      }\n      let num = j - i + 1;\n      let per = (end - start) / num;\n      for(let k = i;k < j; k++) {\n        let item = list[k];\n        list[k] = [item, start + per * (k + 1 - i)];\n      }\n      i = j;\n    }\n  }\n  // 每个不能小于前面的，canvas/svg不能兼容这种情况，需处理\n  for(let i = 1, len = list.length; i < len; i++) {\n    let item = list[i];\n    let prev = list[i - 1];\n    if(item[1] < prev[1]) {\n      item[1] = prev[1];\n    }\n  }\n  // 0之前的和1之后的要过滤掉\n  for(let i = 0, len = list.length; i < len - 1; i++) {\n    let item = list[i];\n    if(item[1] > 1) {\n      list.splice(i + 1);\n      break;\n    }\n  }\n  for(let i = list.length - 1; i > 0; i--) {\n    let item = list[i];\n    if(item[1] < 0) {\n      list.splice(0, i);\n      break;\n    }\n  }\n  // 可能存在超限情况，如在使用px单位超过len或<len时，canvas会报错超过[0,1]区间，需手动换算至区间内\n  let len = list.length;\n  // 在只有1个的情况下可简化\n  if(len === 1) {\n    list[0][1] = 0;\n  }\n  else {\n    // 全部都在[0,1]之外也可以简化\n    let allBefore = true;\n    let allAfter = true;\n    for(let i = len - 1; i >= 0; i--) {\n      let item = list[i];\n      let p = item[1];\n      if(p > 0) {\n        allBefore = false;\n      }\n      if(p < 1) {\n        allAfter = false;\n      }\n    }\n    if(allBefore) {\n      list.splice(0, len - 1);\n      list[0][1] = 0;\n    }\n    else if(allAfter) {\n      list.splice(1);\n      list[0][1] = 0;\n    }\n    // 部分在区间之外需复杂计算\n    else {\n      let first = list[0];\n      let last = list[len - 1];\n      // 只要2个的情况下就是首尾都落在外面\n      if(len === 2) {\n        if(first[1] < 0 && last[1] > 1) {\n          getCsLimit(first, last, length);\n        }\n      }\n      // 只有1个在外面的情况较为容易\n      else {\n        if(first[1] < 0) {\n          let next = list[1];\n          let c1 = util.rgb2int(first[0]);\n          let c2 = util.rgb2int(next[0]);\n          let c = getCsStartLimit(c1, first[1], c2, next[1], length);\n          first[0] = `rgba(${c[0]},${c[1]},${c[2]},${c[3]})`;\n          first[1] = 0;\n        }\n        if(last[1] > 1) {\n          let prev = list[len - 2];\n          let c1 = util.rgb2int(prev[0]);\n          let c2 = util.rgb2int(last[0]);\n          let c = getCsEndLimit(c1, prev[1], c2, last[1], length);\n          last[0] = `rgba(${c[0]},${c[1]},${c[2]},${c[3]})`;\n          last[1] = 1;\n        }\n      }\n    }\n  }\n  // 防止精度计算溢出[0,1]\n  list.forEach(item => {\n    if(item[1] < 0) {\n      item[1] = 0;\n    }\n    else if(item[1] > 1) {\n      item[1] = 1;\n    }\n  });\n  return list;\n}\n\nclass Xom extends Node {\n  constructor(tagName, props) {\n    super();\n    props = props || [];\n    // 构建工具中都是arr，手写可能出现hash情况\n    if(Array.isArray(props)) {\n      this.props = util.arr2hash(props);\n      this.__props = props;\n    }\n    else {\n      this.props = props;\n      this.__props = util.hash2arr(props);\n    }\n    this.__tagName = tagName;\n    this.__style = this.props.style || {}; // style被解析后的k-v形式\n    this.__listener = {};\n    this.__props.forEach(item => {\n      let k = item[0];\n      if(/^on[a-zA-Z]/.test(k)) {\n        this.__listener[k.slice(2).toLowerCase()] = item[1];\n      }\n    });\n    // margin和padding的宽度\n    this.__mtw = 0;\n    this.__mrw = 0;\n    this.__mbw = 0;\n    this.__mlw = 0;\n    this.__ptw = 0;\n    this.__prw = 0;\n    this.__pbw = 0;\n    this.__plw = 0;\n  }\n\n  __layout(data) {\n    let { w } = data;\n    let { style: {\n      display,\n      width,\n      marginTop,\n      marginRight,\n      marginBottom,\n      marginLeft,\n      paddingTop,\n      paddingRight,\n      paddingBottom,\n      paddingLeft,\n    } } = this;\n    if(display === 'none') {\n      return;\n    }\n    if(width && width.unit !== unit.AUTO) {\n      switch(width.unit) {\n        case unit.PX:\n          w = width.value;\n          break;\n        case unit.PERCENT:\n          w *= width.value * 0.01;\n          break;\n      }\n    }\n    this.__mlw = this.__mpWidth(marginLeft, w);\n    this.__mtw = this.__mpWidth(marginTop, w);\n    this.__mrw = this.__mpWidth(marginRight, w);\n    this.__mbw = this.__mpWidth(marginBottom, w);\n    this.__plw = this.__mpWidth(paddingLeft, w);\n    this.__ptw = this.__mpWidth(paddingTop, w);\n    this.__prw = this.__mpWidth(paddingRight, w);\n    this.__pbw = this.__mpWidth(paddingBottom, w);\n    if(display === 'block') {\n      this.__layoutBlock(data);\n    }\n    else if(display === 'flex') {\n      this.__layoutFlex(data);\n    }\n    else if(display === 'inline') {\n      this.__layoutInline(data);\n    }\n  }\n\n  isGeom() {\n    return this.tagName.charAt(0) === '$';\n  }\n\n  // 获取margin/padding的实际值\n  __mpWidth(mp, w) {\n    if(mp.unit === unit.PX) {\n      return mp.value;\n    }\n    else if(mp.unit === unit.PERCENT) {\n      return mp.value * w * 0.01;\n    }\n    return 0;\n  }\n\n  render(renderMode) {\n    this.__renderMode = renderMode;\n    if(renderMode === mode.SVG) {\n      this.__virtualDom = {\n        bb: [],\n        children: [],\n        transform: [],\n      };\n    }\n    let { ctx, style, width, height, mlw, mrw, mtw, mbw, plw, ptw, prw, pbw } = this;\n    // 恢复默认，防止其它matrix影响\n    if(renderMode === mode.CANVAS) {\n      ctx.setTransform(1, 0, 0, 1, 0, 0);\n    }\n    let {\n      display,\n      position,\n      top,\n      right,\n      bottom,\n      left,\n      backgroundGradient: bgg,\n      backgroundColor: bgc,\n      borderTopWidth,\n      borderTopColor: btc,\n      borderTopStyle: bts,\n      borderRightWidth,\n      borderRightColor: brc,\n      borderRightStyle: brs,\n      borderBottomWidth,\n      borderBottomColor: bbc,\n      borderBottomStyle: bbs,\n      borderLeftWidth,\n      borderLeftColor: blc,\n      borderLeftStyle : bls,\n      transform,\n      transformOrigin,\n    } = style;\n    if(display === 'none') {\n      return;\n    }\n    // 除root节点外relative渲染时做偏移，百分比基于父元素，若父元素没有一定高则为0\n    if(position === 'relative' && this.parent) {\n      let { width, height } = this.parent;\n      let h = this.parent.style.height;\n      if(left.unit !== unit.AUTO) {\n        let diff = left.unit === unit.PX ? left.value : left.value * width * 0.01;\n        this.__offsetX(diff);\n      }\n      else if(right.unit !== unit.AUTO) {\n        let diff = right.unit === unit.PX ? right.value : right.value * width * 0.01;\n        this.__offsetX(-diff);\n      }\n      if(top.unit !== unit.AUTO) {\n        let diff = top.unit === unit.PX ? top.value : top.value * height * 0.01 * (h.unit === unit.AUTO ? 0 : 1);\n        this.__offsetY(diff);\n      }\n      else if(bottom.unit !== unit.AUTO) {\n        let diff = bottom.unit === unit.PX ? bottom.value : bottom.value * height * 0.01 * (h.unit === unit.AUTO ? 0 : 1);\n        this.__offsetY(-diff);\n      }\n    }\n    // 使用rx和ry渲染位置，考虑了relative和translate影响\n    let { rx: x, ry: y } = this;\n    let btw = borderTopWidth.value;\n    let brw = borderRightWidth.value;\n    let bbw = borderBottomWidth.value;\n    let blw = borderLeftWidth.value;\n    let x1 = x + mlw;\n    let x2 = x1 + blw;\n    let x3 = x2 + width + plw + prw;\n    let x4 = x3 + brw;\n    let y1 = y + mtw;\n    let y2 = y1 + btw;\n    let y3 = y2 + height + ptw + pbw;\n    let y4 = y3 + bbw;\n    let iw = width + plw + prw;\n    let ih = height + ptw + pbw;\n    // translate相对于自身\n    if(transform) {\n      let x4 = x + mlw + blw + iw + brw + mrw;\n      let y4 = y + mtw + btw + ih + bbw + mbw;\n      let ow = x4 - x;\n      let oh = y4 - y;\n      let tfo = [];\n      transformOrigin.forEach((item, i) => {\n        if(item.unit === unit.PX) {\n          tfo.push(item.value);\n        }\n        else if(item.unit === unit.PERCENT) {\n          tfo.push((i ? y : x) + item.value * (i ? oh : ow) * 0.01);\n        }\n        else if(item.value === 'left') {\n          tfo.push(x);\n        }\n        else if(item.value === 'right') {\n          tfo.push(x4);\n        }\n        else if(item.value === 'top') {\n          tfo.push(y);\n        }\n        else if(item.value === 'bottom') {\n          tfo.push(y + y4);\n        }\n        else {\n          tfo.push(i ? (y + oh * 0.5) : (x + ow * 0.5));\n        }\n      });\n      this.__tox = tfo[0];\n      this.__toy = tfo[1];\n      let list = tf.normalize(transform, tfo[0], tfo[1], ow, oh);\n      let matrix = this.__matrix = tf.calMatrix(list, tfo[0], tfo[1]);\n      if(renderMode === mode.CANVAS) {\n        // TODO: canvas递归transform处理\n        ctx.setTransform(...matrix);\n      } else if(renderMode === mode.SVG) {\n        this.addTransform(['matrix', matrix.join(',')]);\n      }\n    }\n    // 先渲染渐变，没有则背景色\n    if(bgg) {\n      let { k, v } = bgg;\n      if(k === 'linear') {\n        let deg = 180;\n        if(v[0] === 'to top') {\n          deg = 0;\n        }\n        else if(v[0] === 'to top right') {\n          deg = 45;\n        }\n        else if(v[0] === 'to right') {\n          deg = 90;\n        }\n        else if(v[0] === 'to bottom right') {\n          deg = 135;\n        }\n        else if(v[0] === 'to bottom') {\n        }\n        else if(v[0] === 'to bottom left') {\n          deg = 225;\n        }\n        else if(v[0] === 'to left') {\n          deg = 270;\n        }\n        else if(v[0] === 'to top left') {\n          deg = 315;\n        }\n        // 数字角度，没有的话取默认角度\n        else {\n          let match = /([\\d.]+)deg/.exec(v[0]);\n          if(match) {\n            deg = parseFloat(match[1]);\n          }\n          else {\n            v.unshift(null);\n          }\n        }\n        // 需计算角度 https://www.w3cplus.com/css3/do-you-really-understand-css-linear-gradients.html\n        let r = util.r2d(deg);\n        let length = Math.abs(iw * Math.sin(r)) + Math.abs(ih * Math.cos(r));\n        let half = length * 0.5;\n        if(deg >= 360) {\n          deg = deg % 360;\n        }\n        while(deg < 0) {\n          deg += 360;\n        }\n        let cx = x2 + iw * 0.5;\n        let cy = y2 + ih * 0.5;\n        let xx0 = x3;\n        let yy0 = y3;\n        let xx1 = x2;\n        let yy1 = y2;\n        if(deg >= 270) {\n          let r = util.r2d(360 - deg);\n          xx0 = cx + Math.sin(r) * half;\n          yy0 = cy + Math.cos(r) * half;\n          xx1 = cx - Math.sin(r) * half;\n          yy1 = cy - Math.cos(r) * half;\n        }\n        else if(deg >= 180) {\n          let r = util.r2d(deg - 180);\n          xx0 = cx + Math.sin(r) * half;\n          yy0 = cy - Math.cos(r) * half;\n          xx1 = cx - Math.sin(r) * half;\n          yy1 = cy + Math.cos(r) * half;\n        }\n        else if(deg >= 90) {\n          let r = util.r2d(180 - deg);\n          xx0 = cx - Math.sin(r) * half;\n          yy0 = cy - Math.cos(r) * half;\n          xx1 = cx + Math.sin(r) * half;\n          yy1 = cy + Math.cos(r) * half;\n        }\n        else if(deg >= 0) {\n          let r = util.r2d(deg);\n          xx0 = cx - Math.sin(r) * half;\n          yy0 = cy + Math.cos(r) * half;\n          xx1 = cx + Math.sin(r) * half;\n          yy1 = cy - Math.cos(r) * half;\n        }\n        // 计算colorStop\n        let list = getColorStop(v, length);\n        if(renderMode === mode.CANVAS) {\n          let lg = ctx.createLinearGradient(xx0, yy0, xx1, yy1);\n          list.forEach(item => {\n            lg.addColorStop(item[1], item[0]);\n          });\n          ctx.beginPath();\n          ctx.fillStyle = lg;\n          ctx.rect(x2, y2, iw, ih);\n          ctx.fill();\n          ctx.closePath();\n        }\n        else if(renderMode === mode.SVG) {\n          let uuid = this.defs.add({\n            tagName: 'linearGradient',\n            props: [\n              ['x1', xx0],\n              ['y1', yy0],\n              ['x2', xx1],\n              ['y2', yy1]\n            ],\n            stop: list,\n          });\n          this.addBackground([\n            ['x', x2],\n            ['y', y2],\n            ['width', iw],\n            ['height', ih],\n            ['fill', `url(#${uuid})`]\n          ]);\n        }\n      }\n      else if(k === 'radial') {\n        let cx = x2 + iw * 0.5;\n        let cy = y2 + ih * 0.5;\n        let size = 'farthest-corner';\n        let r; // 半径\n        // 申明了形状、圆心、size等\n        if(/circle|ellipse|at|closest|farthest/i.test(v[0])\n          || !/#[0-9a-f]{3,6}/i.test(v[0]) && !/\\brgba?\\(.*\\)/i.test(v[0])) {\n          let i = v[0].indexOf('at');\n          let at;\n          let s;\n          if(i > -1) {\n            at = v[0].slice(i + 2);\n            s = v[0].slice(0, i - 1);\n          }\n          s = /(closest|farthest)-(side|corner)/.exec(s);\n          if(s) {\n            size = s[0];\n          }\n          // 指定宽高后size失效，置null标识\n          else {\n            s = /\\s+(-?[\\d.]+(?:px|%))\\s*(-?[\\d.]+(?:px|%))?/.exec(s);\n            if(s) {\n              size = null;\n              if(s[1].indexOf('px') > -1) {\n                r = parseFloat(s[1]) * 0.5;\n              }\n              else {\n                r = parseFloat(s[1]) * iw * 0.005;\n              }\n            }\n          }\n          if(at) {\n            s = /\\s+(-?[\\d.]+(?:px|%))\\s*(-?[\\d.]+(?:px|%))?/.exec(at);\n            if(s) {\n              if(s[1].indexOf('px') > -1) {\n                cx = x2 + parseFloat(s[1]);\n              }\n              else {\n                cx =  x2 + parseFloat(s[1]) * iw * 0.01;\n              }\n              // y可以省略，此时等同于x\n              let by = s[2] || s[1];\n              if(by.indexOf('px') > -1) {\n                cy = y2 + parseFloat(by);\n              }\n              else {\n                cy = y2 + parseFloat(by) * ih * 0.01;\n              }\n            }\n          }\n        }\n        else {\n          v.unshift(null);\n        }\n        if(size) {\n          if(size === 'closest-side') {\n            // 在边外特殊情况只有end颜色填充\n            if(cx <= x2 || cx >= x3 || cy <= y2 || cy >= y3) {\n              r = 0;\n            }\n            else {\n              let xl;\n              let yl;\n              if(cx < x2 + iw * 0.5) {\n                xl = cx - x2;\n              } else {\n                xl = x3 - cx;\n              }\n              if(cy < y2 + ih * 0.5) {\n                yl = cy - y2;\n              } else {\n                yl = y3 - cy;\n              }\n              r = Math.min(xl, yl);\n            }\n          }\n          else if(size === 'closest-corner') {\n            let xl;\n            let yl;\n            if(cx < x2 + iw * 0.5) {\n              xl = cx - x2;\n            }\n            else {\n              xl = x3 - cx;\n            }\n            if(cy < y2 + ih * 0.5) {\n              yl = cy - y2;\n            }\n            else {\n              yl = y3 - cy;\n            }\n            r = Math.sqrt(Math.pow(xl, 2) + Math.pow(yl, 2));\n          }\n          else if(size === 'farthest-side') {\n            if(cx <= x2) {\n              r = x2 - cx + iw;\n            }\n            else if(cx >= x3) {\n              r = cx - x3 + iw;\n            }\n            else if(cy <= y2) {\n              r = y2 - cy + ih;\n            }\n            else if(cx >= y3) {\n              r = cy - y3 + ih;\n            }\n            else {\n              let xl = Math.max(x3 - cx, cx - x2);\n              let yl = Math.max(y3 - cy, cy - y2);\n              r = Math.max(xl, yl);\n            }\n          }\n          // 默认farthest-corner\n          else {\n            let xl;\n            let yl;\n            if(cx < x2 + iw * 0.5) {\n              xl = x3 - cx;\n            }\n            else {\n              xl = cx - x2;\n            }\n            if(cy < y2 + ih * 0.5) {\n              yl = y3 - cy;\n            }\n            else {\n              yl = cy - y2;\n            }\n            r = Math.sqrt(Math.pow(xl, 2) + Math.pow(yl, 2));\n          }\n        }\n        // 计算colorStop\n        let list = getColorStop(v, r * 2);\n        // 超限情况等同于只显示end的bgc\n        if(r <= 0) {\n          let end = list[list.length - 1];\n          end[1] = 0;\n          list = [end];\n          cx = x2;\n          cy = y2;\n          // 肯定大于最长直径\n          r = iw + ih;\n        }\n        if(renderMode === mode.CANVAS) {\n          let rg = ctx.createRadialGradient(cx, cy, 0, cx, cy, r);\n          list.forEach(item => {\n            rg.addColorStop(item[1], item[0]);\n          });\n          ctx.beginPath();\n          ctx.fillStyle = rg;\n          ctx.rect(x2, y2, iw, ih);\n          ctx.fill();\n          ctx.closePath();\n        }\n        else if(renderMode === mode.SVG) {\n          let uuid = this.defs.add({\n            tagName: 'radialGradient',\n            props: [\n              ['cx', cx],\n              ['cy', cy],\n              ['r', r]\n            ],\n            stop: list,\n          });\n          this.addBackground([\n            ['x', x2],\n            ['y', y2],\n            ['width', iw],\n            ['height', ih],\n            ['fill', `url(#${uuid})`]\n          ]);\n        }\n      }\n    }\n    else if(bgc && bgc !== 'transparent') {\n      if(renderMode === mode.CANVAS) {\n        ctx.beginPath();\n        ctx.fillStyle = bgc;\n        ctx.rect(x2, y2, iw, ih);\n        ctx.fill();\n        ctx.closePath();\n      }\n      else if(renderMode === mode.SVG) {\n        this.addBackground([\n          ['x', x2],\n          ['y', y2],\n          ['width', iw],\n          ['height', ih],\n          ['fill', bgc]\n        ]);\n      }\n    }\n    // 边框需考虑尖角，两条相交边平分45°夹角\n    if(btw > 0 && btc !== 'transparent') {\n      let points = [];\n      if(['dashed', 'dotted'].indexOf(bts) > -1) {\n        // 寻找一个合适的虚线线段长度和之间空白边距长度\n        let { n, ps, pd } = getDashed(bts, x1, x2, x3, x4, btw);\n        if(n <= 1) {\n          points.push([x1, y1, x4, y1, x3, y2, x2, y2]);\n        }\n        else {\n          let deg1 = Math.atan(btw / blw);\n          let deg2 = Math.atan(btw / brw);\n          for(let i = 0; i < n; i++) {\n            // 最后一个可能没有到底，延长之\n            let isLast = i === n - 1;\n            let xx1 = i ? (x1 + ps * i + pd * i) : x1;\n            let xx4 = xx1 + ps;\n            let yy1;\n            let yy2;\n            // 整个和borderLeft重叠\n            if(xx4 < x2) {\n              if(isLast) {\n                points.push([x1, y1, x4, y1, x3, y2, x2, y2]);\n              }\n              else {\n                yy1 = y1 + (xx1 - x1) * Math.tan(deg1);\n                yy2 = y1 + (xx4 - x1) * Math.tan(deg1);\n                points.push([xx1, y1, xx4, y1, xx4, yy2, xx1, yy1]);\n              }\n            }\n            // 整个和borderRight重叠\n            else if(xx1 > x3) {\n              yy1 = y1 + (x4 - xx1) * Math.tan(deg2);\n              yy2 = y1 + (x4 - xx4) * Math.tan(deg2);\n              if(isLast) {\n                points.push([xx1, y1, x4, y1, xx1, yy1]);\n              }\n              else {\n                points.push([xx1, y1, xx4, y1, xx4, yy2, xx1, yy1]);\n              }\n            }\n            // 不被整个重叠的情况再细分\n            else {\n              // 上部分和borderLeft重叠\n              if(xx1 < x2) {\n                yy1 = y1 + (xx1 - x1) * Math.tan(deg1);\n                if(isLast) {\n                  points.push([xx1, y1, x4, y1, x3, y2, x2, y2, xx1, yy1]);\n                }\n                else {\n                  // 下部分和borderRight重叠\n                  if(xx4 > x3) {\n                    points.push([xx1, y1, xx4, y1, x3, y2, x2, y2, xx1, yy1]);\n                  }\n                  // 下部独立\n                  else {\n                    points.push([xx1, y1, xx4, y1, xx4, y2, x2, y2, xx1, yy1]);\n                  }\n                }\n              }\n              // 下部分和borderRight重叠\n              else if(xx4 > x3) {\n                yy1 = y1 + (x4 - xx4) * Math.tan(deg2);\n                // 上部分和borderLeft重叠\n                if(xx1 < x2) {\n                  if(isLast) {\n                    points.push([xx1, y1, x4, y1, x3, y2, x2, y2, xx1, yy1]);\n                  }\n                  else {\n                    points.push([xx1, y1, xx4, y1, xx4, yy1, x3, y2, x2, y2, xx1, yy1]);\n                  }\n                }\n                // 上部独立\n                else {\n                  if(isLast) {\n                    points.push([xx1, y1, x4, y1, x3, y2, xx1, y2]);\n                  }\n                  else {\n                    points.push([xx1, y1, xx4, y1, xx4, yy1, x3, y2, xx1, y2]);\n                  }\n                }\n              }\n              // 完全独立\n              else {\n                if(isLast) {\n                  points.push([xx1, y1, x4, y1, x3, y2, xx1, y2]);\n                }\n                else {\n                  points.push([xx1, y1, xx4, y1, xx4, y2, xx1, y2]);\n                }\n              }\n            }\n          }\n        }\n      }\n      else {\n        points.push([x1, y1, x4, y1, x3, y2, x2, y2]);\n      }\n      renderBorder(renderMode, points, btc, ctx, this);\n    }\n    if(brw > 0 && brc !== 'transparent') {\n      let points = [];\n      if(['dashed', 'dotted'].indexOf(brs) > -1) {\n        // 寻找一个合适的虚线线段长度和之间空白边距长度\n        let { n, ps, pd } = getDashed(brs, y1, y2, y3, y4, brw);\n        if(n <= 1) {\n          points.push([x3, y2, x4, y1, x4, y4, x3, y3]);\n        }\n        else {\n          let deg1 = Math.atan(brw / btw);\n          let deg2 = Math.atan(brw / bbw);\n          for(let i = 0; i < n; i++) {\n            // 最后一个可能没有到底，延长之\n            let isLast = i === n - 1;\n            let yy1 = i ? (y1 + ps * i + pd * i) : y1;\n            let yy4 = yy1 + ps;\n            let xx1;\n            let xx2;\n            // 整个和borderTop重叠\n            if(yy4 < y2) {\n              if(isLast) {\n                points.push([x3, y2, x4, y1, x4, y4, x3, y3]);\n              }\n              else {\n                xx1 = x4 - (yy4 - y1) * Math.tan(deg1);\n                xx2 = x4 - (yy1 - y1) * Math.tan(deg1);\n                points.push([xx1, yy4, xx2, yy1, x4, yy1, x4, yy4]);\n              }\n            }\n            // 整个和borderBottom重叠\n            else if(yy1 > y3) {\n              xx1 = x3 + (yy1 - y3) * Math.tan(deg2);\n              xx2 = x3 + (yy4 - y3) * Math.tan(deg2);\n              if(isLast) {\n                points.push([xx1, yy1, x4, yy1, x4, y4]);\n              }\n              else {\n                points.push([xx1, yy1, x4, yy1, x4, yy4, xx2, yy4]);\n              }\n            }\n            // 不被整个重叠的情况再细分\n            else {\n              // 上部分和borderTop重叠\n              if(yy1 < y2) {\n                xx1 = x3 + (y2 - yy1) * Math.tan(deg1);\n                if(isLast) {\n                  points.push([x3, y2, xx1, yy1, x4, yy1, x4, y4, x3, y4]);\n                }\n                else {\n                  // 下部分和borderBottom重叠\n                  if(yy4 > y3) {\n                    points.push([x3, y2, xx1, yy1, x4, yy1, x4, yy4, xx1, yy4, x3, y3]);\n                  }\n                  // 下部独立\n                  else {\n                    points.push([x3, y2, xx1, yy1, x4, yy1, x4, yy4, x3, yy4]);\n                  }\n                }\n              }\n              // 下部分和borderBottom重叠\n              else if(yy4 > y3) {\n                xx1 = x3 + (yy4 - y3) * Math.tan(deg2);\n                // 上部分和borderTop重叠\n                if(yy1 < y2) {\n                  if(isLast) {\n                    points.push([x3, y2, xx1, yy1, x4, yy1, x4, y4, x3, y3]);\n                  }\n                  else {\n                    points.push([x3, y2, xx1, yy1, x4, yy1, x4, yy4, xx1, yy4, x3, y3]);\n                  }\n                }\n                // 上部独立\n                else {\n                  if(isLast) {\n                    points.push([x3, yy1, x4, yy1, x4, y4, x3, y3]);\n                  }\n                  else {\n                    points.push([x3, yy1, x4, yy1, x4, yy4, xx1, yy4, x3, y3]);\n                  }\n                }\n              }\n              // 完全独立\n              else {\n                if(isLast) {\n                  points.push([x3, yy1, x4, yy1, x4, y4, x3, y3]);\n                }\n                else {\n                  points.push([x3, yy1, x4, yy1, x4, yy4, x3, yy4]);\n                }\n              }\n            }\n          }\n        }\n      }\n      else {\n        points.push([x3, y2, x4, y1, x4, y4, x3, y3]);\n      }\n      renderBorder(renderMode, points, brc, ctx, this);\n    }\n    if(bbw > 0 && bbc !== 'transparent') {\n      let points = [];\n      // 寻找一个合适的虚线线段长度和之间空白边距长度\n      if(['dashed', 'dotted'].indexOf(bbs) > -1) {\n        // 寻找一个合适的虚线线段长度和之间空白边距长度\n        let { n, ps, pd } = getDashed(bbs, x1, x2, x3, x4, bbw);\n        let deg1 = Math.atan(bbw / blw);\n        let deg2 = Math.atan(bbw / brw);\n        for(let i = 0; i < n; i++) {\n          // 最后一个可能没有到底，延长之\n          let isLast = i === n - 1;\n          let xx1 = i ? (x1 + ps * i + pd * i) : x1;\n          let xx4 = xx1 + ps;\n          let yy1;\n          let yy2;\n          // 整个和borderLeft重叠\n          if(xx4 < x2) {\n            if(isLast) {\n              points.push([x1, y4, x2, y3, x3, y3, x4, y4]);\n            }\n            else {\n              yy1 = y4 - (xx1 - x1) * Math.tan(deg1);\n              yy2 = y4 - (xx4 - x1) * Math.tan(deg1);\n              points.push([xx1, yy1, xx4, yy2, xx4, y4, xx1, y4]);\n            }\n          }\n          // 整个和borderRight重叠\n          else if(xx1 > x3) {\n            yy1 = y4 - (xx1 - x1) * Math.tan(deg2);\n            yy2 = y4 - (xx4 - x1) * Math.tan(deg2);\n            if(isLast) {\n              points.push([xx1, yy1, x4, y4, xx1, y4]);\n            }\n            else {\n              points.push([xx1, yy1, xx4, yy2, xx4, y4, xx1, y4]);\n            }\n          }\n          // 不被整个重叠的情况再细分\n          else {\n            // 上部分和borderLeft重叠\n            if(xx1 < x2) {\n              yy1 = y3 + (xx1 - x1) * Math.tan(deg1);\n              if(isLast) {\n                points.push([xx1, yy1, x2, y3, x3, y3, x4, y4, xx1, y4]);\n              }\n              else {\n                // 下部分和borderRight重叠\n                if(xx4 > x3) {\n                  points.push([xx1, yy1, x2, y3, x3, y3, xx4, y4, xx1, y4]);\n                }\n                // 下部独立\n                else {\n                  points.push([xx1, yy1, x2, y3, xx4, y3, xx4, y4, xx1, y4]);\n                }\n              }\n            }\n            // 下部分和borderRight重叠\n            else if(xx4 > x3) {\n              yy1 = y4 - (x4 - xx4) * Math.tan(deg2);\n              // 上部分和borderLeft重叠\n              if(xx1 < x2) {\n                if(isLast) {\n                  points.push([xx1, yy1, x3, y3, x4, y4, xx1, y4]);\n                }\n                else {\n                  points.push([xx1, yy1, x3, y3, xx4, yy1, xx4, y4, xx1, y4]);\n                }\n              }\n              // 上部独立\n              else {\n                if(isLast) {\n                  points.push([xx1, y3, x3, y3, x4, y4, xx1, y4]);\n                }\n                else {\n                  points.push([xx1, y3, x3, y3, xx4, yy1, xx4, y4, xx1, y4]);\n                }\n              }\n            }\n            // 完全独立\n            else {\n              if(isLast) {\n                points.push([xx1, y3, x3, y3, x4, y4, xx1, y4]);\n              }\n              else {\n                points.push([xx1, y3, xx4, y3, xx4, y4, xx1, y4]);\n              }\n            }\n          }\n        }\n      }\n      else {\n        points.push([x1, y4, x2, y3, x3, y3, x4, y4]);\n      }\n      renderBorder(renderMode, points, bbc, ctx, this);\n    }\n    if(blw > 0 && blc !== 'transparent') {\n      let points = [];\n      if(['dashed', 'dotted'].indexOf(bls) > -1) {\n        // 寻找一个合适的虚线线段长度和之间空白边距长度\n        let { n, ps, pd } = getDashed(bls, y1, y2, y3, y4, blw);\n        if(n <= 1) {\n          points.push([x1, y1, x2, y2, x2, y3, x1, y4]);\n        }\n        else {\n          let deg1 = Math.atan(blw / btw);\n          let deg2 = Math.atan(blw / bbw);\n          for(let i = 0; i < n; i++) {\n            // 最后一个可能没有到底，延长之\n            let isLast = i === n - 1;\n            let yy1 = i ? (y1 + ps * i + pd * i) : y1;\n            let yy4 = yy1 + ps;\n            let xx1;\n            let xx2;\n            // 整个和borderTop重叠\n            if(yy4 < y2) {\n              if(isLast) {\n                points.push([x1, y1, x2, y2, x2, y3, x1, y4]);\n              }\n              else {\n                xx1 = x1 + (yy1 - y1) * Math.tan(deg1);\n                xx2 = x1 + (yy4 - y1) * Math.tan(deg1);\n                points.push([x1, yy1, xx1, yy1, xx2, yy4, x1, yy4]);\n              }\n            }\n            // 整个和borderBottom重叠\n            else if(yy1 > y3) {\n              xx1 = x1 + (y4 - yy1) * Math.tan(deg2);\n              xx2 = x1 + (y4 - yy4) * Math.tan(deg2);\n              if(isLast) {\n                points.push([x1, yy1, xx1, yy1, x1, y4]);\n              }\n              else {\n                points.push([x1, yy1, xx1, yy1, xx2, yy4, x1, yy4]);\n              }\n            }\n            // 不被整个重叠的情况再细分\n            else {\n              // 上部分和borderTop重叠\n              if(yy1 < y2) {\n                xx1 = x1 + (yy1 - y1) * Math.tan(deg1);\n                if(isLast) {\n                  points.push([x1, yy1, xx1, yy1, x2, y2, x2, y3, x1, y4]);\n                }\n                else {\n                  // 下部分和borderBottom重叠\n                  if(yy4 > y3) {\n                    points.push([x1, yy1, xx1, yy1, x2, y2, x2, y3, xx1, yy4, x1, yy4]);\n                  }\n                  // 下部独立\n                  else {\n                    points.push([x1, yy1, xx1, yy1, x2, y2, x2, yy4, x1, yy4]);\n                  }\n                }\n              }\n              // 下部分和borderBottom重叠\n              else if(yy4 > y3) {\n                xx1 = x1 + (y4 - yy4) * Math.tan(deg2);\n                // 上部分和borderTop重叠\n                if(yy1 < y2) {\n                  if(isLast) {\n                    points.push([x1, yy1, xx1, yy1, x2, y2, x2, y3, x1, y4]);\n                  }\n                  else {\n                    points.push([x1, yy1, xx1, yy1, x2, y2, x2, y3, xx1, yy4, x1, yy4]);\n                  }\n                }\n                // 上部独立\n                else {\n                  if(isLast) {\n                    points.push([x1, yy1, x2, yy1, x2, y3, x1, y4]);\n                  }\n                  else {\n                    points.push([x1, yy1, x2, yy1, x2, y3, xx1, yy4, x1, yy4]);\n                  }\n                }\n              }\n              // 完全独立\n              else {\n                if(isLast) {\n                  points.push([x1, yy1, x2, yy1, x2, y3, x1, y4]);\n                }\n                else {\n                  points.push([x1, yy1, x2, yy1, x2, yy4, x1, yy4]);\n                }\n              }\n            }\n          }\n        }\n      }\n      else {\n        points.push([x1, y1, x2, y2, x2, y3, x1, y4]);\n      }\n      renderBorder(renderMode, points, blc, ctx, this);\n    }\n  }\n\n  // 先查找到注册了事件的节点，再捕获冒泡判断增加性能\n  __emitEvent(e, force) {\n    let { event: { type }, x, y, covers } = e;\n    let { listener, children, style, outerWidth, outerHeight, matrix } = this;\n    if(style.display === 'none') {\n      return;\n    }\n    let cb;\n    if(listener.hasOwnProperty(type)) {\n      cb = listener[type];\n    }\n    // touchend之类强制的直接通知即可\n    if(force) {\n      children.forEach(child => {\n        if(child instanceof Xom && !child.isGeom()) {\n          child.__emitEvent(e, force);\n        }\n      });\n      cb && cb(e);\n      return;\n    }\n    let childWillResponse;\n    if(!this.isGeom()) {\n      // 先响应absolute/relative高优先级，从后往前遮挡顺序\n      for(let i = children.length - 1; i >= 0; i--) {\n        let child = children[i];\n        if(child instanceof Xom && ['absolute', 'relative'].indexOf(child.style.position) > -1) {\n          if(child.__emitEvent(e)) {\n            childWillResponse = true;\n          }\n        }\n      }\n      // 再看普通流，从后往前遮挡顺序\n      for(let i = children.length - 1; i >= 0; i--) {\n        let child = children[i];\n        if(child instanceof Xom && ['absolute', 'relative'].indexOf(child.style.position) === -1) {\n          if(child.__emitEvent(e)) {\n            childWillResponse = true;\n          }\n        }\n      }\n    }\n    // child触发则parent一定触发，否则判断事件坐标是否在节点内且未被遮挡\n    if(childWillResponse || this.willResponseEvent(e)) {\n      // 根据是否matrix存入遮罩坐标\n      covers.push({\n        x,\n        y,\n        w: outerWidth,\n        h: outerHeight,\n        matrix,\n      });\n      if(!e.target) {\n        e.target = this;\n      }\n      cb && cb(e);\n    }\n  }\n\n  willResponseEvent(e) {\n    let { x, y, covers } = e;\n    let { rx, ry, outerWidth, outerHeight, matrix } = this;\n    let inThis = tf.pointInQuadrilateral(x - rx, y - ry,\n      0, 0,\n      outerWidth,0,\n      0, outerHeight,\n      outerWidth, outerHeight,\n      matrix);\n    if(inThis) {\n      // 不能被遮挡\n      for(let i = 0, len = covers.length; i < len; i++) {\n        let { x: x2, y: y2, w, h, matrix } = covers[i];\n        if(tf.pointInQuadrilateral(x - rx, y - ry,\n          x2 - rx, y2 - ry,\n          x2 - rx + w,y2 - ry,\n          x2 - rx, y2 - ry + h,\n          x2 - rx + w, y2 - ry + h,\n          matrix)\n        ) {\n          return;\n        }\n      }\n      if(!e.target) {\n        e.target = this;\n      }\n      return true;\n    }\n  }\n\n  addBorder(props) {\n    this.virtualDom.bb.push({\n      type: 'item',\n      tagName: 'path',\n      props,\n    });\n  }\n\n  addBackground(props) {\n    this.virtualDom.bb.push({\n      type: 'item',\n      tagName: 'rect',\n      props,\n    });\n  }\n\n  addTransform(props) {\n    this.virtualDom.transform.push(props);\n  }\n\n  get tagName() {\n    return this.__tagName;\n  }\n  get mtw() {\n    return this.__mtw;\n  }\n  get mrw() {\n    return this.__mrw;\n  }\n  get mbw() {\n    return this.__mbw;\n  }\n  get mlw() {\n    return this.__mlw;\n  }\n  get ptw() {\n    return this.__ptw;\n  }\n  get prw() {\n    return this.__prw;\n  }\n  get pbw() {\n    return this.__pbw;\n  }\n  get plw() {\n    return this.__plw;\n  }\n  get outerWidth() {\n    let { mlw, mrw, plw, prw, style: {\n      borderLeftWidth,\n      borderRightWidth,\n    } } = this;\n    return this.width\n      + borderLeftWidth.value\n      + borderRightWidth.value\n      + mlw\n      + mrw\n      + plw\n      + prw;\n  }\n  get outerHeight() {\n    let { mtw, mbw, ptw, pbw, style: {\n      borderTopWidth,\n      borderBottomWidth,\n    } } = this;\n    return this.height\n      + borderTopWidth.value\n      + borderBottomWidth.value\n      + mtw\n      + mbw\n      + ptw\n      + pbw;\n  }\n  get listener() {\n    return this.__listener;\n  }\n  get renderMode() {\n    return this.__renderMode;\n  }\n  get matrix() {\n    return this.__matrix;\n  }\n}\n\nexport default Xom;\n","'use strict';\n\nexport default {\n  arial: {\n    lhr: 1.14990234375, // 默认line-height ratio，(67+1854+434)/2048\n    car: 1.1171875, // content-area ratio，(1854+434)/2048\n    blr: 0.9052734375, // base-line ratio，1854/2048\n    mdr: 0.64599609375, // middle ratio，(1854-1062/2)/2048\n    lgr: 0.03271484375, // line-gap ratio，67/2048\n  },\n};\n","const RESET = {\n  position: 'static',\n  display: 'block',\n  borderSizing: 'content-box',\n  top: 'auto',\n  right: 'auto',\n  bottom: 'auto',\n  left: 'auto',\n  marginTop: 0,\n  marginRight: 0,\n  marginBottom: 0,\n  marginLeft: 0,\n  paddingTop: 0,\n  paddingRight: 0,\n  paddingBottom: 0,\n  paddingLeft: 0,\n  fontSize: 16,\n  fontFamily: 'arial',\n  color: '#000',\n  fontStyle: 'normal',\n  fontWeight: 400,\n  lineHeight: 'normal',\n  borderTopWidth: 0,\n  borderRightWidth: 0,\n  borderBottomWidth: 0,\n  borderLeftWidth: 0,\n  borderTopColor: '#000',\n  borderRightColor: '#000',\n  borderBottomColor: '#000',\n  borderLeftColor: '#000',\n  borderTopStyle: 'solid',\n  borderRightStyle: 'solid',\n  borderBottomStyle: 'solid',\n  borderLeftStyle: 'solid',\n  borderTopLeftRadius: 0,\n  borderTopRightRadius: 0,\n  borderBottomLeftRadius: 0,\n  borderBottomRightRadius: 0,\n  verticalAlign: 'baseline',\n  width: 'auto',\n  height: 'auto',\n  flexGrow: 0,\n  flexShrink: 1,\n  flexBasis: 'auto',\n  flexDirection: 'row',\n  justifyContent: 'flex-start',\n  alignItems: 'stretch',\n  textAlign: 'left',\n  visibility: 'visible',\n  transformOrigin: 'center',\n  fill: '#000',\n  stroke: '#000',\n  strokeWidth: 0,\n  strokeDasharray: [],\n};\n\nlet reset = [];\n\nObject.keys(RESET).forEach(k => {\n  let v = RESET[k];\n  reset.push({\n    k,\n    v,\n  });\n});\n\nexport default reset;\n","import unit from './unit';\nimport font from './font';\nimport reset from './reset';\n\nfunction parserOneBorder(style, direction) {\n  let key = `border${direction}`;\n  if(!style[key]) {\n    return;\n  }\n  let w = /\\b\\d+px\\b/i.exec(style[key]);\n  if(w) {\n    style[key + 'Width'] = w[0];\n  }\n  let s = /\\b(solid|dashed|dotted)\\b/i.exec(style[key]);\n  if(s) {\n    style[key + 'Style'] = s[1];\n  }\n  let c = /#[0-9a-f]{3,6}/i.exec(style[key]);\n  if(c && [4, 7].indexOf(c[0].length) > -1) {\n    style[key + 'Color'] = c[0];\n  }\n  else if(/\\btransparent\\b/i.test(style[key])) {\n    style[key + 'Color'] = 'transparent';\n  }\n  else {\n    c = /rgba?\\(.+\\)/i.exec(style[key]);\n    if(c) {\n      style[key + 'Color'] = c[0];\n    }\n  }\n}\n\nfunction calUnit(obj, k, v) {\n  if(v === 'auto') {\n    obj[k] = {\n      unit: unit.AUTO,\n    };\n  }\n  else if(/px$/.test(v)) {\n    v = parseFloat(v) || 0;\n    obj[k] = {\n      value: v,\n      unit: unit.PX,\n    };\n  }\n  else if(/%$/.test(v)) {\n    // border不支持百分比\n    if(k.toString().indexOf('border') === 0) {\n      obj[k] = {\n        value: 0,\n        unit: unit.PX,\n      };\n    }\n    else {\n      v = parseFloat(v) || 0;\n      obj[k] = {\n        value: v,\n        unit: unit.PERCENT,\n      };\n    }\n  }\n  else {\n    v = parseFloat(v) || 0;\n    obj[k] = {\n      value: v,\n      unit: unit.PX,\n    };\n  }\n  return obj;\n}\n\nfunction normalize(style) {\n  // 默认reset\n  reset.forEach(item => {\n    if(!style.hasOwnProperty(item.k)) {\n      style[item.k] = item.v;\n    }\n  });\n  let temp = style.background;\n  // 处理缩写\n  if(temp) {\n    // 优先gradient，没有再考虑颜色\n    let gradient = /\\b(\\w+)-gradient\\((.+)\\)/.exec(temp);\n    if(gradient) {\n      style.backgroundGradient = {\n        k: gradient[1],\n        v: gradient[2].split(/\\s*,\\s*/),\n      };\n    }\n    else {\n      let bgc = /#[0-9a-f]{3,6}/i.exec(temp);\n      if(bgc && [4, 7].indexOf(bgc[0].length) > -1) {\n        style.backgroundColor = bgc[0];\n      } else {\n        bgc = /rgba?\\(.+\\)/i.exec(temp);\n        if(bgc) {\n          style.backgroundColor = bgc[0];\n        }\n      }\n    }\n  }\n  temp = style.flex;\n  if(temp) {\n    if(temp === 'none') {\n      style.flexGrow = 0;\n      style.flexShrink = 0;\n      style.flexBasis = 'auto';\n    }\n    else if(temp === 'auto') {\n      style.flexGrow = 1;\n      style.flexShrink = 1;\n      style.flexBasis = 'auto';\n    }\n    else if(/^[\\d.]+$/.test(temp)) {\n      style.flexGrow = parseFloat(temp);\n      style.flexShrink = 1;\n      style.flexBasis = 0;\n    }\n    else if(/^[\\d.]+px$/.test(temp)) {}\n    else if(/^[\\d.]+%$/.test(temp)) {}\n    else {\n      style.flexGrow = 0;\n      style.flexShrink = 1;\n      style.flexBasis = 'auto';\n    }\n  }\n  temp = style.border;\n  if(temp) {\n    style.borderTop = style.borderRight = style.borderBottom = style.borderLeft = temp;\n  }\n  temp = style.margin;\n  if(temp) {\n    let match = temp.toString().match(/(-?[\\d.]+(px|%)?)|(auto)/ig);\n    if(match) {\n      if(match.length === 1) {\n        match[3] = match[2] = match[1] = match[0];\n      }\n      else if(match.length === 2) {\n        match[2] = match[0];\n        match[3] = match[1];\n      }\n      else if(match.length === 3) {\n        match[3] = match[1];\n      }\n      style.marginTop = match[0];\n      style.marginRight = match[1];\n      style.marginBottom = match[2];\n      style.marginLeft = match[3];\n    }\n  }\n  temp = style.padding;\n  if(temp) {\n    let match = temp.toString().match(/(-?[\\d.]+(px|%)?)|(auto)/ig);\n    if(match) {\n      if(match.length === 1) {\n        match[3] = match[2] = match[1] = match[0];\n      }\n      else if(match.length === 2) {\n        match[2] = match[0];\n        match[3] = match[1];\n      }\n      else if(match.length === 3) {\n        match[3] = match[1];\n      }\n      style.paddingTop = match[0];\n      style.paddingRight = match[1];\n      style.paddingBottom = match[2];\n      style.paddingLeft = match[3];\n    }\n  }\n  temp = style.borderRadius;\n  if(temp) {\n    style.borderTopRightRadius = style.borderTopLeftRadius = style.borderBottomRightRadius = style.borderBottomLeftRadius = temp;\n  }\n  temp = style.transform;\n  if(temp) {\n    let match = temp.toString().match(/\\w+\\(.+?\\)/g);\n    if(match) {\n      let transform = style.transform = [];\n      match.forEach(item => {\n        let i = item.indexOf('(');\n        let k = item.slice(0, i);\n        let v = item.slice(i + 1, item.length - 1);\n        if(k === 'matrix') {\n          let arr = v.split(/\\s*,\\s*/);\n          arr = arr.map(item => parseFloat(item));\n          if(arr.length > 6) {\n            arr = arr.slice(0, 6);\n          }\n          else if(arr.length < 6) {\n            while(arr.length < 6) {\n              arr.push(0);\n            }\n          }\n          transform.push(['matrix', arr]);\n        }\n        else if(k === 'translateX') {\n          let arr = ['translateX', v];\n          transform.push(calUnit(arr, 1, v));\n        }\n        else if(k === 'translateY') {\n          let arr = ['translateY', v];\n          transform.push(calUnit(arr, 1, v));\n        }\n        else if(k === 'translate') {\n          let arr = v.split(/\\s*,\\s*/);\n          let arr1 = ['translateX', arr[0]];\n          let arr2 = ['translateY', arr[1]];\n          transform.push(calUnit(arr1, 1, v));\n          transform.push(calUnit(arr2, 1, v));\n        }\n        else if(k === 'scaleX') {\n          transform.push(['scaleX', parseFloat(v) || 0]);\n        }\n        else if(k === 'scaleY') {\n          transform.push(['scaleY', parseFloat(v) || 0]);\n        }\n        else if(k === 'scale') {\n          let arr = v.split(/\\s*,\\s*/);\n          transform.push(['scaleX', parseFloat(arr[0]) || 0]);\n          transform.push(['scaleX', parseFloat(arr[1]) || 0]);\n        }\n        else if(k === 'rotateZ' || k === 'rotate') {\n          transform.push(['rotate', parseFloat(v) || 0]);\n        }\n        else if(k === 'skewX') {\n          transform.push(['skewX', parseFloat(v) || 0]);\n        }\n        else if(k === 'skewY') {\n          transform.push(['skewY', parseFloat(v) || 0]);\n        }\n        else if(k === 'skew') {\n          let arr = v.split(/\\s*,\\s*/);\n          transform.push(['skewX', parseFloat(arr[0]) || 0]);\n          transform.push(['skewY', parseFloat(arr[1]) || 0]);\n        }\n      });\n    }\n  }\n  temp = style.transformOrigin;\n  if(temp) {\n    let match = temp.toString().match(/(-?[\\d.]+(px|%)?)|(left|top|right|bottom|center)/ig);\n    if(match) {\n      if(match.length === 1) {\n        match[1] = match[0];\n      }\n      let tfo = [];\n      for(let i = 0; i < 2; i++) {\n        let item = match[i];\n        if(/px$/.test(item)) {\n          tfo.push({\n            value: parseFloat(item),\n            unit: unit.PX,\n          });\n        }\n        else if(/%$/.test(item)) {\n          tfo.push({\n            value: parseFloat(item),\n            unit: unit.PERCENT,\n          });\n        }\n        else {\n          tfo.push({\n            value: item,\n            unit: unit.POSITION,\n          });\n        }\n      }\n      style.transformOrigin = tfo;\n    }\n  }\n  parserOneBorder(style, 'Top');\n  parserOneBorder(style, 'Right');\n  parserOneBorder(style, 'Bottom');\n  parserOneBorder(style, 'Left');\n  // 转化不同单位值为对象标准化\n  [\n    'marginTop',\n    'marginRight',\n    'marginBottom',\n    'marginLeft',\n    'paddingTop',\n    'paddingRight',\n    'paddingBottom',\n    'paddingLeft',\n    'borderTopWidth',\n    'borderRightWidth',\n    'borderBottomWidth',\n    'borderLeftWidth',\n    'borderTopLeftRadius',\n    'borderTopRightRadius',\n    'borderBottomLeftRadius',\n    'borderBottomRightRadius',\n    'top',\n    'right',\n    'bottom',\n    'left',\n    'width',\n    'height',\n    'flexBasis',\n  ].forEach(k => {\n    let v = style[k];\n    calUnit(style, k, v);\n  });\n  // 计算lineHeight为px值，最小范围\n  let lineHeight = style.lineHeight;\n  if(lineHeight === 'normal') {\n    lineHeight = {\n      value: style.fontSize * font.arial.lhr,\n      unit: unit.PX,\n    };\n  }\n  else if(/px$/.test(lineHeight)) {\n    lineHeight = parseFloat(lineHeight);\n    lineHeight = {\n      value: Math.max(style.fontSize, lineHeight),\n      unit: unit.PX,\n    };\n  }\n  // 纯数字比例\n  else {\n    lineHeight = parseFloat(lineHeight) || 'normal';\n    // 非法数字\n    if(lineHeight === 'normal') {\n      lineHeight = {\n        value: style.fontSize * font.arial.lhr,\n        unit: unit.PX,\n      };\n    }\n    else {\n      lineHeight = {\n        value: lineHeight * style.fontSize,\n        unit: unit.PX,\n      };\n    }\n  }\n  style.lineHeight = lineHeight;\n}\n\nfunction setFontStyle(style) {\n  let { fontStyle, fontWeight, fontSize, fontFamily } = style;\n  return `${fontStyle} ${fontWeight} ${fontSize}px/${fontSize}px ${fontFamily}`;\n}\n\nfunction getBaseLine(style) {\n  let normal = style.fontSize * font.arial.lhr;\n  return (style.lineHeight.value - normal) * 0.5 + style.fontSize * font.arial.blr;\n}\n\nexport default {\n  normalize,\n  setFontStyle,\n  getBaseLine,\n};\n","import css from '../style/css';\nimport mode from '../mode';\n\nclass LineBox {\n  constructor(parent, x, y, w, content, style) {\n    this.__parent = parent;\n    this.__x = x;\n    this.__y = y;\n    this.__width = w;\n    this.__content = content;\n    this.__style = style;\n    this.__virtualDom = {};\n  }\n\n  render(renderMode, ctx) {\n    let { style, content, x, y, parent: { ox, oy } } = this;\n    y += css.getBaseLine(style);\n    x += ox;\n    y += oy;\n    if(renderMode === mode.CANVAS) {\n      ctx.fillText(content, x, y);\n    }\n    else if(renderMode === mode.SVG) {\n      this.__virtualDom = {\n        type: 'item',\n        tagName: 'text',\n        props: [\n          ['x', x],\n          ['y', y],\n          ['fill', style.color],\n          ['font-size', `${style.fontSize}px`]\n        ],\n        content,\n      };\n    }\n  }\n\n  __offsetX(diff) {\n    this.__x += diff;\n  }\n\n  __offsetY(diff) {\n    this.__y += diff;\n  }\n\n  get x() {\n    return this.__x;\n  }\n  get y() {\n    return this.__y;\n  }\n  get width() {\n    return this.__width;\n  }\n  get content() {\n    return this.__content;\n  }\n  get style() {\n    return this.__style;\n  }\n  get baseLine() {\n    return css.getBaseLine(this.style);\n  }\n  get virtualDom() {\n    return this.__virtualDom;\n  }\n  get parent() {\n    return this.__parent;\n  }\n}\n\nexport default LineBox;\n","import Node from './Node';\nimport LineBox from './LineBox';\nimport css from '../style/css';\nimport mode from '../mode';\n\nconst CHAR_WIDTH_CACHE = {};\n\nclass Text extends Node {\n  constructor(content) {\n    super();\n    this.__content = content.toString();\n    this.__lineBoxes = [];\n    this.__charWidthList = [];\n    this.__charWidth = 0;\n    this.__textWidth = 0;\n  }\n\n  // 预先计算每个字的宽度\n  __measure() {\n    this.__charWidthList = [];\n    let { ctx, content, style, charWidthList, renderMode } = this;\n    if(renderMode === mode.CANVAS) {\n      ctx.font = css.setFontStyle(style);\n    }\n    let cache = CHAR_WIDTH_CACHE[style.fontSize] = CHAR_WIDTH_CACHE[style.fontSize] || {};\n    let length = content.length;\n    let sum = 0;\n    for(let i = 0; i < length; i++) {\n      let char = content.charAt(i);\n      let mw;\n      if(cache.hasOwnProperty(char)) {\n        mw = cache[char];\n      }\n      else if(renderMode === mode.CANVAS) {\n        mw = cache[char] = ctx.measureText(char).width;\n      }\n      else if(renderMode === mode.SVG) {\n        mw = cache[char] = mode.measure(char, style);\n      }\n      charWidthList.push(mw);\n      sum += mw;\n      this.__charWidth = Math.max(this.charWidth, mw);\n    }\n    this.__textWidth = sum;\n  }\n\n  __layout(data, isVirtual) {\n    let { x, y, w, h } = data;\n    this.__x = x;\n    this.__y = y;\n    let maxX = x;\n    let { ctx, content, style, lineBoxes, charWidthList, renderMode } = this;\n    // 顺序尝试分割字符串为lineBox，形成多行\n    let begin = 0;\n    let i = 0;\n    let count = 0;\n    let length = content.length;\n    while(i < length) {\n      count += charWidthList[i];\n      if (count === w) {\n        let lineBox = new LineBox(this, x, y, count, content.slice(begin, i + 1), style);\n        lineBoxes.push(lineBox);\n        maxX = Math.max(maxX, x + count);\n        y += this.style.lineHeight.value;\n        begin = i + 1;\n        i = begin + 1;\n        count = 0;\n      }\n      else if (count > w) {\n        // 宽度不足时无法跳出循环，至少也要塞个字符形成一行\n        if(i === begin) {\n          i = begin + 1;\n        }\n        let lineBox = new LineBox(this, x, y, count - charWidthList[i], content.slice(begin, i), style);\n        lineBoxes.push(lineBox);\n        maxX = Math.max(maxX, x + count - charWidthList[i]);\n        y += this.style.lineHeight.value;\n        begin = i;\n        i = i + 1;\n        count = 0;\n      }\n      else {\n        i++;\n      }\n    }\n    if(begin < length && begin < i) {\n      count = 0;\n      for(i = begin ;i < length; i++) {\n        count += charWidthList[i];\n      }\n      let lineBox = new LineBox(this, x, y, count, content.slice(begin, length), style);\n      lineBoxes.push(lineBox);\n      maxX = Math.max(maxX, x + count);\n      y += style.lineHeight.value;\n    }\n    this.__width = maxX - x;\n    this.__height = y - data.y;\n    if(isVirtual) {\n      this.__lineBoxes = [];\n    }\n    else {\n      let { textAlign } = style;\n      if(['center', 'right'].indexOf(textAlign) > -1) {\n        lineBoxes.forEach(lineBox => {\n          let diff = this.__width - lineBox.width;\n          if(diff > 0) {\n            lineBox.__offsetX(textAlign === 'center' ? diff * 0.5 : diff);\n          }\n        });\n      }\n    }\n  }\n\n  render(renderMode) {\n    const { ctx, style } = this;\n    if(renderMode === mode.CANVAS) {\n      ctx.font = css.setFontStyle(style);\n      ctx.fillStyle = style.color;\n    }\n    this.lineBoxes.forEach(item => {\n      item.render(renderMode, ctx);\n    });\n    if(renderMode === mode.SVG) {\n      this.__virtualDom = {\n        type: 'text',\n        children: this.lineBoxes.map(lineBox => lineBox.virtualDom),\n      };\n    }\n  }\n\n  __tryLayInline(w) {\n    return w - this.textWidth;\n  }\n\n  __calMaxAndMinWidth() {\n    let n = 0;\n    this.charWidthList.forEach(item => {\n      n = Math.max(n, item);\n    });\n    return { max: this.textWidth, min: n };\n  }\n\n  get content() {\n    return this.__content;\n  }\n  set content(v) {\n    this.__content = v;\n  }\n  get lineBoxes() {\n    return this.__lineBoxes;\n  }\n  get charWidthList() {\n    return this.__charWidthList;\n  }\n  get charWidth() {\n    return this.__charWidth;\n  }\n  get textWidth() {\n    return this.__textWidth;\n  }\n  get baseLine() {\n    let last = this.lineBoxes[this.lineBoxes.length - 1];\n    return last.y - this.y + last.baseLine;\n  }\n  get renderMode() {\n    return this.__renderMode;\n  }\n}\n\nexport default Text;\n","class LineGroup {\n  constructor(x, y) {\n    this.__list = [];\n    this.__x = x;\n    this.__y = y;\n    this.__baseLine = 0;\n  }\n\n  add(item) {\n    this.list.push(item);\n  }\n\n  __calBaseLine() {\n    let baseLine = 0;\n    this.list.forEach(item => {\n      baseLine = Math.max(baseLine, item.baseLine);\n    });\n    return baseLine;\n  }\n\n  verticalAlign() {\n    this.__baseLine = this.__calBaseLine();\n    // 仅当有2个和以上时才需要vertical对齐调整\n    if(this.list.length > 1) {\n      this.list.forEach(item => {\n        if(item.baseLine !== this.baseLine) {\n          item.__offsetY(this.baseLine - item.baseLine);\n        }\n      });\n    }\n  }\n\n  horizonAlign(diff) {\n    this.list.forEach(item => {\n      item.__offsetX(diff);\n    });\n  }\n\n  get list() {\n    return this.__list;\n  }\n  get x() {\n    return this.__x;\n  }\n  get y() {\n    return this.__y;\n  }\n  get width() {\n    let width = 0;\n    this.list.forEach(item => {\n      width += item.width;\n    });\n    return width;\n  }\n  get height() {\n    let height = 0;\n    this.list.forEach(item => {\n      height = Math.max(height, item.height);\n    });\n    return height;\n  }\n  get baseLine() {\n    return this.__baseLine;\n  }\n  get size() {\n    return this.__list.length;\n  }\n}\n\nexport default LineGroup;\n","import Xom from '../node/Xom';\nimport css from '../style/css';\nimport unit from '../style/unit';\nimport mode from '../mode';\n\nconst IMPLEMENT = {};\n\nclass Geom extends Xom {\n  constructor(tagName, props) {\n    super(tagName, props);\n  }\n\n  __initStyle() {\n    css.normalize(this.style);\n  }\n\n  __tryLayInline(w, total) {\n    // 无children，直接以style的width为宽度，不定义则为0\n    let { style: { width } } = this;\n    if(width.unit === unit.PX) {\n      return w - width.value;\n    }\n    else if(width.unit === unit.PERCENT) {\n      return w - total * width.value * 0.01;\n    }\n    return w;\n  }\n\n  __calAutoBasis(isDirectionRow, w, h) {\n    let b = 0;\n    let min = 0;\n    let max = 0;\n    let { style } = this;\n    // 计算需考虑style的属性\n    let {\n      width,\n      height,\n      borderTopWidth,\n      borderRightWidth,\n      borderBottomWidth,\n      borderLeftWidth,\n    } = style;\n    let main = isDirectionRow ? width : height;\n    if(main.unit !== unit.AUTO) {\n      b = max += main.value;\n    }\n    // border也得计算在内\n    if(isDirectionRow) {\n      let w = borderRightWidth.value + borderLeftWidth.value;\n      b += w;\n      max += w;\n      min += w;\n    }\n    else {\n      let h = borderTopWidth.value + borderBottomWidth.value;\n      b += h;\n      max += h;\n      min += h;\n    }\n    return { b, min, max };\n  }\n\n  __layoutBlock(data) {\n    let { x, y, w, h } = data;\n    this.__x = x;\n    this.__y = y;\n    this.__width = w;\n    let { style } = this;\n    let {\n      width,\n      height,\n      borderTopWidth,\n      borderRightWidth,\n      borderBottomWidth,\n      borderLeftWidth,\n    } = style;\n    // 除了auto外都是固定高度\n    let fixedHeight;\n    if(width && width.unit !== unit.AUTO) {\n      switch(width.unit) {\n        case unit.PX:\n          w = width.value;\n          break;\n      }\n    }\n    if(height && height.unit !== unit.AUTO) {\n      fixedHeight = true;\n      switch(height.unit) {\n        case unit.PX:\n          h = height.value;\n          break;\n        case unit.PERCENT:\n          h *= height.value * 0.01;\n          break;\n      }\n    }\n    // border影响x和y和尺寸\n    x += borderLeftWidth.value;\n    data.x = x;\n    y += borderTopWidth.value;\n    data.y = y;\n    w -= borderLeftWidth.value + borderRightWidth.value;\n    h -= borderTopWidth.value + borderBottomWidth.value;\n    this.__width = w;\n    this.__height = fixedHeight ? h : 0;\n  }\n\n  __layoutFlex(data) {\n    // 无children所以等同于block\n    this.__layoutBlock(data);\n  }\n\n  __layoutInline(data) {\n    let { x, y, w, h } = data;\n    this.__x = x;\n    this.__y = y;\n    let { style } = this;\n    let {\n      width,\n      height,\n      borderTopWidth,\n      borderRightWidth,\n      borderBottomWidth,\n      borderLeftWidth,\n    } = style;\n    // 除了auto外都是固定高度\n    let fixedWidth;\n    let fixedHeight;\n    if(width && width.unit !== unit.AUTO) {\n      fixedWidth = true;\n      switch(width.unit) {\n        case unit.PX:\n          w = width.value;\n          break;\n      }\n    }\n    if(height && height.unit !== unit.AUTO) {\n      fixedHeight = true;\n      switch(height.unit) {\n        case unit.PX:\n          h = height.value;\n          break;\n      }\n    }\n    // border影响x和y\n    x += borderLeftWidth.value;\n    data.x = x;\n    y += borderTopWidth.value;\n    data.y = y;\n    w -= borderLeftWidth.value + borderRightWidth.value;\n    h -= borderTopWidth.value + borderBottomWidth.value;\n    // 元素的width不能超过父元素w\n    this.__width = fixedWidth ? w : x - data.x;\n    this.__height = fixedHeight ? h : y - data.y;\n  }\n\n  __calAbs() {\n    return 0;\n  }\n\n  render(renderMode) {\n    super.render(renderMode);\n    if(renderMode === mode.SVG) {\n      this.__virtualDom = {\n        ...super.virtualDom,\n        type: 'geom',\n      };\n    }\n  }\n\n  get tagName() {\n    return this.__tagName;\n  }\n  get baseLine() {\n    return this.__height;\n  }\n\n  static getImplement(name) {\n    if(!IMPLEMENT.hasOwnProperty(name)) {\n      throw new Error(`Geom has not register: ${name}`);\n    }\n    return IMPLEMENT[name];\n  }\n  static register(name, implement) {\n    if(IMPLEMENT.hasOwnProperty(name)) {\n      throw new Error(`Geom has already register: ${name}`);\n    }\n    IMPLEMENT[name] = implement;\n  }\n}\n\nexport default Geom;\n","import Xom from './Xom';\nimport Text from './Text';\nimport LineGroup from './LineGroup';\nimport Geom from '../geom/Geom';\nimport util from '../util';\nimport css from '../style/css';\nimport unit from '../style/unit';\nimport mode from '../mode';\n\nconst TAG_NAME = {\n  'div': true,\n  'span': true,\n};\nconst INLINE = {\n  'span': true,\n};\n\nclass Dom extends Xom {\n  constructor(tagName, props, children) {\n    super(tagName, props);\n    this.__children = children;\n    this.__flowChildren = []; // 非绝对定位孩子\n    this.__absChildren = []; // 绝对定位孩子\n    this.__lineGroups = []; // 一行inline元素组成的LineGroup对象后的存放列表\n    this.__flowY = 0; // 文档流布局结束后的y坐标，供absolute布局默认位置使用\n  }\n\n  /**\n   * 1. 封装string为Text节点\n   * 2. 打平children中的数组，变成一维\n   * 3. 合并相连的Text节点\n   * 4. 检测inline不能包含block和flex\n   * 5. 设置parent和prev/next和ctx和defs和mode\n   */\n  __traverse(ctx, defs, renderMode) {\n    let list = [];\n    this.__traverseChildren(this.children, list, ctx, defs, renderMode);\n    for(let i = list.length - 1; i > 0; i--) {\n      let item = list[i];\n      if(item instanceof Text) {\n        let prev = list[i - 1];\n        if(prev instanceof Text) {\n          prev.content += item.content;\n          list.splice(i, 1);\n        }\n        else {\n          i--;\n        }\n      }\n    }\n    if(this.style.display === 'inline' && this.parent.style.display !== 'flex') {\n      for(let i = list.length - 1; i >= 0; i--) {\n        let item = list[i];\n        if(item instanceof Dom && item.style.display !== 'inline') {\n          throw new Error('inline can not contain block/flex');\n        }\n      }\n    }\n    let prev = null;\n    list.forEach(item => {\n      item.__ctx = ctx;\n      item.__defs = defs;\n      if(prev) {\n        prev.__next = item;\n      }\n      item.__parent = this;\n      item.__prev = prev;\n      if(item instanceof Text || item.style.position !== 'absolute') {\n        this.__flowChildren.push(item);\n      }\n      else {\n        this.__absChildren.push(item);\n      }\n    });\n    this.__children = list;\n  }\n\n  __traverseChildren(children, list, ctx, defs, renderMode) {\n    if(Array.isArray(children)) {\n      children.forEach(item => {\n        this.__traverseChildren(item, list, ctx, defs, renderMode);\n      });\n    }\n    else if(children instanceof Dom) {\n      list.push(children);\n      children.__traverse(ctx, defs, renderMode);\n    }\n    // 图形没有children\n    else if(children instanceof Geom) {\n      list.push(children);\n    }\n    // 排除掉空的文本\n    else if(!util.isNil(children)) {\n      let text = new Text(children);\n      text.__renderMode = renderMode;\n      list.push(text);\n    }\n  }\n\n  // 合并设置style，包括继承和默认值，修改一些自动值和固定值，测量所有文字的宽度\n  __initStyle() {\n    let style = this.__style;\n    // 仅支持flex/block/inline/none\n    if(!style.display || ['flex', 'block', 'inline', 'none'].indexOf(style.display) === -1) {\n      if(INLINE.hasOwnProperty(this.tagName)) {\n        style.display = 'inline';\n      }\n      else {\n        style.display = 'block';\n      }\n    }\n    // 继承父元素样式\n    let parent = this.parent;\n    if(parent) {\n      let parentStyle = parent.style;\n      ['fontSize', 'fontWeight', 'fontStyle', 'lineHeight', 'wordBreak', 'color', 'textAlign'].forEach(k => {\n        if(!style.hasOwnProperty(k) && parentStyle.hasOwnProperty(k)) {\n          style[k] = parentStyle[k];\n        }\n      });\n    }\n    // 标准化处理，默认值、简写属性\n    css.normalize(style);\n    this.children.forEach(item => {\n      if(item instanceof Xom) {\n        item.__initStyle();\n      }\n      else {\n        item.__style = style;\n        // 文字首先测量所有字符宽度\n        item.__measure();\n      }\n    });\n  }\n\n  // 给定父宽度情况下，尝试行内放下后的剩余宽度，为负数即放不下\n  __tryLayInline(w, total) {\n    let { flowChildren, style: { width } } = this;\n    if(width.unit === unit.PX) {\n      return w - width.value;\n    }\n    else if(width.unit === unit.PERCENT) {\n      return w - total * width.value * 0.01;\n    }\n    for(let i = 0; i < flowChildren.length; i++) {\n      // 当放不下时直接返回，无需继续多余的尝试计算\n      if(w < 0) {\n        return w;\n      }\n      let item = flowChildren[i];\n      if(item instanceof Xom) {\n        w -= item.__tryLayInline(w, total);\n      }\n      else {\n        w -= item.textWidth;\n      }\n    }\n    return w;\n  }\n\n  // 设置y偏移值，递归包括children，此举在flex行元素的child进行justify-content对齐用\n  __offsetX(diff) {\n    super.__offsetX(diff);\n    this.flowChildren.forEach(item => {\n      if(item) {\n        item.__offsetX(diff);\n      }\n    });\n  }\n\n  // 设置y偏移值，递归包括children，此举在初步确定inline布局后设置元素vertical-align用\n  __offsetY(diff) {\n    super.__offsetY(diff);\n    this.flowChildren.forEach(item => {\n      if(item) {\n        item.__offsetY(diff);\n      }\n    });\n  }\n\n  __calAutoBasis(isDirectionRow, w, h, isRecursion) {\n    let b = 0;\n    let min = 0;\n    let max = 0;\n    let { mtw, mrw, mbw, mlw, ptw, prw, pbw, plw, flowChildren, style } = this;\n    // 计算需考虑style的属性\n    let {\n      width,\n      height,\n      borderTopWidth,\n      borderRightWidth,\n      borderBottomWidth,\n      borderLeftWidth,\n    } = style;\n    let main = isDirectionRow ? width : height;\n    if(main.unit === unit.PX) {\n      b = max = main.value;\n      // 递归时children的长度会影响flex元素的最小宽度\n      if(isRecursion) {\n        min = b;\n      }\n    }\n    // 递归children取最大值\n    flowChildren.forEach(item => {\n      if(item instanceof Xom) {\n        let { b: b2, min: min2, max: max2 } = item.__calAutoBasis(isDirectionRow, w, h, true);\n        b = Math.max(b, b2);\n        min = Math.max(min, min2);\n        max = Math.max(max, max2);\n      }\n      else if(isDirectionRow) {\n        min = Math.max(item.charWidth, min);\n        max = Math.max(item.textWidth, max);\n      }\n      else {\n        item.__layout({\n          x: 0,\n          y: 0,\n          w,\n          h,\n        }, true);\n        min = Math.max(min, item.height);\n        max = Math.max(max, item.height);\n      }\n    });\n    // margin/padding/border也得计算在内\n    if(isDirectionRow) {\n      let w = borderRightWidth.value + borderLeftWidth.value + mlw + mrw + plw + prw;\n      b += w;\n      max += w;\n      min += w;\n    }\n    else {\n      let h = borderTopWidth.value + borderBottomWidth.value + mtw + mbw + ptw + pbw;\n      b += h;\n      max += h;\n      min += h;\n    }\n    return { b, min, max };\n  }\n\n  __calAbs(isDirectionRow) {\n    let max = 0;\n    let { mtw, mrw, mbw, mlw, ptw, prw, pbw, plw, flowChildren, style } = this;\n    // 计算需考虑style的属性\n    let {\n      width,\n      height,\n      borderTopWidth,\n      borderRightWidth,\n      borderBottomWidth,\n      borderLeftWidth,\n    } = style;\n    let main = isDirectionRow ? width : height;\n    if(main.unit === unit.PX) {\n      max = main.value;\n    }\n    // 递归children取最大值\n    flowChildren.forEach(item => {\n      if(item instanceof Xom) {\n        let max2 = item.__calAbs(isDirectionRow);\n        max = Math.max(max, max2);\n      }\n      else if(isDirectionRow) {\n        max = Math.max(item.textWidth, max);\n      }\n      else {\n        item.__layout({\n          x: 0,\n          y: 0,\n          w: Infinity,\n          h: Infinity,\n        }, true);\n        max = Math.max(max, item.height);\n      }\n    });\n    // margin/padding/border也得计算在内\n    if(isDirectionRow) {\n      let w = borderRightWidth.value + borderLeftWidth.value + mlw + mrw + plw + prw;\n      max += w;\n    }\n    else {\n      let h = borderTopWidth.value + borderBottomWidth.value + mtw + mbw + ptw + pbw;\n      max += h;\n    }\n    return max;\n  }\n\n  // 本身block布局时计算好所有子元素的基本位置\n  __layoutBlock(data) {\n    let { x, y, w, h } = data;\n    this.__x = x;\n    this.__y = y;\n    this.__width = w;\n    let { flowChildren, style, lineGroups, mlw, mtw, mrw, mbw, plw, ptw, prw, pbw } = this;\n    let {\n      width,\n      height,\n      marginLeft,\n      marginRight,\n      borderTopWidth,\n      borderRightWidth,\n      borderBottomWidth,\n      borderLeftWidth,\n      textAlign,\n    } = style;\n    // 除了auto外都是固定高度\n    let fixedHeight;\n    if(width && width.unit !== unit.AUTO) {\n      switch(width.unit) {\n        case unit.PX:\n          w = width.value;\n          break;\n        case unit.PERCENT:\n          w *= width.value * 0.01;\n          break;\n      }\n    }\n    if(height && height.unit !== unit.AUTO) {\n      fixedHeight = true;\n      switch(height.unit) {\n        case unit.PX:\n          h = height.value;\n          break;\n        case unit.PERCENT:\n          h *= height.value * 0.01;\n          break;\n      }\n    }\n    // margin/padding/border影响x和y和尺寸\n    x += borderLeftWidth.value + mlw + plw;\n    data.x = x;\n    y += borderTopWidth.value + mtw + ptw;\n    data.y = y;\n    if(width.unit === unit.AUTO) {\n      w -= borderLeftWidth.value + borderRightWidth.value + mlw + mrw + plw + prw;\n    }\n    if(height.unit === unit.AUTO) {\n      h -= borderTopWidth.value + borderBottomWidth.value + mtw + mbw + ptw + pbw;\n    }\n    // 递归布局，将inline的节点组成lineGroup一行\n    let lineGroup = new LineGroup(x, y);\n    flowChildren.forEach(item => {\n      if(item instanceof Xom) {\n        if(item.style.display === 'inline') {\n          // inline开头，不用考虑是否放得下直接放\n          if(x === data.x) {\n            lineGroup.add(item);\n            item.__layout({\n              x,\n              y,\n              w,\n              h,\n            });\n            x += item.outerWidth;\n          }\n          else {\n            // 非开头先尝试是否放得下\n            let fw = item.__tryLayInline(w - x, w);\n            // 放得下继续\n            if(fw >= 0) {\n              item.__layout({\n                x,\n                y,\n                w,\n                h,\n              });\n            }\n            // 放不下处理之前的lineGroup，并重新开头\n            else {\n              lineGroups.push(lineGroup);\n              lineGroup.verticalAlign();\n              x = data.x;\n              y += lineGroup.height;\n              item.__layout({\n                x: data.x,\n                y,\n                w,\n                h,\n              });\n              lineGroup = new LineGroup(x, y);\n            }\n            x += item.outerWidth;\n            lineGroup.add(item);\n          }\n        }\n        else {\n          // block先处理之前可能的lineGroup\n          if(lineGroup.size) {\n            lineGroups.push(lineGroup);\n            lineGroup.verticalAlign();\n            y += lineGroup.height;\n            lineGroup = new LineGroup(data.x, y);\n          }\n          item.__layout({\n            x: data.x,\n            y,\n            w,\n            h,\n          });\n          x = data.x;\n          y += item.outerHeight;\n        }\n      }\n      // 文字和inline类似\n      else {\n        // x开头，不用考虑是否放得下直接放\n        if(x === data.x) {\n          lineGroup.add(item);\n          item.__layout({\n            x,\n            y,\n            w,\n            h,\n          });\n          x += item.width;\n        }\n        else {\n          // 非开头先尝试是否放得下\n          let fw = item.__tryLayInline(w - x, w);\n          // 放得下继续\n          if(fw >= 0) {\n            item.__layout({\n              x,\n              y,\n              w,\n              h,\n            });\n          }\n          // 放不下处理之前的lineGroup，并重新开头\n          else {\n            lineGroups.push(lineGroup);\n            lineGroup.verticalAlign();\n            x = data.x;\n            y += lineGroup.height;\n            item.__layout({\n              x: data.x,\n              y,\n              w,\n              h,\n            });\n            lineGroup = new LineGroup(x, y);\n          }\n          x += item.width;\n          lineGroup.add(item);\n        }\n      }\n    });\n    // 结束后处理可能遗留的最后的lineGroup\n    if(lineGroup.size) {\n      lineGroups.push(lineGroup);\n      lineGroup.verticalAlign();\n      y += lineGroup.height;\n    }\n    // text-align\n    if(['center', 'right'].indexOf(textAlign) > -1) {\n      lineGroups.forEach(lineGroup => {\n        let diff = w - lineGroup.width;\n        if(diff > 0) {\n          lineGroup.horizonAlign(textAlign === 'center' ? diff * 0.5 : diff);\n        }\n      });\n    }\n    this.__width = w;\n    this.__height = fixedHeight ? h : y - data.y;\n    this.__flowY = y;\n    // 处理margin:xx auto居中对齐\n    if(marginLeft.unit === unit.AUTO && marginRight.unit === unit.AUTO && width.unit !== unit.AUTO) {\n      let ow = this.outerWidth;\n      if(ow < data.w) {\n        this.__offsetX((data.w - ow) * 0.5);\n      }\n    }\n  }\n\n  // 弹性布局时的计算位置\n  __layoutFlex(data) {\n    let { x, y, w, h } = data;\n    this.__x = x;\n    this.__y = y;\n    this.__width = w;\n    let { flowChildren, style, mlw, mtw, mrw, mbw, plw, ptw, prw, pbw } = this;\n    let {\n      width,\n      height,\n      flexDirection,\n      borderTopWidth,\n      borderRightWidth,\n      borderBottomWidth,\n      borderLeftWidth,\n      justifyContent,\n      alignItems,\n    } = style;\n    // 除了auto外都是固定高度\n    let fixedWidth;\n    let fixedHeight;\n    if(width && width.unit !== unit.AUTO) {\n      fixedWidth = true;\n      switch(width.unit) {\n        case unit.PX:\n          w = width.value;\n          break;\n        case unit.PERCENT:\n          w *= width.value * 0.01;\n          break;\n      }\n    }\n    if(height && height.unit !== unit.AUTO) {\n      fixedHeight = true;\n      switch(height.unit) {\n        case unit.PX:\n          h = height.value;\n          break;\n        case unit.PERCENT:\n          h *= height.value * 0.01;\n          break;\n      }\n    }\n    // margin/padding/border影响x和y和尺寸\n    x += borderLeftWidth.value + mlw + plw;\n    data.x = x;\n    y += borderTopWidth.value + mtw + ptw;\n    data.y = y;\n    if(width.unit === unit.AUTO) {\n      w -= borderLeftWidth.value + borderRightWidth.value + mlw + mrw + plw + prw;\n    }\n    if(height.unit === unit.AUTO) {\n      h -= borderTopWidth.value + borderBottomWidth.value + mtw + mbw + ptw + pbw;\n    }\n    let isDirectionRow = flexDirection === 'row';\n    // column时height可能为auto，此时取消伸展，退化为类似block布局，但所有子元素强制block\n    if(!isDirectionRow && !fixedHeight) {\n      flowChildren.forEach(item => {\n        if(item instanceof Xom) {\n          const { style, style: { display, flexDirection, width }} = item;\n          // column的flex的child如果是inline，变为block\n          if(display === 'inline') {\n            style.display = 'block';\n          }\n          // 竖向flex的child如果是横向flex，宽度自动的话要等同于父flex的宽度\n          else if(display === 'flex' && flexDirection === 'row' && width.unit === unit.AUTO) {\n            width.value = w;\n            width.unit = unit.PX;\n          }\n          item.__layout({\n            x,\n            y,\n            w,\n            h,\n          });\n          y += item.outerHeight;\n        }\n        else {\n          item.__layout({\n            x,\n            y,\n            w,\n            h,\n          });\n          y += item.outerHeight;\n        }\n      });\n      this.__width = w;\n      this.__height = y - data.y;\n      return;\n    }\n    // 计算伸缩基数\n    let growList = [];\n    let shrinkList = [];\n    let basisList = [];\n    let minList = [];\n    let growSum = 0;\n    let shrinkSum = 0;\n    let basisSum = 0;\n    let maxSum = 0;\n    flowChildren.forEach(item => {\n      if(item instanceof Xom) {\n        let { flexGrow, flexShrink, flexBasis } = item.style;\n        growList.push(flexGrow);\n        shrinkList.push(flexShrink);\n        growSum += flexGrow;\n        shrinkSum += flexShrink;\n        let { b, min, max } = item.__calAutoBasis(isDirectionRow, w, h);\n        // 根据basis不同，计算方式不同\n        if(flexBasis.unit === unit.AUTO) {\n          basisList.push(max);\n          basisSum += max;\n        }\n        else if(flexBasis.unit === unit.PX) {\n          b = flexBasis.value;\n          basisList.push(b);\n          basisSum += b;\n        }\n        else if(flexBasis.unit === unit.PERCENT) {\n          b = (isDirectionRow ? w : h) * flexBasis.value;\n          basisList.push(b);\n          basisSum += b;\n        }\n        maxSum += max;\n        minList.push(min);\n      }\n      else {\n        growList.push(0);\n        shrinkList.push(1);\n        shrinkSum += 1;\n        if(isDirectionRow) {\n          basisList.push(item.textWidth);\n          basisSum += item.textWidth;\n          maxSum += item.textWidth;\n          minList.push(item.charWidth);\n        }\n        else {\n          item.__layout({\n            x: 0,\n            y: 0,\n            w,\n            h,\n          }, true);\n          basisList.push(item.height);\n          basisSum += item.height;\n          maxSum += item.height;\n          minList.push(item.height);\n        }\n      }\n    });\n    let maxCross = 0;\n    // 判断是否超出，决定使用grow还是shrink\n    let isOverflow = maxSum > (isDirectionRow ? w : h);\n    flowChildren.forEach((item, i) => {\n      let main;\n      let shrink = shrinkList[i];\n      let grow = growList[i];\n      // 计算主轴长度\n      if(isOverflow) {\n        let overflow = basisSum - (isDirectionRow ? w : h);\n        main = shrink ? (basisList[i] - overflow * shrink / shrinkSum) : basisList[i];\n      }\n      else {\n        let free = (isDirectionRow ? w : h) - basisSum;\n        main = grow ? (basisList[i] + free * grow / growSum) : basisList[i];\n      }\n      // 主轴长度的最小值不能小于元素的最小长度，比如横向时的字符宽度\n      main = Math.max(main, minList[i]);\n      if(item instanceof Xom) {\n        const { style, mlw, mtw, mrw, mbw, plw, ptw, prw, pbw, style: {\n          display,\n          flexDirection,\n          width,\n          height,\n          borderTopWidth,\n          borderRightWidth,\n          borderBottomWidth,\n          borderLeftWidth,\n        }} = item;\n        if(isDirectionRow) {\n          // row的flex的child如果是inline，变为block\n          if(display === 'inline') {\n            style.display = 'block';\n          }\n          // 横向flex的child如果是竖向flex，高度自动的话要等同于父flex的高度\n          else if(display === 'flex' && flexDirection === 'column' && fixedHeight && height.unit === unit.AUTO) {\n            height.value = h;\n            height.unit = unit.PX;\n          }\n          item.__layout({\n            x,\n            y,\n            w: main,\n            h,\n          })\n        }\n        else {\n          // column的flex的child如果是inline，变为block\n          if(display === 'inline') {\n            style.display = 'block';\n          }\n          // 竖向flex的child如果是横向flex，宽度自动的话要等同于父flex的宽度\n          else if(display === 'flex' && flexDirection === 'row' && width.unit === unit.AUTO) {\n            width.value = w;\n            width.unit = unit.PX;\n          }\n          item.__layout({\n            x,\n            y,\n            w,\n            h: main,\n          });\n        }\n        // 重设因伸缩而导致的主轴长度\n        if(isOverflow && shrink) {\n          if(isDirectionRow) {\n            item.__width = main - mlw - mrw - plw - prw - borderLeftWidth.value - borderRightWidth.value;\n          }\n          else {\n            item.__height = main - mtw - mbw - ptw - pbw - borderTopWidth.value - borderBottomWidth.value;\n          }\n        }\n        else if(!isOverflow && grow) {\n          if(isDirectionRow) {\n            item.__width = main - mlw - mrw - plw - prw - borderLeftWidth.value - borderRightWidth.value;\n          }\n          else {\n            item.__height = main - mtw - mbw - ptw - pbw - borderTopWidth.value - borderBottomWidth.value;\n          }\n        }\n      }\n      else {\n        item.__layout({\n          x,\n          y,\n          w: isDirectionRow ? main : w,\n          h: isDirectionRow ? h : main,\n        });\n      }\n      if(isDirectionRow) {\n        x += item.outerWidth;\n        maxCross = Math.max(maxCross, item.outerHeight);\n      }\n      else {\n        y += item.outerHeight;\n        maxCross = Math.max(maxCross, item.outerWidth);\n      }\n    });\n    // 计算主轴剩余时要用真实剩余空间而不能用伸缩剩余空间\n    let diff = isDirectionRow ? w - x + data.x : h - y + data.y;\n    // 主轴侧轴对齐方式\n    if(!isOverflow && growSum === 0 && diff > 0) {\n      let len = flowChildren.length;\n      if(justifyContent === 'flex-end') {\n        for(let i = 0; i < len; i++) {\n          let child = flowChildren[i];\n          isDirectionRow ? child.__offsetX(diff) : child.__offsetY(diff);\n        }\n      }\n      else if(justifyContent === 'center') {\n        let center = diff * 0.5;\n        for(let i = 0; i < len; i++) {\n          let child = flowChildren[i];\n          isDirectionRow ? child.__offsetX(center) : child.__offsetY(center);\n        }\n      }\n      else if(justifyContent === 'space-between') {\n        let between = diff / (len - 1);\n        for(let i = 1; i < len; i++) {\n          let child = flowChildren[i];\n          isDirectionRow ? child.__offsetX(between * i) : child.__offsetY(between * i);\n        }\n      }\n      else if(justifyContent === 'space-around') {\n        let around = diff / (len + 1);\n        for(let i = 0; i < len; i++) {\n          let child = flowChildren[i];\n          isDirectionRow ? child.__offsetX(around * (i + 1)) : child.__offsetY(around * (i + 1));\n        }\n      }\n    }\n    // 子元素侧轴伸展\n    if(isDirectionRow) {\n      // 父元素固定高度，子元素可能超过，侧轴最大长度取固定高度\n      if(fixedHeight) {\n        maxCross = h;\n      }\n      y += maxCross;\n    }\n    else {\n      if(fixedWidth) {\n        maxCross = w;\n      }\n    }\n    // 侧轴对齐\n    if(alignItems === 'stretch') {\n      // 短侧轴的children伸张侧轴长度至相同，超过的不动，固定宽高的也不动\n      flowChildren.forEach(item => {\n        let { style, mlw, mtw, mrw, mbw, ptw, prw, plw, pbw } = item;\n        if(isDirectionRow) {\n          if(style.height.unit === unit.AUTO) {\n            item.__height = maxCross - mtw - mbw - ptw - pbw\n              - style.borderTopWidth.value\n              - style.borderBottomWidth.value;\n          }\n        }\n        else {\n          if(style.width.unit === unit.AUTO) {\n            item.__width = maxCross - mlw - mrw - plw - prw\n              - borderRightWidth.value\n              - borderLeftWidth.value;\n          }\n        }\n      });\n    }\n    else if(alignItems === 'center') {\n      flowChildren.forEach(item => {\n        let diff = maxCross - item.outerHeight;\n        if(diff > 0) {\n          item.__offsetY(diff * 0.5);\n        }\n      });\n    }\n    else if(alignItems === 'flex-end') {\n      flowChildren.forEach(item => {\n        let diff = maxCross - item.outerHeight;\n        if(diff > 0) {\n          item.__offsetY(diff);\n        }\n      });\n    }\n    this.__width = w;\n    this.__height = fixedHeight ? h : y - data.y;\n    this.__flowY = y;\n  }\n\n  // inline比较特殊，先简单顶部对其，后续还需根据vertical和lineHeight计算y偏移\n  __layoutInline(data) {\n    let { x, y, w, h } = data;\n    this.__x = x;\n    this.__y = y;\n    let maxX = x;\n    let { flowChildren, style, lineGroups, mlw, mtw, mrw, mbw, plw, ptw, prw, pbw } = this;\n    let {\n      width,\n      height,\n      marginLeft,\n      marginRight,\n      borderTopWidth,\n      borderRightWidth,\n      borderBottomWidth,\n      borderLeftWidth,\n      textAlign,\n    } = style;\n    // 除了auto外都是固定高度\n    let fixedWidth;\n    let fixedHeight;\n    if(width && width.unit !== unit.AUTO) {\n      fixedWidth = true;\n      switch(width.unit) {\n        case unit.PX:\n          w = width.value;\n          break;\n        case unit.PERCENT:\n          w *= width.value * 0.01;\n          break;\n      }\n    }\n    if(height && height.unit !== unit.AUTO) {\n      fixedHeight = true;\n      switch(height.unit) {\n        case unit.PX:\n          h = height.value;\n          break;\n        case unit.PERCENT:\n          h *= height.value * 0.01;\n          break;\n      }\n    }\n    // margin/padding/border影响x和y和尺寸\n    x += borderLeftWidth.value + mlw + plw;\n    data.x = x;\n    y += borderTopWidth.value + mtw + ptw;\n    data.y = y;\n    if(width.unit === unit.AUTO) {\n      w -= borderLeftWidth.value + borderRightWidth.value + mlw + mrw + plw + prw;\n    }\n    if(height.unit === unit.AUTO) {\n      h -= borderTopWidth.value + borderBottomWidth.value + mtw + mbw + ptw + pbw;\n    }\n    // 递归布局，将inline的节点组成lineGroup一行\n    let lineGroup = new LineGroup(x, y);\n    flowChildren.forEach(item => {\n      if(item instanceof Xom) {\n        // 绝对定位跳过\n        if(item.style.position === 'absolute') {\n          this.absChildren.push(item);\n          return;\n        }\n        item.style.display = 'inline';\n        // inline开头，不用考虑是否放得下直接放\n        if(x === data.x) {\n          lineGroup.add(item);\n          item.__layout({\n            x,\n            y,\n            w,\n            h,\n          });\n          x += item.outerWidth;\n          maxX = Math.max(maxX, x);\n        }\n        else {\n          // 非开头先尝试是否放得下\n          let fw = item.__tryLayInline(w - x, w);\n          // 放得下继续\n          if(fw >= 0) {\n            item.__layout({\n              x,\n              y,\n              w,\n              h,\n            });\n          }\n          // 放不下处理之前的lineGroup，并重新开头\n          else {\n            lineGroups.push(lineGroup);\n            lineGroup.verticalAlign();\n            x = data.x;\n            y += lineGroup.height;\n            item.__layout({\n              x: data.x,\n              y,\n              w,\n              h,\n            });\n            lineGroup = new LineGroup(x, y);\n          }\n          x += item.outerWidth;\n          maxX = Math.max(maxX, x);\n          lineGroup.add(item);\n        }\n      }\n      // inline里的其它只有文本\n      else {\n        if(x === data.x) {\n          lineGroup.add(item);\n          item.__layout({\n            x,\n            y,\n            w,\n            h,\n          });\n          x += item.width;\n          maxX = Math.max(maxX, x);\n        }\n        else {\n          // 非开头先尝试是否放得下\n          let fw = item.__tryLayInline(w - x, w);\n          // 放得下继续\n          if(fw >= 0) {\n            item.__layout({\n              x,\n              y,\n              w,\n              h,\n            });\n          }\n          // 放不下处理之前的lineGroup，并重新开头\n          else {\n            lineGroups.push(lineGroup);\n            lineGroup.verticalAlign();\n            x = data.x;\n            y += lineGroup.height;\n            item.__layout({\n              x: data.x,\n              y,\n              w,\n              h,\n            });\n            lineGroup = new LineGroup(x, y);\n          }\n          x += item.width;\n          maxX = Math.max(maxX, x);\n          lineGroup.add(item);\n        }\n      }\n    });\n    // 结束后处理可能遗留的最后的lineGroup，children为空时可能size为空\n    if(lineGroup.size) {\n      lineGroups.push(lineGroup);\n      lineGroup.verticalAlign();\n      y += lineGroup.height;\n    }\n    // text-align\n    if(['center', 'right'].indexOf(textAlign) > -1) {\n      lineGroups.forEach(lineGroup => {\n        let diff = w - lineGroup.width;\n        if(diff > 0) {\n          lineGroup.horizonAlign(textAlign === 'center' ? diff * 0.5 : diff);\n        }\n      });\n    }\n    // 元素的width不能超过父元素w\n    this.__width = fixedWidth ? w : maxX - data.x;\n    this.__height = fixedHeight ? h : y - data.y;\n    this.__flowY = y;\n    // 处理margin:xx auto居中对齐\n    if(marginLeft.unit === unit.AUTO && marginRight.unit === unit.AUTO && width.unit !== unit.AUTO) {\n      let ow = this.outerWidth;\n      if(ow < data.w) {\n        this.__offsetX((data.w - ow) * 0.5);\n      }\n    }\n  }\n\n  // 只针对绝对定位children布局\n  __layoutAbs(container) {\n    let { x, y, flowY, width, height, children, absChildren, style, mlw, mtw, mrw, mbw, plw, ptw, prw, pbw } = this;\n    let {\n      borderTopWidth,\n      borderLeftWidth,\n    } = style;\n    let pw = width + plw + prw;\n    let ph = height + ptw + pbw;\n    // 递归进行，遇到absolute/relative的设置新容器\n    children.forEach(item => {\n      if(item instanceof Dom) {\n        item.__layoutAbs(['absolute', 'relative'].indexOf(item.style.position) > -1 ? item : container);\n      }\n    });\n    // 对absolute的元素进行相对容器布局\n    absChildren.forEach(item => {\n      let { mtw, mlw, style, style: {\n        left, top, right, bottom, width: width2, height: height2\n      } } = item;\n      let x2, y2, w2, h2;\n      // width优先级高于right高于left，即最高left+right，其次left+width，再次right+width，然后仅申明单个，最次全部auto\n      if(left.unit !== unit.AUTO && right.unit !== unit.AUTO) {\n        x2 = left.unit === unit.PX ? x + mlw + borderLeftWidth.value + left.value : x + mlw + borderLeftWidth.value + width * left.value * 0.01;\n        w2 = right.unit === unit.PX ? x + mlw + borderLeftWidth.value + pw - right.value - x2 : x + mlw + borderLeftWidth.value + pw - width * right.value * 0.01 - x2;\n      }\n      else if(left.unit !== unit.AUTO && width2.unit !== unit.AUTO) {\n        x2 = left.unit === unit.PX ? x + mlw + borderLeftWidth.value + left.value : x + mlw + borderLeftWidth.value + width * left.value * 0.01;\n        w2 = width2.unit === unit.PX ? width2.value : width;\n      }\n      else if(right.unit !== unit.AUTO && width2.unit !== unit.AUTO) {\n        w2 = width2.unit === unit.PX ? width2.value : width;\n        let widthPx = width2.unit === unit.PX ? width2.value : width * width2.value * 0.01;\n        x2 = right.unit === unit.PX ? x + mlw + borderLeftWidth.value + pw - right.value - widthPx : x + mlw + borderLeftWidth.value + pw - width * right.value * 0.01 - widthPx;\n      }\n      else if(left.unit !== unit.AUTO) {\n        x2 = left.unit === unit.PX ? x + left.value : x + mlw + borderLeftWidth.value + width * left.value * 0.01;\n        w2 = item.__calAbs(true);\n      }\n      else if(right.unit !== unit.AUTO) {\n        w2 = item.__calAbs(true);\n        x2 = right.unit === unit.PX ? x + mlw + borderLeftWidth.value + pw - right.value - w2 : x + mlw + borderLeftWidth.value + pw - width * right.value * 0.01 - w2;\n      }\n      else if(width2.unit !== unit.AUTO) {\n        x2 = x + mlw + borderLeftWidth.value;\n        w2 = width2.unit === unit.PX ? width2.value : width;\n      }\n      else {\n        x2 = x + mlw + borderLeftWidth.value;\n        w2 = item.__calAbs(true);\n      }\n      // top/bottom/height优先级同上\n      if(top.unit !== unit.AUTO && bottom.unit !== unit.AUTO) {\n        y2 = top.unit === unit.PX ? y + top.value : y + mtw + borderTopWidth.value + height * top.value * 0.01;\n        h2 = bottom.unit === unit.PX ? y + mtw + borderTopWidth.value + ph - bottom.value - y2 : y + mtw + borderTopWidth.value + ph - height * bottom.value * 0.01 - y2;\n        style.height = {\n          value: h2,\n          unit: unit.PX,\n        };\n      }\n      else if(top.unit !== unit.AUTO && height2.unit !== unit.AUTO) {\n        y2 = top.unit === unit.PX ? y + top.value : y + mtw + borderTopWidth.value + height * top.value * 0.01;\n        h2 = height2.unit === unit.PX ? height2.value : height;\n      }\n      else if(bottom.unit !== unit.AUTO && height2.unit !== unit.AUTO) {\n        h2 = height2.unit === unit.PX ? height2.value : height;\n        let heightPx = height2.unit === unit.PX ? height2.value : height * height2.value * 0.01;\n        y2 = bottom.unit === unit.PX ? y + mtw + borderTopWidth.value + ph - bottom.value - heightPx : y + mtw + borderTopWidth.value + ph - height * bottom.value * 0.01 - heightPx;\n      }\n      else if(top.unit !== unit.AUTO) {\n        y2 = top.unit === unit.PX ? y + top.value : y + mtw + borderTopWidth.value + height * top.value * 0.01;\n        h2 = item.__calAbs();\n      }\n      else if(bottom.unit !== unit.AUTO) {\n        h2 = item.__calAbs();\n        y2 = bottom.unit === unit.PX ? y + mtw + borderTopWidth.value + ph - bottom.value - h2 : y + mtw + borderTopWidth.value + ph - height * bottom.value * 0.01 - h2;\n      }\n      else if(height2.unit !== unit.AUTO) {\n        y2 = flowY + mtw + borderTopWidth.value;\n        h2 = height2.unit === unit.PX ? height2.value : height;\n      }\n      else {\n        y2 = flowY + mtw + borderTopWidth.value;\n        h2 = item.__calAbs();\n      }\n      // absolute时inline强制block\n      if(style.display === 'inline') {\n        style.display = 'block';\n      }\n      item.__layout({\n        x: x2,\n        y: y2,\n        w: w2,\n        h: h2,\n      });\n    });\n  }\n\n  render(renderMode) {\n    super.render(renderMode);\n    let { style: { display }, flowChildren, children } = this;\n    if(display === 'none') {\n      return;\n    }\n    // 先绘制static\n    flowChildren.forEach(item => {\n      if(item instanceof Text || item.style.position === 'static') {\n        item.render(renderMode);\n      }\n    });\n    // 再绘制relative和absolute\n    children.forEach(item => {\n      if((item instanceof Xom) && ['relative', 'absolute'].indexOf(item.style.position) > -1) {\n        item.render(renderMode);\n      }\n    });\n    if(renderMode === mode.SVG) {\n      this.__virtualDom = {\n        ...super.virtualDom,\n        type: 'dom',\n        children: this.children.map(item => item.virtualDom),\n      };\n    }\n  }\n\n  get tagName() {\n    return this.__tagName;\n  }\n  get children() {\n    return this.__children;\n  }\n  get flowChildren() {\n    return this.__flowChildren;\n  }\n  get absChildren() {\n    return this.__absChildren;\n  }\n  get lineGroups() {\n    return this.__lineGroups;\n  }\n  get baseLine() {\n    let len = this.lineGroups.length;\n    if(len) {\n      let last = this.lineGroups[len - 1];\n      return last.y - this.y + last.baseLine;\n    }\n    return this.y;\n  }\n  get flowY() {\n    return this.__flowY;\n  }\n\n  static isValid(s) {\n    return TAG_NAME.hasOwnProperty(s);\n  }\n}\n\nexport default Dom;\n","import util from './util';\n\nfunction diff(elem, ovd, nvd) {\n  let cns = elem.childNodes;\n  diffDefs(cns[0], ovd.defs, nvd.defs);\n  diffBb(cns[1], ovd.bb, nvd.bb);\n  diffD2D(elem, ovd, nvd, true);\n}\n\nfunction diffDefs(elem, od, nd) {\n  let ol = od.length;\n  let nl = nd.length;\n  let i = 0;\n  let cns = elem.childNodes;\n  for(; i < Math.min(ol, nl); i++) {\n    diffDef(cns[i], od[i], nd[i]);\n  }\n}\n\nfunction diffDef(elem, od, nd) {\n  if(od.k !== nd.k) {\n    elem.insertAdjacentHTML('afterend', util.joinDef(nd));\n    elem.parentNode.removeChild(elem);\n  }\n  else {\n    for(let i = 0; i < 4; i++) {\n      if(od.c[i] !== nd.c[i]) {\n        elem.setAttribute(['x1', 'y1', 'x2', 'y2'][i], nd.c[i]);\n      }\n    }\n    let ol = od.v.length;\n    let nl = nd.v.length;\n    let i = 0;\n    let cns = elem.childNodes;\n    for(; i < Math.min(ol, nl); i++) {\n      let o = od.v[i];\n      let n = nd.v[i];\n      if(o[0] !== n[0]) {\n        cns[i].setAttribute('stop-color', n[0]);\n      }\n      if(o[1] !== n[1]) {\n        cns[i].setAttribute('offset', n[1]);\n      }\n    }\n    if(i < ol) {\n      for(; i < ol; i++) {\n        removeAt(elem, cns, i);\n      }\n    }\n    else if(i < nl) {\n      for(; i < nl; i++) {\n        insertAt(elem, cns, i, util.joinDef(nd.v[i]));\n      }\n    }\n  }\n}\n\nfunction diffChild(elem, ovd, nvd) {\n  if(ovd.type === 'dom') {\n    if(nvd.type === 'dom') {\n      diffD2D(elem, ovd, nvd);\n    }\n    else if(nvd.type === 'text') {\n      replaceWith(elem, nvd);\n    }\n    else if(nvd.type === 'geom') {\n      diffD2G(elem, ovd, nvd);\n    }\n  }\n  else if(nvd.type === 'text') {\n    if(nvd.type === 'dom') {\n      replaceWith(elem, nvd);\n    }\n    else if(nvd.type === 'text') {\n      diffT2T(elem, ovd, nvd);\n    }\n    else if(nvd.type === 'geom') {\n      replaceWith(elem, nvd);\n    }\n  }\n  else if(nvd.type === 'geom') {\n    if(nvd.type === 'dom') {\n      diffG2D(elem, ovd, nvd);\n    }\n    else if(nvd.type === 'text') {\n      replaceWith(elem, nvd);\n    }\n    else if(nvd.type === 'geom') {\n      diffG2G(elem, ovd, nvd);\n    }\n  }\n}\n\nfunction diffD2D(elem, ovd, nvd, root) {\n  if(!root) {\n    diffBb(elem.firstChild, ovd.bb, nvd.bb);\n  }\n  let ol = ovd.children.length;\n  let nl = nvd.children.length;\n  let i = 0;\n  let lastChild = elem.lastChild;\n  let cns = lastChild.childNodes;\n  for(; i < Math.min(ol, nl); i++) {\n    diffChild(cns[i], ovd.children[i], nvd.children[i]);\n  }\n  if(i < ol) {\n    for(; i < ol; i++) {\n      removeAt(lastChild, cns, i);\n    }\n  }\n  else if(i < nl) {\n    for(; i < nl; i++) {\n      insertAt(lastChild, cns, i, util.joinVd(nvd.children[i]));\n    }\n  }\n}\n\nfunction diffD2G(elem, ovd, nvd) {\n  diffBb(elem.firstChild, ovd.bb, nvd.bb);\n  replaceWith(elem.lastChild, nvd.content);\n}\n\nfunction diffT2T(elem, ovd, nvd) {\n  let ol = ovd.children.length;\n  let nl = nvd.children.length;\n  let i = 0;\n  for(; i < Math.min(ol, nl); i++) {\n    diffItem(elem, i, ovd.children[i], nvd.children[i], true);\n  }\n  let cns = elem.childNodes;\n  if(i < ol) {\n    for(; i < ol; i++) {\n      removeAt(elem, cns, i);\n    }\n  }\n  else if(i < nl) {\n    for(; i < nl; i++) {\n      insertAt(elem, cns, i, util.joinVd(nvd.children[i]));\n    }\n  }\n}\n\nfunction diffG2D(elem, ovd, nvd) {\n  diffBb(elem.firstChild, ovd.bb, nvd.bb);\n  replaceWith(elem.lastChild, nvd.children);\n}\n\nfunction diffG2G(elem, ovd, nvd) {\n  if(!equalArr(ovd.transform, nvd.transform)) {\n    let transform = util.joinTransform(nvd.transform);\n    if(elem.getAttribute('transform') !== transform) {\n      elem.setAttribute('transform', transform);\n    }\n  }\n  diffBb(elem.firstChild, ovd.bb, nvd.bb);\n  let ol = ovd.content.length;\n  let nl = nvd.content.length;\n  let i = 0;\n  let lastChild = elem.lastChild;\n  let cns = lastChild.childNodes;\n  for(; i < Math.min(ol, nl); i++) {\n    diffItem(lastChild, i, ovd.content[i], nvd.content[i]);\n  }\n  if(i < ol) {\n    for(; i < ol; i++) {\n      removeAt(lastChild, cns, i);\n    }\n  }\n  else if(i < nl) {\n    for(; i < nl; i++) {\n      insertAt(lastChild, cns, i, util.joinVd(nvd.content[i]));\n    }\n  }\n}\n\nfunction diffBb(elem, obb, nbb) {\n  let ol = obb.length;\n  let nl = nbb.length;\n  let i = 0;\n  for(; i < Math.min(ol, nl); i++) {\n    diffItem(elem, i, obb[i], nbb[i]);\n  }\n  let cns = elem.childNodes;\n  if(i < ol) {\n    for(; i < ol; i++) {\n      removeAt(elem, cns, i);\n    }\n  }\n  else if(i < nl) {\n    for(; i < nl; i++) {\n      insertAt(elem, cns, i, util.joinVd(nbb[i]));\n    }\n  }\n}\n\nfunction diffItem(elem, i, ovd, nvd, isText) {\n  let cns = elem.childNodes;\n  if(ovd.tagName !== nvd.tagName) {\n    replaceWith(cns[i], nvd);\n  }\n  else {\n    let op = {};\n    for(let j = 0, len = ovd.props.length; j < len; j++) {\n      let prop = ovd.props[j];\n      let [k, v] = prop;\n      op[k] = v;\n    }\n    for(let j = 0, len = nvd.props.length; j < len; j++) {\n      let prop = nvd.props[j];\n      let [k, v] = prop;\n      // 已有不等更新，没有添加\n      if(op.hasOwnProperty(k)) {\n        if(op[k] !== v) {\n          cns[i].setAttribute(k, v);\n        }\n        delete op[k];\n      }\n      else {\n        cns[i].setAttribute(k, v);\n      }\n    }\n    // 多余的删除\n    for(var k in op) {\n      if(op.hasOwnProperty(k)) {\n        cns[i].removeAttribute(k);\n      }\n    }\n    if(isText && ovd.content !== nvd.content) {\n      cns[i].textContent = nvd.content;\n    }\n  }\n}\n\nfunction replaceWith(elem, vd) {\n  let res;\n  if(Array.isArray(vd)) {\n    res = '';\n    vd.forEach(item => {\n      res += util.joinVd(item);\n    });\n  }\n  else {\n    res = util.joinVd(vd);\n  }\n  elem.insertAdjacentHTML('afterend', res);\n  elem.parentNode.removeChild(elem);\n}\n\nfunction insertAt(elem, cns, index, html) {\n  if(index >= cns.length) {\n    elem.insertAdjacentHTML('beforeend', html);\n  }\n  else {\n    cns[index].insertAdjacentHTML('beforebegin', html);\n  }\n}\n\nfunction removeAt(elem, cns, index) {\n  if(cns[index]) {\n    elem.removeChild(cns[index]);\n  }\n}\n\nfunction equalArr(a, b) {\n  if(a.length !== b.length) {\n    return false;\n  }\n  for(let i = 0, len = a.length; i < len; i++) {\n    if(a[i] !== b[i]) {\n      return false;\n    }\n  }\n  return true;\n}\n\nexport default diff;\n","class Defs {\n  constructor(uuid) {\n    this.id = uuid;\n    this.count = 0;\n    this.list = [];\n  }\n  add(data) {\n    data.uuid = `karas-defs-${this.id}-${this.count++}`;\n    this.list.push(data);\n    return data.uuid;\n  }\n  clear() {\n    this.list = [];\n    this.count = 0;\n  }\n\n  get value() {\n    return this.list;\n  }\n\n  static getInstance(uuid) {\n    return new Defs(uuid);\n  }\n}\n\nexport default Defs;\n","import Dom from '../node/Dom';\nimport util from '../util';\nimport mode from '../mode';\nimport domDiff from '../domDiff';\nimport Defs from './Defs';\n\nfunction getDom(dom) {\n  if(util.isString(dom)) {\n    let o = document.querySelector(dom);\n    if(!o) {\n      throw new Error('can not find dom of selector: ' + dom);\n    }\n    return o;\n  }\n  if(!dom) {\n    throw new Error('can not find dom: ' + dom);\n  }\n  return dom;\n}\n\nfunction renderProp(k, v) {\n  let s = Array.isArray(v) ? util.joinSourceArray(v) : util.stringify(v);\n  if(k === 'className') {\n    k = 'class';\n  }\n  return ' ' + k + '=\"' + util.encodeHtml(s, true) + '\"';\n}\n\nlet uuid = 0;\n\nclass Root extends Dom {\n  constructor(tagName, props, children) {\n    super(tagName, props, children);\n    this.__node = null; // 真实DOM引用\n  }\n\n  __initProps() {\n    if(this.props.width !== undefined) {\n      let value = parseInt(this.props.width);\n      if(!isNaN(value) && value > 0) {\n        this.__width = value;\n      }\n    }\n    if(this.props.height !== undefined) {\n      let value = parseInt(this.props.height);\n      if(!isNaN(value) && value > 0) {\n        this.__height = value;\n      }\n    }\n  }\n\n  __genHtml() {\n    let res = `<${this.tagName}`;\n    // 拼接处理属性\n    for(let i = 0, len = this.__props.length; i < len; i++) {\n      let item = this.__props[i];\n      res += renderProp(item[0], item[1]);\n    }\n    res += `></${this.tagName}>`;\n    return res;\n  }\n\n  // 类似touchend/touchcancel这种无需判断是否发生于元素上，直接强制响应\n  __cb(e, force) {\n    if(e.touches && e.touches.length > 1) {\n      return;\n    }\n    let { node } = this;\n    let { x, y, top, right } = node.getBoundingClientRect();\n    x = x || top || 0;\n    y = y || right || 0;\n    let { clientX, clientY } = e.touches ? (e.touches[0] || {}) : e;\n    x = clientX - x;\n    y = clientY - y;\n    this.__emitEvent({\n      event: e,\n      x,\n      y,\n      covers: [],\n    }, force);\n  }\n\n  __initEvent() {\n    let { node } = this;\n    ['click', 'dblclick', 'mousedown', 'mousemove', 'mouseup', 'touchstart', 'touchmove', 'touchend', 'touchcancel'].forEach(type => {\n      node.addEventListener(type, e => {\n        this.__cb(e, ['touchend', 'touchcancel'].indexOf(type) > -1);\n      });\n    });\n  }\n\n  appendTo(dom) {\n    dom = getDom(dom);\n    this.__initProps();\n    // 已有root节点\n    if(dom.nodeName.toUpperCase() === this.tagName.toUpperCase()) {\n      this.__node = dom;\n      if(this.width) {\n        dom.setAttribute('width', this.width);\n      }\n      if(this.height) {\n        dom.setAttribute('height', this.height);\n      }\n    }\n    // 没有canvas/svg节点则生成一个新的\n    else {\n      this.__node = dom.querySelector(this.tagName);\n      if(!this.__node) {\n        dom.innerHTML = this.__genHtml();\n        this.__node = dom.querySelector(this.tagName);\n      }\n    }\n    this.__uuid = this.__node.__uuid || uuid++;\n    this.__defs = Defs.getInstance(this.__uuid);\n    this.__defs.clear();\n    // 没有设置width/height则采用css计算形式\n    if(!this.width || !this.height) {\n      let css = window.getComputedStyle(dom, null);\n      if(!this.width) {\n        this.__width = parseInt(css.getPropertyValue('width'));\n        dom.setAttribute('width', this.width);\n      }\n      if(!this.height) {\n        this.__height = parseInt(css.getPropertyValue('height'));\n        dom.setAttribute('height', this.height);\n      }\n    }\n    // 只有canvas有ctx，svg用真实dom\n    let renderMode;\n    if(this.tagName === 'canvas') {\n      this.__ctx = this.__node.getContext('2d');\n      this.__ctx.clearRect(0, 0, this.width, this.height);\n      renderMode = mode.CANVAS;\n    }\n    else if(this.tagName === 'svg') {\n      renderMode = mode.SVG;\n    }\n    // canvas/svg作为根节点一定是block或flex，不会是inline\n    let { style } = this;\n    if(['flex', 'block'].indexOf(style.display) === -1) {\n      style.display = 'block';\n    }\n    // 同理position不能为absolute\n    if(style.position === 'absolute') {\n      style.position = 'static';\n    }\n    this.__traverse(this.__ctx, this.__defs, renderMode);\n    // canvas的宽高固定初始化\n    style.width = this.width;\n    style.height = this.height;\n    this.__initStyle();\n    this.__layout({\n      x: 0,\n      y: 0,\n      w: this.width,\n      h: this.height,\n    });\n    this.__layoutAbs(this);\n    this.render(renderMode);\n    if(renderMode === mode.SVG) {\n      let nvd = this.virtualDom;\n      let nd = this.__defs.value;\n      nvd.defs = nd;\n      if(this.node.__karasInit) {\n        domDiff(this.node, this.node.__ovd, nvd);\n      } else {\n        this.node.innerHTML = util.joinVirtualDom(nvd, nd);\n      }\n      this.node.__ovd = nvd;\n      this.node.__od = nd;\n    }\n    if(!this.node.__karasInit) {\n      this.node.__karasInit = true;\n      this.__initEvent();\n    }\n  }\n\n  get node() {\n    return this.__node;\n  }\n  get imageData() {\n    return this.__imageData;\n  }\n}\n\nexport default Root;\n","import Geom from './Geom';\nimport mode from '../mode';\n\nclass Line extends Geom {\n  constructor(tagName, props) {\n    super(tagName, props);\n    // start和end表明线段的首尾坐标，control表明控制点坐标\n    this.__start = [];\n    this.__end = [];\n    this.__control = [];\n    if(Array.isArray(this.props.start)) {\n      this.__start = this.props.start;\n    }\n    if(Array.isArray(this.props.end)) {\n      this.__end = this.props.end;\n    }\n    if(Array.isArray(this.props.control)) {\n      this.__control = this.props.control;\n    }\n  }\n\n  render(renderMode) {\n    super.render(renderMode);\n    let { rx: x, ry: y, width, height, mlw, mtw, plw, ptw, style, ctx, start, end, control, virtualDom } = this;\n    if(start.length < 2 || end.length < 2) {\n      return;\n    }\n    let {\n      display,\n      borderTopWidth,\n      borderRightWidth,\n      borderBottomWidth,\n      borderLeftWidth,\n      stroke,\n      strokeWidth,\n      strokeDasharray,\n    } = style;\n    if(display === 'none') {\n      return;\n    }\n    let originX = x + borderLeftWidth.value + mlw + plw;\n    let originY = y + borderTopWidth.value + mtw + ptw;\n    let x1 = originX + start[0] * width;\n    let y1 = originY + start[1] * height;\n    let x2 = originX + end[0] * width;\n    let y2 = originY + end[1] * height;\n    let curve = 0;\n    let cx1, cy1, cx2, cy2;\n    if(Array.isArray(control[0])) {\n      curve++;\n      cx1 = originX + control[0][0] * width;\n      cy1 = originY + control[0][1] * height;\n    }\n    if(Array.isArray(control[1])) {\n      curve++;\n      cx2 = originX + control[1][0] * width;\n      cy2 = originY + control[1][1] * height;\n    }\n    if(renderMode === mode.CANVAS) {\n      ctx.strokeStyle = stroke;\n      ctx.lineWidth = strokeWidth;\n      ctx.setLineDash(strokeDasharray);\n      ctx.beginPath();\n      ctx.moveTo(x1, y1);\n      if(curve === 2) {\n        ctx.bezierCurveTo(cx1, cy1, cx2, cy2, x2, y2);\n      }\n      else if(curve === 1) {\n        ctx.quadraticCurveTo(cx1, cy1, x2, y2);\n      }\n      else {\n        ctx.lineTo(x2, y2);\n      }\n      ctx.stroke();\n      ctx.closePath();\n    }\n    else if(renderMode === mode.SVG) {\n      if(curve === 2) {\n        virtualDom.children.push({\n          type: 'item',\n          tagName: 'path',\n          props: [\n            ['d', `M${x1} ${y1} C${cx1} ${cy1} ${cx2} ${cy2} ${x2} ${y2}`],\n            ['fill', 'none'],\n            ['stroke', stroke],\n            ['stroke-width', strokeWidth],\n            ['stroke-dasharray', strokeDasharray]\n          ],\n        });\n      }\n      else if(curve === 1) {\n        virtualDom.children.push({\n          type: 'item',\n          tagName: 'path',\n          props: [\n            ['d', `M${x1} ${y1} Q${cx1} ${cy1} ${x2} ${y2}`],\n            ['fill', 'none'],\n            ['stroke', stroke],\n            ['stroke-width', strokeWidth],\n            ['stroke-dasharray', strokeDasharray]\n          ],\n        });\n      }\n      else {\n        virtualDom.children.push({\n          type: 'item',\n          tagName: 'line',\n          props: [\n            ['x1', x1],\n            ['y1', y1],\n            ['x2', x2],\n            ['y2', y2],\n            ['stroke', stroke],\n            ['stroke-width', strokeWidth],\n            ['stroke-dasharray', strokeDasharray]\n          ],\n        });\n      }\n    }\n  }\n\n  get start() {\n    return this.__start;\n  }\n  get end() {\n    return this.__end;\n  }\n  get control() {\n    return this.__control;\n  }\n}\n\nexport default Line;\n","import Geom from './Geom';\nimport mode from '../mode';\n\nclass Polyline extends Geom {\n  constructor(tagName, props) {\n    super(tagName, props);\n    // 折线所有点的列表\n    this.__points = [];\n    if(Array.isArray(this.props.points)) {\n      this.__points = this.props.points;\n    }\n    // 原点位置，4个角，默认左下\n    if(['TOP_LEFT', 'TOP_RIGHT', 'BOTTOM_LEFT', 'BOTTOM_RIGHT'].indexOf(this.props.origin) > -1) {\n      this.__origin = this.props.origin;\n    }\n    else {\n      this.__origin = 'BOTTOM_LEFT';\n    }\n  }\n\n  render(renderMode) {\n    super.render(renderMode);\n    let { rx: x, ry: y, width, height, mlw, mtw, plw, ptw, style, ctx, points, origin, virtualDom } = this;\n    if(points.length < 2) {\n      return;\n    }\n    for(let i = 0, len = points.length; i < len; i++) {\n      if(!Array.isArray(points[i]) || points[i].length < 2) {\n        return;\n      }\n    }\n    let {\n      display,\n      borderTopWidth,\n      borderLeftWidth,\n      stroke,\n      strokeWidth,\n      strokeDasharray,\n    } = style;\n    if(display === 'none') {\n      return;\n    }\n    let originX = x + borderLeftWidth.value + mlw + plw;\n    let originY = y + borderTopWidth.value + mtw + ptw;\n    let pts = this.__pts = [];\n    if(origin === 'TOP_LEFT') {\n      points.forEach(item => {\n        pts.push([\n          originX + item[0] * width,\n          originY + item[1] * height\n        ]);\n      });\n    }\n    else if(origin === 'TOP_RIGHT') {\n      points.forEach(item => {\n        pts.push([\n          originX + width - item[0] * width,\n          originY + item[1] * height\n        ]);\n      });\n    }\n    else if(origin === 'BOTTOM_LEFT') {\n      points.forEach(item => {\n        pts.push([\n          originX + item[0] * width,\n          originY + height - item[1] * height\n        ]);\n      });\n    }\n    else if(origin === 'BOTTOM_RIGHT') {\n      points.forEach(item => {\n        pts.push([\n          originX + width - item[0] * width,\n          originY + height - item[1] * height\n        ]);\n      });\n    }\n    if(renderMode === mode.CANVAS) {\n      ctx.strokeStyle = stroke;\n      ctx.lineWidth = strokeWidth;\n      ctx.setLineDash(strokeDasharray);\n      ctx.beginPath();\n      ctx.moveTo(pts[0][0], originY + pts[0][1]);\n      for(let i = 1, len = pts.length; i < len; i++) {\n        let point = pts[i];\n        ctx.lineTo(point[0], point[1]);\n      }\n      if(strokeWidth && stroke !== 'transparent') {\n        ctx.stroke();\n      }\n      ctx.closePath();\n    }\n    else if(renderMode === mode.SVG) {\n      let points = '';\n      for(let i = 0, len = pts.length; i < len; i++) {\n        let point = pts[i];\n        points += `${point[0]},${point[1]} `;\n      }\n      virtualDom.children.push({\n        type: 'item',\n        tagName: 'polyline',\n        props: [\n          ['points', points],\n          ['fill', 'none'],\n          ['stroke', stroke],\n          ['stroke-width', strokeWidth],\n          ['stroke-dasharray', strokeDasharray]\n        ],\n      });\n    }\n  }\n\n  getPointsByX(x) {\n    let min = Infinity;\n    let len = this.__pts.length;\n    let res = [];\n    for(let i = 0; i < len; i++) {\n      let diff = Math.abs(this.__pts[i][0] - x);\n      if(diff < min) {\n        min = diff;\n      }\n    }\n    for(let i = 0; i < len; i++) {\n      let diff = Math.abs(this.__pts[i][0] - x);\n      if(diff === min) {\n        res.push({\n          index: i,\n          x: this.__pts[i][0],\n          y: this.__pts[i][1],\n        });\n      }\n    }\n    return res;\n  }\n\n  get points() {\n    return this.__points;\n  }\n  get origin() {\n    return this.__origin;\n  }\n}\n\nexport default Polyline;\n","import Geom from './Geom';\nimport mode from '../mode';\n\nclass Polygon extends Geom {\n  constructor(tagName, props) {\n    super(tagName, props);\n    // 所有点的列表\n    this.__points = [];\n    if(Array.isArray(this.props.points)) {\n      this.__points = this.props.points;\n    }\n  }\n\n  render(renderMode) {\n    super.render(renderMode);\n    let { rx: x, ry: y, width, height, mlw, mtw, plw, ptw, style, ctx, points, virtualDom } = this;\n    if(points.length < 3) {\n      return;\n    }\n    for(let i = 0, len = points.length; i < len; i++) {\n      if(!Array.isArray(points[i]) || points[i].length < 2) {\n        return;\n      }\n    }\n    let {\n      display,\n      borderTopWidth,\n      borderLeftWidth,\n      stroke,\n      strokeWidth,\n      strokeDasharray,\n      fill,\n    } = style;\n    if(display === 'none') {\n      return;\n    }\n    let originX = x + borderLeftWidth.value + mlw + plw;\n    let originY = y + borderTopWidth.value + mtw + ptw;\n    points.forEach(item => {\n      item[0] = originX + item[0] * width;\n      item[1] = originY + item[1] * height;\n    });\n    if(renderMode === mode.CANVAS) {\n      ctx.strokeStyle = stroke;\n      ctx.lineWidth = strokeWidth;\n      ctx.fillStyle = fill;\n      ctx.setLineDash(strokeDasharray);\n      ctx.beginPath();\n      ctx.moveTo(points[0][0], originY + points[0][1]);\n      for(let i = 1, len = points.length; i < len; i++) {\n        let point = points[i];\n        ctx.lineTo(point[0], point[1]);\n      }\n      ctx.fill();\n      if(strokeWidth && stroke !== 'transparent') {\n        ctx.stroke();\n      }\n      ctx.closePath();\n    }\n    else if(renderMode === mode.SVG) {\n      let points = '';\n      for(let i = 0, len = points.length; i < len; i++) {\n        let point = points[i];\n        points += `${point[0]},${point[1]} `;\n      }\n      virtualDom.children.push({\n        type: 'item',\n        tagName: 'polygon',\n        props: [\n          ['points', points],\n          ['fill', fill],\n          ['stroke', stroke],\n          ['stroke-width', strokeWidth],\n          ['stroke-dasharray', strokeDasharray]\n        ],\n      });\n    }\n  }\n\n  get points() {\n    return this.__points;\n  }\n}\n\nexport default Polygon;\n","import Geom from './Geom';\nimport mode from '../mode';\n\nconst OFFSET = Math.PI * 0.5;\n\nfunction getCoordByDegree(x, y, r, d) {\n  while(d > 360) {\n    d -= 360;\n  }\n  while(d < 0) {\n    d += 360;\n  }\n  if(d >= 0 && d < 90) {\n    return [\n      x + Math.sin(d * Math.PI / 180) * r,\n      y - Math.cos(d * Math.PI / 180) * r\n    ];\n  }\n  else if(d >= 90 && d < 180) {\n    return [\n      x + Math.cos((d - 90) * Math.PI / 180) * r,\n      y + Math.sin((d - 90) * Math.PI / 180) * r,\n    ];\n  }\n  else if(d >= 180 && d < 270) {\n    return [\n      x - Math.cos((270 - d) * Math.PI / 180) * r,\n      y + Math.sin((270 - d) * Math.PI / 180) * r,\n    ];\n  }\n  else {\n    return [\n      x - Math.sin((360 - d) * Math.PI / 180) * r,\n      y - Math.cos((360 - d) * Math.PI / 180) * r,\n    ];\n  }\n}\n\nclass Sector extends Geom {\n  constructor(tagName, props) {\n    super(tagName, props);\n    // 角度\n    this.__start = 0;\n    this.__end = 0;\n    if(this.props.start) {\n      this.__start = parseFloat(this.props.start);\n      if(isNaN(this.start)) {\n        this.__start = 0;\n      }\n    }\n    if(this.props.end) {\n      this.__end = parseFloat(this.props.end);\n      if(isNaN(this.end)) {\n        this.__end = 0;\n      }\n    }\n    // 半径0~1，默认1\n    this.__r = 1;\n    if(this.props.r) {\n      this.__r = parseFloat(this.props.r);\n      if(isNaN(this.r)) {\n        this.__r = 1;\n      }\n    }\n  }\n\n  render(renderMode) {\n    super.render(renderMode);\n    let { rx: x, ry: y, width, height, mlw, mtw, plw, ptw, style, ctx, start, end, r, virtualDom } = this;\n    if(start === end) {\n      return;\n    }\n    let {\n      display,\n      borderTopWidth,\n      borderLeftWidth,\n      stroke,\n      strokeWidth,\n      strokeDasharray,\n      fill,\n    } = style;\n    if(display === 'none') {\n      return;\n    }\n    let originX = x + borderLeftWidth.value + mlw + plw;\n    let originY = y + borderTopWidth.value + mtw + ptw;\n    originX += width * 0.5;\n    originY += height * 0.5;\n    r *= Math.min(width, height) * 0.5;\n    if(renderMode === mode.CANVAS) {\n      ctx.strokeStyle = stroke;\n      ctx.lineWidth = strokeWidth;\n      ctx.fillStyle = fill;\n      ctx.setLineDash(strokeDasharray);\n      ctx.beginPath();\n      ctx.moveTo(originX, originY);\n      ctx.arc(originX, originY, r, start * Math.PI / 180 - OFFSET, end * Math.PI / 180 - OFFSET);\n      ctx.fill();\n      if(strokeWidth && stroke !== 'transparent') {\n        ctx.stroke();\n      }\n      ctx.closePath();\n    }\n    else if(renderMode === mode.SVG) {\n      let x1, y1, x2, y2;\n      [ x1, y1 ] = getCoordByDegree(originX, originY, r, start);\n      [ x2, y2 ] = getCoordByDegree(originX, originY, r, end);\n      let large = (end - start) > 180 ? 1 : 0;\n      virtualDom.children.push({\n        type: 'item',\n        tagName: 'path',\n        props: [\n          ['d', `M${originX} ${originY} L${x1} ${y1} A${r} ${r} 0 ${large} 1 ${x2} ${y2} z`],\n          ['fill', fill],\n          ['stroke', stroke],\n          ['stroke-width', strokeWidth],\n          ['stroke-dasharray', strokeDasharray]\n        ],\n      });\n    }\n  }\n\n  get start() {\n    return this.__start;\n  }\n  get end() {\n    return this.__end;\n  }\n  get r() {\n    return this.__r;\n  }\n}\n\nexport default Sector;\n","import Geom from './Geom';\nimport mode from '../mode';\n\nclass Rect extends Geom {\n  constructor(tagName, props) {\n    super(tagName, props);\n  }\n\n  render(renderMode) {\n    super.render(renderMode);\n    let { rx: x, ry: y, width, height, mlw, mtw, plw, ptw, style, ctx, virtualDom } = this;\n    let {\n      display,\n      borderTopWidth,\n      borderLeftWidth,\n      stroke,\n      strokeWidth,\n      strokeDasharray,\n      fill,\n    } = style;\n    if(display === 'none') {\n      return;\n    }\n    let originX = x + borderLeftWidth.value + mlw + plw;\n    let originY = y + borderTopWidth.value + mtw + ptw;\n    if(renderMode === mode.CANVAS) {\n      ctx.strokeStyle = stroke;\n      ctx.lineWidth = strokeWidth;\n      ctx.fillStyle = fill;\n      ctx.setLineDash(strokeDasharray);\n      ctx.beginPath();\n      ctx.moveTo(originX, originY);\n      ctx.lineTo(originX + width, originY);\n      ctx.lineTo(originX + width, originY + height);\n      ctx.lineTo(originX, originY + height);\n      ctx.fill();\n      if(strokeWidth && stroke !== 'transparent') {\n        ctx.stroke();\n      }\n      ctx.closePath();\n    }\n    else if(renderMode === mode.SVG) {\n      virtualDom.children.push({\n        type: 'item',\n        tagName: 'rect',\n        props: [\n          ['x', x],\n          ['y', y],\n          ['width', width],\n          ['height', height],\n          ['fill', fill],\n          ['stroke', stroke],\n          ['stroke-width', strokeWidth],\n          ['stroke-dasharray', strokeDasharray]\n        ],\n      });\n    }\n  }\n}\n\nexport default Rect;\n","import Geom from './Geom';\nimport mode from '../mode';\n\nclass Circle extends Geom {\n  constructor(tagName, props) {\n    super(tagName, props);\n    // 半径0~1，默认1\n    this.__r = 1;\n    if(this.props.r) {\n      this.__r = parseFloat(this.props.r);\n      if(isNaN(this.r)) {\n        this.__r = 1;\n      }\n    }\n  }\n\n  render(renderMode) {\n    super.render(renderMode);\n    let { rx: x, ry: y, width, height, mlw, mtw, plw, ptw, style, ctx, r, virtualDom } = this;\n    let {\n      display,\n      borderTopWidth,\n      borderLeftWidth,\n      stroke,\n      strokeWidth,\n      strokeDasharray,\n      fill,\n    } = style;\n    if(display === 'none') {\n      return;\n    }\n    let originX = x + borderLeftWidth.value + mlw + plw;\n    let originY = y + borderTopWidth.value + mtw + ptw;\n    originX += width * 0.5;\n    originY += height * 0.5;\n    r *= Math.min(width, height) * 0.5;\n    if(renderMode === mode.CANVAS) {\n      ctx.strokeStyle = stroke;\n      ctx.lineWidth = strokeWidth;\n      ctx.fillStyle = fill;\n      ctx.setLineDash(strokeDasharray);\n      ctx.beginPath();\n      ctx.arc(originX, originY, r, 0, 2 * Math.PI);\n      if(fill !== 'transparent') {\n        ctx.fill();\n      }\n      if(strokeWidth && stroke !== 'transparent') {\n        ctx.stroke();\n      }\n      ctx.closePath();\n    }\n    else if(renderMode === mode.SVG) {\n      virtualDom.children.push({\n        type: 'item',\n        tagName: 'circle',\n        props: [\n          ['cx', originX],\n          ['cy', originY],\n          ['r', r],\n          ['fill', fill],\n          ['stroke', stroke],\n          ['stroke-width', strokeWidth],\n          ['stroke-dasharray', strokeDasharray]\n        ],\n      });\n    }\n  }\n\n  get r() {\n    return this.__r;\n  }\n}\n\nexport default Circle;\n","import Geom from './Geom';\nimport mode from '../mode';\n\nclass Ellipse extends Geom {\n  constructor(tagName, props) {\n    super(tagName, props);\n    // 半径0~1，默认1\n    this.__rx = 1;\n    if(this.props.rx) {\n      this.__rx = parseFloat(this.props.rx);\n      if(isNaN(this.rx)) {\n        this.__rx = 1;\n      }\n    }\n    this.__ry = 1;\n    if(this.props.ry) {\n      this.__ry = parseFloat(this.props.ry);\n      if(isNaN(this.rx)) {\n        this.__ry = 1;\n      }\n    }\n  }\n\n  render(renderMode) {\n    super.render(renderMode);\n    let { rx: x, ry: y, width, height, mlw, mtw, plw, ptw, style, ctx, rx, ry, virtualDom } = this;\n    let {\n      display,\n      borderTopWidth,\n      borderLeftWidth,\n      stroke,\n      strokeWidth,\n      strokeDasharray,\n      fill,\n    } = style;\n    if(display === 'none') {\n      return;\n    }\n    let originX = x + borderLeftWidth.value + mlw + plw;\n    let originY = y + borderTopWidth.value + mtw + ptw;\n    originX += width * 0.5;\n    originY += height * 0.5;\n    rx *= width * 0.5;\n    ry *= height * 0.5;\n    if(renderMode === mode.CANVAS) {\n      ctx.strokeStyle = stroke;\n      ctx.lineWidth = strokeWidth;\n      ctx.fillStyle = fill;\n      ctx.setLineDash(strokeDasharray);\n      ctx.beginPath();\n      ctx.moveTo(originX, originY);\n      ctx.ellipse && ctx.ellipse(originX, originY, rx, ry, 0, 0, 2 * Math.PI);\n      ctx.fill();\n      if(strokeWidth && stroke !== 'transparent') {\n        ctx.stroke();\n      }\n      ctx.closePath();\n    }\n    else if(renderMode === mode.SVG) {\n      virtualDom.children.push({\n        type: 'item',\n        tagName: 'ellipse',\n        props: [\n          ['cx', originX],\n          ['cy', originY],\n          ['rx', rx],\n          ['ry', ry],\n          ['fill', fill],\n          ['stroke', stroke],\n          ['stroke-width', strokeWidth],\n          ['stroke-dasharray', strokeDasharray]\n        ],\n      });\n    }\n  }\n\n  get rx() {\n    return this.__rx;\n  }\n  get ry() {\n    return this.__ry;\n  }\n}\n\nexport default Ellipse;\n","import Geom from './Geom';\nimport mode from '../mode';\n\nclass Grid extends Geom {\n  constructor(tagName, props) {\n    super(tagName, props);\n    // x,y被分为几格\n    this.__nx = 0;\n    if(this.props.nx) {\n      this.__nx = parseFloat(this.props.nx);\n      if(isNaN(this.nx)) {\n        this.__nx = 0;\n      }\n    }\n    this.__ny = 0;\n    if(this.props.ny) {\n      this.__ny = parseFloat(this.props.ny);\n      if(isNaN(this.ny)) {\n        this.__ny = 0;\n      }\n    }\n  }\n\n  render(renderMode) {\n    super.render(renderMode);\n    let { rx: x, ry: y, width, height, mlw, mtw, plw, ptw, style, ctx, nx, ny, virtualDom } = this;\n    if(width <= 0 || height <= 0) {\n      return;\n    }\n    if(nx < 3 && ny < 3) {\n      return;\n    }\n    let {\n      display,\n      borderTopWidth,\n      borderLeftWidth,\n      stroke,\n      strokeWidth,\n      strokeDasharray,\n    } = style;\n    if(display === 'none') {\n      return;\n    }\n    let originX = x + borderLeftWidth.value + mlw + plw;\n    let originY = y + borderTopWidth.value + mtw + ptw;\n    let endX = originX + width;\n    let endY = originY + height;\n    let lx = [];\n    let ly = [];\n    if(nx >= 3) {\n      let per = width / (nx - 1);\n      for(let i = 0; i < nx; i++) {\n        ly.push(originX + i * per);\n      }\n    }\n    if(ny >= 3) {\n      let per = height / (ny - 1);\n      for(let i = 0; i < ny; i++) {\n        lx.push(originY + i * per);\n      }\n    }\n    if(renderMode === mode.CANVAS) {\n      ctx.strokeStyle = stroke;\n      ctx.lineWidth = strokeWidth;\n      ctx.setLineDash(strokeDasharray);\n      ctx.beginPath();\n      lx.forEach(item => {\n        ctx.moveTo(originX, item);\n        ctx.lineTo(endX, item);\n      });\n      ly.forEach(item => {\n        ctx.moveTo(item, originY);\n        ctx.lineTo(item, endY);\n      });\n      if(strokeWidth && stroke !== 'transparent') {\n        ctx.stroke();\n      }\n      ctx.closePath();\n    }\n    else if(renderMode === mode.SVG) {\n      lx.forEach(item => {\n        virtualDom.children.push({\n          type: 'item',\n          tagName: 'line',\n          props: [\n            ['x1', originX],\n            ['y1', item],\n            ['x2', endX],\n            ['y2', item],\n            ['stroke', stroke],\n            ['stroke-width', strokeWidth],\n            ['stroke-dasharray', strokeDasharray]\n          ],\n        });\n      });\n      ly.forEach(item => {\n        virtualDom.children.push({\n          type: 'item',\n          tagName: 'line',\n          props: [\n            ['x1', item],\n            ['y1', originY],\n            ['x2', item],\n            ['y2', endY],\n            ['stroke', stroke],\n            ['stroke-width', strokeWidth],\n            ['stroke-dasharray', strokeDasharray]\n          ],\n        });\n      });\n    }\n  }\n\n  get nx() {\n    return this.__nx;\n  }\n  get ny() {\n    return this.__ny;\n  }\n  get dash() {\n    return this.__dash;\n  }\n}\n\nexport default Grid;\n","import Dom from './node/Dom';\nimport Root from './node/Root';\nimport mode from './mode';\nimport Geom from './geom/Geom';\nimport Line from './geom/Line';\nimport Polyline from './geom/Polyline';\nimport Polygon from './geom/Polygon';\nimport Sector from './geom/Sector';\nimport Rect from './geom/Rect';\nimport Circle from './geom/Circle';\nimport Ellipse from './geom/Ellipse';\nimport Grid from './geom/Grid';\n\nGeom.register('$line', Line);\nGeom.register('$polyline', Polyline);\nGeom.register('$polygon', Polygon);\nGeom.register('$sector', Sector);\nGeom.register('$rect', Rect);\nGeom.register('$circle', Circle);\nGeom.register('$ellipse', Ellipse);\nGeom.register('$grid', Grid);\n\nlet karas = {\n  render(root, dom) {\n    if(!(root instanceof Root)) {\n      throw new Error('render root muse be canvas or svg');\n    }\n    if(dom) {\n      root.appendTo(dom);\n    }\n    return root;\n  },\n  createVd(tagName, props, children) {\n    if(['canvas', 'svg'].indexOf(tagName) > -1) {\n      return new Root(tagName, props, children);\n    }\n    if(Dom.isValid(tagName)) {\n      return new Dom(tagName, props, children);\n    }\n    throw new Error('can not use marker: ' + tagName);\n  },\n  createGm(tagName, props) {\n    let klass = Geom.getImplement(tagName);\n    return new klass(tagName, props);\n  },\n  createCp(cp, props) {\n    return new cp(props);\n  },\n  Geom,\n  mode,\n};\n\nif(typeof window != 'undefined') {\n  window.karas = karas;\n}\n\nexport default karas;\n"],"names":["div","Node","__x","__y","__ox","__oy","__width","__height","__prev","__next","__ctx","__defs","__parent","__style","__baseLine","__virtualDom","diff","this","x","ox","y","oy","parent","root","CANVAS","SVG","measure","s","style","document","createElement","position","left","top","visibility","body","appendChild","fontSize","innerText","css","window","getComputedStyle","parseFloat","width","AUTO","PX","PERCENT","POSITION","toString","isType","type","obj","call","isNumber","stringify","isNil","v","joinVd","vd","props","forEach","item","tagName","content","children","bb","joinTransform","transform","joinDef","def","uuid","stop","util","isObject","isString","isFunction","isBoolean","isDate","joinSourceArray","arr","res","i","len","length","Array","isArray","encodeHtml","prop","replace","joinVirtualDom","nd","r2d","n","Math","PI","rgb2int","color","charAt","slice","push","parseInt","c","match","arr2hash","hash","list","Object","keys","j","k","hash2arr","transformPoint","matrix","a","b","d","vectorProduct","x1","y1","x2","y2","calMatrix","hasRotate","tx","ty","rd","sdx","sdy","sx","sy","cos","sin","tan","pointInQuadrilateral","x3","y3","x4","y4","normalize","w","h","unit","value","getFitDashed","total","bs","be","smin","smax","dmin","dmax","ps","pd","outer","per","num","floor","getDashed","m1","m2","m3","m4","bw","max","renderBorder","renderMode","points","ctx","xom","mode","point","beginPath","fillStyle","moveTo","lineTo","fill","closePath","addBorder","getColorStop","trim","split","p","test","start","end","prev","splice","allBefore","allAfter","first","last","c1","c2","r1","g1","b1","a1","r2","g2","b2","a2","l1","abs","l2","r","g","getCsLimit","next","p1","p2","getCsStartLimit","getCsEndLimit","Xom","__props","__tagName","_this","__listener","toLowerCase","__mtw","__mrw","__mbw","__mlw","__ptw","__prw","__pbw","__plw","data","display","marginTop","marginRight","marginBottom","marginLeft","paddingTop","paddingRight","paddingBottom","paddingLeft","__mpWidth","__layoutBlock","__layoutFlex","__layoutInline","mp","__renderMode","height","mlw","mrw","mtw","mbw","plw","ptw","prw","pbw","setTransform","right","bottom","bgg","backgroundGradient","bgc","backgroundColor","borderTopWidth","btc","borderTopColor","bts","borderTopStyle","borderRightWidth","brc","borderRightColor","brs","borderRightStyle","borderBottomWidth","bbc","borderBottomColor","bbs","borderBottomStyle","borderLeftWidth","blc","borderLeftColor","bls","borderLeftStyle","transformOrigin","__offsetX","__offsetY","rx","ry","btw","brw","bbw","blw","iw","ih","ow","oh","tfo","__tox","__toy","tf","__matrix","addTransform","join","deg","exec","unshift","half","cx","cy","xx0","yy0","xx1","yy1","lg","createLinearGradient","addColorStop","rect","defs","add","addBackground","xl","yl","size","at","indexOf","by","min","sqrt","pow","rg","createRadialGradient","deg1","atan","deg2","isLast","xx4","yy2","yy4","xx2","e","force","event","covers","listener","outerWidth","outerHeight","cb","childWillResponse","hasOwnProperty","child","isGeom","__emitEvent","willResponseEvent","target","virtualDom","lhr","car","blr","mdr","lgr","RESET","borderSizing","fontFamily","fontStyle","fontWeight","lineHeight","borderTopLeftRadius","borderTopRightRadius","borderBottomLeftRadius","borderBottomRightRadius","verticalAlign","flexGrow","flexShrink","flexBasis","flexDirection","justifyContent","alignItems","textAlign","stroke","strokeWidth","strokeDasharray","reset","parserOneBorder","direction","key","calUnit","temp","background","gradient","flex","border","borderTop","borderRight","borderBottom","borderLeft","margin","padding","borderRadius","map","arr1","arr2","font","setFontStyle","getBaseLine","normal","LineBox","__content","fillText","CHAR_WIDTH_CACHE","Text","__lineBoxes","__charWidthList","__charWidth","__textWidth","charWidthList","cache","sum","char","mw","measureText","charWidth","isVirtual","maxX","lineBoxes","begin","count","lineBox","_this2","render","textWidth","baseLine","LineGroup","__list","__calBaseLine","IMPLEMENT","Geom","isDirectionRow","main","fixedHeight","fixedWidth","name","Error","implement","TAG_NAME","INLINE","Dom","__children","__flowChildren","__absChildren","__lineGroups","__flowY","__traverseChildren","_this3","__traverse","text","parentStyle","__initStyle","__measure","flowChildren","__tryLayInline","isRecursion","__calAutoBasis","min2","max2","__layout","__calAbs","Infinity","lineGroups","lineGroup","horizonAlign","growList","shrinkList","basisList","minList","growSum","shrinkSum","basisSum","maxSum","maxCross","isOverflow","shrink","grow","overflow","free","center","between","around","_this4","absChildren","container","flowY","pw","ph","__layoutAbs","w2","h2","width2","height2","widthPx","heightPx","elem","ovd","nvd","cns","childNodes","od","ol","nl","diffDef","diffDefs","diffBb","diffD2D","insertAdjacentHTML","parentNode","removeChild","setAttribute","o","removeAt","insertAt","diffChild","replaceWith","firstChild","lastChild","diffD2G","diffItem","diffT2T","diffG2D","equalArr","getAttribute","diffG2G","obb","nbb","isText","op","removeAttribute","textContent","index","html","Defs","id","Root","__node","undefined","isNaN","touches","node","getBoundingClientRect","clientX","clientY","addEventListener","__cb","dom","querySelector","getDom","__initProps","nodeName","toUpperCase","innerHTML","__genHtml","__uuid","getInstance","clear","getPropertyValue","getContext","clearRect","__karasInit","domDiff","__ovd","__od","__initEvent","__imageData","Line","__start","__end","__control","control","cx1","cy1","cx2","cy2","originX","originY","curve","strokeStyle","lineWidth","setLineDash","bezierCurveTo","quadraticCurveTo","Polyline","__points","origin","__origin","pts","__pts","Polygon","OFFSET","getCoordByDegree","Sector","__r","arc","large","Rect","Circle","Ellipse","__rx","__ry","ellipse","Grid","__nx","nx","__ny","ny","endX","endY","lx","ly","__dash","register","karas","appendTo","createVd","isValid","createGm","getImplement","createCp","cp"],"mappings":"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"}