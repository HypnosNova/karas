{"version":3,"file":"index.min.js","sources":["src/mode.js","src/node/Node.js","src/style/unit.js","src/node/Xom.js","src/style/font.js","src/style/reset.js","src/util.js","src/style/css.js","src/node/LineBox.js","src/node/Text.js","src/node/LineGroup.js","src/geom/Geom.js","src/node/Dom.js","src/domDiff.js","src/node/CS.js","src/geom/Line.js","src/geom/Polyline.js","src/geom/Polygon.js","src/geom/Sector.js","src/geom/Rect.js","src/geom/Circle.js","src/geom/Ellipse.js","src/geom/Grid.js","src/index.js"],"sourcesContent":["const CANVAS = 0;\nconst SVG = 1;\n\nlet div;\n\nexport default {\n  CANVAS,\n  SVG,\n  measure(s, style) {\n    if(!div) {\n      div = document.createElement('div');\n      div.style.position = 'absolute';\n      div.style.left = '99999px';\n      div.style.top = '-99999px';\n      div.style.visibility = 'hidden';\n      document.body.appendChild(div);\n    }\n    div.style.fontSize = style.fontSize + 'px';\n    div.innerText = s;\n    let css = window.getComputedStyle(div, null);\n    return parseFloat(css.width);\n  }\n};\n","class Node {\n  constructor() {\n    this.__x = 0;\n    this.__y = 0;\n    this.__width = 0;\n    this.__height = 0;\n    this.__prev = null;\n    this.__next = null;\n    this.__ctx = null; // canvas的context\n    this.__parent = null;\n    this.__style = {}; // style被解析后的k-v形式\n    this.__baseLine = 0;\n    this.__virtualDom = {};\n  }\n\n  __offsetX(diff) {\n    this.__x += diff;\n  }\n\n  __offsetY(diff) {\n    this.__y += diff;\n  }\n\n  get x() {\n    return this.__x;\n  }\n  get y() {\n    return this.__y;\n  }\n  get width() {\n    return this.__width;\n  }\n  get height() {\n    return this.__height;\n  }\n  get outerWidth() {\n    return this.__width;\n  }\n  get outerHeight() {\n    return this.__height;\n  }\n  get prev() {\n    return this.__prev;\n  }\n  get next() {\n    return this.__next;\n  }\n  get parent() {\n    return this.__parent;\n  }\n  get style() {\n    return this.__style;\n  }\n  get ctx() {\n    return this.__ctx;\n  }\n  get baseLine() {\n    return this.__baseLine;\n  }\n  get virtualDom() {\n    return this.__virtualDom;\n  }\n}\n\nexport default Node;\n","export default {\n  AUTO: 0,\n  PX: 1,\n  PERCENT: 2,\n};\n","import Node from './Node';\nimport mode from '../mode';\nimport unit from '../style/unit';\n\nfunction arr2hash(arr) {\n  let hash = {};\n  for(let i = 0, len = arr.length; i < len; i++) {\n    let item = arr[i];\n    if(Array.isArray(item)) {\n      hash[item[0]] = item[1];\n    }\n    else {\n      for(let list = Object.keys(item), j = list.length - 1; j >= 0; j--) {\n        let k = list[j];\n        hash[k] = item[k];\n      }\n    }\n  }\n  return hash;\n}\n\nfunction hash2arr(hash) {\n  let arr = [];\n  for(let list = Object.keys(hash), i = 0, len = list.length; i < len; i++) {\n    let k = list[i];\n    arr.push([k, hash[k]]);\n  }\n  return arr;\n}\n\nfunction spread(arr) {\n  for(let i = 0, len = arr.length; i < len; i++) {\n    let item = arr[i];\n    if(!Array.isArray(item)) {\n      let temp = [];\n      for(let list = Object.keys(item), j = 0, len = list.length; j < len; j++) {\n        let k = list[j];\n        temp.push([k, item[k]]);\n      }\n      arr.splice(i, 1, ...temp);\n    }\n  }\n  return arr;\n}\n\nclass Xom extends Node {\n  constructor(tagName, props) {\n    super();\n    props = props || [];\n    // 构建工具中都是arr，手写可能出现hash情况\n    if(Array.isArray(props)) {\n      this.props = arr2hash(props);\n      this.__props = spread(props);\n    }\n    else {\n      this.props = props;\n      this.__props = hash2arr(props);\n    }\n    this.__tagName = tagName;\n    this.__style = this.props.style || {}; // style被解析后的k-v形式\n    this.__listener = {};\n    this.__props.forEach(item => {\n      let k = item[0];\n      if(/^on[a-zA-Z]/.test(k)) {\n        this.__listener[k.slice(2).toLowerCase()] = item[1];\n      }\n    });\n    // margin和padding的宽度\n    this.__mtw = 0;\n    this.__mrw = 0;\n    this.__mbw = 0;\n    this.__mlw = 0;\n    this.__ptw = 0;\n    this.__prw = 0;\n    this.__pbw = 0;\n    this.__plw = 0;\n  }\n\n  __layout(data) {\n    let { w } = data;\n    let { style, style: {\n      display,\n      width,\n      marginTop,\n      marginRight,\n      marginBottom,\n      marginLeft,\n      paddingTop,\n      paddingRight,\n      paddingBottom,\n      paddingLeft,\n    } } = this;\n    if(display === 'none') {\n      return;\n    }\n    // 计算margin/padding，转换百分比\n    if(width && width.unit !== unit.AUTO) {\n      switch(width.unit) {\n        case unit.PX:\n          w = width.value;\n          break;\n        case unit.PERCENT:\n          w *= width.value * 0.01;\n          break;\n      }\n    }\n    this.__mlw = this.__mpWidth(marginLeft, w);\n    this.__mtw = this.__mpWidth(marginTop, w);\n    this.__mrw = this.__mpWidth(marginRight, w);\n    this.__mbw = this.__mpWidth(marginBottom, w);\n    this.__plw = this.__mpWidth(paddingLeft, w);\n    this.__ptw = this.__mpWidth(paddingTop, w);\n    this.__prw = this.__mpWidth(paddingRight, w);\n    this.__pbw = this.__mpWidth(paddingBottom, w);\n    if(display === 'block') {\n      this.__layoutBlock(data);\n    }\n    else if(display === 'flex') {\n      this.__layoutFlex(data);\n    }\n    else if(display === 'inline') {\n      this.__layoutInline(data);\n    }\n    // relative偏移\n    let { width: w2, height } = this.parent || this;\n    let {\n      position,\n      top,\n      right,\n      bottom,\n      left,\n    } = style;\n    if(position === 'relative') {\n      if(left.unit !== unit.AUTO) {\n        let diff = left.unit === unit.PX ? left.value : left.value * w2 * 0.01;\n        this.__offsetX(diff);\n      }\n      else if(right.unit !== unit.AUTO) {\n        let diff = right.unit === unit.PX ? right.value : right.value * w2 * 0.01;\n        this.__offsetX(-diff);\n      }\n      if(top.unit !== unit.AUTO) {\n        let diff = top.unit === unit.PX ? top.value : top.value * height * 0.01;\n        this.__offsetY(diff);\n      }\n      else if(bottom.unit !== unit.AUTO) {\n        let diff = bottom.unit === unit.PX ? bottom.value : bottom.value * height * 0.01;\n        this.__offsetY(-diff);\n      }\n    }\n  }\n\n  __mpWidth(mp, w) {\n    if(mp.unit === unit.PX) {\n      return mp.value;\n    }\n    else if(mp.unit === unit.PERCENT) {\n      return mp.value * w * 0.01;\n    }\n    return 0;\n  }\n\n  render(renderMode) {\n    this.__virtualDom = {\n      bb: [],\n    };\n    let { ctx, style, x, y, width, height, mlw, mtw, plw, ptw, prw, pbw, virtualDom } = this;\n    let {\n      display,\n      backgroundColor,\n      borderTopWidth,\n      borderTopColor,\n      borderTopStyle,\n      borderRightWidth,\n      borderRightColor,\n      borderRightStyle,\n      borderBottomWidth,\n      borderBottomColor,\n      borderBottomStyle,\n      borderLeftWidth,\n      borderLeftColor,\n      borderLeftStyle,\n    } = style;\n    if(display === 'none') {\n      return;\n    }\n    x += mlw;\n    y += mtw;\n    if(backgroundColor) {\n      let x1 = x;\n      if(borderLeftWidth) {\n        x1 += borderLeftWidth.value;\n      }\n      let y1 = y;\n      if(borderTopWidth) {\n        y1 += borderTopWidth.value;\n      }\n      let w = width + plw + prw;\n      let h = height + ptw + pbw;\n      if(renderMode === mode.CANVAS) {\n        ctx.beginPath();\n        ctx.fillStyle = backgroundColor;\n        ctx.rect(x1, y1, w, h);\n        ctx.fill();\n        ctx.closePath();\n      }\n      else if(renderMode === mode.SVG) {\n        virtualDom.bb.push({\n          type: 'item',\n          tagName: 'rect',\n          props: [\n            ['x', x1],\n            ['y', y1],\n            ['width', w],\n            ['height', h],\n            ['fill', backgroundColor]\n          ],\n        });\n      }\n    }\n    if(borderTopWidth.value) {\n      let x1 = x + borderLeftWidth.value;\n      let y1 = y + borderTopWidth.value * 0.5;\n      let x2 = x1 + width;\n      x2 += plw + prw;\n      if(renderMode === mode.CANVAS) {\n        ctx.beginPath();\n        ctx.lineWidth = borderTopWidth.value;\n        ctx.strokeStyle = borderTopColor;\n        if(borderTopStyle === 'dashed') {\n          ctx.setLineDash([borderTopWidth.value * 3, borderTopWidth.value * 2]);\n        }\n        else if(borderTopStyle === 'dotted') {\n          ctx.setLineDash([borderTopWidth.value, borderTopWidth.value]);\n        }\n        else {\n          ctx.setLineDash([]);\n        }\n        ctx.moveTo(x1, y1);\n        ctx.lineTo(x2, y1);\n        ctx.stroke();\n        ctx.closePath();\n      }\n      else if(renderMode === mode.SVG) {\n        let item = {\n          type: 'item',\n          tagName: 'line',\n          props: [\n            ['x1', x1],\n            ['y1', y1],\n            ['x2', x2],\n            ['y2', y1],\n            ['stroke-width', borderTopWidth.value],\n            ['stroke', borderTopColor]\n          ],\n        };\n        if(borderTopStyle === 'dashed') {\n          item.props.push(['stroke-dasharray', `${borderTopWidth.value * 3}, ${borderTopWidth.value * 2}`])\n        }\n        else if(borderTopStyle === 'dotted') {\n          item.props.push(['stroke-dasharray', `${borderTopWidth.value}, ${borderTopWidth.value}`])\n        }\n        virtualDom.bb.push(item);\n      }\n    }\n    if(borderRightWidth.value) {\n      let x1 = x + width + borderLeftWidth.value + borderRightWidth.value * 0.5;\n      let y1 = y;\n      let y2 = y1 + height + borderTopWidth.value + borderBottomWidth.value;\n      x1 += plw + prw;\n      y2 += ptw + pbw;\n      if(renderMode === mode.CANVAS) {\n        ctx.beginPath();\n        ctx.lineWidth = borderRightWidth.value;\n        ctx.strokeStyle = borderRightColor;\n        if(borderRightStyle === 'dashed') {\n          ctx.setLineDash([borderRightWidth.value * 3, borderRightWidth.value * 2]);\n        }\n        else if(borderRightStyle === 'dotted') {\n          ctx.setLineDash([borderRightWidth.value, borderRightWidth.value * 2]);\n        }\n        else {\n          ctx.setLineDash([]);\n        }\n        ctx.moveTo(x1, y1);\n        ctx.lineTo(x1, y2);\n        ctx.stroke();\n        ctx.closePath();\n      }\n      else if(renderMode === mode.SVG) {\n        let item = {\n          type: 'item',\n          tagName: 'line',\n          props: [\n            ['x1', x1],\n            ['y1', y1],\n            ['x2', x1],\n            ['y2', y2],\n            ['stroke-width', borderRightWidth.value],\n            ['stroke', borderRightColor]\n          ],\n        };\n        if(borderRightStyle === 'dashed') {\n          item.props.push(['stroke-dasharray', `${borderRightWidth.value * 3}, ${borderRightWidth.value * 2}`])\n        }\n        else if(borderTopStyle === 'dotted') {\n          item.props.push(['stroke-dasharray', `${borderRightWidth.value}, ${borderRightWidth.value}`])\n        }\n        virtualDom.bb.push(item);\n      }\n    }\n    if(borderBottomWidth.value) {\n      let x1 = x + borderLeftWidth.value;\n      let y1 = y + height + borderTopWidth.value + borderBottomWidth.value * 0.5;\n      let x2 = x1 + width;\n      x2 += plw + prw;\n      y1 += ptw + pbw;\n      if(renderMode === mode.CANVAS) {\n        ctx.beginPath();\n        ctx.lineWidth = borderBottomWidth.value;\n        ctx.strokeStyle = borderBottomColor;\n        if(borderBottomStyle === 'dashed') {\n          ctx.setLineDash([borderBottomWidth.value * 3, borderBottomWidth.value * 2]);\n        }\n        else if(borderBottomStyle === 'dotted') {\n          ctx.setLineDash([borderBottomWidth.value, borderBottomWidth.value * 2]);\n        }\n        else {\n          ctx.setLineDash([]);\n        }\n        ctx.moveTo(x1, y1);\n        ctx.lineTo(x2, y1);\n        ctx.stroke();\n        ctx.closePath();\n      }\n      else if(renderMode === mode.SVG) {\n        let item = {\n          type: 'item',\n          tagName: 'line',\n          props: [\n            ['x1', x1],\n            ['y1', y1],\n            ['x2', x2],\n            ['y2', y1],\n            ['stroke-width', borderBottomWidth.value],\n            ['stroke', borderBottomColor]\n          ],\n        };\n        if(borderBottomStyle === 'dashed') {\n          item.props.push(['stroke-dasharray', `${borderBottomWidth.value * 3}, ${borderBottomWidth.value * 2}`])\n        }\n        else if(borderBottomStyle === 'dotted') {\n          item.props.push(['stroke-dasharray', `${borderBottomWidth.value}, ${borderBottomWidth.value}`])\n        }\n        virtualDom.bb.push(item);\n      }\n    }\n    if(borderLeftWidth.value) {\n      let x1 = x + borderLeftWidth.value * 0.5;\n      let y1 = y;\n      let y2 = y1 + height + borderTopWidth.value + borderBottomWidth.value;\n      y2 += ptw + pbw;\n      if(renderMode === mode.CANVAS) {\n        ctx.beginPath();\n        ctx.lineWidth = borderLeftWidth.value;\n        ctx.strokeStyle = borderLeftColor;\n        if(borderLeftStyle === 'dashed') {\n          ctx.setLineDash([borderLeftWidth.value * 3, borderLeftWidth.value * 2]);\n        }\n        else if(borderLeftStyle === 'dotted') {\n          ctx.setLineDash([borderLeftWidth.value, borderLeftWidth.value * 2]);\n        }\n        else {\n          ctx.setLineDash([]);\n        }\n        ctx.moveTo(x1, y1);\n        ctx.lineTo(x1, y2);\n        ctx.stroke();\n        ctx.closePath();\n      }\n      else if(renderMode === mode.SVG) {\n        let item = {\n          type: 'item',\n          tagName: 'line',\n          props: [\n            ['x1', x1],\n            ['y1', y1],\n            ['x2', x1],\n            ['y2', y2],\n            ['stroke-width', borderLeftWidth.value],\n            ['stroke', borderLeftColor]\n          ],\n        };\n        if(borderLeftStyle === 'dashed') {\n          item.props.push(['stroke-dasharray', `${borderLeftWidth.value * 3}, ${borderLeftWidth.value * 2}`])\n        }\n        else if(borderLeftStyle === 'dotted') {\n          item.props.push(['stroke-dasharray', `${borderLeftWidth.value}, ${borderLeftWidth.value}`])\n        }\n        virtualDom.bb.push(item);\n      }\n    }\n  }\n\n  get tagName() {\n    return this.__tagName;\n  }\n  get mtw() {\n    return this.__mtw;\n  }\n  get mrw() {\n    return this.__mrw;\n  }\n  get mbw() {\n    return this.__mbw;\n  }\n  get mlw() {\n    return this.__mlw;\n  }\n  get ptw() {\n    return this.__ptw;\n  }\n  get prw() {\n    return this.__prw;\n  }\n  get pbw() {\n    return this.__pbw;\n  }\n  get plw() {\n    return this.__plw;\n  }\n  get outerWidth() {\n    let { mlw, mrw, plw, prw, style: {\n      borderLeftWidth,\n      borderRightWidth,\n    } } = this;\n    return this.width\n      + borderLeftWidth.value\n      + borderRightWidth.value\n      + mlw\n      + mrw\n      + plw\n      + prw;\n  }\n  get outerHeight() {\n    let { mtw, mbw, ptw, pbw, style: {\n      borderTopWidth,\n      borderBottomWidth,\n    } } = this;\n    return this.height\n      + borderTopWidth.value\n      + borderBottomWidth.value\n      + mtw\n      + mbw\n      + ptw\n      + pbw;\n  }\n  get listener() {\n    return this.__listener;\n  }\n}\n\nexport default Xom;\n","'use strict';\n\nexport default {\n  arial: {\n    lhr: 1.14990234375, // 默认line-height ratio，(67+1854+434)/2048\n    car: 1.1171875, // content-area ratio，(1854+434)/2048\n    blr: 0.9052734375, // base-line ratio，1854/2048\n    mdr: 0.64599609375, // middle ratio，(1854-1062/2)/2048\n    lgr: 0.03271484375, // line-gap ratio，67/2048\n  },\n};\n","const RESET = {\n  position: 'static',\n  display: 'block',\n  borderSizing: 'content-box',\n  top: 'auto',\n  right: 'auto',\n  bottom: 'auto',\n  left: 'auto',\n  marginTop: 0,\n  marginRight: 0,\n  marginBottom: 0,\n  marginLeft: 0,\n  paddingTop: 0,\n  paddingRight: 0,\n  paddingBottom: 0,\n  paddingLeft: 0,\n  fontSize: 16,\n  fontFamily: 'arial',\n  color: '#000',\n  fontStyle: 'normal',\n  fontWeight: 400,\n  lineHeight: 'normal',\n  borderTopWidth: 0,\n  borderRightWidth: 0,\n  borderBottomWidth: 0,\n  borderLeftWidth: 0,\n  borderTopStyle: 'solid',\n  borderRightStyle: 'solid',\n  borderBottomStyle: 'solid',\n  borderLeftStyle: 'solid',\n  verticalAlign: 'baseline',\n  width: 'auto',\n  height: 'auto',\n  flexGrow: 0,\n  flexShrink: 1,\n  flexBasis: 'auto',\n  flexDirection: 'row',\n  justifyContent: 'flex-start',\n  alignItems: 'stretch',\n  textAlign: 'left',\n  visibility: 'visible',\n  fill: '#000',\n  stroke: '#000',\n  strokeWidth: 0,\n  strokeDasharray: [],\n};\n\nlet reset = [];\n\nObject.keys(RESET).forEach(k => {\n  let v = RESET[k];\n  reset.push({\n    k,\n    v,\n  });\n});\n\nexport default reset;\n","let toString = {}.toString;\nfunction isType(type) {\n  return function(obj) {\n    return toString.call(obj) === '[object ' + type + ']';\n  }\n}\n\nlet isNumber = isType('Number');\n\nfunction joinSourceArray(arr) {\n  var res = '';\n  for(var i = 0, len = arr.length; i < len; i++) {\n    var item = arr[i];\n    if(Array.isArray(item)) {\n      res += joinSourceArray(item);\n    }\n    else {\n      res += stringify(item);\n    }\n  }\n  return res;\n}\n\nfunction stringify(s) {\n  if(isNil(s)) {\n    return '';\n  }\n  return s.toString();\n}\n\nfunction encodeHtml(s, prop) {\n  if(prop) {\n    return s.replace(/\"/g, '&quot;');\n  }\n  return s.replace(/&/g, '&amp;').replace(/</g, '&lt;');\n}\n\nfunction isNil(v) {\n  return v === undefined || v === null;\n}\n\nfunction joinVirtualDom(vd) {\n  if(vd.type === 'item') {\n    let s = '';\n    vd.props.forEach(item => {\n      s += ` ${item[0]}=\"${item[1]}\"`;\n    });\n    if(vd.tagName === 'text') {\n      return `<text${s}>${vd.content}</text>`;\n    }\n    return `<${vd.tagName}${s}/>`;\n  }\n  else if(vd.type === 'text') {\n    let s = ``;\n    vd.children.forEach(item => {\n      s += joinVirtualDom(item);\n    });\n    return `<g>${s}</g>`;\n  }\n  else if(vd.type === 'dom') {\n    let s = '<g>';\n    vd.bb.forEach(item => {\n      s += joinVirtualDom(item);\n    });\n    s += '</g><g>';\n    vd.children.forEach(item => {\n      s += joinVirtualDom(item);\n    });\n    s += '</g>';\n    return `<g>${s}</g>`;\n  }\n  else if(vd.type === 'geom') {\n    let s = '<g>';\n    vd.bb.forEach(item => {\n      s += joinVirtualDom(item);\n    });\n    s += '</g><g>';\n    vd.content.forEach(item => {\n      s += joinVirtualDom(item);\n    });\n    s += '</g>';\n    return `<g>${s}</g>`;\n  }\n}\n\nlet util = {\n  isObject: isType('Object'),\n  isString: isType('String'),\n  isFunction: isType('Function'),\n  isNumber,\n  isBoolean: isType('Boolean'),\n  isDate: isType('Date'),\n  stringify,\n  joinSourceArray(arr) {\n    return joinSourceArray(arr);\n  },\n  encodeHtml,\n  isNil,\n  joinVirtualDom,\n};\n\nexport default util;\n","import unit from './unit';\nimport font from './font';\nimport reset from './reset';\nimport util from '../util';\n\nfunction parserOneBorder(style, direction) {\n  let key = `border${direction}`;\n  if(!style[key]) {\n    return;\n  }\n  let w = /\\b\\d+px\\b/i.exec(style[key]);\n  if(w) {\n    style[key + 'Width'] = w[0];\n  }\n  let s = /\\b(solid|dashed|dotted)\\b/i.exec(style[key]);\n  if(s) {\n    style[key + 'Style'] = s[1];\n  }\n  let c = /#[0-9a-f]{3,6}/i.exec(style[key]);\n  if(c && [4, 7].indexOf(c[0].length) > -1) {\n    style[key + 'Color'] = c[0];\n  }\n}\n\nfunction normalize(style) {\n  // 默认reset\n  reset.forEach(item => {\n    if(!style.hasOwnProperty(item.k)) {\n      style[item.k] = item.v;\n    }\n  });\n  // 处理缩写\n  // TODO: 重复声明时优先级\n  if(style.background) {\n    let bgc = /#[0-9a-f]{3,6}/i.exec(style.background);\n    if(bgc && [4, 7].indexOf(bgc[0].length) > -1) {\n      style.backgroundColor = bgc[0];\n    }\n  }\n  if(style.flex) {\n    if(style.flex === 'none') {\n      style.flexGrow = 0;\n      style.flexShrink = 0;\n      style.flexBasis = 'auto';\n    }\n    else if(style.flex === 'auto') {\n      style.flexGrow = 1;\n      style.flexShrink = 1;\n      style.flexBasis = 'auto';\n    }\n    else if(/^[\\d.]+$/.test(style.flex)) {\n      style.flexGrow = parseFloat(style.flex);\n      style.flexShrink = 1;\n      style.flexBasis = 0;\n    }\n    else if(/^[\\d.]+px$/.test(style.flex)) {}\n    else if(/^[\\d.]+%$/.test(style.flex)) {}\n    else {\n      style.flexGrow = 0;\n      style.flexShrink = 1;\n      style.flexBasis = 'auto';\n    }\n  }\n  if(style.border) {\n    style.borderTop = style.borderRight = style.borderBottom = style.borderLeft = style.border;\n  }\n  if(style.margin) {\n    style.marginTop = style.marginRight = style.marginBottom = style.marginLeft = style.margin;\n  }\n  if(style.padding) {\n    style.paddingTop = style.paddingRight = style.paddingBottom = style.paddingLeft = style.padding;\n  }\n  parserOneBorder(style, 'Top');\n  parserOneBorder(style, 'Right');\n  parserOneBorder(style, 'Bottom');\n  parserOneBorder(style, 'Left');\n  // 转化不同单位值为对象标准化\n  [\n    'marginTop',\n    'marginRight',\n    'marginBottom',\n    'marginLeft',\n    'paddingTop',\n    'paddingRight',\n    'paddingBottom',\n    'paddingLeft',\n    'borderTopWidth',\n    'borderRightWidth',\n    'borderBottomWidth',\n    'borderLeftWidth',\n    'top',\n    'right',\n    'bottom',\n    'left',\n    'width',\n    'height',\n    'flexBasis',\n  ].forEach(k => {\n    let v = style[k];\n    // 编译工具前置解析优化跳出\n    if(!util.isNil(v) && v.unit) {\n      return;\n    }\n    if(v === 'auto') {\n      style[k] = {\n        unit: unit.AUTO,\n      };\n    }\n    else if(/%$/.test(v)) {\n      v = parseFloat(v) || 0;\n      style[k] = {\n        value: v,\n        unit: unit.PERCENT,\n      };\n    }\n    else {\n      v = parseFloat(v) || 0;\n      style[k] = {\n        value: v,\n        unit: unit.PX,\n      };\n    }\n  });\n  // 计算lineHeight为px值，最小范围\n  let lineHeight = style.lineHeight;\n  if(lineHeight === 'normal') {\n    lineHeight = {\n      value: style.fontSize * font.arial.lhr,\n      unit: unit.PX,\n    };\n  }\n  else if(/px$/.test(lineHeight)) {\n    lineHeight = parseFloat(lineHeight);\n    lineHeight = {\n      value: Math.max(style.fontSize, lineHeight),\n      unit: unit.PX,\n    };\n  }\n  // 纯数字比例\n  else {\n    lineHeight = parseFloat(lineHeight) || 'normal';\n    // 非法数字\n    if(lineHeight === 'normal') {\n      lineHeight = {\n        value: style.fontSize * font.arial.lhr,\n        unit: unit.PX,\n      };\n    }\n    else {\n      lineHeight = {\n        value: lineHeight * style.fontSize,\n        unit: unit.PX,\n      };\n    }\n  }\n  style.lineHeight = lineHeight;\n}\n\nfunction setFontStyle(style) {\n  let { fontStyle, fontWeight, fontSize, fontFamily } = style;\n  return `${fontStyle} ${fontWeight} ${fontSize}px/${fontSize}px ${fontFamily}`;\n}\n\nfunction getBaseLine(style) {\n  let normal = style.fontSize * font.arial.lhr;\n  return (style.lineHeight.value - normal) * 0.5 + style.fontSize * font.arial.blr;\n}\n\nexport default {\n  normalize,\n  setFontStyle,\n  getBaseLine,\n};\n","import css from '../style/css';\nimport mode from '../mode';\n\nclass LineBox {\n  constructor(x, y, w, content, style) {\n    this.__x = x;\n    this.__y = y;\n    this.__width = w;\n    this.__content = content;\n    this.__style = style;\n    this.__virtualDom = {};\n  }\n\n  render(renderMode, ctx) {\n    let { style, content, x, y } = this;\n    y += css.getBaseLine(style);\n    if(renderMode === mode.CANVAS) {\n      ctx.fillText(content, x, y);\n    }\n    else if(renderMode === mode.SVG) {\n      this.__virtualDom = {\n        type: 'item',\n        tagName: 'text',\n        props: [\n          ['x', x],\n          ['y', y],\n          ['fill', style.color],\n          ['font-size', `${style.fontSize}px`]\n        ],\n        content,\n      };\n      // mode.appendHtml(`<text x=\"${x}\" y=\"${y + css.getBaseLine(style)}\" fill=\"${style.color}\" font-size=\"${style.fontSize}px\">${content}</text>`);\n    }\n  }\n\n  __offsetX(diff) {\n    this.__x += diff;\n  }\n\n  __offsetY(diff) {\n    this.__y += diff;\n  }\n\n  get x() {\n    return this.__x;\n  }\n  get y() {\n    return this.__y;\n  }\n  get width() {\n    return this.__width;\n  }\n  get content() {\n    return this.__content;\n  }\n  get style() {\n    return this.__style;\n  }\n  get baseLine() {\n    return css.getBaseLine(this.style);\n  }\n  get virtualDom() {\n    return this.__virtualDom;\n  }\n}\n\nexport default LineBox;\n","import Node from './Node';\nimport LineBox from './LineBox';\nimport css from '../style/css';\nimport mode from '../mode';\n\nconst CHAR_WIDTH_CACHE = {};\n\nclass Text extends Node {\n  constructor(content) {\n    super();\n    this.__content = content.toString();\n    this.__lineBoxes = [];\n    this.__charWidthList = [];\n    this.__charWidth = 0;\n    this.__textWidth = 0;\n  }\n\n  // 预先计算每个字的宽度\n  __measure() {\n    this.__charWidthList = [];\n    let { ctx, content, style, charWidthList, renderMode } = this;\n    if(renderMode === mode.CANVAS) {\n      ctx.font = css.setFontStyle(style);\n    }\n    let cache = CHAR_WIDTH_CACHE[style.fontSize] = CHAR_WIDTH_CACHE[style.fontSize] || {};\n    let length = content.length;\n    let sum = 0;\n    for(let i = 0; i < length; i++) {\n      let char = content.charAt(i);\n      let mw;\n      if(cache.hasOwnProperty(char)) {\n        mw = cache[char];\n      }\n      else if(renderMode === mode.CANVAS) {\n        mw = cache[char] = ctx.measureText(char).width;\n      }\n      else if(renderMode === mode.SVG) {\n        mw = cache[char] = mode.measure(char, style);\n      }\n      charWidthList.push(mw);\n      sum += mw;\n      this.__charWidth = Math.max(this.charWidth, mw);\n    }\n    this.__textWidth = sum;\n  }\n\n  __layout(data, isVirtual) {\n    let { x, y, w, h } = data;\n    this.__x = x;\n    this.__y = y;\n    let maxX = x;\n    let { ctx, content, style, lineBoxes, charWidthList, renderMode } = this;\n    // 顺序尝试分割字符串为lineBox，形成多行\n    let begin = 0;\n    let i = 0;\n    let count = 0;\n    let length = content.length;\n    while(i < length) {\n      count += charWidthList[i];\n      if (count === w) {\n        let lineBox = new LineBox(x, y, count, content.slice(begin, i + 1), style);\n        lineBoxes.push(lineBox);\n        maxX = Math.max(maxX, x + count);\n        y += this.style.lineHeight.value;\n        begin = i + 1;\n        i = begin + 1;\n        count = 0;\n      }\n      else if (count > w) {\n        // 宽度不足时无法跳出循环，至少也要塞个字符形成一行\n        if(i === begin) {\n          i = begin + 1;\n        }\n        let lineBox = new LineBox(x, y, count - charWidthList[i], content.slice(begin, i), style);\n        lineBoxes.push(lineBox);\n        maxX = Math.max(maxX, x + count - charWidthList[i]);\n        y += this.style.lineHeight.value;\n        begin = i;\n        i = i + 1;\n        count = 0;\n      }\n      else {\n        i++;\n      }\n    }\n    if(begin < length && begin < i) {\n      count = 0;\n      for(i = begin ;i < length; i++) {\n        count += charWidthList[i];\n      }\n      let lineBox = new LineBox(x, y, count, content.slice(begin, length), style);\n      lineBoxes.push(lineBox);\n      maxX = Math.max(maxX, x + count);\n      y += style.lineHeight.value;\n    }\n    this.__width = maxX - x;\n    this.__height = y - data.y;\n    if(isVirtual) {\n      this.__lineBoxes = [];\n    }\n    else {\n      let { textAlign } = style;\n      if(['center', 'right'].indexOf(textAlign) > -1) {\n        lineBoxes.forEach(lineBox => {\n          let diff = this.__width - lineBox.width;\n          if(diff > 0) {\n            lineBox.__offsetX(textAlign === 'center' ? diff * 0.5 : diff);\n          }\n        });\n      }\n    }\n  }\n\n  render(renderMode) {\n    const { ctx, style } = this;\n    if(renderMode === mode.CANVAS) {\n      ctx.font = css.setFontStyle(style);\n      ctx.fillStyle = style.color;\n    }\n    this.lineBoxes.forEach(item => {\n      item.render(renderMode, ctx);\n    });\n    if(renderMode === mode.SVG) {\n      this.__virtualDom = {\n        type: 'text',\n        children: this.lineBoxes.map(lineBox => lineBox.virtualDom),\n      };\n    }\n  }\n\n  __tryLayInline(w) {\n    return w - this.textWidth;\n  }\n\n  __offsetX(diff) {\n    super.__offsetX(diff);\n    this.lineBoxes.forEach(item => {\n      item.__offsetX(diff);\n    });\n  }\n\n  __offsetY(diff) {\n    super.__offsetY(diff);\n    this.lineBoxes.forEach(item => {\n      item.__offsetY(diff);\n    });\n  }\n\n  __calMaxAndMinWidth() {\n    let n = 0;\n    this.charWidthList.forEach(item => {\n      n = Math.max(n, item);\n    });\n    return { max: this.textWidth, min: n };\n  }\n\n  get content() {\n    return this.__content;\n  }\n  set content(v) {\n    this.__content = v;\n  }\n  get lineBoxes() {\n    return this.__lineBoxes;\n  }\n  get charWidthList() {\n    return this.__charWidthList;\n  }\n  get charWidth() {\n    return this.__charWidth;\n  }\n  get textWidth() {\n    return this.__textWidth;\n  }\n  get baseLine() {\n    let last = this.lineBoxes[this.lineBoxes.length - 1];\n    return last.y - this.y + last.baseLine;\n  }\n  get renderMode() {\n    return this.__renderMode;\n  }\n}\n\nexport default Text;\n","class LineGroup {\n  constructor(x, y) {\n    this.__list = [];\n    this.__x = x;\n    this.__y = y;\n    this.__baseLine = 0;\n  }\n\n  add(item) {\n    this.list.push(item);\n  }\n\n  __calBaseLine() {\n    let baseLine = 0;\n    this.list.forEach(item => {\n      baseLine = Math.max(baseLine, item.baseLine);\n    });\n    return baseLine;\n  }\n\n  verticalAlign() {\n    this.__baseLine = this.__calBaseLine();\n    // 仅当有2个和以上时才需要vertical对齐调整\n    if(this.list.length > 1) {\n      this.list.forEach(item => {\n        if(item.baseLine !== this.baseLine) {\n          item.__offsetY(this.baseLine - item.baseLine);\n        }\n      });\n    }\n  }\n\n  horizonAlign(diff) {\n    this.list.forEach(item => {\n      item.__offsetX(diff);\n    });\n  }\n\n  get list() {\n    return this.__list;\n  }\n  get x() {\n    return this.__x;\n  }\n  get y() {\n    return this.__y;\n  }\n  get width() {\n    let width = 0;\n    this.list.forEach(item => {\n      width += item.width;\n    });\n    return width;\n  }\n  get height() {\n    let height = 0;\n    this.list.forEach(item => {\n      height = Math.max(height, item.height);\n    });\n    return height;\n  }\n  get baseLine() {\n    return this.__baseLine;\n  }\n  get size() {\n    return this.__list.length;\n  }\n}\n\nexport default LineGroup;\n","import Xom from '../node/Xom';\nimport css from '../style/css';\nimport unit from '../style/unit';\nimport mode from '../mode';\n\nconst IMPLEMENT = {};\n\nclass Geom extends Xom {\n  constructor(tagName, props) {\n    super(tagName, props);\n  }\n\n  __initStyle() {\n    css.normalize(this.style);\n  }\n\n  __tryLayInline(w, total) {\n    // 无children，直接以style的width为宽度，不定义则为0\n    let { style: { width } } = this;\n    if(width.unit === unit.PX) {\n      return w - width.value;\n    }\n    else if(width.unit === unit.PERCENT) {\n      return w - total * width.value * 0.01;\n    }\n    return w;\n  }\n\n  __calAutoBasis(isDirectionRow, w, h) {\n    let b = 0;\n    let min = 0;\n    let max = 0;\n    let { style } = this;\n    // 计算需考虑style的属性\n    let {\n      width,\n      height,\n      borderTopWidth,\n      borderRightWidth,\n      borderBottomWidth,\n      borderLeftWidth,\n    } = style;\n    let main = isDirectionRow ? width : height;\n    if(main.unit !== unit.AUTO) {\n      b = max += main.value;\n    }\n    // border也得计算在内\n    if(isDirectionRow) {\n      let w = borderRightWidth.value + borderLeftWidth.value;\n      b += w;\n      max += w;\n      min += w;\n    }\n    else {\n      let h = borderTopWidth.value + borderBottomWidth.value;\n      b += h;\n      max += h;\n      min += h;\n    }\n    return { b, min, max };\n  }\n\n  __layoutBlock(data) {\n    let { x, y, w, h } = data;\n    this.__x = x;\n    this.__y = y;\n    this.__width = w;\n    let { style } = this;\n    let {\n      width,\n      height,\n      borderTopWidth,\n      borderRightWidth,\n      borderBottomWidth,\n      borderLeftWidth,\n    } = style;\n    // 除了auto外都是固定高度\n    let fixedHeight;\n    if(width && width.unit !== unit.AUTO) {\n      switch(width.unit) {\n        case unit.PX:\n          w = width.value;\n          break;\n      }\n    }\n    if(height && height.unit !== unit.AUTO) {\n      fixedHeight = true;\n      switch(height.unit) {\n        case unit.PX:\n          h = height.value;\n          break;\n        case unit.PERCENT:\n          h *= height.value * 0.01;\n          break;\n      }\n    }\n    // border影响x和y和尺寸\n    x += borderLeftWidth.value;\n    data.x = x;\n    y += borderTopWidth.value;\n    data.y = y;\n    w -= borderLeftWidth.value + borderRightWidth.value;\n    h -= borderTopWidth.value + borderBottomWidth.value;\n    this.__width = w;\n    this.__height = fixedHeight ? h : 0;\n  }\n\n  __layoutFlex(data) {\n    // 无children所以等同于block\n    this.__layoutBlock(data);\n  }\n\n  __layoutInline(data) {\n    let { x, y, w, h } = data;\n    this.__x = x;\n    this.__y = y;\n    let { style } = this;\n    let {\n      width,\n      height,\n      borderTopWidth,\n      borderRightWidth,\n      borderBottomWidth,\n      borderLeftWidth,\n    } = style;\n    // 除了auto外都是固定高度\n    let fixedWidth;\n    let fixedHeight;\n    if(width && width.unit !== unit.AUTO) {\n      fixedWidth = true;\n      switch(width.unit) {\n        case unit.PX:\n          w = width.value;\n          break;\n      }\n    }\n    if(height && height.unit !== unit.AUTO) {\n      fixedHeight = true;\n      switch(height.unit) {\n        case unit.PX:\n          h = height.value;\n          break;\n      }\n    }\n    // border影响x和y\n    x += borderLeftWidth.value;\n    data.x = x;\n    y += borderTopWidth.value;\n    data.y = y;\n    w -= borderLeftWidth.value + borderRightWidth.value;\n    h -= borderTopWidth.value + borderBottomWidth.value;\n    // 元素的width不能超过父元素w\n    this.__width = fixedWidth ? w : x - data.x;\n    this.__height = fixedHeight ? h : y - data.y;\n  }\n\n  __calAbs() {\n    return 0;\n  }\n\n  __emitEvent(e, force) {\n    let { event: { type }, x: xe, y: ye, covers } = e;\n    let { listener, style, x, y, outerWidth, outerHeight } = this;\n    if(style.display === 'none') {\n      return;\n    }\n    let cb;\n    if(listener.hasOwnProperty(type)) {\n      cb = listener[type];\n    }\n    if(force) {\n      cb && cb(e);\n      return;\n    }\n    if(xe >= x && ye >= y && xe <= x + outerWidth && ye <= y + outerHeight) {\n      for(let i = 0, len = covers.length; i < len; i++) {\n        let { x: x2, y: y2, w, h: h } = covers[i];\n        if(xe >= x2 && ye >= y2 && xe <= x2 + w && ye <= y2 + h) {\n          return;\n        }\n      }\n      if(!e.target) {\n        e.target = this;\n      }\n      covers.push({\n        x,\n        y,\n        w: outerWidth,\n        h: outerHeight,\n      });\n      cb && cb(e);\n    }\n  }\n\n  render(renderMode) {\n    super.render(renderMode);\n    if(renderMode === mode.SVG) {\n      this.__virtualDom = {\n        ...super.virtualDom,\n        type: 'geom',\n        content: [],\n      };\n    }\n  }\n\n  get tagName() {\n    return this.__tagName;\n  }\n  get baseLine() {\n    return this.__height;\n  }\n\n  static getImplement(name) {\n    if(!IMPLEMENT.hasOwnProperty(name)) {\n      throw new Error(`Geom has not register: ${name}`);\n    }\n    return IMPLEMENT[name];\n  }\n  static register(name, implement) {\n    if(IMPLEMENT.hasOwnProperty(name)) {\n      throw new Error(`Geom has already register: ${name}`);\n    }\n    IMPLEMENT[name] = implement;\n  }\n}\n\nexport default Geom;\n","import Xom from './Xom';\nimport Text from './Text';\nimport LineGroup from './LineGroup';\nimport Geom from '../geom/Geom';\nimport util from '../util';\nimport css from '../style/css';\nimport unit from '../style/unit';\nimport mode from '../mode';\n\nconst TAG_NAME = {\n  'div': true,\n  'span': true,\n};\nconst INLINE = {\n  'span': true,\n};\n\nclass Dom extends Xom {\n  constructor(tagName, props, children) {\n    super(tagName, props);\n    this.__children = children;\n    this.__flowChildren = []; // 非绝对定位孩子\n    this.__absChildren = []; // 绝对定位孩子\n    this.__lineGroups = []; // 一行inline元素组成的LineGroup对象后的存放列表\n    this.__flowY = 0; // 文档流布局结束后的y坐标，供absolute布局默认位置使用\n  }\n\n  /**\n   * 1. 封装string为Text节点\n   * 2. 打平children中的数组，变成一维\n   * 3. 合并相连的Text节点\n   * 4. 检测inline不能包含block和flex\n   * 5. 设置parent和prev/next和ctx和mode\n   */\n  __traverse(ctx, renderMode) {\n    let list = [];\n    this.__traverseChildren(this.children, list, ctx, renderMode);\n    for(let i = list.length - 1; i > 0; i--) {\n      let item = list[i];\n      if(item instanceof Text) {\n        let prev = list[i - 1];\n        if(prev instanceof Text) {\n          prev.content += item.content;\n          list.splice(i, 1);\n        }\n        else {\n          i--;\n        }\n      }\n    }\n    if(this.style.display === 'inline' && this.parent.style.display !== 'flex') {\n      for(let i = list.length - 1; i >= 0; i--) {\n        let item = list[i];\n        if(item instanceof Dom && item.style.display !== 'inline') {\n          throw new Error('inline can not contain block/flex');\n        }\n      }\n    }\n    let prev = null;\n    list.forEach(item => {\n      item.__ctx = ctx;\n      if(prev) {\n        prev.__next = item;\n      }\n      item.__parent = this;\n      item.__prev = prev;\n      if(item instanceof Text || item.style.position !== 'absolute') {\n        this.__flowChildren.push(item);\n      }\n      else {\n        this.__absChildren.push(item);\n      }\n    });\n    this.__children = list;\n  }\n\n  __traverseChildren(children, list, ctx, renderMode) {\n    if(Array.isArray(children)) {\n      children.forEach(item => {\n        this.__traverseChildren(item, list, ctx, renderMode);\n      });\n    }\n    else if(children instanceof Dom) {\n      list.push(children);\n      children.__traverse(ctx, renderMode);\n    }\n    // 图形没有children\n    else if(children instanceof Geom) {\n      list.push(children);\n    }\n    // 排除掉空的文本\n    else if(!util.isNil(children)) {\n      let text = new Text(children);\n      text.__renderMode = renderMode;\n      list.push(text);\n    }\n  }\n\n  // 合并设置style，包括继承和默认值，修改一些自动值和固定值，测量所有文字的宽度\n  __initStyle() {\n    let style = this.__style;\n    // 仅支持flex/block/inline/none\n    if(!style.display || ['flex', 'block', 'inline', 'none'].indexOf(style.display) === -1) {\n      if(INLINE.hasOwnProperty(this.tagName)) {\n        style.display = 'inline';\n      }\n      else {\n        style.display = 'block';\n      }\n    }\n    // 继承父元素样式\n    let parent = this.parent;\n    if(parent) {\n      let parentStyle = parent.style;\n      ['fontSize', 'fontWeight', 'fontStyle', 'lineHeight', 'wordBreak', 'color', 'textAlign'].forEach(k => {\n        if(!style.hasOwnProperty(k) && parentStyle.hasOwnProperty(k)) {\n          style[k] = parentStyle[k];\n        }\n      });\n    }\n    // 标准化处理，默认值、简写属性\n    css.normalize(style);\n    this.children.forEach(item => {\n      if(item instanceof Xom) {\n        item.__initStyle();\n      }\n      else {\n        item.__style = style;\n        // 文字首先测量所有字符宽度\n        item.__measure();\n      }\n    });\n  }\n\n  // 给定父宽度情况下，尝试行内放下后的剩余宽度，为负数即放不下\n  __tryLayInline(w, total) {\n    let { flowChildren, style: { width } } = this;\n    if(width.unit === unit.PX) {\n      return w - width.value;\n    }\n    else if(width.unit === unit.PERCENT) {\n      return w - total * width.value * 0.01;\n    }\n    for(let i = 0; i < flowChildren.length; i++) {\n      // 当放不下时直接返回，无需继续多余的尝试计算\n      if(w < 0) {\n        return w;\n      }\n      let item = flowChildren[i];\n      if(item instanceof Xom) {\n        w -= item.__tryLayInline(w, total);\n      }\n      else {\n        w -= item.textWidth;\n      }\n    }\n    return w;\n  }\n\n  // 设置y偏移值，递归包括children，此举在flex行元素的child进行justify-content对齐用\n  __offsetX(diff) {\n    super.__offsetX(diff);\n    this.flowChildren.forEach(item => {\n      if(item) {\n        item.__offsetX(diff);\n      }\n    });\n  }\n\n  // 设置y偏移值，递归包括children，此举在初步确定inline布局后设置元素vertical-align用\n  __offsetY(diff) {\n    super.__offsetY(diff);\n    this.flowChildren.forEach(item => {\n      if(item) {\n        item.__offsetY(diff);\n      }\n    });\n  }\n\n  __calAutoBasis(isDirectionRow, w, h, isRecursion) {\n    let b = 0;\n    let min = 0;\n    let max = 0;\n    let { mtw, mrw, mbw, mlw, ptw, prw, pbw, plw, flowChildren, style } = this;\n    // 计算需考虑style的属性\n    let {\n      width,\n      height,\n      borderTopWidth,\n      borderRightWidth,\n      borderBottomWidth,\n      borderLeftWidth,\n    } = style;\n    let main = isDirectionRow ? width : height;\n    if(main.unit === unit.PX) {\n      b = max = main.value;\n      // 递归时children的长度会影响flex元素的最小宽度\n      if(isRecursion) {\n        min = b;\n      }\n    }\n    // 递归children取最大值\n    flowChildren.forEach(item => {\n      if(item instanceof Xom) {\n        let { b: b2, min: min2, max: max2 } = item.__calAutoBasis(isDirectionRow, w, h, true);\n        b = Math.max(b, b2);\n        min = Math.max(min, min2);\n        max = Math.max(max, max2);\n      }\n      else if(isDirectionRow) {\n        min = Math.max(item.charWidth, min);\n        max = Math.max(item.textWidth, max);\n      }\n      else {\n        item.__layout({\n          x: 0,\n          y: 0,\n          w,\n          h,\n        }, true);\n        min = Math.max(min, item.height);\n        max = Math.max(max, item.height);\n      }\n    });\n    // margin/padding/border也得计算在内\n    if(isDirectionRow) {\n      let w = borderRightWidth.value + borderLeftWidth.value + mlw + mrw + plw + prw;\n      b += w;\n      max += w;\n      min += w;\n    }\n    else {\n      let h = borderTopWidth.value + borderBottomWidth.value + mtw + mbw + ptw + pbw;\n      b += h;\n      max += h;\n      min += h;\n    }\n    return { b, min, max };\n  }\n\n  __calAbs(isDirectionRow) {\n    let max = 0;\n    let { mtw, mrw, mbw, mlw, ptw, prw, pbw, plw, flowChildren, style } = this;\n    // 计算需考虑style的属性\n    let {\n      width,\n      height,\n      borderTopWidth,\n      borderRightWidth,\n      borderBottomWidth,\n      borderLeftWidth,\n    } = style;\n    let main = isDirectionRow ? width : height;\n    if(main.unit === unit.PX) {\n      max = main.value;\n    }\n    // 递归children取最大值\n    flowChildren.forEach(item => {\n      if(item instanceof Xom) {\n        let max2 = item.__calAbs(isDirectionRow);\n        max = Math.max(max, max2);\n      }\n      else if(isDirectionRow) {\n        max = Math.max(item.textWidth, max);\n      }\n      else {\n        item.__layout({\n          x: 0,\n          y: 0,\n          w: Infinity,\n          h: Infinity,\n        }, true);\n        max = Math.max(max, item.height);\n      }\n    });\n    // margin/padding/border也得计算在内\n    if(isDirectionRow) {\n      let w = borderRightWidth.value + borderLeftWidth.value + mlw + mrw + plw + prw;\n      max += w;\n    }\n    else {\n      let h = borderTopWidth.value + borderBottomWidth.value + mtw + mbw + ptw + pbw;\n      max += h;\n    }\n    return max;\n  }\n\n  // 本身block布局时计算好所有子元素的基本位置\n  __layoutBlock(data) {\n    let { x, y, w, h } = data;\n    this.__x = x;\n    this.__y = y;\n    this.__width = w;\n    let { flowChildren, style, lineGroups, mlw, mtw, mrw, mbw, plw, ptw, prw, pbw } = this;\n    let {\n      width,\n      height,\n      borderTopWidth,\n      borderRightWidth,\n      borderBottomWidth,\n      borderLeftWidth,\n      textAlign,\n    } = style;\n    // 除了auto外都是固定高度\n    let fixedHeight;\n    if(width && width.unit !== unit.AUTO) {\n      switch(width.unit) {\n        case unit.PX:\n          w = width.value;\n          break;\n        case unit.PERCENT:\n          w *= width.value * 0.01;\n          break;\n      }\n    }\n    if(height && height.unit !== unit.AUTO) {\n      fixedHeight = true;\n      switch(height.unit) {\n        case unit.PX:\n          h = height.value;\n          break;\n        case unit.PERCENT:\n          h *= height.value * 0.01;\n          break;\n      }\n    }\n    // margin/padding/border影响x和y和尺寸\n    x += borderLeftWidth.value + mlw + plw;\n    data.x = x;\n    y += borderTopWidth.value + mtw + ptw;\n    data.y = y;\n    if(width.unit === unit.AUTO) {\n      w -= borderLeftWidth.value + borderRightWidth.value + mlw + mrw + plw + prw;\n    }\n    h -= borderTopWidth.value + borderBottomWidth.value + mtw + mbw + ptw + pbw;\n    // 递归布局，将inline的节点组成lineGroup一行\n    let lineGroup = new LineGroup(x, y);\n    flowChildren.forEach(item => {\n      if(item instanceof Xom) {\n        if(item.style.display === 'inline') {\n          // inline开头，不用考虑是否放得下直接放\n          if(x === data.x) {\n            lineGroup.add(item);\n            item.__layout({\n              x,\n              y,\n              w,\n              h,\n            });\n            x += item.outerWidth;\n          }\n          else {\n            // 非开头先尝试是否放得下\n            let fw = item.__tryLayInline(w - x, w);\n            // 放得下继续\n            if(fw >= 0) {\n              item.__layout({\n                x,\n                y,\n                w,\n                h,\n              });\n            }\n            // 放不下处理之前的lineGroup，并重新开头\n            else {\n              lineGroups.push(lineGroup);\n              lineGroup.verticalAlign();\n              x = data.x;\n              y += lineGroup.height;\n              item.__layout({\n                x: data.x,\n                y,\n                w,\n                h,\n              });\n              lineGroup = new LineGroup(x, y);\n            }\n            x += item.outerWidth;\n            lineGroup.add(item);\n          }\n        }\n        else {\n          // block先处理之前可能的lineGroup\n          if(lineGroup.size) {\n            lineGroups.push(lineGroup);\n            lineGroup.verticalAlign();\n            y += lineGroup.height;\n            lineGroup = new LineGroup(data.x, y);\n          }\n          item.__layout({\n            x: data.x,\n            y,\n            w,\n            h,\n          });\n          x = data.x;\n          y += item.outerHeight;\n        }\n      }\n      // 文字和inline类似\n      else {\n        // x开头，不用考虑是否放得下直接放\n        if(x === data.x) {\n          lineGroup.add(item);\n          item.__layout({\n            x,\n            y,\n            w,\n            h,\n          });\n          x += item.width;\n        }\n        else {\n          // 非开头先尝试是否放得下\n          let fw = item.__tryLayInline(w - x, w);\n          // 放得下继续\n          if(fw >= 0) {\n            item.__layout({\n              x,\n              y,\n              w,\n              h,\n            });\n          }\n          // 放不下处理之前的lineGroup，并重新开头\n          else {\n            lineGroups.push(lineGroup);\n            lineGroup.verticalAlign();\n            x = data.x;\n            y += lineGroup.height;\n            item.__layout({\n              x: data.x,\n              y,\n              w,\n              h,\n            });\n            lineGroup = new LineGroup(x, y);\n          }\n          x += item.width;\n          lineGroup.add(item);\n        }\n      }\n    });\n    // 结束后处理可能遗留的最后的lineGroup\n    if(lineGroup.size) {\n      lineGroups.push(lineGroup);\n      lineGroup.verticalAlign();\n      y += lineGroup.height;\n    }\n    // text-align\n    if(['center', 'right'].indexOf(textAlign) > -1) {\n      lineGroups.forEach(lineGroup => {\n        let diff = w - lineGroup.width;\n        if(diff > 0) {\n          lineGroup.horizonAlign(textAlign === 'center' ? diff * 0.5 : diff);\n        }\n      });\n    }\n    this.__width = w;\n    this.__height = fixedHeight ? h : y - data.y;\n    this.__flowY = y;\n  }\n\n  // 弹性布局时的计算位置\n  __layoutFlex(data) {\n    let { x, y, w, h } = data;\n    this.__x = x;\n    this.__y = y;\n    this.__width = w;\n    let { flowChildren, style, mlw, mtw, mrw, mbw, plw, ptw, prw, pbw } = this;\n    let {\n      width,\n      height,\n      flexDirection,\n      borderTopWidth,\n      borderRightWidth,\n      borderBottomWidth,\n      borderLeftWidth,\n      justifyContent,\n      alignItems,\n    } = style;\n    // 除了auto外都是固定高度\n    let fixedWidth;\n    let fixedHeight;\n    if(width && width.unit !== unit.AUTO) {\n      fixedWidth = true;\n      switch(width.unit) {\n        case unit.PX:\n          w = width.value;\n          break;\n        case unit.PERCENT:\n          w *= width.value * 0.01;\n          break;\n      }\n    }\n    if(height && height.unit !== unit.AUTO) {\n      fixedHeight = true;\n      switch(height.unit) {\n        case unit.PX:\n          h = height.value;\n          break;\n        case unit.PERCENT:\n          h *= height.value * 0.01;\n          break;\n      }\n    }\n    // margin/padding/border影响x和y和尺寸\n    x += borderLeftWidth.value + mlw + plw;\n    data.x = x;\n    y += borderTopWidth.value + mtw + ptw;\n    data.y = y;\n    if(width.unit === unit.AUTO) {\n      w -= borderLeftWidth.value + borderRightWidth.value + mlw + mrw + plw + prw;\n    }\n    h -= borderTopWidth.value + borderBottomWidth.value + mtw + mbw + ptw + pbw;\n    let isDirectionRow = flexDirection === 'row';\n    // column时height可能为auto，此时取消伸展，退化为类似block布局，但所有子元素强制block\n    if(!isDirectionRow && !fixedHeight) {\n      flowChildren.forEach(item => {\n        if(item instanceof Xom) {\n          const { style, style: { display, flexDirection, width }} = item;\n          // column的flex的child如果是inline，变为block\n          if(display === 'inline') {\n            style.display = 'block';\n          }\n          // 竖向flex的child如果是横向flex，宽度自动的话要等同于父flex的宽度\n          else if(display === 'flex' && flexDirection === 'row' && width.unit === unit.AUTO) {\n            width.value = w;\n            width.unit = unit.PX;\n          }\n          item.__layout({\n            x,\n            y,\n            w,\n            h,\n          });\n          y += item.outerHeight;\n        }\n        else {\n          item.__layout({\n            x,\n            y,\n            w,\n            h,\n          });\n          y += item.outerHeight;\n        }\n      });\n      this.__width = w;\n      this.__height = y - data.y;\n      return;\n    }\n    // 计算伸缩基数\n    let growList = [];\n    let shrinkList = [];\n    let basisList = [];\n    let minList = [];\n    let growSum = 0;\n    let shrinkSum = 0;\n    let basisSum = 0;\n    let maxSum = 0;\n    flowChildren.forEach(item => {\n      if(item instanceof Xom) {\n        let { flexGrow, flexShrink, flexBasis } = item.style;\n        growList.push(flexGrow);\n        shrinkList.push(flexShrink);\n        growSum += flexGrow;\n        shrinkSum += flexShrink;\n        let { b, min, max } = item.__calAutoBasis(isDirectionRow, w, h);\n        // 根据basis不同，计算方式不同\n        if(flexBasis.unit === unit.AUTO) {\n          basisList.push(max);\n          basisSum += max;\n        }\n        else if(flexBasis.unit === unit.PX) {\n          b = flexBasis.value;\n          basisList.push(b);\n          basisSum += b;\n        }\n        else if(flexBasis.unit === unit.PERCENT) {\n          b = (isDirectionRow ? w : h) * flexBasis.value;\n          basisList.push(b);\n          basisSum += b;\n        }\n        maxSum += max;\n        minList.push(min);\n      }\n      else {\n        growList.push(0);\n        shrinkList.push(1);\n        shrinkSum += 1;\n        if(isDirectionRow) {\n          basisList.push(item.textWidth);\n          basisSum += item.textWidth;\n          maxSum += item.textWidth;\n          minList.push(item.charWidth);\n        }\n        else {\n          item.__layout({\n            x: 0,\n            y: 0,\n            w,\n            h,\n          }, true);\n          basisList.push(item.height);\n          basisSum += item.height;\n          maxSum += item.height;\n          minList.push(item.height);\n        }\n      }\n    });\n    let maxCross = 0;\n    // 判断是否超出，决定使用grow还是shrink\n    let isOverflow = maxSum > (isDirectionRow ? w : h);\n    flowChildren.forEach((item, i) => {\n      let main;\n      let shrink = shrinkList[i];\n      let grow = growList[i];\n      // 计算主轴长度\n      if(isOverflow) {\n        let overflow = basisSum - (isDirectionRow ? w : h);\n        main = shrink ? (basisList[i] - overflow * shrink / shrinkSum) : basisList[i];\n      }\n      else {\n        let free = (isDirectionRow ? w : h) - basisSum;\n        main = grow ? (basisList[i] + free * grow / growSum) : basisList[i];\n      }\n      // 主轴长度的最小值不能小于元素的最小长度，比如横向时的字符宽度\n      main = Math.max(main, minList[i]);\n      if(item instanceof Xom) {\n        const { style, mlw, mtw, mrw, mbw, plw, ptw, prw, pbw, style: {\n          display,\n          flexDirection,\n          width,\n          height,\n          borderTopWidth,\n          borderRightWidth,\n          borderBottomWidth,\n          borderLeftWidth,\n        }} = item;\n        if(isDirectionRow) {\n          // row的flex的child如果是inline，变为block\n          if(display === 'inline') {\n            style.display = 'block';\n          }\n          // 横向flex的child如果是竖向flex，高度自动的话要等同于父flex的高度\n          else if(display === 'flex' && flexDirection === 'column' && fixedHeight && height.unit === unit.AUTO) {\n            height.value = h;\n            height.unit = unit.PX;\n          }\n          item.__layout({\n            x,\n            y,\n            w: main,\n            h,\n          })\n        }\n        else {\n          // column的flex的child如果是inline，变为block\n          if(display === 'inline') {\n            style.display = 'block';\n          }\n          // 竖向flex的child如果是横向flex，宽度自动的话要等同于父flex的宽度\n          else if(display === 'flex' && flexDirection === 'row' && width.unit === unit.AUTO) {\n            width.value = w;\n            width.unit = unit.PX;\n          }\n          item.__layout({\n            x,\n            y,\n            w,\n            h: main,\n          });\n        }\n        // 重设因伸缩而导致的主轴长度\n        if(isOverflow && shrink) {\n          if(isDirectionRow) {\n            item.__width = main - mlw - mrw - plw - prw - borderLeftWidth.value - borderRightWidth.value;\n          }\n          else {\n            item.__height = main - mtw - mbw - ptw - pbw - borderTopWidth.value - borderBottomWidth.value;\n          }\n        }\n        else if(!isOverflow && grow) {\n          if(isDirectionRow) {\n            item.__width = main - mlw - mrw - plw - prw - borderLeftWidth.value - borderRightWidth.value;\n          }\n          else {\n            item.__height = main - mtw - mbw - ptw - pbw - borderTopWidth.value - borderBottomWidth.value;\n          }\n        }\n      }\n      else {\n        item.__layout({\n          x,\n          y,\n          w: isDirectionRow ? main : w,\n          h: isDirectionRow ? h : main,\n        });\n      }\n      if(isDirectionRow) {\n        x += item.outerWidth;\n        maxCross = Math.max(maxCross, item.outerHeight);\n      }\n      else {\n        y += item.outerHeight;\n        maxCross = Math.max(maxCross, item.outerWidth);\n      }\n    });\n    // 计算主轴剩余时要用真实剩余空间而不能用伸缩剩余空间\n    let diff = isDirectionRow ? w - x + data.x : h - y + data.y;\n    // 主轴侧轴对齐方式\n    if(!isOverflow && growSum === 0 && diff > 0) {\n      let len = flowChildren.length;\n      if(justifyContent === 'flex-end') {\n        for(let i = 0; i < len; i++) {\n          let child = flowChildren[i];\n          isDirectionRow ? child.__offsetX(diff) : child.__offsetY(diff);\n        }\n      }\n      else if(justifyContent === 'center') {\n        let center = diff * 0.5;\n        for(let i = 0; i < len; i++) {\n          let child = flowChildren[i];\n          isDirectionRow ? child.__offsetX(center) : child.__offsetY(center);\n        }\n      }\n      else if(justifyContent === 'space-between') {\n        let between = diff / (len - 1);\n        for(let i = 1; i < len; i++) {\n          let child = flowChildren[i];\n          isDirectionRow ? child.__offsetX(between * i) : child.__offsetY(between * i);\n        }\n      }\n      else if(justifyContent === 'space-around') {\n        let around = diff / (len + 1);\n        for(let i = 0; i < len; i++) {\n          let child = flowChildren[i];\n          isDirectionRow ? child.__offsetX(around * (i + 1)) : child.__offsetY(around * (i + 1));\n        }\n      }\n    }\n    // 子元素侧轴伸展\n    if(isDirectionRow) {\n      // 父元素固定高度，子元素可能超过，侧轴最大长度取固定高度\n      if(fixedHeight) {\n        maxCross = h;\n      }\n      y += maxCross;\n    }\n    else {\n      if(fixedWidth) {\n        maxCross = w;\n      }\n    }\n    // 侧轴对齐\n    if(alignItems === 'stretch') {\n      // 短侧轴的children伸张侧轴长度至相同，超过的不动，固定宽高的也不动\n      flowChildren.forEach(item => {\n        let { style, mlw, mtw, mrw, mbw, ptw, prw, plw, pbw } = item;\n        if(isDirectionRow) {\n          if(style.height.unit === unit.AUTO) {\n            item.__height = maxCross - mtw - mbw - ptw - pbw\n              - style.borderTopWidth.value\n              - style.borderBottomWidth.value;\n          }\n        }\n        else {\n          if(style.width.unit === unit.AUTO) {\n            item.__width = maxCross - mlw - mrw - plw - prw\n              - borderRightWidth.value\n              - borderLeftWidth.value;\n          }\n        }\n      });\n    }\n    else if(alignItems === 'center') {\n      flowChildren.forEach(item => {\n        let diff = maxCross - item.outerHeight;\n        if(diff > 0) {\n          item.__offsetY(diff * 0.5);\n        }\n      });\n    }\n    else if(alignItems === 'flex-end') {\n      flowChildren.forEach(item => {\n        let diff = maxCross - item.outerHeight;\n        if(diff > 0) {\n          item.__offsetY(diff);\n        }\n      });\n    }\n    this.__width = w;\n    this.__height = fixedHeight ? h : y - data.y;\n    this.__flowY = y;\n  }\n\n  // inline比较特殊，先简单顶部对其，后续还需根据vertical和lineHeight计算y偏移\n  __layoutInline(data) {\n    let { x, y, w, h } = data;\n    this.__x = x;\n    this.__y = y;\n    let maxX = x;\n    let { flowChildren, style, lineGroups, mlw, mtw, mrw, mbw, plw, ptw, prw, pbw } = this;\n    let {\n      width,\n      height,\n      borderTopWidth,\n      borderRightWidth,\n      borderBottomWidth,\n      borderLeftWidth,\n      textAlign,\n    } = style;\n    // 除了auto外都是固定高度\n    let fixedWidth;\n    let fixedHeight;\n    if(width && width.unit !== unit.AUTO) {\n      fixedWidth = true;\n      switch(width.unit) {\n        case unit.PX:\n          w = width.value;\n          break;\n        case unit.PERCENT:\n          w *= width.value * 0.01;\n          break;\n      }\n    }\n    if(height && height.unit !== unit.AUTO) {\n      fixedHeight = true;\n      switch(height.unit) {\n        case unit.PX:\n          h = height.value;\n          break;\n        case unit.PERCENT:\n          h *= height.value * 0.01;\n          break;\n      }\n    }\n    // margin/padding/border影响x和y和尺寸\n    x += borderLeftWidth.value + mlw + plw;\n    data.x = x;\n    y += borderTopWidth.value + mtw + ptw;\n    data.y = y;\n    if(width.unit === unit.AUTO) {\n      w -= borderLeftWidth.value + borderRightWidth.value + mlw + mrw + plw + prw;\n    }\n    h -= borderTopWidth.value + borderBottomWidth.value + mtw + mbw + ptw + pbw;\n    // 递归布局，将inline的节点组成lineGroup一行\n    let lineGroup = new LineGroup(x, y);\n    flowChildren.forEach(item => {\n      if(item instanceof Xom) {\n        // 绝对定位跳过\n        if(item.style.position === 'absolute') {\n          this.absChildren.push(item);\n          return;\n        }\n        item.style.display = 'inline';\n        // inline开头，不用考虑是否放得下直接放\n        if(x === data.x) {\n          lineGroup.add(item);\n          item.__layout({\n            x,\n            y,\n            w,\n            h,\n          });\n          x += item.outerWidth;\n          maxX = Math.max(maxX, x);\n        }\n        else {\n          // 非开头先尝试是否放得下\n          let fw = item.__tryLayInline(w - x, w);\n          // 放得下继续\n          if(fw >= 0) {\n            item.__layout({\n              x,\n              y,\n              w,\n              h,\n            });\n          }\n          // 放不下处理之前的lineGroup，并重新开头\n          else {\n            lineGroups.push(lineGroup);\n            lineGroup.verticalAlign();\n            x = data.x;\n            y += lineGroup.height;\n            item.__layout({\n              x: data.x,\n              y,\n              w,\n              h,\n            });\n            lineGroup = new LineGroup(x, y);\n          }\n          x += item.outerWidth;\n          maxX = Math.max(maxX, x);\n          lineGroup.add(item);\n        }\n      }\n      // inline里的其它只有文本\n      else {\n        if(x === data.x) {\n          lineGroup.add(item);\n          item.__layout({\n            x,\n            y,\n            w,\n            h,\n          });\n          x += item.width;\n          maxX = Math.max(maxX, x);\n        }\n        else {\n          // 非开头先尝试是否放得下\n          let fw = item.__tryLayInline(w - x, w);\n          // 放得下继续\n          if(fw >= 0) {\n            item.__layout({\n              x,\n              y,\n              w,\n              h,\n            });\n          }\n          // 放不下处理之前的lineGroup，并重新开头\n          else {\n            lineGroups.push(lineGroup);\n            lineGroup.verticalAlign();\n            x = data.x;\n            y += lineGroup.height;\n            item.__layout({\n              x: data.x,\n              y,\n              w,\n              h,\n            });\n            lineGroup = new LineGroup(x, y);\n          }\n          x += item.width;\n          maxX = Math.max(maxX, x);\n          lineGroup.add(item);\n        }\n      }\n    });\n    // 结束后处理可能遗留的最后的lineGroup，children为空时可能size为空\n    if(lineGroup.size) {\n      lineGroups.push(lineGroup);\n      lineGroup.verticalAlign();\n      y += lineGroup.height;\n    }\n    // text-align\n    if(['center', 'right'].indexOf(textAlign) > -1) {\n      lineGroups.forEach(lineGroup => {\n        let diff = w - lineGroup.width;\n        if(diff > 0) {\n          lineGroup.horizonAlign(textAlign === 'center' ? diff * 0.5 : diff);\n        }\n      });\n    }\n    // 元素的width不能超过父元素w\n    this.__width = fixedWidth ? w : maxX - data.x;\n    this.__height = fixedHeight ? h : y - data.y;\n    this.__flowY = y;\n  }\n\n  // 只针对绝对定位children布局\n  __layoutAbs(container) {\n    let { x, y, flowY, width, height, children, absChildren, style, mlw, mtw, mrw, mbw, plw, ptw, prw, pbw } = this;\n    let {\n      borderTopWidth,\n      borderLeftWidth,\n    } = style;\n    let pw = width + plw + prw;\n    let ph = height + ptw + pbw;\n    // 递归进行，遇到absolute/relative的设置新容器\n    children.forEach(item => {\n      if(item instanceof Dom) {\n        item.__layoutAbs(['absolute', 'relative'].indexOf(item.style.position) > -1 ? item : container);\n      }\n    });\n    // 对absolute的元素进行相对容器布局\n    absChildren.forEach(item => {\n      let { mtw, mlw, style, style: {\n        left, top, right, bottom, width: width2, height: height2\n      } } = item;\n      let x2, y2, w2, h2;\n      // width优先级高于right高于left，即最高left+right，其次left+width，再次right+width，然后仅申明单个，最次全部auto\n      if(left.unit !== unit.AUTO && right.unit !== unit.AUTO) {\n        x2 = left.unit === unit.PX ? x + mlw + borderLeftWidth.value + left.value : x + mlw + borderLeftWidth.value + width * left.value * 0.01;\n        w2 = right.unit === unit.PX ? x + mlw + borderLeftWidth.value + pw - right.value - x2 : x + mlw + borderLeftWidth.value + pw - width * right.value * 0.01 - x2;\n      }\n      else if(left.unit !== unit.AUTO && width2.unit !== unit.AUTO) {\n        x2 = left.unit === unit.PX ? x + mlw + borderLeftWidth.value + left.value : x + mlw + borderLeftWidth.value + width * left.value * 0.01;\n        w2 = width2.unit === unit.PX ? width2.value : width;\n      }\n      else if(right.unit !== unit.AUTO && width2.unit !== unit.AUTO) {\n        w2 = width2.unit === unit.PX ? width2.value : width;\n        let widthPx = width2.unit === unit.PX ? width2.value : width * width2.value * 0.01;\n        x2 = right.unit === unit.PX ? x + mlw + borderLeftWidth.value + pw - right.value - widthPx : x + mlw + borderLeftWidth.value + pw - width * right.value * 0.01 - widthPx;\n      }\n      else if(left.unit !== unit.AUTO) {\n        x2 = left.unit === unit.PX ? x + left.value : x + mlw + borderLeftWidth.value + width * left.value * 0.01;\n        w2 = item.__calAbs(true);\n      }\n      else if(right.unit !== unit.AUTO) {\n        w2 = item.__calAbs(true);\n        x2 = right.unit === unit.PX ? x + mlw + borderLeftWidth.value + pw - right.value - w2 : x + mlw + borderLeftWidth.value + pw - width * right.value * 0.01 - w2;\n      }\n      else if(width2.unit !== unit.AUTO) {\n        x2 = x + mlw + borderLeftWidth.value;\n        w2 = width2.unit === unit.PX ? width2.value : width;\n      }\n      else {\n        x2 = x + mlw + borderLeftWidth.value;\n        w2 = item.__calAbs(true);\n      }\n      // top/bottom/height优先级同上\n      if(top.unit !== unit.AUTO && bottom.unit !== unit.AUTO) {\n        y2 = top.unit === unit.PX ? y + top.value : y + mtw + borderTopWidth.value + height * top.value * 0.01;\n        h2 = bottom.unit === unit.PX ? y + mtw + borderTopWidth.value + ph - bottom.value - y2 : y + mtw + borderTopWidth.value + ph - height * bottom.value * 0.01 - y2;\n        style.height = {\n          value: h2,\n          unit: unit.PX,\n        };\n      }\n      else if(top.unit !== unit.AUTO && height2.unit !== unit.AUTO) {\n        y2 = top.unit === unit.PX ? y + top.value : y + mtw + borderTopWidth.value + height * top.value * 0.01;\n        h2 = height2.unit === unit.PX ? height2.value : height;\n      }\n      else if(bottom.unit !== unit.AUTO && height2.unit !== unit.AUTO) {\n        h2 = height2.unit === unit.PX ? height2.value : height;\n        let heightPx = height2.unit === unit.PX ? height2.value : height * height2.value * 0.01;\n        y2 = bottom.unit === unit.PX ? y + mtw + borderTopWidth.value + ph - bottom.value - heightPx : y + mtw + borderTopWidth.value + ph - height * bottom.value * 0.01 - heightPx;\n      }\n      else if(top.unit !== unit.AUTO) {\n        y2 = top.unit === unit.PX ? y + top.value : y + mtw + borderTopWidth.value + height * top.value * 0.01;\n        h2 = item.__calAbs();\n      }\n      else if(bottom.unit !== unit.AUTO) {\n        h2 = item.__calAbs();\n        y2 = bottom.unit === unit.PX ? y + mtw + borderTopWidth.value + ph - bottom.value - h2 : y + mtw + borderTopWidth.value + ph - height * bottom.value * 0.01 - h2;\n      }\n      else if(height2.unit !== unit.AUTO) {\n        y2 = flowY + mtw + borderTopWidth.value;\n        h2 = height2.unit === unit.PX ? height2.value : height;\n      }\n      else {\n        y2 = flowY + mtw + borderTopWidth.value;\n        h2 = item.__calAbs();\n      }\n      // absolute时inline强制block\n      if(style.display === 'inline') {\n        style.display = 'block';\n      }\n      item.__layout({\n        x: x2,\n        y: y2,\n        w: w2,\n        h: h2,\n      });\n    });\n  }\n\n  __emitEvent(e, force) {\n    let { event: { type }, x: xe, y: ye, covers } = e;\n    let { listener, children, style, x, y, outerWidth, outerHeight } = this;\n    if(style.display === 'none') {\n      return;\n    }\n    let cb;\n    if(listener.hasOwnProperty(type)) {\n      cb = listener[type];\n    }\n    let hasChildEmit;\n    // 先响应absolute/relative高优先级\n    for(let i = children.length - 1; i >= 0; i--) {\n      let child = children[i];\n      if(child instanceof Xom && ['absolute', 'relative'].indexOf(child.style.position) > -1) {\n        if(child.__emitEvent(e, force)) {\n          hasChildEmit = true;\n        }\n      }\n    }\n    // 再看普通流\n    for(let i = children.length - 1; i >= 0; i--) {\n      let child = children[i];\n      if(child instanceof Xom && ['absolute', 'relative'].indexOf(child.style.position) === -1) {\n        if(child.__emitEvent(e, force)) {\n          hasChildEmit = true;\n        }\n      }\n    }\n    if(force) {\n      cb && cb(e);\n      return;\n    }\n    // child触发则parent一定触发\n    if(hasChildEmit) {\n      covers.push({\n        x,\n        y,\n        w: outerWidth,\n        h: outerHeight,\n      });\n      cb && cb(e);\n    }\n    // 否则判断坐标是否位于自己内部，以及没被遮挡\n    else if(xe >= x && ye >= y && xe <= x + outerWidth && ye <= y + outerHeight) {\n      for(let i = 0, len = covers.length; i < len; i++) {\n        let { x: x2, y: y2, w, h: h } = covers[i];\n        if(xe >= x2 && ye >= y2 && xe <= x2 + w && ye <= y2 + h) {\n          return;\n        }\n      }\n      if(!e.target) {\n        e.target = this;\n      }\n      covers.push({\n        x,\n        y,\n        w: outerWidth,\n        h: outerHeight,\n      });\n      cb && cb(e);\n    }\n  }\n\n  render(renderMode) {\n    super.render(renderMode);\n    let { style: { display }, flowChildren, children } = this;\n    if(display === 'none') {\n      return;\n    }\n    // 先绘制static\n    flowChildren.forEach(item => {\n      if(item instanceof Text || item.style.position === 'static') {\n        item.render(renderMode);\n      }\n    });\n    // 再绘制relative和absolute\n    children.forEach(item => {\n      if((item instanceof Xom) && ['relative', 'absolute'].indexOf(item.style.position) > -1) {\n        item.render(renderMode);\n      }\n    });\n    if(renderMode === mode.SVG) {\n      this.__virtualDom = {\n        ...super.virtualDom,\n        type: 'dom',\n        children: this.children.map(item => item.virtualDom),\n      };\n    }\n  }\n\n  get tagName() {\n    return this.__tagName;\n  }\n  get children() {\n    return this.__children;\n  }\n  get flowChildren() {\n    return this.__flowChildren;\n  }\n  get absChildren() {\n    return this.__absChildren;\n  }\n  get lineGroups() {\n    return this.__lineGroups;\n  }\n  get baseLine() {\n    let len = this.lineGroups.length;\n    if(len) {\n      let last = this.lineGroups[len - 1];\n      return last.y - this.y + last.baseLine;\n    }\n    return this.y;\n  }\n  get flowY() {\n    return this.__flowY;\n  }\n\n  static isValid(s) {\n    return TAG_NAME.hasOwnProperty(s);\n  }\n}\n\nexport default Dom;\n","import util from './util';\n\nfunction diff(elem, ovd, nvd) {\n  if(ovd.type === 'dom') {\n    if(nvd.type === 'dom') {\n      diffD2D(elem, ovd, nvd);\n    }\n    else if(nvd.type === 'text') {\n      replaceWith(elem, nvd);\n    }\n    else if(nvd.type === 'geom') {\n      diffD2G(elem, ovd, nvd);\n    }\n  }\n  else if(nvd.type === 'text') {\n    if(nvd.type === 'dom') {\n      replaceWith(elem, nvd);\n    }\n    else if(nvd.type === 'text') {\n      diffT2T(elem, ovd, nvd);\n    }\n    else if(nvd.type === 'geom') {\n      replaceWith(elem, nvd);\n    }\n  }\n  else if(nvd.type === 'geom') {\n    if(nvd.type === 'dom') {\n      diffG2D(elem, ovd, nvd);\n    }\n    else if(nvd.type === 'text') {\n      replaceWith(elem, nvd);\n    }\n    else if(nvd.type === 'geom') {\n      diffG2G(elem, ovd, nvd);\n    }\n  }\n}\n\nfunction diffD2D(elem, ovd, nvd) {\n  diffBb(elem.firstChild, ovd.bb, nvd.bb);\n  let ol = ovd.children.length;\n  let nl = nvd.children.length;\n  let i = 0;\n  let lastChild = elem.lastChild;\n  let cns = lastChild.childNodes;\n  for(; i < Math.min(ol, nl); i++) {\n    diff(cns[i], ovd.children[i], nvd.children[i]);\n  }\n  if(i < ol) {\n    for(; i < ol; i++) {\n      removeAt(lastChild, cns, i);\n    }\n  }\n  else if(i < nl) {\n    for(; i < nl; i++) {\n      insertAt(lastChild, cns, i, nvd.children[i]);\n    }\n  }\n}\n\nfunction diffD2G(elem, ovd, nvd) {\n  diffBb(elem.firstChild, ovd.bb, nvd.bb);\n  replaceWith(elem.lastChild, nvd.content);\n}\n\nfunction diffT2T(elem, ovd, nvd) {\n  let ol = ovd.children.length;\n  let nl = nvd.children.length;\n  let i = 0;\n  for(; i < Math.min(ol, nl); i++) {\n    diffItem(elem, i, ovd.children[i], nvd.children[i], true);\n  }\n  let cns = elem.childNodes;\n  if(i < ol) {\n    for(; i < ol; i++) {\n      removeAt(elem, cns, i);\n    }\n  }\n  else if(i < nl) {\n    for(; i < nl; i++) {\n      insertAt(elem, cns, i, nvd.children[i]);\n    }\n  }\n}\n\nfunction diffG2D(elem, ovd, nvd) {\n  diffBb(elem.firstChild, ovd.bb, nvd.bb);\n  replaceWith(elem.lastChild, nvd.children);\n}\n\nfunction diffG2G(elem, ovd, nvd) {\n  diffBb(elem.firstChild, ovd.bb, nvd.bb);\n  let ol = ovd.content.length;\n  let nl = nvd.content.length;\n  let i = 0;\n  let lastChild = elem.lastChild;\n  let cns = lastChild.childNodes;\n  for(; i < Math.min(ol, nl); i++) {\n    diffItem(lastChild, i, ovd.content[i], nvd.content[i]);\n  }\n  if(i < ol) {\n    for(; i < ol; i++) {\n      removeAt(lastChild, cns, i);\n    }\n  }\n  else if(i < nl) {\n    for(; i < nl; i++) {\n      insertAt(lastChild, cns, i, nvd.content[i]);\n    }\n  }\n}\n\nfunction diffBb(elem, obb, nbb) {\n  let ol = obb.length;\n  let nl = nbb.length;\n  let i = 0;\n  for(; i < Math.min(ol, nl); i++) {\n    diffItem(elem, i, obb[i], nbb[i]);\n  }\n  let cns = elem.childNodes;\n  if(i < ol) {\n    for(; i < ol; i++) {\n      removeAt(elem, cns, i);\n    }\n  }\n  else if(i < nl) {\n    for(; i < nl; i++) {\n      insertAt(elem, cns, i, nbb[i]);\n    }\n  }\n}\n\nfunction diffItem(elem, i, ovd, nvd, isText) {\n  let cns = elem.childNodes;\n  if(ovd.tagName !== nvd.tagName) {\n    replaceWith(cns[i], nvd);\n  }\n  else {\n    let op = {};\n    for(let j = 0, len = ovd.props.length; j < len; j++) {\n      let prop = ovd.props[j];\n      let [k, v] = prop;\n      op[k] = v;\n    }\n    for(let j = 0, len = nvd.props.length; j < len; j++) {\n      let prop = nvd.props[j];\n      let [k, v] = prop;\n      // 已有不等更新，没有添加\n      if(op.hasOwnProperty(k)) {\n        if(op[k] !== v) {\n          cns[i].setAttribute(k, v);\n        }\n        delete op[k];\n      }\n      else {\n        cns[i].setAttribute(k, v);\n      }\n    }\n    // 多余的删除\n    for(var k in op) {\n      if(op.hasOwnProperty(k)) {\n        cns[i].removeAttribute(k);\n      }\n    }\n    if(isText && ovd.content !== nvd.content) {\n      cns[i].textContent = nvd.content;\n    }\n  }\n}\n\nfunction replaceWith(elem, vd) {\n  let res;\n  if(Array.isArray(vd)) {\n    res = '';\n    vd.forEach(item => {\n      res += util.joinVirtualDom(item);\n    });\n  }\n  else {\n    res = util.joinVirtualDom(vd);\n  }\n  elem.insertAdjacentHTML('afterend', res);\n  elem.parentNode.removeChild(elem);\n}\n\nfunction insertAt(elem, cns, index, vd) {\n  let res = util.joinVirtualDom(vd);\n  if(index >= cns.length) {\n    elem.insertAdjacentHTML('beforeend', res);\n  }\n  else {\n    cns[index].insertAdjacentHTML('beforebegin', res);\n  }\n}\n\nfunction removeAt(elem, cns, index) {\n  if(cns[index]) {\n    elem.removeChild(cns[index]);\n  }\n}\n\nexport default diff;\n","import Dom from '../node/Dom';\nimport util from '../util';\nimport mode from '../mode';\nimport domDiff from '../domDiff';\n\nfunction getDom(dom) {\n  if(util.isString(dom)) {\n    let o = document.querySelector(dom);\n    if(!o) {\n      throw new Error('can not find dom of selector: ' + dom);\n    }\n    return o;\n  }\n  if(!dom) {\n    throw new Error('can not find dom: ' + dom);\n  }\n  return dom;\n}\n\nfunction renderProp(k, v) {\n  let s = Array.isArray(v) ? util.joinSourceArray(v) : util.stringify(v);\n  if(k === 'className') {\n    k = 'class';\n  }\n  return ' ' + k + '=\"' + util.encodeHtml(s, true) + '\"';\n}\n\nclass CS extends Dom {\n  constructor(tagName, props, children) {\n    super(tagName, props, children);\n    this.__node = null; // 真实DOM引用\n  }\n\n  __initProps() {\n    if(this.props.width !== undefined) {\n      let value = parseInt(this.props.width);\n      if(!isNaN(value) && value > 0) {\n        this.__width = value;\n      }\n    }\n    if(this.props.height !== undefined) {\n      let value = parseInt(this.props.height);\n      if(!isNaN(value) && value > 0) {\n        this.__height = value;\n      }\n    }\n  }\n\n  __genHtml() {\n    let res = `<${this.tagName}`;\n    // 拼接处理属性\n    for(let i = 0, len = this.__props.length; i < len; i++) {\n      let item = this.__props[i];\n      res += renderProp(item[0], item[1]);\n    }\n    res += `></${this.tagName}>`;\n    return res;\n  }\n\n  __cb(e, force) {\n    if(e.touches && e.touches.length > 1) {\n      return;\n    }\n    let { node } = this;\n    let { x, y, top, right } = node.getBoundingClientRect();\n    x = x || top || 0;\n    y = y || right || 0;\n    let { clientX, clientY } = e.touches ? (e.touches[0] || {}) : e;\n    x = clientX - x;\n    y = clientY - y;\n    this.__emitEvent({\n      event: e,\n      x,\n      y,\n      covers: [],\n    }, force);\n  }\n\n  __initEvent() {\n    let { node } = this;\n    ['click', 'dblclick', 'mousedown', 'mousemove', 'mouseup', 'touchstart', 'touchmove', 'touchend', 'touchcancel'].forEach(type => {\n      node.addEventListener(type, e => {\n        this.__cb(e, ['touchend', 'touchcancel'].indexOf(type) > -1);\n      });\n    });\n  }\n\n  appendTo(dom) {\n    dom = getDom(dom);\n    this.__initProps();\n    // 已有root节点\n    if(dom.nodeName.toUpperCase() === this.tagName.toUpperCase()) {\n      this.__node = dom;\n      if(this.width) {\n        dom.setAttribute('width', this.width);\n      }\n      if(this.height) {\n        dom.setAttribute('height', this.height);\n      }\n    }\n    // 没有canvas/svg节点则生成一个新的\n    else {\n      this.__node = dom.querySelector(this.tagName);\n      if(!this.__node) {\n        dom.innerHTML = this.__genHtml();\n        this.__node = dom.querySelector(this.tagName);\n      }\n    }\n    // 没有设置width/height则采用css计算形式\n    if(!this.width || !this.height) {\n      let css = window.getComputedStyle(dom, null);\n      if(!this.width) {\n        this.__width = parseInt(css.getPropertyValue('width'));\n        dom.setAttribute('width', this.width);\n      }\n      if(!this.height) {\n        this.__height = parseInt(css.getPropertyValue('height'));\n        dom.setAttribute('height', this.height);\n      }\n    }\n    // 只有canvas有ctx，svg用真实dom\n    let renderMode;\n    if(this.tagName === 'canvas') {\n      this.__ctx = this.__node.getContext('2d');\n      this.__ctx.clearRect(0, 0, this.width, this.height);\n      renderMode = mode.CANVAS;\n    }\n    else if(this.tagName === 'svg') {\n      renderMode = mode.SVG;\n    }\n    // canvas/svg作为根节点一定是block或flex，不会是inline\n    let { style } = this;\n    if(['flex', 'block'].indexOf(style.display) === -1) {\n      style.display = 'block';\n    }\n    // 同理position不能为absolute\n    if(style.position === 'absolute') {\n      style.position = 'static';\n    }\n    this.__traverse(this.__ctx, renderMode);\n    // canvas的宽高固定初始化\n    style.width = this.width;\n    style.height = this.height;\n    this.__initStyle();\n    this.__layout({\n      x: 0,\n      y: 0,\n      w: this.width,\n      h: this.height,\n    });\n    this.__layoutAbs(this);\n    this.render(renderMode);\n    if(renderMode === mode.SVG) {\n      let nvd = this.virtualDom;\n      if(this.node.__karasInit) {\n        domDiff(this.node.firstChild, this.node.__ovd, nvd);\n      } else {\n        this.node.innerHTML = util.joinVirtualDom(nvd);\n      }\n      this.node.__ovd = nvd;\n    }\n    if(!this.node.__karasInit) {\n      this.node.__karasInit = true;\n      this.__initEvent();\n    }\n  }\n\n  get node() {\n    return this.__node;\n  }\n}\n\nexport default CS;\n","import Geom from './Geom';\nimport mode from '../mode';\n\nclass Line extends Geom {\n  constructor(tagName, props) {\n    super(tagName, props);\n    // start和end表明线段的首尾坐标，control表明控制点坐标\n    this.__start = [];\n    this.__end = [];\n    this.__control = [];\n    if(Array.isArray(this.props.start)) {\n      this.__start = this.props.start;\n    }\n    if(Array.isArray(this.props.end)) {\n      this.__end = this.props.end;\n    }\n    if(Array.isArray(this.props.control)) {\n      this.__control = this.props.control;\n    }\n  }\n\n  render(renderMode) {\n    super.render(renderMode);\n    let { x, y, width, height, style, ctx, start, end, control, virtualDom } = this;\n    if(start.length < 2 || end.length < 2) {\n      return;\n    }\n    let {\n      display,\n      borderTopWidth,\n      borderRightWidth,\n      borderBottomWidth,\n      borderLeftWidth,\n      marginTop,\n      marginRight,\n      marginBottom,\n      marginLeft,\n      paddingTop,\n      paddingRight,\n      paddingBottom,\n      paddingLeft,\n      stroke,\n      strokeWidth,\n      strokeDasharray,\n    } = style;\n    if(display === 'none') {\n      return;\n    }\n    let originX = x + borderLeftWidth.value + marginLeft.value + paddingLeft.value;\n    let originY = y + borderTopWidth.value + marginTop.value + paddingTop.value;\n    width -= borderLeftWidth.value + borderRightWidth.value + marginLeft.value + marginRight.value + paddingLeft.value + paddingRight.value;\n    height -= borderTopWidth.value + borderBottomWidth.value + marginTop.value + marginBottom.value + paddingTop.value + paddingBottom.value;\n    let x1 = originX + start[0] * width;\n    let y1 = originY + start[1] * height;\n    let x2 = originX + end[0] * width;\n    let y2 = originY + end[1] * height;\n    let curve = 0;\n    let cx1, cy1, cx2, cy2;\n    if(Array.isArray(control[0])) {\n      curve++;\n      cx1 = originX + control[0][0] * width;\n      cy1 = originY + control[0][1] * height;\n    }\n    if(Array.isArray(control[1])) {\n      curve++;\n      cx2 = originX + control[1][0] * width;\n      cy2 = originY + control[1][1] * height;\n    }\n    if(renderMode === mode.CANVAS) {\n      ctx.strokeStyle = stroke;\n      ctx.lineWidth = strokeWidth;\n      ctx.setLineDash(strokeDasharray);\n      ctx.beginPath();\n      ctx.moveTo(x1, y1);\n      if(curve === 2) {\n        ctx.bezierCurveTo(cx1, cy1, cx2, cy2, x2, y2);\n      }\n      else if(curve === 1) {\n        ctx.quadraticCurveTo(cx1, cy1, x2, y2);\n      }\n      else {\n        ctx.lineTo(x2, y2);\n      }\n      ctx.stroke();\n      ctx.closePath();\n    }\n    else if(renderMode === mode.SVG) {\n      if(curve === 2) {\n        virtualDom.content.push({\n          type: 'item',\n          tagName: 'path',\n          props: [\n            ['d', `M${x1} ${y1} C${cx1} ${cy1} ${cx2} ${cy2} ${x2} ${y2}`],\n            ['fill', 'none'],\n            ['stroke', stroke],\n            ['stroke-width', strokeWidth],\n            ['stroke-dasharray', strokeDasharray]\n          ],\n        });\n      }\n      else if(curve === 1) {\n        virtualDom.content.push({\n          type: 'item',\n          tagName: 'path',\n          props: [\n            ['d', `M${x1} ${y1} Q${cx1} ${cy1} ${x2} ${y2}`],\n            ['fill', 'none'],\n            ['stroke', stroke],\n            ['stroke-width', strokeWidth],\n            ['stroke-dasharray', strokeDasharray]\n          ],\n        });\n      }\n      else {\n        virtualDom.content.push({\n          type: 'item',\n          tagName: 'line',\n          props: [\n            ['x1', x1],\n            ['y1', y1],\n            ['x2', x2],\n            ['y2', y2],\n            ['stroke', stroke],\n            ['stroke-width', strokeWidth],\n            ['stroke-dasharray', strokeDasharray]\n          ],\n        });\n      }\n    }\n  }\n\n  get start() {\n    return this.__start;\n  }\n  get end() {\n    return this.__end;\n  }\n  get control() {\n    return this.__control;\n  }\n}\n\nexport default Line;\n","import Geom from './Geom';\nimport mode from '../mode';\n\nclass Polyline extends Geom {\n  constructor(tagName, props) {\n    super(tagName, props);\n    // 折线所有点的列表\n    this.__points = [];\n    if(Array.isArray(this.props.points)) {\n      this.__points = this.props.points;\n    }\n    // 原点位置，4个角，默认左下\n    if(['TOP_LEFT', 'TOP_RIGHT', 'BOTTOM_LEFT', 'BOTTOM_RIGHT'].indexOf(this.props.origin) > -1) {\n      this.__origin = this.props.origin;\n    }\n    else {\n      this.__origin = 'BOTTOM_LEFT';\n    }\n  }\n\n  render(renderMode) {\n    super.render(renderMode);\n    let { x, y, width, height, style, ctx, points, origin, virtualDom } = this;\n    if(points.length < 2) {\n      return;\n    }\n    for(let i = 0, len = points.length; i < len; i++) {\n      if(!Array.isArray(points[i]) || points[i].length < 2) {\n        return;\n      }\n    }\n    let {\n      display,\n      borderTopWidth,\n      borderLeftWidth,\n      marginTop,\n      marginLeft,\n      paddingTop,\n      paddingLeft,\n      stroke,\n      strokeWidth,\n      strokeDasharray,\n    } = style;\n    if(display === 'none') {\n      return;\n    }\n    let originX = x + borderLeftWidth.value + marginLeft.value + paddingLeft.value;\n    let originY = y + borderTopWidth.value + marginTop.value + paddingTop.value;\n    let pts = this.__pts = [];\n    if(origin === 'TOP_LEFT') {\n      points.forEach(item => {\n        pts.push([\n          originX + item[0] * width,\n          originY + item[1] * height\n        ]);\n      });\n    }\n    else if(origin === 'TOP_RIGHT') {\n      points.forEach(item => {\n        pts.push([\n          originX + width - item[0] * width,\n          originY + item[1] * height\n        ]);\n      });\n    }\n    else if(origin === 'BOTTOM_LEFT') {\n      points.forEach(item => {\n        pts.push([\n          originX + item[0] * width,\n          originY + height - item[1] * height\n        ]);\n      });\n    }\n    else if(origin === 'BOTTOM_RIGHT') {\n      points.forEach(item => {\n        pts.push([\n          originX + width - item[0] * width,\n          originY + height - item[1] * height\n        ]);\n      });\n    }\n    if(renderMode === mode.CANVAS) {\n      ctx.strokeStyle = stroke;\n      ctx.lineWidth = strokeWidth;\n      ctx.setLineDash(strokeDasharray);\n      ctx.beginPath();\n      ctx.moveTo(pts[0][0], originY + pts[0][1]);\n      for(let i = 1, len = pts.length; i < len; i++) {\n        let point = pts[i];\n        ctx.lineTo(point[0], point[1]);\n      }\n      if(strokeWidth && stroke !== 'transparent') {\n        ctx.stroke();\n      }\n      ctx.closePath();\n    }\n    else if(renderMode === mode.SVG) {\n      let points = '';\n      for(let i = 0, len = pts.length; i < len; i++) {\n        let point = pts[i];\n        points += `${point[0]},${point[1]} `;\n      }\n      virtualDom.content.push({\n        type: 'item',\n        tagName: 'polyline',\n        props: [\n          ['points', points],\n          ['fill', 'none'],\n          ['stroke', stroke],\n          ['stroke-width', strokeWidth],\n          ['stroke-dasharray', strokeDasharray]\n        ],\n      });\n    }\n  }\n\n  getPointsByX(x) {\n    let min = Infinity;\n    let len = this.__pts.length;\n    let res = [];\n    for(let i = 0; i < len; i++) {\n      let diff = Math.abs(this.__pts[i][0] - x);\n      if(diff < min) {\n        min = diff;\n      }\n    }\n    for(let i = 0; i < len; i++) {\n      let diff = Math.abs(this.__pts[i][0] - x);\n      if(diff === min) {\n        res.push({\n          index: i,\n          x: this.__pts[i][0],\n          y: this.__pts[i][1],\n        });\n      }\n    }\n    return res;\n  }\n\n  get points() {\n    return this.__points;\n  }\n  get origin() {\n    return this.__origin;\n  }\n}\n\nexport default Polyline;\n","import Geom from './Geom';\nimport mode from '../mode';\n\nclass Polygon extends Geom {\n  constructor(tagName, props) {\n    super(tagName, props);\n    // 所有点的列表\n    this.__points = [];\n    if(Array.isArray(this.props.points)) {\n      this.__points = this.props.points;\n    }\n  }\n\n  render(renderMode) {\n    super.render(renderMode);\n    let { x, y, width, height, style, ctx, points, virtualDom } = this;\n    if(points.length < 3) {\n      return;\n    }\n    for(let i = 0, len = points.length; i < len; i++) {\n      if(!Array.isArray(points[i]) || points[i].length < 2) {\n        return;\n      }\n    }\n    let {\n      display,\n      borderTopWidth,\n      borderLeftWidth,\n      marginTop,\n      marginLeft,\n      paddingTop,\n      paddingLeft,\n      stroke,\n      strokeWidth,\n      strokeDasharray,\n      fill,\n    } = style;\n    if(display === 'none') {\n      return;\n    }\n    let originX = x + borderLeftWidth.value + marginLeft.value + paddingLeft.value;\n    let originY = y + borderTopWidth.value + marginTop.value + paddingTop.value;\n    points.forEach(item => {\n      item[0] = originX + item[0] * width;\n      item[1] = originY + item[1] * height;\n    });\n    if(renderMode === mode.CANVAS) {\n      ctx.strokeStyle = stroke;\n      ctx.lineWidth = strokeWidth;\n      ctx.fillStyle = fill;\n      ctx.setLineDash(strokeDasharray);\n      ctx.beginPath();\n      ctx.moveTo(points[0][0], originY + points[0][1]);\n      for(let i = 1, len = points.length; i < len; i++) {\n        let point = points[i];\n        ctx.lineTo(point[0], point[1]);\n      }\n      ctx.fill();\n      if(strokeWidth && stroke !== 'transparent') {\n        ctx.stroke();\n      }\n      ctx.closePath();\n    }\n    else if(renderMode === mode.SVG) {\n      let points = '';\n      for(let i = 0, len = points.length; i < len; i++) {\n        let point = points[i];\n        points += `${point[0]},${point[1]} `;\n      }\n      virtualDom.content.push({\n        type: 'item',\n        tagName: 'polygon',\n        props: [\n          ['points', points],\n          ['fill', fill],\n          ['stroke', stroke],\n          ['stroke-width', strokeWidth],\n          ['stroke-dasharray', strokeDasharray]\n        ],\n      });\n    }\n  }\n\n  get points() {\n    return this.__points;\n  }\n}\n\nexport default Polygon;\n","import Geom from './Geom';\nimport mode from '../mode';\n\nconst OFFSET = Math.PI * 0.5;\n\nfunction getCoordByDegree(x, y, r, d) {\n  while(d > 360) {\n    d -= 360;\n  }\n  while(d < 0) {\n    d += 360;\n  }\n  if(d >= 0 && d < 90) {\n    return [\n      x + Math.sin(d * Math.PI / 180) * r,\n      y - Math.cos(d * Math.PI / 180) * r\n    ];\n  }\n  else if(d >= 90 && d < 180) {\n    return [\n      x + Math.cos((d - 90) * Math.PI / 180) * r,\n      y + Math.sin((d - 90) * Math.PI / 180) * r,\n    ];\n  }\n  else if(d >= 180 && d < 270) {\n    return [\n      x - Math.cos((270 - d) * Math.PI / 180) * r,\n      y + Math.sin((270 - d) * Math.PI / 180) * r,\n    ];\n  }\n  else {\n    return [\n      x - Math.sin((360 - d) * Math.PI / 180) * r,\n      y - Math.cos((360 - d) * Math.PI / 180) * r,\n    ];\n  }\n}\n\nclass Sector extends Geom {\n  constructor(tagName, props) {\n    super(tagName, props);\n    // 角度\n    this.__start = 0;\n    this.__end = 0;\n    if(this.props.start) {\n      this.__start = parseFloat(this.props.start);\n      if(isNaN(this.start)) {\n        this.__start = 0;\n      }\n    }\n    if(this.props.end) {\n      this.__end = parseFloat(this.props.end);\n      if(isNaN(this.end)) {\n        this.__end = 0;\n      }\n    }\n    // 半径0~1，默认1\n    this.__r = 1;\n    if(this.props.r) {\n      this.__r = parseFloat(this.props.r);\n      if(isNaN(this.r)) {\n        this.__r = 1;\n      }\n    }\n  }\n\n  render(renderMode) {\n    super.render(renderMode);\n    let { x, y, width, height, style, ctx, start, end, r, virtualDom } = this;\n    if(start === end) {\n      return;\n    }\n    let {\n      display,\n      borderTopWidth,\n      borderLeftWidth,\n      marginTop,\n      marginLeft,\n      paddingTop,\n      paddingLeft,\n      stroke,\n      strokeWidth,\n      strokeDasharray,\n      fill,\n    } = style;\n    if(display === 'none') {\n      return;\n    }\n    let originX = x + borderLeftWidth.value + marginLeft.value + paddingLeft.value;\n    let originY = y + borderTopWidth.value + marginTop.value + paddingTop.value;\n    originX += width * 0.5;\n    originY += height * 0.5;\n    r *= Math.min(width, height) * 0.5;\n    if(renderMode === mode.CANVAS) {\n      ctx.strokeStyle = stroke;\n      ctx.lineWidth = strokeWidth;\n      ctx.fillStyle = fill;\n      ctx.setLineDash(strokeDasharray);\n      ctx.beginPath();\n      ctx.moveTo(originX, originY);\n      ctx.arc(originX, originY, r, start * Math.PI / 180 - OFFSET, end * Math.PI / 180 - OFFSET);\n      ctx.fill();\n      if(strokeWidth && stroke !== 'transparent') {\n        ctx.stroke();\n      }\n      ctx.closePath();\n    }\n    else if(renderMode === mode.SVG) {\n      let x1, y1, x2, y2;\n      [ x1, y1 ] = getCoordByDegree(originX, originY, r, start);\n      [ x2, y2 ] = getCoordByDegree(originX, originY, r, end);\n      let large = (end - start) > 180 ? 1 : 0;\n      virtualDom.content.push({\n        type: 'item',\n        tagName: 'path',\n        props: [\n          ['d', `M${originX} ${originY} L${x1} ${y1} A${r} ${r} 0 ${large} 1 ${x2} ${y2} z`],\n          ['fill', fill],\n          ['stroke', stroke],\n          ['stroke-width', strokeWidth],\n          ['stroke-dasharray', strokeDasharray]\n        ],\n      });\n    }\n  }\n\n  get start() {\n    return this.__start;\n  }\n  get end() {\n    return this.__end;\n  }\n  get r() {\n    return this.__r;\n  }\n}\n\nexport default Sector;\n","import Geom from './Geom';\nimport mode from '../mode';\n\nclass Rect extends Geom {\n  constructor(tagName, props) {\n    super(tagName, props);\n  }\n\n  render(renderMode) {\n    super.render(renderMode);\n    let { x, y, width, height, style, ctx, virtualDom } = this;\n    let {\n      display,\n      borderTopWidth,\n      borderLeftWidth,\n      marginTop,\n      marginLeft,\n      paddingTop,\n      paddingLeft,\n      stroke,\n      strokeWidth,\n      strokeDasharray,\n      fill,\n    } = style;\n    if(display === 'none') {\n      return;\n    }\n    let originX = x + borderLeftWidth.value + marginLeft.value + paddingLeft.value;\n    let originY = y + borderTopWidth.value + marginTop.value + paddingTop.value;\n    if(renderMode === mode.CANVAS) {\n      ctx.strokeStyle = stroke;\n      ctx.lineWidth = strokeWidth;\n      ctx.fillStyle = fill;\n      ctx.setLineDash(strokeDasharray);\n      ctx.beginPath();\n      ctx.moveTo(originX, originY);\n      ctx.lineTo(originX + width, originY);\n      ctx.lineTo(originX + width, originY + height);\n      ctx.lineTo(originX, originY + height);\n      ctx.fill();\n      if(strokeWidth && stroke !== 'transparent') {\n        ctx.stroke();\n      }\n      ctx.closePath();\n    }\n    else if(renderMode === mode.SVG) {\n      virtualDom.content.push({\n        type: 'item',\n        tagName: 'rect',\n        props: [\n          ['x', x],\n          ['y', y],\n          ['width', width],\n          ['height', height],\n          ['fill', fill],\n          ['stroke', stroke],\n          ['stroke-width', strokeWidth],\n          ['stroke-dasharray', strokeDasharray]\n        ],\n      });\n    }\n  }\n}\n\nexport default Rect;\n","import Geom from './Geom';\nimport mode from '../mode';\n\nclass Circle extends Geom {\n  constructor(tagName, props) {\n    super(tagName, props);\n    // 半径0~1，默认1\n    this.__r = 1;\n    if(this.props.r) {\n      this.__r = parseFloat(this.props.r);\n      if(isNaN(this.r)) {\n        this.__r = 1;\n      }\n    }\n  }\n\n  render(renderMode) {\n    super.render(renderMode);\n    let { x, y, width, height, style, ctx, r, virtualDom } = this;\n    let {\n      display,\n      borderTopWidth,\n      borderLeftWidth,\n      marginTop,\n      marginLeft,\n      paddingTop,\n      paddingLeft,\n      stroke,\n      strokeWidth,\n      strokeDasharray,\n      fill,\n    } = style;\n    if(display === 'none') {\n      return;\n    }\n    let originX = x + borderLeftWidth.value + marginLeft.value + paddingLeft.value;\n    let originY = y + borderTopWidth.value + marginTop.value + paddingTop.value;\n    originX += width * 0.5;\n    originY += height * 0.5;\n    r *= Math.min(width, height) * 0.5;\n    if(renderMode === mode.CANVAS) {\n      ctx.strokeStyle = stroke;\n      ctx.lineWidth = strokeWidth;\n      ctx.fillStyle = fill;\n      ctx.setLineDash(strokeDasharray);\n      ctx.beginPath();\n      ctx.arc(originX, originY, r, 0, 2 * Math.PI);\n      if(fill !== 'transparent') {\n        ctx.fill();\n      }\n      if(strokeWidth && stroke !== 'transparent') {\n        ctx.stroke();\n      }\n      ctx.closePath();\n    }\n    else if(renderMode === mode.SVG) {\n      virtualDom.content.push({\n        type: 'item',\n        tagName: 'circle',\n        props: [\n          ['cx', originX],\n          ['cy', originY],\n          ['r', r],\n          ['fill', fill],\n          ['stroke', stroke],\n          ['stroke-width', strokeWidth],\n          ['stroke-dasharray', strokeDasharray]\n        ],\n      });\n    }\n  }\n\n  get r() {\n    return this.__r;\n  }\n}\n\nexport default Circle;\n","import Geom from './Geom';\nimport mode from '../mode';\n\nclass Ellipse extends Geom {\n  constructor(tagName, props) {\n    super(tagName, props);\n    // 半径0~1，默认1\n    this.__rx = 1;\n    if(this.props.rx) {\n      this.__rx = parseFloat(this.props.rx);\n      if(isNaN(this.rx)) {\n        this.__rx = 1;\n      }\n    }\n    this.__ry = 1;\n    if(this.props.ry) {\n      this.__ry = parseFloat(this.props.ry);\n      if(isNaN(this.rx)) {\n        this.__ry = 1;\n      }\n    }\n  }\n\n  render(renderMode) {\n    super.render(renderMode);\n    let { x, y, width, height, style, ctx, rx, ry, virtualDom } = this;\n    let {\n      display,\n      borderTopWidth,\n      borderLeftWidth,\n      marginTop,\n      marginLeft,\n      paddingTop,\n      paddingLeft,\n      stroke,\n      strokeWidth,\n      strokeDasharray,\n      fill,\n    } = style;\n    if(display === 'none') {\n      return;\n    }\n    let originX = x + borderLeftWidth.value + marginLeft.value + paddingLeft.value;\n    let originY = y + borderTopWidth.value + marginTop.value + paddingTop.value;\n    originX += width * 0.5;\n    originY += height * 0.5;\n    rx *= width * 0.5;\n    ry *= height * 0.5;\n    if(renderMode === mode.CANVAS) {\n      ctx.strokeStyle = stroke;\n      ctx.lineWidth = strokeWidth;\n      ctx.fillStyle = fill;\n      ctx.setLineDash(strokeDasharray);\n      ctx.beginPath();\n      ctx.moveTo(originX, originY);\n      ctx.ellipse && ctx.ellipse(originX, originY, rx, ry, 0, 0, 2 * Math.PI);\n      ctx.fill();\n      if(strokeWidth && stroke !== 'transparent') {\n        ctx.stroke();\n      }\n      ctx.closePath();\n    }\n    else if(renderMode === mode.SVG) {\n      virtualDom.content.push({\n        type: 'item',\n        tagName: 'ellipse',\n        props: [\n          ['cx', originX],\n          ['cy', originY],\n          ['rx', rx],\n          ['ry', ry],\n          ['fill', fill],\n          ['stroke', stroke],\n          ['stroke-width', strokeWidth],\n          ['stroke-dasharray', strokeDasharray]\n        ],\n      });\n    }\n  }\n\n  get rx() {\n    return this.__rx;\n  }\n  get ry() {\n    return this.__ry;\n  }\n}\n\nexport default Ellipse;\n","import Geom from './Geom';\nimport mode from '../mode';\n\nclass Grid extends Geom {\n  constructor(tagName, props) {\n    super(tagName, props);\n    // x,y被分为几格\n    this.__nx = 0;\n    if(this.props.nx) {\n      this.__nx = parseFloat(this.props.nx);\n      if(isNaN(this.nx)) {\n        this.__nx = 0;\n      }\n    }\n    this.__ny = 0;\n    if(this.props.ny) {\n      this.__ny = parseFloat(this.props.ny);\n      if(isNaN(this.ny)) {\n        this.__ny = 0;\n      }\n    }\n  }\n\n  render(renderMode) {\n    super.render(renderMode);\n    let { x, y, width, height, style, ctx, nx, ny, virtualDom } = this;\n    if(width <= 0 || height <= 0) {\n      return;\n    }\n    if(nx < 3 && ny < 3) {\n      return;\n    }\n    let {\n      display,\n      borderTopWidth,\n      borderLeftWidth,\n      marginTop,\n      marginLeft,\n      paddingTop,\n      paddingLeft,\n      stroke,\n      strokeWidth,\n      strokeDasharray,\n    } = style;\n    if(display === 'none') {\n      return;\n    }\n    let originX = x + borderLeftWidth.value + marginLeft.value + paddingLeft.value;\n    let originY = y + borderTopWidth.value + marginTop.value + paddingTop.value;\n    let endX = originX + width;\n    let endY = originY + height;\n    let lx = [];\n    let ly = [];\n    if(nx >= 3) {\n      let per = width / (nx - 1);\n      for(let i = 0; i < nx; i++) {\n        ly.push(originX + i * per);\n      }\n    }\n    if(ny >= 3) {\n      let per = height / (ny - 1);\n      for(let i = 0; i < ny; i++) {\n        lx.push(originY + i * per);\n      }\n    }\n    if(renderMode === mode.CANVAS) {\n      ctx.strokeStyle = stroke;\n      ctx.lineWidth = strokeWidth;\n      ctx.setLineDash(strokeDasharray);\n      ctx.beginPath();\n      lx.forEach(item => {\n        ctx.moveTo(originX, item);\n        ctx.lineTo(endX, item);\n      });\n      ly.forEach(item => {\n        ctx.moveTo(item, originY);\n        ctx.lineTo(item, endY);\n      });\n      if(strokeWidth && stroke !== 'transparent') {\n        ctx.stroke();\n      }\n      ctx.closePath();\n    }\n    else if(renderMode === mode.SVG) {\n      lx.forEach(item => {\n        virtualDom.content.push({\n          type: 'item',\n          tagName: 'line',\n          props: [\n            ['x1', originX],\n            ['y1', item],\n            ['x2', endX],\n            ['y2', item],\n            ['stroke', stroke],\n            ['stroke-width', strokeWidth],\n            ['stroke-dasharray', strokeDasharray]\n          ],\n        });\n      });\n      ly.forEach(item => {\n        virtualDom.content.push({\n          type: 'item',\n          tagName: 'line',\n          props: [\n            ['x1', item],\n            ['y1', originY],\n            ['x2', item],\n            ['y2', endY],\n            ['stroke', stroke],\n            ['stroke-width', strokeWidth],\n            ['stroke-dasharray', strokeDasharray]\n          ],\n        });\n      });\n    }\n  }\n\n  get nx() {\n    return this.__nx;\n  }\n  get ny() {\n    return this.__ny;\n  }\n  get dash() {\n    return this.__dash;\n  }\n}\n\nexport default Grid;\n","import Dom from './node/Dom';\nimport CS from './node/CS';\nimport Geom from './geom/Geom';\nimport Line from './geom/Line';\nimport Polyline from './geom/Polyline';\nimport Polygon from './geom/Polygon';\nimport Sector from './geom/Sector';\nimport Rect from './geom/Rect';\nimport Circle from './geom/Circle';\nimport Ellipse from './geom/Ellipse';\nimport Grid from './geom/Grid';\n\nGeom.register('$line', Line);\nGeom.register('$polyline', Polyline);\nGeom.register('$polygon', Polygon);\nGeom.register('$sector', Sector);\nGeom.register('$rect', Rect);\nGeom.register('$circle', Circle);\nGeom.register('$ellipse', Ellipse);\nGeom.register('$grid', Grid);\n\nlet karas = {\n  render(cs, dom) {\n    if(!(cs instanceof CS)) {\n      throw new Error('render root muse be canvas or svg');\n    }\n    if(dom) {\n      cs.appendTo(dom);\n    }\n    return cs;\n  },\n  createVd(tagName, props, children) {\n    if(['canvas', 'svg'].indexOf(tagName) > -1) {\n      return new CS(tagName, props, children);\n    }\n    if(Dom.isValid(tagName)) {\n      return new Dom(tagName, props, children);\n    }\n    throw new Error('can not use marker: ' + tagName);\n  },\n  createGm(tagName, props) {\n    let klass = Geom.getImplement(tagName);\n    return new klass(tagName, props);\n  },\n  createCp(cp, props) {\n    return new cp(props);\n  },\n  Geom,\n};\n\nif(typeof window != 'undefined') {\n  window.karas = karas;\n}\n\nexport default karas;\n"],"names":["div","Node","__x","__y","__width","__height","__prev","__next","__ctx","__parent","__style","__baseLine","__virtualDom","diff","this","s","style","document","createElement","position","left","top","visibility","body","appendChild","fontSize","innerText","css","window","getComputedStyle","parseFloat","width","Xom","tagName","props","Array","isArray","arr","hash","i","len","length","item","list","Object","keys","j","k","arr2hash","__props","temp","push","splice","spread","hash2arr","__tagName","_this","__listener","forEach","test","slice","toLowerCase","__mtw","__mrw","__mbw","__mlw","__ptw","__prw","__pbw","__plw","data","w","display","marginTop","marginRight","marginBottom","marginLeft","paddingTop","paddingRight","paddingBottom","paddingLeft","unit","value","__mpWidth","__layoutBlock","__layoutFlex","__layoutInline","parent","w2","height","right","bottom","__offsetX","__offsetY","mp","renderMode","bb","ctx","x","y","mlw","mtw","plw","ptw","prw","pbw","virtualDom","backgroundColor","borderTopWidth","borderTopColor","borderTopStyle","borderRightWidth","borderRightColor","borderRightStyle","borderBottomWidth","borderBottomColor","borderBottomStyle","borderLeftWidth","borderLeftColor","borderLeftStyle","x1","y1","h","mode","beginPath","fillStyle","rect","fill","closePath","type","x2","lineWidth","strokeStyle","setLineDash","moveTo","lineTo","stroke","y2","mrw","mbw","lhr","car","blr","mdr","lgr","RESET","borderSizing","fontFamily","color","fontStyle","fontWeight","lineHeight","verticalAlign","flexGrow","flexShrink","flexBasis","flexDirection","justifyContent","alignItems","textAlign","strokeWidth","strokeDasharray","reset","v","toString","isType","obj","call","isNumber","stringify","isNil","util","isObject","isString","isFunction","isBoolean","isDate","joinSourceArray","res","encodeHtml","prop","replace","joinVirtualDom","vd","content","children","parserOneBorder","direction","key","exec","c","indexOf","normalize","hasOwnProperty","background","bgc","flex","border","borderTop","borderRight","borderBottom","borderLeft","margin","padding","font","Math","max","setFontStyle","getBaseLine","normal","LineBox","__content","fillText","CHAR_WIDTH_CACHE","Text","__lineBoxes","__charWidthList","__charWidth","__textWidth","charWidthList","cache","sum","char","charAt","mw","measureText","charWidth","isVirtual","maxX","lineBoxes","begin","count","lineBox","_this2","render","map","textWidth","n","min","last","baseLine","__renderMode","LineGroup","__list","__calBaseLine","IMPLEMENT","Geom","total","isDirectionRow","b","main","fixedHeight","fixedWidth","e","force","cb","event","xe","ye","covers","listener","outerWidth","outerHeight","target","name","Error","implement","TAG_NAME","INLINE","Dom","__children","__flowChildren","__absChildren","__lineGroups","__flowY","__traverseChildren","prev","_this3","__traverse","text","parentStyle","__initStyle","__measure","flowChildren","__tryLayInline","isRecursion","__calAutoBasis","b2","min2","max2","__layout","__calAbs","Infinity","lineGroups","lineGroup","add","size","horizonAlign","growList","shrinkList","basisList","minList","growSum","shrinkSum","basisSum","maxSum","maxCross","isOverflow","shrink","grow","overflow","free","child","center","between","around","_this4","absChildren","container","flowY","pw","ph","__layoutAbs","h2","width2","height2","widthPx","heightPx","hasChildEmit","__emitEvent","elem","ovd","nvd","diffBb","firstChild","ol","nl","lastChild","cns","childNodes","removeAt","insertAt","diffD2D","replaceWith","diffD2G","diffItem","diffT2T","diffG2D","diffG2G","obb","nbb","isText","op","setAttribute","removeAttribute","textContent","insertAdjacentHTML","parentNode","removeChild","index","CS","__node","undefined","parseInt","isNaN","touches","node","getBoundingClientRect","clientX","clientY","addEventListener","__cb","dom","o","querySelector","getDom","__initProps","nodeName","toUpperCase","innerHTML","__genHtml","getPropertyValue","getContext","clearRect","__karasInit","domDiff","__ovd","__initEvent","Line","__start","__end","__control","start","end","control","originX","originY","cx1","cy1","cx2","cy2","curve","bezierCurveTo","quadraticCurveTo","Polyline","__points","points","origin","__origin","pts","__pts","point","abs","Polygon","OFFSET","PI","getCoordByDegree","r","d","sin","cos","Sector","__r","arc","large","Rect","Circle","Ellipse","__rx","rx","__ry","ry","ellipse","Grid","__nx","nx","__ny","ny","endX","endY","lx","ly","per","__dash","register","karas","cs","appendTo","createVd","isValid","createGm","getImplement","createCp","cp"],"mappings":"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"}