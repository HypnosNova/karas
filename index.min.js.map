{"version":3,"file":"index.min.js","sources":["src/node/mode.js","src/node/Node.js","src/style/unit.js","src/node/Xom.js","src/style/font.js","src/style/reset.js","src/util.js","src/style/css.js","src/node/LineBox.js","src/node/Text.js","src/node/LineGroup.js","src/geom/Geom.js","src/node/Dom.js","src/node/CS.js","src/geom/Line.js","src/geom/Polygon.js","src/index.js"],"sourcesContent":["const CANVAS = 0;\nconst SVG = 1;\n\nlet div;\nlet svgHtml = '';\n\nexport default {\n  CANVAS,\n  SVG,\n  appendHtml(s) {\n    svgHtml += s;\n  },\n  get html() {\n    return svgHtml;\n  },\n  measure(s, style) {\n    if(!div) {\n      div = document.createElement('div');\n      div.style.position = 'absolute';\n      div.style.left = '99999px';\n      div.style.top = '-99999px';\n      div.style.visibility = 'hidden';\n      document.body.appendChild(div);\n    }\n    div.style.fontSize = style.fontSize + 'px';\n    div.innerText = s;\n    let css = window.getComputedStyle(div, null);\n    return parseFloat(css.width);\n  }\n};\n","import mode from './mode';\n\nclass Node {\n  constructor() {\n    this.__x = 0;\n    this.__y = 0;\n    this.__width = 0;\n    this.__height = 0;\n    this.__prev = null;\n    this.__next = null;\n    this.__ctx = null; // canvas的context\n    this.__parent = null;\n    this.__style = {}; // style被解析后的k-v形式\n    this.__baseLine = 0;\n    this.__mode = mode.CANVAS;\n  }\n\n  __offsetX(diff) {\n    this.__x += diff;\n  }\n\n  __offsetY(diff) {\n    this.__y += diff;\n  }\n\n  get x() {\n    return this.__x;\n  }\n  get y() {\n    return this.__y;\n  }\n  get width() {\n    return this.__width;\n  }\n  get height() {\n    return this.__height;\n  }\n  get outerWidth() {\n    return this.__width;\n  }\n  get outerHeight() {\n    return this.__height;\n  }\n  get prev() {\n    return this.__prev;\n  }\n  get next() {\n    return this.__next;\n  }\n  get parent() {\n    return this.__parent;\n  }\n  get style() {\n    return this.__style;\n  }\n  get ctx() {\n    return this.__ctx;\n  }\n  get baseLine() {\n    return this.__baseLine;\n  }\n  get mode() {\n    return this.__mode;\n  }\n}\n\nexport default Node;\n","export default {\n  AUTO: 0,\n  PX: 1,\n  PERCENT: 2,\n};\n","import Node from './Node';\nimport mode from './mode';\nimport unit from '../style/unit';\n\nfunction arr2hash(arr) {\n  let hash = {};\n  for(let i = 0, len = arr.length; i < len; i++) {\n    let item = arr[i];\n    if(Array.isArray(item)) {\n      hash[item[0]] = item[1];\n    }\n    else {\n      for(let list = Object.keys(item), j = list.length - 1; j >= 0; j--) {\n        let k = list[j];\n        hash[k] = item[k];\n      }\n    }\n  }\n  return hash;\n}\n\nfunction hash2arr(hash) {\n  let arr = [];\n  for(let list = Object.keys(hash), i = 0, len = list.length; i < len; i++) {\n    let k = list[i];\n    arr.push([k, hash[k]]);\n  }\n  return arr;\n}\n\nfunction spread(arr) {\n  for(let i = 0, len = arr.length; i < len; i++) {\n    let item = arr[i];\n    if(!Array.isArray(item)) {\n      let temp = [];\n      for(let list = Object.keys(item), j = 0, len = list.length; j < len; j++) {\n        let k = list[j];\n        temp.push([k, item[k]]);\n      }\n      arr.splice(i, 1, ...temp);\n    }\n  }\n  return arr;\n}\n\nclass Xom extends Node {\n  constructor(tagName, props) {\n    super();\n    props = props || [];\n    // 构建工具中都是arr，手写可能出现hash情况\n    if(Array.isArray(props)) {\n      this.props = arr2hash(props);\n      this.__props = spread(props);\n    }\n    else {\n      this.props = props;\n      this.__props = hash2arr(props);\n    }\n    this.__tagName = tagName;\n    this.__style = this.props.style || {}; // style被解析后的k-v形式\n  }\n\n  __preLay(data) {\n    let { style } = this;\n    if(style.display === 'block') {\n      this.__preLayBlock(data);\n    }\n    else if(style.display === 'flex') {\n      this.__preLayFlex(data);\n    }\n    else {\n      this.__preLayInline(data);\n    }\n    // relative偏移\n    let { width, height } = this.parent || this;\n    let {\n      position,\n      top,\n      right,\n      bottom,\n      left,\n    } = style;\n    if(position === 'relative') {\n      if(left.unit !== unit.AUTO) {\n        let diff = left.unit === unit.PX ? left.value : left.value * width * 0.01;\n        this.__offsetX(diff);\n      }\n      else if(right.unit !== unit.AUTO) {\n        let diff = right.unit === unit.PX ? right.value : right.value * width * 0.01;\n        this.__offsetX(-diff);\n      }\n      if(top.unit !== unit.AUTO) {\n        let diff = top.unit === unit.PX ? top.value : top.value * height * 0.01;\n        this.__offsetY(diff);\n      }\n      else if(bottom.unit !== unit.AUTO) {\n        let diff = bottom.unit === unit.PX ? bottom.value : bottom.value * height * 0.01;\n        this.__offsetY(-diff);\n      }\n    }\n  }\n\n  render() {\n    let { ctx, style, x, y, width, height } = this;\n    let {\n      backgroundColor,\n      borderTopWidth,\n      borderTopColor,\n      borderRightWidth,\n      borderRightColor,\n      borderBottomWidth,\n      borderBottomColor,\n      borderLeftWidth,\n      borderLeftColor,\n      marginTop,\n      marginLeft,\n      paddingTop,\n      paddingRight,\n      paddingBottom,\n      paddingLeft,\n    } = style;\n    if(marginLeft) {\n      x += marginLeft.value;\n    }\n    if(marginTop) {\n      y += marginTop.value;\n    }\n    if(backgroundColor) {\n      let x1 = x;\n      if(borderLeftWidth) {\n        x1 += borderLeftWidth.value;\n      }\n      let y1 = y;\n      if(borderTopWidth) {\n        y1 += borderTopWidth.value;\n      }\n      let w = width + paddingLeft.value + paddingRight.value;\n      let h = height + paddingTop.value + paddingBottom.value;\n      if(this.mode === mode.CANVAS) {\n        ctx.beginPath();\n        ctx.fillStyle = backgroundColor;\n        ctx.rect(x1, y1, w, h);\n        ctx.fill();\n        ctx.closePath();\n      }\n      else if(this.mode === mode.SVG) {\n        mode.appendHtml(`<rect x=\"${x1}\" y=\"${y1}\" width=\"${w}\" height=\"${h}\" fill=\"${backgroundColor}\"/>`);\n      }\n    }\n    if(borderTopWidth.value) {\n      let x1 = x + borderLeftWidth.value;\n      let y1 = y + borderTopWidth.value * 0.5;\n      let x2 = x1 + width;\n      if(paddingLeft) {\n        x2 += paddingLeft.value;\n      }\n      if(paddingRight) {\n        x2 += paddingRight.value;\n      }\n      if(this.mode === mode.CANVAS) {\n        ctx.beginPath();\n        ctx.lineWidth = borderTopWidth.value;\n        ctx.strokeStyle = borderTopColor;\n        ctx.moveTo(x1, y1);\n        ctx.lineTo(x2, y1);\n        ctx.stroke();\n        ctx.closePath();\n      }\n      else if(this.mode === mode.SVG) {\n        mode.appendHtml(`<line x1=\"${x1}\" y1=\"${y1}\" x2=\"${x2}\" y2=\"${y1}\" stroke-width=\"${borderTopWidth.value}\" stroke=\"${borderTopColor}\"/>`);\n      }\n    }\n    if(borderRightWidth.value) {\n      let x1 = x + width + borderLeftWidth.value + borderRightWidth.value * 0.5;\n      let y1 = y;\n      let y2 = y1 + height + borderTopWidth.value + borderBottomWidth.value;\n      if(paddingLeft) {\n        x1 += paddingLeft.value;\n      }\n      if(paddingRight) {\n        x1 += paddingRight.value;\n      }\n      if(paddingTop) {\n        y2 += paddingTop.value;\n      }\n      if(paddingBottom) {\n        y2 += paddingBottom.value;\n      }\n      if(this.mode === mode.CANVAS) {\n        ctx.beginPath();\n        ctx.lineWidth = borderRightWidth.value;\n        ctx.strokeStyle = borderRightColor;\n        ctx.moveTo(x1, y1);\n        ctx.lineTo(x1, y2);\n        ctx.stroke();\n        ctx.closePath();\n      }\n      else if(this.mode === mode.SVG) {\n        mode.appendHtml(`<line x1=\"${x1}\" y1=\"${y1}\" x2=\"${x1}\" y2=\"${y2}\" stroke-width=\"${borderRightWidth.value}\" stroke=\"${borderRightColor}\"/>`);\n      }\n    }\n    if(borderBottomWidth.value) {\n      let x1 = x + borderLeftWidth.value;\n      let y1 = y + height + borderTopWidth.value + borderBottomWidth.value * 0.5;\n      let x2 = x1 + width;\n      if(paddingLeft) {\n        x2 += paddingLeft.value;\n      }\n      if(paddingRight) {\n        x2 += paddingRight.value;\n      }\n      if(paddingTop) {\n        y1 += paddingTop.value;\n      }\n      if(paddingBottom) {\n        y1 += paddingBottom.value;\n      }\n      if(this.mode === mode.CANVAS) {\n        ctx.beginPath();\n        ctx.lineWidth = borderBottomWidth.value;\n        ctx.strokeStyle = borderBottomColor;\n        ctx.moveTo(x1, y1);\n        ctx.lineTo(x2, y1);\n        ctx.stroke();\n        ctx.closePath();\n      }\n      else if(this.mode === mode.SVG) {\n        mode.appendHtml(`<line x1=\"${x1}\" y1=\"${y1}\" x2=\"${x2}\" y2=\"${y1}\" stroke-width=\"${borderBottomWidth.value}\" stroke=\"${borderBottomColor}\"/>`);\n      }\n    }\n    if(borderLeftWidth.value) {\n      let x1 = x + borderLeftWidth.value * 0.5;\n      let y1 = y;\n      let y2 = y1 + height + borderTopWidth.value + borderBottomWidth.value;\n      if(paddingTop) {\n        y2 += paddingTop.value;\n      }\n      if(paddingBottom) {\n        y2 += paddingBottom.value;\n      }\n      if(this.mode === mode.CANVAS) {\n        ctx.beginPath();\n        ctx.lineWidth = borderLeftWidth.value;\n        ctx.strokeStyle = borderLeftColor;\n        ctx.moveTo(x1, y1);\n        ctx.lineTo(x1, y2);\n        ctx.stroke();\n        ctx.closePath();\n      }\n      else if(this.mode === mode.SVG) {\n        mode.appendHtml(`<line x1=\"${x1}\" y1=\"${y1}\" x2=\"${x1}\" y2=\"${y2}\" stroke-width=\"${borderLeftWidth.value}\" stroke=\"${borderLeftColor}\"/>`);\n      }\n    }\n  }\n\n  get tagName() {\n    return this.__tagName;\n  }\n  get outerWidth() {\n    let { style: {\n      borderLeftWidth,\n      borderRightWidth,\n      marginLeft,\n      marginRight,\n      paddingLeft,\n      paddingRight,\n    } } = this;\n    return this.width\n      + borderLeftWidth.value\n      + borderRightWidth.value\n      + marginLeft.value\n      + marginRight.value\n      + paddingLeft.value\n      + paddingRight.value;\n  }\n  get outerHeight() {\n    let { style: {\n      borderTopWidth,\n      borderBottomWidth,\n      marginTop,\n      marginBottom,\n      paddingTop,\n      paddingBottom,\n    } } = this;\n    return this.height\n      + borderTopWidth.value\n      + borderBottomWidth.value\n      + marginTop.value\n      + marginBottom.value\n      + paddingTop.value\n      + paddingBottom.value;\n  }\n}\n\nexport default Xom;\n","'use strict';\n\nexport default {\n  arial: {\n    lhr: 1.14990234375, // 默认line-height ratio，(67+1854+434)/2048\n    car: 1.1171875, // content-area ratio，(1854+434)/2048\n    blr: 0.9052734375, // base-line ratio，1854/2048\n    mdr: 0.64599609375, // middle ratio，(1854-1062/2)/2048\n    lgr: 0.03271484375, // line-gap ratio，67/2048\n  },\n};\n","const RESET = {\n  position: 'static',\n  display: 'block',\n  borderSizing: 'content-box',\n  top: 'auto',\n  right: 'auto',\n  bottom: 'auto',\n  left: 'auto',\n  marginTop: 0,\n  marginRight: 0,\n  marginBottom: 0,\n  marginLeft: 0,\n  paddingTop: 0,\n  paddingRight: 0,\n  paddingBottom: 0,\n  paddingLeft: 0,\n  fontSize: 16,\n  fontFamily: 'arial',\n  color: '#000',\n  fontStyle: 'normal',\n  fontWeight: 400,\n  lineHeight: 'normal',\n  borderTopWidth: 0,\n  borderRightWidth: 0,\n  borderBottomWidth: 0,\n  borderLeftWidth: 0,\n  borderTopStyle: 'solid',\n  borderRightStyle: 'solid',\n  borderBottomStyle: 'solid',\n  borderLeftStyle: 'solid',\n  verticalAlign: 'baseline',\n  width: 'auto',\n  height: 'auto',\n  flexGrow: 0,\n  flexShrink: 1,\n  flexBasis: 'auto',\n  flexDirection: 'row',\n  justifyContent: 'flex-start',\n  alignItems: 'stretch',\n  textAlign: 'left',\n  visibility: 'visible',\n  stroke: '#000',\n  strokeWidth: 1,\n};\n\nlet reset = [];\n\nObject.keys(RESET).forEach(k => {\n  let v = RESET[k];\n  reset.push({\n    k,\n    v,\n  });\n});\n\nexport default reset;\n","let toString = {}.toString;\nfunction isType(type) {\n  return function(obj) {\n    return toString.call(obj) === '[object ' + type + ']';\n  }\n}\n\nlet isNumber = isType('Number');\n\nfunction joinSourceArray(arr) {\n  var res = '';\n  for(var i = 0, len = arr.length; i < len; i++) {\n    var item = arr[i];\n    if(Array.isArray(item)) {\n      res += joinSourceArray(item);\n    }\n    else {\n      res += stringify(item);\n    }\n  }\n  return res;\n}\n\nfunction stringify(s) {\n  if(isNil(s)) {\n    return '';\n  }\n  return s.toString();\n}\n\nfunction encodeHtml(s, prop) {\n  if(prop) {\n    return s.replace(/\"/g, '&quot;');\n  }\n  return s.replace(/&/g, '&amp;').replace(/</g, '&lt;');\n}\n\nfunction isNil(v) {\n  return v === undefined || v === null;\n}\n\nlet util = {\n  isObject: isType('Object'),\n  isString: isType('String'),\n  isFunction: isType('Function'),\n  isNumber,\n  isBoolean: isType('Boolean'),\n  isDate: isType('Date'),\n  stringify,\n  joinSourceArray(arr) {\n    return joinSourceArray(arr);\n  },\n  encodeHtml,\n  isNil,\n};\n\nexport default util;\n","import unit from './unit';\nimport font from './font';\nimport reset from './reset';\nimport util from '../util';\n\nfunction parserOneBorder(style, direction) {\n  let key = `border${direction}`;\n  if(!style[key]) {\n    return;\n  }\n  let w = /\\b\\d+px\\b/i.exec(style[key]);\n  if(w) {\n    style[key + 'Width'] = w[0];\n  }\n  let s = /\\bsolid\\b/i.exec(style[key]);\n  if(s) {\n    style[key + 'Style'] = s[0];\n  }\n  let c = /#[0-9a-f]{3,6}/i.exec(style[key]);\n  if(c && [4, 7].indexOf(c[0].length) > -1) {\n    style[key + 'Color'] = c[0];\n  }\n}\n\nfunction normalize(style) {\n  // 默认reset\n  reset.forEach(item => {\n    if(!style.hasOwnProperty(item.k)) {\n      style[item.k] = item.v;\n    }\n  });\n  // 处理缩写\n  // TODO: 重复声明时优先级\n  if(style.background) {\n    let bgc = /#[0-9a-f]{3,6}/i.exec(style.background);\n    if(bgc && [4, 7].indexOf(bgc[0].length) > -1) {\n      style.backgroundColor = bgc[0];\n    }\n  }\n  if(style.flex) {\n    if(style.flex === 'none') {\n      style.flexGrow = 0;\n      style.flexShrink = 0;\n      style.flexBasis = 'auto';\n    }\n    else if(style.flex === 'auto') {\n      style.flexGrow = 1;\n      style.flexShrink = 1;\n      style.flexBasis = 'auto';\n    }\n    else if(/^[\\d.]+$/.test(style.flex)) {\n      style.flexGrow = parseFloat(style.flex);\n      style.flexShrink = 1;\n      style.flexBasis = 0;\n    }\n    else if(/^[\\d.]+px$/.test(style.flex)) {}\n    else if(/^[\\d.]+%$/.test(style.flex)) {}\n    else {\n      style.flexGrow = 0;\n      style.flexShrink = 1;\n      style.flexBasis = 'auto';\n    }\n  }\n  if(style.border) {\n    style.borderTop = style.borderRight = style.borderBottom = style.borderLeft = style.border;\n  }\n  if(style.margin) {\n    style.marginTop = style.marginRight = style.marginBottom = style.marginLeft = style.margin;\n  }\n  if(style.padding) {\n    style.paddingTop = style.paddingRight = style.paddingBottom = style.paddingLeft = style.padding;\n  }\n  parserOneBorder(style, 'Top');\n  parserOneBorder(style, 'Right');\n  parserOneBorder(style, 'Bottom');\n  parserOneBorder(style, 'Left');\n  // 转化不同单位值为对象标准化\n  [\n    'marginTop',\n    'marginRight',\n    'marginBottom',\n    'marginLeft',\n    'paddingTop',\n    'paddingRight',\n    'paddingBottom',\n    'paddingLeft',\n    'borderTopWidth',\n    'borderRightWidth',\n    'borderBottomWidth',\n    'borderLeftWidth',\n    'top',\n    'right',\n    'bottom',\n    'left',\n    'width',\n    'height',\n    'flexBasis',\n  ].forEach(k => {\n    let v = style[k];\n    // 编译工具前置解析优化跳出\n    if(!util.isNil(v) && v.unit) {\n      return;\n    }\n    if(v === 'auto') {\n      style[k] = {\n        unit: unit.AUTO,\n      };\n    }\n    else if(/%$/.test(v)) {\n      v = parseFloat(v) || 0;\n      style[k] = {\n        value: v,\n        unit: unit.PERCENT,\n      };\n    }\n    else {\n      v = parseFloat(v) || 0;\n      style[k] = {\n        value: v,\n        unit: unit.PX,\n      };\n    }\n  });\n  // 计算lineHeight为px值，最小范围\n  let lineHeight = style.lineHeight;\n  if(lineHeight === 'normal') {\n    lineHeight = {\n      value: style.fontSize * font.arial.lhr,\n      unit: unit.PX,\n    };\n  }\n  else if(/px$/.test(lineHeight)) {\n    lineHeight = parseFloat(lineHeight);\n    lineHeight = {\n      value: Math.max(style.fontSize, lineHeight),\n      unit: unit.PX,\n    };\n  }\n  // 纯数字比例\n  else {\n    lineHeight = parseFloat(lineHeight) || 'normal';\n    // 非法数字\n    if(lineHeight === 'normal') {\n      lineHeight = {\n        value: style.fontSize * font.arial.lhr,\n        unit: unit.PX,\n      };\n    }\n    else {\n      lineHeight = {\n        value: lineHeight * style.fontSize,\n        unit: unit.PX,\n      };\n    }\n  }\n  style.lineHeight = lineHeight;\n}\n\nfunction setFontStyle(style) {\n  let { fontStyle, fontWeight, fontSize, fontFamily } = style;\n  return `${fontStyle} ${fontWeight} ${fontSize}px/${fontSize}px ${fontFamily}`;\n}\n\nfunction getBaseLine(style) {\n  let normal = style.fontSize * font.arial.lhr;\n  return (style.lineHeight.value - normal) * 0.5 + style.fontSize * font.arial.blr;\n}\n\nexport default {\n  normalize,\n  setFontStyle,\n  getBaseLine,\n};\n","import css from '../style/css';\nimport mode from './mode';\n\nclass LineBox {\n  constructor(mode, ctx, x, y, w, content, style) {\n    this.__mode = mode;\n    this.__ctx = ctx;\n    this.__x = x;\n    this.__y = y;\n    this.__width = w;\n    this.__content = content;\n    this.__style = style;\n  }\n\n  render() {\n    let { ctx, style, content, x, y } = this;\n    if(this.mode === mode.CANVAS) {\n      ctx.fillStyle = style.color;\n      ctx.fillText(content, x, y + css.getBaseLine(style));\n    }\n    else if(this.mode === mode.SVG) {\n      mode.appendHtml(`<text x=\"${x}\" y=\"${y + css.getBaseLine(style)}\" fill=\"${style.color}\" font-size=\"${style.fontSize}px\">${content}</text>`);\n    }\n  }\n\n  __offsetX(diff) {\n    this.__x += diff;\n  }\n\n  __offsetY(diff) {\n    this.__y += diff;\n  }\n\n  get ctx() {\n    return this.__ctx;\n  }\n  get x() {\n    return this.__x;\n  }\n  get y() {\n    return this.__y;\n  }\n  get width() {\n    return this.__width;\n  }\n  get content() {\n    return this.__content;\n  }\n  get style() {\n    return this.__style;\n  }\n  get baseLine() {\n    return css.getBaseLine(this.style);\n  }\n  get mode() {\n    return this.__mode;\n  }\n}\n\nexport default LineBox;\n","import Node from './Node';\nimport LineBox from './LineBox';\nimport css from '../style/css';\nimport mode from './mode';\n\nconst CHAR_WIDTH_CACHE = {};\n\nclass Text extends Node {\n  constructor(content) {\n    super();\n    this.__content = content.toString();\n    this.__lineBoxes = [];\n    this.__charWidthList = [];\n    this.__charWidth = 0;\n    this.__textWidth = 0;\n  }\n\n  // 预先计算每个字的宽度\n  __measure() {\n    this.__charWidthList = [];\n    let { ctx, content, style, charWidthList } = this;\n    if(this.mode === mode.CANVAS) {\n      ctx.font = css.setFontStyle(style);\n    }\n    let cache = CHAR_WIDTH_CACHE[style.fontSize] = CHAR_WIDTH_CACHE[style.fontSize] || {};\n    let length = content.length;\n    let sum = 0;\n    for(let i = 0; i < length; i++) {\n      let char = content.charAt(i);\n      let mw;\n      if(cache.hasOwnProperty(char)) {\n        mw = cache[char];\n      }\n      else if(this.mode === mode.CANVAS) {\n        mw = ctx.measureText(char).width;\n      }\n      else if(this.mode === mode.SVG) {\n        mw = mode.measure(char, style);\n      }\n      charWidthList.push(mw);\n      sum += mw;\n      this.__charWidth = Math.max(this.charWidth, mw);\n    }\n    this.__textWidth = sum;\n  }\n\n  __preLay(data, isVirtual) {\n    let { x, y, w, h } = data;\n    this.__x = x;\n    this.__y = y;\n    let maxX = x;\n    let { ctx, content, style, lineBoxes, charWidthList } = this;\n    // 顺序尝试分割字符串为lineBox，形成多行\n    let begin = 0;\n    let i = 0;\n    let count = 0;\n    let length = content.length;\n    while(i < length) {\n      count += charWidthList[i];\n      if (count === w) {\n        let lineBox = new LineBox(this.mode, ctx, x, y, count, content.slice(begin, i + 1), style);\n        lineBoxes.push(lineBox);\n        maxX = Math.max(maxX, x + count);\n        y += this.style.lineHeight.value;\n        begin = i + 1;\n        i = begin + 1;\n        count = 0;\n      }\n      else if (count > w) {\n        // 宽度不足时无法跳出循环，至少也要塞个字符形成一行\n        if(i === begin) {\n          i = begin + 1;\n        }\n        let lineBox = new LineBox(this.mode, ctx, x, y, count - charWidthList[i], content.slice(begin, i), style);\n        lineBoxes.push(lineBox);\n        maxX = Math.max(maxX, x + count - charWidthList[i]);\n        y += this.style.lineHeight.value;\n        begin = i;\n        i = i + 1;\n        count = 0;\n      }\n      else {\n        i++;\n      }\n    }\n    if(begin < length && begin < i) {\n      count = 0;\n      for(i = begin ;i < length; i++) {\n        count += charWidthList[i];\n      }\n      let lineBox = new LineBox(this.mode, ctx, x, y, count, content.slice(begin, length), style);\n      lineBoxes.push(lineBox);\n      maxX = Math.max(maxX, x + count);\n      y += style.lineHeight.value;\n    }\n    this.__width = maxX - x;\n    this.__height = y - data.y;\n    if(isVirtual) {\n      this.__lineBoxes = [];\n    }\n    else {\n      let { textAlign } = style;\n      if(['center', 'right'].indexOf(textAlign) > -1) {\n        lineBoxes.forEach(lineBox => {\n          let diff = this.__width - lineBox.width;\n          if(diff > 0) {\n            lineBox.__offsetX(textAlign === 'center' ? diff * 0.5 : diff);\n          }\n        });\n      }\n    }\n  }\n\n  render() {\n    if(this.mode === mode.CANVAS) {\n      this.ctx.font = css.setFontStyle(this.style);\n    }\n    this.lineBoxes.forEach(item => {\n      item.render();\n    });\n  }\n\n  __tryLayInline(w) {\n    return w - this.textWidth;\n  }\n\n  __offsetX(diff) {\n    super.__offsetX(diff);\n    this.lineBoxes.forEach(item => {\n      item.__offsetX(diff);\n    });\n  }\n\n  __offsetY(diff) {\n    super.__offsetY(diff);\n    this.lineBoxes.forEach(item => {\n      item.__offsetY(diff);\n    });\n  }\n\n  __calMaxAndMinWidth() {\n    let n = 0;\n    this.charWidthList.forEach(item => {\n      n = Math.max(n, item);\n    });\n    return { max: this.textWidth, min: n };\n  }\n\n  get content() {\n    return this.__content;\n  }\n  set content(v) {\n    this.__content = v;\n  }\n  get lineBoxes() {\n    return this.__lineBoxes;\n  }\n  get charWidthList() {\n    return this.__charWidthList;\n  }\n  get charWidth() {\n    return this.__charWidth;\n  }\n  get textWidth() {\n    return this.__textWidth;\n  }\n  get baseLine() {\n    let last = this.lineBoxes[this.lineBoxes.length - 1];\n    return last.y - this.y + last.baseLine;\n  }\n}\n\nexport default Text;\n","class LineGroup {\n  constructor(x, y) {\n    this.__list = [];\n    this.__x = x;\n    this.__y = y;\n    this.__baseLine = 0;\n  }\n\n  add(item) {\n    this.list.push(item);\n  }\n\n  __calBaseLine() {\n    let baseLine = 0;\n    this.list.forEach(item => {\n      baseLine = Math.max(baseLine, item.baseLine);\n    });\n    return baseLine;\n  }\n\n  verticalAlign() {\n    this.__baseLine = this.__calBaseLine();\n    // 仅当有2个和以上时才需要vertical对齐调整\n    if(this.list.length > 1) {\n      this.list.forEach(item => {\n        if(item.baseLine !== this.baseLine) {\n          item.__offsetY(this.baseLine - item.baseLine);\n        }\n      });\n    }\n  }\n\n  horizonAlign(diff) {\n    this.list.forEach(item => {\n      item.__offsetX(diff);\n    });\n  }\n\n  get list() {\n    return this.__list;\n  }\n  get x() {\n    return this.__x;\n  }\n  get y() {\n    return this.__y;\n  }\n  get width() {\n    let width = 0;\n    this.list.forEach(item => {\n      width += item.width;\n    });\n    return width;\n  }\n  get height() {\n    let height = 0;\n    this.list.forEach(item => {\n      height = Math.max(height, item.height);\n    });\n    return height;\n  }\n  get baseLine() {\n    return this.__baseLine;\n  }\n  get size() {\n    return this.__list.length;\n  }\n}\n\nexport default LineGroup;\n","import Xom from '../node/Xom';\nimport css from '../style/css';\nimport unit from '../style/unit';\n\nconst TAG_NAME = {\n  '$line': true,\n  '$polygon': true,\n};\n\nclass Geom extends Xom {\n  constructor(tagName, props) {\n    super(tagName, props);\n  }\n\n  __initStyle() {\n    css.normalize(this.style);\n  }\n\n  __tryLayInline(w, total) {\n    // 无children，直接以style的width为宽度，不定义则为0\n    let { style: { width } } = this;\n    if(width.unit === unit.PX) {\n      return w - width.value;\n    }\n    else if(width.unit === unit.PERCENT) {\n      return w - total * width.value * 0.01;\n    }\n    return w;\n  }\n\n  __calAutoBasis(isDirectionRow, w, h) {\n    let b = 0;\n    let min = 0;\n    let max = 0;\n    let { style } = this;\n    // 计算需考虑style的属性\n    let {\n      width,\n      height,\n      borderTopWidth,\n      borderRightWidth,\n      borderBottomWidth,\n      borderLeftWidth,\n    } = style;\n    let main = isDirectionRow ? width : height;\n    if(main.unit !== unit.AUTO) {\n      b = max += main.value;\n    }\n    // border也得计算在内\n    if(isDirectionRow) {\n      let w = borderRightWidth.value + borderLeftWidth.value;\n      b += w;\n      max += w;\n      min += w;\n    }\n    else {\n      let h = borderTopWidth.value + borderBottomWidth.value;\n      b += h;\n      max += h;\n      min += h;\n    }\n    return { b, min, max };\n  }\n\n  __preLayBlock(data) {\n    let { x, y, w, h } = data;\n    this.__x = x;\n    this.__y = y;\n    this.__width = w;\n    let { style } = this;\n    let {\n      width,\n      height,\n      borderTopWidth,\n      borderRightWidth,\n      borderBottomWidth,\n      borderLeftWidth,\n    } = style;\n    // 除了auto外都是固定高度\n    let fixedHeight;\n    if(width && width.unit !== unit.AUTO) {\n      switch(width.unit) {\n        case unit.PX:\n          w = width.value;\n          break;\n      }\n    }\n    if(height && height.unit !== unit.AUTO) {\n      fixedHeight = true;\n      switch(height.unit) {\n        case unit.PX:\n          h = height.value;\n          break;\n        case unit.PERCENT:\n          h *= height.value * 0.01;\n          break;\n      }\n    }\n    // border影响x和y和尺寸\n    x += borderLeftWidth.value;\n    data.x = x;\n    y += borderTopWidth.value;\n    data.y = y;\n    w -= borderLeftWidth.value + borderRightWidth.value;\n    h -= borderTopWidth.value + borderBottomWidth.value;\n    this.__width = w;\n    this.__height = fixedHeight ? h : 0;\n  }\n\n  __preLayFlex(data) {\n    // 无children所以等同于block\n    this.__preLayBlock(data);\n  }\n\n  __preLayInline(data) {\n    let { x, y, w, h } = data;\n    this.__x = x;\n    this.__y = y;\n    let { style } = this;\n    let {\n      width,\n      height,\n      borderTopWidth,\n      borderRightWidth,\n      borderBottomWidth,\n      borderLeftWidth,\n    } = style;\n    // 除了auto外都是固定高度\n    let fixedWidth;\n    let fixedHeight;\n    if(width && width.unit !== unit.AUTO) {\n      fixedWidth = true;\n      switch(width.unit) {\n        case unit.PX:\n          w = width.value;\n          break;\n      }\n    }\n    if(height && height.unit !== unit.AUTO) {\n      fixedHeight = true;\n      switch(height.unit) {\n        case unit.PX:\n          h = height.value;\n          break;\n      }\n    }\n    // border影响x和y\n    x += borderLeftWidth.value;\n    data.x = x;\n    y += borderTopWidth.value;\n    data.y = y;\n    w -= borderLeftWidth.value + borderRightWidth.value;\n    h -= borderTopWidth.value + borderBottomWidth.value;\n    // 元素的width不能超过父元素w\n    this.__width = fixedWidth ? w : x - data.x;\n    this.__height = fixedHeight ? h : y - data.y;\n  }\n\n  render() {\n    super.render();\n  }\n\n  get tagName() {\n    return this.__tagName;\n  }\n  get baseLine() {\n    return this.__height;\n  }\n  get origin() {\n    return this.__origin;\n  }\n  get min() {\n    return this.__min;\n  }\n  get max() {\n    return this.__max;\n  }\n\n  static isValid(s) {\n    return TAG_NAME.hasOwnProperty(s);\n  }\n}\n\nexport default Geom;\n","import Xom from './Xom';\nimport Text from './Text';\nimport LineGroup from './LineGroup';\nimport Geom from '../geom/Geom';\nimport util from '../util';\nimport css from '../style/css';\nimport unit from '../style/unit';\n\nconst TAG_NAME = {\n  'div': true,\n  'span': true,\n};\nconst INLINE = {\n  'span': true,\n};\n\nclass Dom extends Xom {\n  constructor(tagName, props, children) {\n    super(tagName, props);\n    this.__children = children;\n    this.__flowChildren = []; // 非绝对定位孩子\n    this.__absChildren = []; // 绝对定位孩子\n    this.__lineGroups = []; // 一行inline元素组成的LineGroup对象后的存放列表\n    this.__flowY = 0; // 文档流布局结束后的y坐标，供absolute布局默认位置使用\n  }\n\n  /**\n   * 1. 封装string为Text节点\n   * 2. 打平children中的数组，变成一维\n   * 3. 合并相连的Text节点\n   * 4. 检测inline不能包含block和flex\n   * 5. 设置parent和prev/next和ctx和mode\n   */\n  __traverse(ctx, mode) {\n    let list = [];\n    this.__traverseChildren(this.children, list, ctx, mode);\n    for(let i = list.length - 1; i > 0; i--) {\n      let item = list[i];\n      if(item instanceof Text) {\n        let prev = list[i - 1];\n        if(prev instanceof Text) {\n          prev.content += item.content;\n          list.splice(i, 1);\n        }\n        else {\n          i--;\n        }\n      }\n    }\n    if(this.style.display === 'inline' && this.parent.style.display !== 'flex') {\n      for(let i = list.length - 1; i >= 0; i--) {\n        let item = list[i];\n        if(item instanceof Dom && item.style.display !== 'inline') {\n          throw new Error('inline can not contain block/flex');\n        }\n      }\n    }\n    let prev = null;\n    list.forEach(item => {\n      item.__ctx = ctx;\n      if(prev) {\n        prev.__next = item;\n      }\n      item.__parent = this;\n      item.__prev = prev;\n      if(item instanceof Text || item.style.position !== 'absolute') {\n        this.__flowChildren.push(item);\n      }\n      else {\n        this.__absChildren.push(item);\n      }\n    });\n    this.__children = list;\n  }\n\n  __traverseChildren(children, list, ctx, mode) {\n    if(Array.isArray(children)) {\n      children.forEach(item => {\n        this.__traverseChildren(item, list, ctx, mode);\n      });\n    }\n    else if(children instanceof Dom) {\n      list.push(children);\n      children.__traverse(ctx, mode);\n      children.__mode = mode;\n    }\n    // 图形没有children\n    else if(children instanceof Geom) {\n      list.push(children);\n      children.__mode = mode;\n    }\n    // 排除掉空的文本\n    else if(!util.isNil(children)) {\n      let text = new Text(children);\n      text.__mode = mode;\n      list.push(text);\n    }\n  }\n\n  // 合并设置style，包括继承和默认值，修改一些自动值和固定值，测量所有文字的宽度\n  __initStyle() {\n    let style = this.__style;\n    // 仅支持flex/block/inline/none\n    if(!style.display || ['flex', 'block', 'inline', 'none'].indexOf(style.display) === -1) {\n      if(INLINE.hasOwnProperty(this.tagName)) {\n        style.display = 'inline';\n      }\n      else {\n        style.display = 'block';\n      }\n    }\n    // 继承父元素样式\n    let parent = this.parent;\n    if(parent) {\n      let parentStyle = parent.style;\n      ['fontSize', 'fontWeight', 'fontStyle', 'lineHeight', 'wordBreak', 'color', 'textAlign'].forEach(k => {\n        if(!style.hasOwnProperty(k) && parentStyle.hasOwnProperty(k)) {\n          style[k] = parentStyle[k];\n        }\n      });\n    }\n    // 标准化处理，默认值、简写属性\n    css.normalize(style);\n    this.children.forEach(item => {\n      if(item instanceof Dom || item instanceof Geom) {\n        item.__initStyle();\n      }\n      else {\n        item.__style = style;\n        // 文字首先测量所有字符宽度\n        item.__measure();\n      }\n    });\n  }\n\n  // 给定父宽度情况下，尝试行内放下后的剩余宽度，为负数即放不下\n  __tryLayInline(w, total) {\n    let { flowChildren, style: { width } } = this;\n    if(width.unit === unit.PX) {\n      return w - width.value;\n    }\n    else if(width.unit === unit.PERCENT) {\n      return w - total * width.value * 0.01;\n    }\n    for(let i = 0; i < flowChildren.length; i++) {\n      // 当放不下时直接返回，无需继续多余的尝试计算\n      if(w < 0) {\n        return w;\n      }\n      let item = flowChildren[i];\n      if(item instanceof Dom || item instanceof Geom) {\n        w -= item.__tryLayInline(w, total);\n      }\n      else {\n        w -= item.textWidth;\n      }\n    }\n    return w;\n  }\n\n  // 设置y偏移值，递归包括children，此举在flex行元素的child进行justify-content对齐用\n  __offsetX(diff) {\n    super.__offsetX(diff);\n    this.flowChildren.forEach(item => {\n      if(item) {\n        item.__offsetX(diff);\n      }\n    });\n  }\n\n  // 设置y偏移值，递归包括children，此举在初步确定inline布局后设置元素vertical-align用\n  __offsetY(diff) {\n    super.__offsetY(diff);\n    this.flowChildren.forEach(item => {\n      if(item) {\n        item.__offsetY(diff);\n      }\n    });\n  }\n\n  __calAutoBasis(isDirectionRow, w, h, isRecursion) {\n    let b = 0;\n    let min = 0;\n    let max = 0;\n    let { flowChildren, style } = this;\n    // 计算需考虑style的属性\n    let {\n      width,\n      height,\n      borderTopWidth,\n      borderRightWidth,\n      borderBottomWidth,\n      borderLeftWidth,\n      marginTop,\n      marginRight,\n      marginBottom,\n      marginLeft,\n      paddingTop,\n      paddingRight,\n      paddingBottom,\n      paddingLeft,\n    } = style;\n    let main = isDirectionRow ? width : height;\n    if(main.unit === unit.PX) {\n      b = max = main.value;\n      // 递归时children的长度会影响flex元素的最小宽度\n      if(isRecursion) {\n        min = b;\n      }\n    }\n    // 递归children取最大值\n    flowChildren.forEach(item => {\n      if(item instanceof Dom || item instanceof Geom) {\n        let { b: b2, min: min2, max: max2 } = item.__calAutoBasis(isDirectionRow, w, h, true);\n        b = Math.max(b, b2);\n        min = Math.max(min, min2);\n        max = Math.max(max, max2);\n      }\n      else if(isDirectionRow) {\n        min = Math.max(item.charWidth, min);\n        max = Math.max(item.textWidth, max);\n      }\n      else {\n        item.__preLay({\n          x: 0,\n          y: 0,\n          w,\n          h,\n        }, true);\n        min = Math.max(min, item.height);\n        max = Math.max(max, item.height);\n      }\n    });\n    // margin/padding/border也得计算在内\n    if(isDirectionRow) {\n      let w = borderRightWidth.value + borderLeftWidth.value + marginLeft.value + marginRight.value + paddingLeft.value + paddingRight.value;\n      b += w;\n      max += w;\n      min += w;\n    }\n    else {\n      let h = borderTopWidth.value + borderBottomWidth.value + marginTop.value + marginBottom.value + paddingTop.value + paddingBottom.value;\n      b += h;\n      max += h;\n      min += h;\n    }\n    return { b, min, max };\n  }\n\n  __calAbs(isDirectionRow) {\n    let max = 0;\n    let { flowChildren, style } = this;\n    // 计算需考虑style的属性\n    let {\n      width,\n      height,\n      borderTopWidth,\n      borderRightWidth,\n      borderBottomWidth,\n      borderLeftWidth,\n      marginTop,\n      marginRight,\n      marginBottom,\n      marginLeft,\n      paddingTop,\n      paddingRight,\n      paddingBottom,\n      paddingLeft,\n    } = style;\n    let main = isDirectionRow ? width : height;\n    if(main.unit === unit.PX) {\n      max = main.value;\n    }\n    // 递归children取最大值\n    flowChildren.forEach(item => {\n      if(item instanceof Dom || item instanceof Geom) {\n        let max2 = item.__calAbs(isDirectionRow);\n        max = Math.max(max, max2);\n      }\n      else if(isDirectionRow) {\n        max = Math.max(item.textWidth, max);\n      }\n      else {\n        item.__preLay({\n          x: 0,\n          y: 0,\n          w: Infinity,\n          h: Infinity,\n        }, true);\n        max = Math.max(max, item.height);\n      }\n    });\n    // margin/padding/border也得计算在内\n    if(isDirectionRow) {\n      let w = borderRightWidth.value + borderLeftWidth.value + marginLeft.value + marginRight.value + paddingLeft.value + paddingRight.value;\n      max += w;\n    }\n    else {\n      let h = borderTopWidth.value + borderBottomWidth.value + marginTop.value + marginBottom.value + paddingTop.value + paddingBottom.value;\n      max += h;\n    }\n    return max;\n  }\n\n  // 本身block布局时计算好所有子元素的基本位置\n  __preLayBlock(data) {\n    let { x, y, w, h } = data;\n    this.__x = x;\n    this.__y = y;\n    this.__width = w;\n    let { flowChildren, style, lineGroups } = this;\n    let {\n      width,\n      height,\n      borderTopWidth,\n      borderRightWidth,\n      borderBottomWidth,\n      borderLeftWidth,\n      marginTop,\n      marginRight,\n      marginBottom,\n      marginLeft,\n      paddingTop,\n      paddingRight,\n      paddingBottom,\n      paddingLeft,\n      textAlign,\n    } = style;\n    // 除了auto外都是固定高度\n    let fixedHeight;\n    if(width && width.unit !== unit.AUTO) {\n      switch(width.unit) {\n        case unit.PX:\n          w = width.value;\n          break;\n        case unit.PERCENT:\n          w *= width.value * 0.01;\n          break;\n      }\n    }\n    if(height && height.unit !== unit.AUTO) {\n      fixedHeight = true;\n      switch(height.unit) {\n        case unit.PX:\n          h = height.value;\n          break;\n        case unit.PERCENT:\n          h *= height.value * 0.01;\n          break;\n      }\n    }\n    // margin/padding/border影响x和y和尺寸\n    x += borderLeftWidth.value + marginLeft.value + paddingLeft.value;\n    data.x = x;\n    y += borderTopWidth.value + marginTop.value + paddingTop.value;\n    data.y = y;\n    w -= borderLeftWidth.value + borderRightWidth.value + marginLeft.value + marginRight.value + paddingLeft.value + paddingRight.value;\n    h -= borderTopWidth.value + borderBottomWidth.value + marginTop.value + marginBottom.value + paddingTop.value + paddingBottom.value;\n    // 递归布局，将inline的节点组成lineGroup一行\n    let lineGroup = new LineGroup(x, y);\n    flowChildren.forEach(item => {\n      if(item instanceof Dom || item instanceof Geom) {\n        if(item.style.display === 'inline') {\n          // inline开头，不用考虑是否放得下直接放\n          if(x === data.x) {\n            lineGroup.add(item);\n            item.__preLayInline({\n              x,\n              y,\n              w,\n              h,\n            });\n            x += item.outerWidth;\n          }\n          else {\n            // 非开头先尝试是否放得下\n            let fw = item.__tryLayInline(w - x, w);\n            // 放得下继续\n            if(fw >= 0) {\n              item.__preLayInline({\n                x,\n                y,\n                w,\n                h,\n              });\n            }\n            // 放不下处理之前的lineGroup，并重新开头\n            else {\n              lineGroups.push(lineGroup);\n              lineGroup.verticalAlign();\n              x = data.x;\n              y += lineGroup.height;\n              item.__preLayInline({\n                x: data.x,\n                y,\n                w,\n                h,\n              });\n              lineGroup = new LineGroup(x, y);\n            }\n            x += item.outerWidth;\n            lineGroup.add(item);\n          }\n        }\n        else {\n          // block先处理之前可能的lineGroup\n          if(lineGroup.size) {\n            lineGroups.push(lineGroup);\n            lineGroup.verticalAlign();\n            y += lineGroup.height;\n            lineGroup = new LineGroup(data.x, y);\n          }\n          item.__preLay({\n            x: data.x,\n            y,\n            w,\n            h,\n          });\n          x = data.x;\n          y += item.outerHeight;\n        }\n      }\n      // 文字和inline类似\n      else {\n        // x开头，不用考虑是否放得下直接放\n        if(x === data.x) {\n          lineGroup.add(item);\n          item.__preLay({\n            x,\n            y,\n            w,\n            h,\n          });\n          x += item.width;\n        }\n        else {\n          // 非开头先尝试是否放得下\n          let fw = item.__tryLayInline(w - x, w);\n          // 放得下继续\n          if(fw >= 0) {\n            item.__preLay({\n              x,\n              y,\n              w,\n              h,\n            });\n          }\n          // 放不下处理之前的lineGroup，并重新开头\n          else {\n            lineGroups.push(lineGroup);\n            lineGroup.verticalAlign();\n            x = data.x;\n            y += lineGroup.height;\n            item.__preLay({\n              x: data.x,\n              y,\n              w,\n              h,\n            });\n            lineGroup = new LineGroup(x, y);\n          }\n          x += item.width;\n          lineGroup.add(item);\n        }\n      }\n    });\n    // 结束后处理可能遗留的最后的lineGroup\n    if(lineGroup.size) {\n      lineGroups.push(lineGroup);\n      lineGroup.verticalAlign();\n      y += lineGroup.height;\n    }\n    // text-align\n    if(['center', 'right'].indexOf(textAlign) > -1) {\n      lineGroups.forEach(lineGroup => {\n        let diff = w - lineGroup.width;\n        if(diff > 0) {\n          lineGroup.horizonAlign(textAlign === 'center' ? diff * 0.5 : diff);\n        }\n      });\n    }\n    this.__width = w;\n    this.__height = fixedHeight ? h : y - data.y;\n    this.__flowY = y;\n  }\n\n  // 弹性布局时的计算位置\n  __preLayFlex(data) {\n    let { x, y, w, h } = data;\n    this.__x = x;\n    this.__y = y;\n    this.__width = w;\n    let { flowChildren, style } = this;\n    let {\n      width,\n      height,\n      flexDirection,\n      borderTopWidth,\n      borderRightWidth,\n      borderBottomWidth,\n      borderLeftWidth,\n      marginTop,\n      marginRight,\n      marginBottom,\n      marginLeft,\n      paddingTop,\n      paddingRight,\n      paddingBottom,\n      paddingLeft,\n      justifyContent,\n      alignItems,\n    } = style;\n    // 除了auto外都是固定高度\n    let fixedWidth;\n    let fixedHeight;\n    if(width && width.unit !== unit.AUTO) {\n      fixedWidth = true;\n      switch(width.unit) {\n        case unit.PX:\n          w = width.value;\n          break;\n        case unit.PERCENT:\n          w *= width.value * 0.01;\n          break;\n      }\n    }\n    if(height && height.unit !== unit.AUTO) {\n      fixedHeight = true;\n      switch(height.unit) {\n        case unit.PX:\n          h = height.value;\n          break;\n        case unit.PERCENT:\n          h *= height.value * 0.01;\n          break;\n      }\n    }\n    // margin/padding/border影响x和y和尺寸\n    x += borderLeftWidth.value + marginLeft.value + paddingLeft.value;\n    data.x = x;\n    y += borderTopWidth.value + marginTop.value + paddingTop.value;\n    data.y = y;\n    w -= borderLeftWidth.value + borderRightWidth.value + marginLeft.value + marginRight.value + paddingLeft.value + paddingRight.value;\n    h -= borderTopWidth.value + borderBottomWidth.value + marginTop.value + marginBottom.value + paddingTop.value + paddingBottom.value;\n    let isDirectionRow = flexDirection === 'row';\n    // column时height可能为auto，此时取消伸展，退化为类似block布局，但所有子元素强制block\n    if(!isDirectionRow && !fixedHeight) {\n      flowChildren.forEach(item => {\n        if(item instanceof Dom || item instanceof Geom) {\n          const { style, style: { display, flexDirection, width }} = item;\n          // column的flex的child如果是inline，变为block\n          if(display === 'inline') {\n            style.display = 'block';\n          }\n          // 竖向flex的child如果是横向flex，宽度自动的话要等同于父flex的宽度\n          else if(display === 'flex' && flexDirection === 'row' && width.unit === unit.AUTO) {\n            width.value = w;\n            width.unit = unit.PX;\n          }\n          item.__preLay({\n            x,\n            y,\n            w,\n            h,\n          });\n          y += item.outerHeight;\n        }\n        else {\n          item.__preLay({\n            x,\n            y,\n            w,\n            h,\n          });\n          y += item.outerHeight;\n        }\n      });\n      this.__width = w;\n      this.__height = y - data.y;\n      return;\n    }\n    // 计算伸缩基数\n    let growList = [];\n    let shrinkList = [];\n    let basisList = [];\n    let minList = [];\n    let growSum = 0;\n    let shrinkSum = 0;\n    let basisSum = 0;\n    let maxSum = 0;\n    flowChildren.forEach(item => {\n      if(item instanceof Dom || item instanceof Geom) {\n        let { flexGrow, flexShrink, flexBasis } = item.style;\n        growList.push(flexGrow);\n        shrinkList.push(flexShrink);\n        growSum += flexGrow;\n        shrinkSum += flexShrink;\n        let { b, min, max } = item.__calAutoBasis(isDirectionRow, w, h);\n        // 根据basis不同，计算方式不同\n        if(flexBasis.unit === unit.AUTO) {\n          basisList.push(max);\n          basisSum += max;\n        }\n        else if(flexBasis.unit === unit.PX) {\n          b = flexBasis.value;\n          basisList.push(b);\n          basisSum += b;\n        }\n        else if(flexBasis.unit === unit.PERCENT) {\n          b = (isDirectionRow ? w : h) * flexBasis.value;\n          basisList.push(b);\n          basisSum += b;\n        }\n        maxSum += max;\n        minList.push(min);\n      }\n      else {\n        growList.push(0);\n        shrinkList.push(1);\n        shrinkSum += 1;\n        if(isDirectionRow) {\n          basisList.push(item.textWidth);\n          basisSum += item.textWidth;\n          maxSum += item.textWidth;\n          minList.push(item.charWidth);\n        }\n        else {\n          item.__preLay({\n            x: 0,\n            y: 0,\n            w,\n            h,\n          }, true);\n          basisList.push(item.height);\n          basisSum += item.height;\n          maxSum += item.height;\n          minList.push(item.height);\n        }\n      }\n    });\n    let maxCross = 0;\n    // 判断是否超出，决定使用grow还是shrink\n    let isOverflow = maxSum > (isDirectionRow ? w : h);\n    flowChildren.forEach((item, i) => {\n      let main;\n      let shrink = shrinkList[i];\n      let grow = growList[i];\n      // 计算主轴长度\n      if(isOverflow) {\n        let overflow = basisSum - (isDirectionRow ? w : h);\n        main = shrink ? (basisList[i] - overflow * shrink / shrinkSum) : basisList[i];\n      }\n      else {\n        let free = (isDirectionRow ? w : h) - basisSum;\n        main = grow ? (basisList[i] + free * grow / growSum) : basisList[i];\n      }\n      // 主轴长度的最小值不能小于元素的最小长度，比如横向时的字符宽度\n      main = Math.max(main, minList[i]);\n      if(item instanceof Dom || item instanceof Geom) {\n        const { style, style: { display, flexDirection, width, height }} = item;\n        if(isDirectionRow) {\n          // row的flex的child如果是inline，变为block\n          if(display === 'inline') {\n            style.display = 'block';\n          }\n          // 横向flex的child如果是竖向flex，高度自动的话要等同于父flex的高度\n          else if(display === 'flex' && flexDirection === 'column' && fixedHeight && height.unit === unit.AUTO) {\n            height.value = h;\n            height.unit = unit.PX;\n          }\n          item.__preLay({\n            x,\n            y,\n            w: main,\n            h,\n          })\n        }\n        else {\n          // column的flex的child如果是inline，变为block\n          if(display === 'inline') {\n            style.display = 'block';\n          }\n          // 竖向flex的child如果是横向flex，宽度自动的话要等同于父flex的宽度\n          else if(display === 'flex' && flexDirection === 'row' && width.unit === unit.AUTO) {\n            width.value = w;\n            width.unit = unit.PX;\n          }\n          item.__preLay({\n            x,\n            y,\n            w,\n            h: main,\n          });\n        }\n        // 重设因伸缩而导致的主轴长度\n        if(isOverflow && shrink) {\n          if(isDirectionRow) {\n            item.__width = main;\n          }\n          else {\n            item.__height = main;\n          }\n        }\n        else if(!isOverflow && grow) {\n          if(isDirectionRow) {\n            item.__width = main;\n          }\n          else {\n            item.__height = main;\n          }\n        }\n      }\n      else {\n        item.__preLay({\n          x,\n          y,\n          w: isDirectionRow ? main : w,\n          h: isDirectionRow ? h : main,\n        });\n      }\n      if(isDirectionRow) {\n        x += item.outerWidth;\n        maxCross = Math.max(maxCross, item.outerHeight);\n      }\n      else {\n        y += item.outerHeight;\n        maxCross = Math.max(maxCross, item.outerWidth);\n      }\n    });\n    // 计算主轴剩余时要用真实剩余空间而不能用伸缩剩余空间\n    let diff = isDirectionRow ? w - x + data.x : h - y + data.y;\n    // 主轴侧轴对齐方式\n    if(!isOverflow && growSum === 0 && diff > 0) {\n      let len = flowChildren.length;\n      if(justifyContent === 'flex-end') {\n        for(let i = 0; i < len; i++) {\n          let child = flowChildren[i];\n          isDirectionRow ? child.__offsetX(diff) : child.__offsetY(diff);\n        }\n      }\n      else if(justifyContent === 'center') {\n        let center = diff * 0.5;\n        for(let i = 0; i < len; i++) {\n          let child = flowChildren[i];\n          isDirectionRow ? child.__offsetX(center) : child.__offsetY(center);\n        }\n      }\n      else if(justifyContent === 'space-between') {\n        let between = diff / (len - 1);\n        for(let i = 1; i < len; i++) {\n          let child = flowChildren[i];\n          isDirectionRow ? child.__offsetX(between * i) : child.__offsetY(between * i);\n        }\n      }\n      else if(justifyContent === 'space-around') {\n        let around = diff / (len + 1);\n        for(let i = 0; i < len; i++) {\n          let child = flowChildren[i];\n          isDirectionRow ? child.__offsetX(around * (i + 1)) : child.__offsetY(around * (i + 1));\n        }\n      }\n    }\n    // 子元素侧轴伸展\n    if(isDirectionRow) {\n      // 父元素固定高度，子元素可能超过，侧轴最大长度取固定高度\n      if(fixedHeight) {\n        maxCross = h;\n      }\n      y += maxCross;\n    }\n    else {\n      if(fixedWidth) {\n        maxCross = w;\n      }\n    }\n    // 侧轴对齐\n    if(alignItems === 'stretch') {\n      // 短侧轴的children伸张侧轴长度至相同，超过的不动，固定宽高的也不动\n      flowChildren.forEach(item => {\n        let { style } = item;\n        if(isDirectionRow) {\n          if(style.height.unit === unit.AUTO) {\n            item.__height = maxCross\n              - style.marginTop.value\n              - style.marginBottom.value\n              - style.paddingTop.value\n              - style.paddingBottom.value\n              - style.borderTopWidth.value\n              - style.borderBottomWidth.value;\n          }\n        }\n        else {\n          if(style.width.unit === unit.AUTO) {\n            item.__width = maxCross\n              - style.marginLeft.value\n              - style.marginRight.value\n              - style.paddingLeft.value\n              - style.paddingRight.value\n              - borderRightWidth.value\n              - borderLeftWidth.value;\n          }\n        }\n      });\n    }\n    else if(alignItems === 'center') {\n      flowChildren.forEach(item => {\n        let diff = maxCross - item.outerHeight;\n        if(diff > 0) {\n          item.__offsetY(diff * 0.5);\n        }\n      });\n    }\n    else if(alignItems === 'flex-end') {\n      flowChildren.forEach(item => {\n        let diff = maxCross - item.outerHeight;\n        if(diff > 0) {\n          item.__offsetY(diff);\n        }\n      });\n    }\n    this.__width = w;\n    this.__height = fixedHeight ? h : y - data.y;\n    this.__flowY = y;\n  }\n\n  // inline比较特殊，先简单顶部对其，后续还需根据vertical和lineHeight计算y偏移\n  __preLayInline(data) {\n    let { x, y, w, h } = data;\n    this.__x = x;\n    this.__y = y;\n    let maxX = x;\n    let { flowChildren, style, lineGroups } = this;\n    let {\n      width,\n      height,\n      borderTopWidth,\n      borderRightWidth,\n      borderBottomWidth,\n      borderLeftWidth,\n      marginTop,\n      marginRight,\n      marginBottom,\n      marginLeft,\n      paddingTop,\n      paddingRight,\n      paddingBottom,\n      paddingLeft,\n      textAlign,\n    } = style;\n    // 除了auto外都是固定高度\n    let fixedWidth;\n    let fixedHeight;\n    if(width && width.unit !== unit.AUTO) {\n      fixedWidth = true;\n      switch(width.unit) {\n        case unit.PX:\n          w = width.value;\n          break;\n        case unit.PERCENT:\n          w *= width.value * 0.01;\n          break;\n      }\n    }\n    if(height && height.unit !== unit.AUTO) {\n      fixedHeight = true;\n      switch(height.unit) {\n        case unit.PX:\n          h = height.value;\n          break;\n        case unit.PERCENT:\n          h *= height.value * 0.01;\n          break;\n      }\n    }\n    // margin/padding/border影响x和y和尺寸\n    x += borderLeftWidth.value + marginLeft.value + paddingLeft.value;\n    data.x = x;\n    y += borderTopWidth.value + marginTop.value + paddingTop.value;\n    data.y = y;\n    w -= borderLeftWidth.value + borderRightWidth.value + marginLeft.value + marginRight.value + paddingLeft.value + paddingRight.value;\n    h -= borderTopWidth.value + borderBottomWidth.value + marginTop.value + marginBottom.value + paddingTop.value + paddingBottom.value;\n    // 递归布局，将inline的节点组成lineGroup一行\n    let lineGroup = new LineGroup(x, y);\n    flowChildren.forEach(item => {\n      if(item instanceof Dom || item instanceof Geom) {\n        // 绝对定位跳过\n        if(item.style.position === 'absolute') {\n          this.absChildren.push(item);\n          return;\n        }\n        // inline开头，不用考虑是否放得下直接放\n        if(x === data.x) {\n          lineGroup.add(item);\n          item.__preLayInline({\n            x,\n            y,\n            w,\n            h,\n          });\n          x += item.outerWidth;\n          maxX = Math.max(maxX, x);\n        }\n        else {\n          // 非开头先尝试是否放得下\n          let fw = item.__tryLayInline(w - x, w);\n          // 放得下继续\n          if(fw >= 0) {\n            item.__preLayInline({\n              x,\n              y,\n              w,\n              h,\n            });\n          }\n          // 放不下处理之前的lineGroup，并重新开头\n          else {\n            lineGroups.push(lineGroup);\n            lineGroup.verticalAlign();\n            x = data.x;\n            y += lineGroup.height;\n            item.__preLayInline({\n              x: data.x,\n              y,\n              w,\n              h,\n            });\n            lineGroup = new LineGroup(x, y);\n          }\n          x += item.outerWidth;\n          maxX = Math.max(maxX, x);\n          lineGroup.add(item);\n        }\n      }\n      // inline里的其它只有文本\n      else {\n        if(x === data.x) {\n          lineGroup.add(item);\n          item.__preLay({\n            x,\n            y,\n            w,\n            h,\n          });\n          x += item.width;\n          maxX = Math.max(maxX, x);\n        }\n        else {\n          // 非开头先尝试是否放得下\n          let fw = item.__tryLayInline(w - x, w);\n          // 放得下继续\n          if(fw >= 0) {\n            item.__preLay({\n              x,\n              y,\n              w,\n              h,\n            });\n          }\n          // 放不下处理之前的lineGroup，并重新开头\n          else {\n            lineGroups.push(lineGroup);\n            lineGroup.verticalAlign();\n            x = data.x;\n            y += lineGroup.height;\n            item.__preLay({\n              x: data.x,\n              y,\n              w,\n              h,\n            });\n            lineGroup = new LineGroup(x, y);\n          }\n          x += item.width;\n          maxX = Math.max(maxX, x);\n          lineGroup.add(item);\n        }\n      }\n    });\n    // 结束后处理可能遗留的最后的lineGroup，children为空时可能size为空\n    if(lineGroup.size) {\n      lineGroups.push(lineGroup);\n      lineGroup.verticalAlign();\n      y += lineGroup.height;\n    }\n    // text-align\n    if(['center', 'right'].indexOf(textAlign) > -1) {\n      lineGroups.forEach(lineGroup => {\n        let diff = w - lineGroup.width;\n        if(diff > 0) {\n          lineGroup.horizonAlign(textAlign === 'center' ? diff * 0.5 : diff);\n        }\n      });\n    }\n    // 元素的width不能超过父元素w\n    this.__width = fixedWidth ? w : maxX - data.x;\n    this.__height = fixedHeight ? h : y - data.y;\n    this.__flowY = y;\n  }\n\n  // 只针对绝对定位children布局\n  __preLayAbs(container) {\n    let { x, y, flowY, width, height, children, absChildren, style } = this;\n    let {\n      marginTop,\n      marginLeft,\n      paddingTop,\n      paddingLeft,\n      paddingRight,\n      paddingBottom,\n      borderTopWidth,\n      borderLeftWidth,\n    } = style;\n    let pw = width + paddingLeft.value + paddingRight.value;\n    let ph = height + paddingTop.value + paddingBottom.value;\n    // 递归进行，遇到absolute/relative的设置新容器\n    children.forEach(item => {\n      if(item instanceof Dom) {\n        item.__preLayAbs(['absolute', 'relative'].indexOf(item.style.position) > -1 ? item : container);\n      }\n    });\n    // 对absolute的元素进行相对容器布局\n    absChildren.forEach(item => {\n      let { style, style: { left, top, right, bottom, width: width2, height: height2 } } = item;\n      let x2, y2, w2, h2;\n      // width优先级高于right高于left，即最高left+right，其次left+width，再次right+width，然后仅申明单个，最次全部auto\n      if(left.unit !== unit.AUTO && right.unit !== unit.AUTO) {\n        x2 = left.unit === unit.PX ? x + left.value : x + marginLeft.value + borderLeftWidth.value + width * left.value * 0.01;\n        w2 = right.unit === unit.PX ? x + marginLeft.value + borderLeftWidth.value + pw - right.value - x2 : x + marginLeft.value + borderLeftWidth.value + pw - width * right.value * 0.01 - x2;\n      }\n      else if(left.unit !== unit.AUTO && width2.unit !== unit.AUTO) {\n        x2 = left.unit === unit.PX ? x + left.value : x + marginLeft.value + borderLeftWidth.value + width * left.value * 0.01;\n        w2 = width2.unit === unit.PX ? width2.value : width;\n      }\n      else if(right.unit !== unit.AUTO && width2.unit !== unit.AUTO) {\n        w2 = width2.unit === unit.PX ? width2.value : width;\n        let widthPx = width2.unit === unit.PX ? width2.value : width * width2.value * 0.01;\n        x2 = right.unit === unit.PX ? x + marginLeft.value + borderLeftWidth.value + pw - right.value - widthPx : x + marginLeft.value + borderLeftWidth.value + pw - width * right.value * 0.01 - widthPx;\n      }\n      else if(left.unit !== unit.AUTO) {\n        x2 = left.unit === unit.PX ? x + left.value : x + marginLeft.value + borderLeftWidth.value + width * left.value * 0.01;\n        w2 = item.__calAbs(true);\n      }\n      else if(right.unit !== unit.AUTO) {\n        w2 = item.__calAbs(true);\n        x2 = right.unit === unit.PX ? x + marginLeft.value + borderLeftWidth.value + pw - right.value - w2 : x + marginLeft.value + borderLeftWidth.value + pw - width * right.value * 0.01 - w2;\n      }\n      else if(width2.unit !== unit.AUTO) {\n        x2 = x + marginLeft.value + borderLeftWidth.value;\n        w2 = width2.unit === unit.PX ? width2.value : width;\n      }\n      else {\n        x2 = x + marginLeft.value + borderLeftWidth.value;\n        w2 = item.__calAbs(true);\n      }\n      // top/bottom/height优先级同上\n      if(top.unit !== unit.AUTO && bottom.unit !== unit.AUTO) {\n        y2 = top.unit === unit.PX ? y + top.value : y + marginTop.value + borderTopWidth.value + height * top.value * 0.01;\n        h2 = bottom.unit === unit.PX ? y + marginTop.value + borderTopWidth.value + ph - bottom.value - y2 : y + marginTop.value + borderTopWidth.value + ph - height * bottom.value * 0.01 - y2;\n        style.height = {\n          value: h2,\n          unit: unit.PX,\n        };\n      }\n      else if(top.unit !== unit.AUTO && height2.unit !== unit.AUTO) {\n        y2 = top.unit === unit.PX ? y + top.value : y + marginTop.value + borderTopWidth.value + height * top.value * 0.01;\n        h2 = height2.unit === unit.PX ? height2.value : height;\n      }\n      else if(bottom.unit !== unit.AUTO && height2.unit !== unit.AUTO) {\n        h2 = height2.unit === unit.PX ? height2.value : height;\n        let heightPx = height2.unit === unit.PX ? height2.value : height * height2.value * 0.01;\n        y2 = bottom.unit === unit.PX ? y + marginTop.value + borderTopWidth.value + ph - bottom.value - heightPx : y + marginTop.value + borderTopWidth.value + ph - height * bottom.value * 0.01 - heightPx;\n      }\n      else if(top.unit !== unit.AUTO) {\n        y2 = top.unit === unit.PX ? y + top.value : y + marginTop.value + borderTopWidth.value + height * top.value * 0.01;\n        h2 = item.__calAbs();\n      }\n      else if(bottom.unit !== unit.AUTO) {\n        h2 = item.__calAbs();\n        y2 = bottom.unit === unit.PX ? y + marginTop.value + borderTopWidth.value + ph - bottom.value - h2 : y + marginTop.value + borderTopWidth.value + ph - height * bottom.value * 0.01 - h2;\n      }\n      else if(height2.unit !== unit.AUTO) {\n        y2 = flowY + marginTop.value + borderTopWidth.value;\n        h2 = height2.unit === unit.PX ? height2.value : height;\n      }\n      else {\n        y2 = flowY + marginTop.value + borderTopWidth.value;\n        h2 = item.__calAbs();\n      }\n      // absolute时inline强制block\n      if(style.display === 'inline') {\n        style.display = 'block';\n      }\n      item.__preLay({\n        x: x2,\n        y: y2,\n        w: w2,\n        h: h2,\n      });\n    });\n  }\n\n  render() {\n    super.render();\n    let { flowChildren, children } = this;\n    // 先绘制static\n    flowChildren.forEach(item => {\n      if(item instanceof Text || item.style.position === 'static') {\n        item.render();\n      }\n    });\n    // 再绘制relative和absolute\n    children.forEach(item => {\n      if((item instanceof Dom || item instanceof Geom) && ['relative', 'absolute'].indexOf(item.style.position) > -1) {\n        item.render();\n      }\n    });\n  }\n\n  get tagName() {\n    return this.__tagName;\n  }\n  get children() {\n    return this.__children;\n  }\n  get flowChildren() {\n    return this.__flowChildren;\n  }\n  get absChildren() {\n    return this.__absChildren;\n  }\n  get lineGroups() {\n    return this.__lineGroups;\n  }\n  get baseLine() {\n    let len = this.lineGroups.length;\n    if(len) {\n      let last = this.lineGroups[len - 1];\n      return last.y - this.y + last.baseLine;\n    }\n    return this.y;\n  }\n  get flowY() {\n    return this.__flowY;\n  }\n\n  static isValid(s) {\n    return TAG_NAME.hasOwnProperty(s);\n  }\n}\n\nexport default Dom;\n","import Dom from '../node/Dom';\nimport util from '../util';\nimport mode from './mode';\n\nfunction getDom(dom) {\n  if(util.isString(dom)) {\n    let o = document.querySelector(dom);\n    if(!o) {\n      throw new Error('can not find dom of selector: ' + dom);\n    }\n    return o;\n  }\n  if(!dom) {\n    throw new Error('can not find dom: ' + dom);\n  }\n  return dom;\n}\n\nfunction renderProp(k, v) {\n  let s = Array.isArray(v) ? util.joinSourceArray(v) : util.stringify(v);\n  if(k === 'className') {\n    k = 'class';\n  }\n  return ' ' + k + '=\"' + util.encodeHtml(s, true) + '\"';\n}\n\nclass CS extends Dom {\n  constructor(tagName, props, children) {\n    super(tagName, props, children);\n    this.__node = null; // 真实DOM引用\n  }\n\n  __initProps() {\n    if(this.props.width !== undefined) {\n      let value = parseInt(this.props.width);\n      if(!isNaN(value) && value > 0) {\n        this.__width = value;\n      }\n    }\n    if(this.props.height !== undefined) {\n      let value = parseInt(this.props.height);\n      if(!isNaN(value) && value > 0) {\n        this.__height = value;\n      }\n    }\n  }\n\n  __genHtml() {\n    let res = `<${this.tagName}`;\n    // 拼接处理属性\n    for(let i = 0, len = this.__props.length; i < len; i++) {\n      let item = this.__props[i];\n      res += renderProp(item[0], item[1]);\n    }\n    res += `></${this.tagName}>`;\n    return res;\n  }\n\n  appendTo(dom) {\n    dom = getDom(dom);\n    this.__initProps();\n    // 已有canvas节点\n    if(dom.nodeName.toUpperCase() === this.tagName.toUpperCase()) {\n      this.__node = dom;\n      if(this.width) {\n        dom.setAttribute('width', this.width);\n      }\n      if(this.height) {\n        dom.setAttribute('height', this.height);\n      }\n    }\n    // 没有canvas节点则生成一个新的\n    else {\n      let s = this.__genHtml();\n      dom.insertAdjacentHTML('beforeend', s);\n      let canvas = dom.querySelectorAll(this.tagName);\n      this.__node = canvas[canvas.length - 1];\n    }\n    // 没有设置width/height则采用css计算形式\n    if(!this.width || !this.height) {\n      let css = window.getComputedStyle(dom, null);\n      if(!this.width) {\n        this.__width = parseInt(css.getPropertyValue('width'));\n        dom.setAttribute('width', this.width);\n      }\n      if(!this.height) {\n        this.__height = parseInt(css.getPropertyValue('height'));\n        dom.setAttribute('height', this.height);\n      }\n    }\n    // canvas/svg作为根节点一定是block或flex，不会是inline\n    let { style } = this;\n    if(['flex', 'block'].indexOf(style.display) === -1) {\n      style.display = 'block';\n    }\n    // 同理position不能为absolute\n    if(style.position === 'absolute') {\n      style.position = 'static';\n    }\n    // 只有canvas有ctx，svg用真实dom\n    if(this.tagName === 'canvas') {\n      this.__ctx = this.__node.getContext('2d');\n      this.__mode = mode.CANVAS;\n    }\n    else if(this.tagName === 'svg') {\n      this.__mode = mode.SVG;\n    }\n    this.__traverse(this.__ctx, this.__mode);\n    // canvas的宽高固定初始化\n    style.width = this.width;\n    style.height = this.height;\n    this.__initStyle();\n    this.__preLay({\n      x: 0,\n      y: 0,\n      w: this.width,\n      h: this.height,\n    });\n    this.__preLayAbs(this);\n    this.render();\n    if(this.mode === mode.SVG) {\n      this.__node.innerHTML = mode.html;\n    }\n  }\n\n  get node() {\n    return this.__node;\n  }\n}\n\nexport default CS;\n","import Geom from './Geom';\nimport mode from '../node/mode';\n\nclass Line extends Geom {\n  constructor(props) {\n    super('$line', props);\n    // start和end表明线段的首尾坐标\n    this.__start = [];\n    this.__end = [];\n    if(Array.isArray(this.props.start)) {\n      this.__start = this.props.start;\n    }\n    if(Array.isArray(this.props.end)) {\n      this.__end = this.props.end;\n    }\n    // 原点位置，4个角，默认左下\n    if(['TOP_LEFT', 'TOP_RIGHT', 'BOTTOM_LEFT', 'BOTTOM_RIGHT'].indexOf(this.props.origin) > -1) {\n      this.__origin = this.props.origin;\n    }\n    else {\n      this.__origin = 'BOTTOM_LEFT';\n    }\n  }\n\n  render() {\n    super.render();\n    let { x, y, width, height, style, ctx, start, end, origin } = this;\n    if(start.length < 2 || end.length < 2) {\n      return;\n    }\n    let {\n      borderTopWidth,\n      borderRightWidth,\n      borderBottomWidth,\n      borderLeftWidth,\n      marginTop,\n      marginRight,\n      marginBottom,\n      marginLeft,\n      paddingTop,\n      paddingRight,\n      paddingBottom,\n      paddingLeft,\n      stroke,\n      strokeWidth,\n    } = style;\n    let x1, y1, x2, y2;\n    let originX = x + borderLeftWidth.value + marginLeft.value + paddingLeft.value;\n    let originY = y + borderTopWidth.value + marginTop.value + paddingTop.value;\n    width -= borderLeftWidth.value + borderRightWidth.value + marginLeft.value + marginRight.value + paddingLeft.value + paddingRight.value;\n    height -= borderTopWidth.value + borderBottomWidth.value + marginTop.value + marginBottom.value + paddingTop.value + paddingBottom.value;\n    if(origin === 'TOP_LEFT') {\n      x1 = originX + start[0] * width;\n      y1 = originY + start[1] * height;\n      x2 = originX + end[0] * width;\n      y2 = originY + end[1] * height;\n    }\n    else if(origin === 'TOP_RIGHT') {\n      x1 = originX + width - start[0] * width;\n      y1 = originY + start[1] * height;\n      x2 = originX + width - end[0] * width;\n      y2 = originY + end[1] * height;\n    }\n    else if(origin === 'BOTTOM_LEFT') {\n      x1 = originX + start[0] * width;\n      y1 = originY + height - start[1] * height;\n      x2 = originX + end[0] * width;\n      y2 = originY + height - end[1] * height;\n    }\n    else if(origin === 'BOTTOM_RIGHT') {\n      x1 = originX + width - start[0] * width;\n      y1 = originY + height - start[1] * height;\n      x2 = originX + width - end[0] * width;\n      y2 = originY + height - end[1] * height;\n    }\n    if(this.mode === mode.CANVAS) {\n      ctx.strokeStyle = stroke;\n      ctx.lineWidth = strokeWidth;\n      ctx.beginPath();\n      ctx.moveTo(x1, y1);\n      ctx.lineTo(x2, y2);\n      ctx.stroke();\n      ctx.closePath();\n    }\n    else if(this.mode === mode.SVG) {\n      mode.appendHtml(`<line x1=\"${x1}\" y1=\"${y1}\" x2=\"${x2}\" y2=\"${y2}\" stroke-width=\"${strokeWidth}\" stroke=\"${stroke}\"/>`);\n    }\n  }\n\n  get start() {\n    return this.__start;\n  }\n  get end() {\n    return this.__end;\n  }\n}\n\nexport default Line;\n","import Geom from './Geom';\nimport mode from '../node/mode';\n\nclass Polygon extends Geom {\n  constructor(props) {\n    super('$polygon', props);\n    // 折线所有点的列表\n    this.__pointList = [];\n    if(Array.isArray(this.props.pointList)) {\n      this.__pointList = this.props.pointList;\n    }\n    // 原点位置，4个角，默认左下\n    if(['TOP_LEFT', 'TOP_RIGHT', 'BOTTOM_LEFT', 'BOTTOM_RIGHT'].indexOf(this.props.origin) > -1) {\n      this.__origin = this.props.origin;\n    }\n    else {\n      this.__origin = 'BOTTOM_LEFT';\n    }\n    // max和min默认取值坐标轴范围[0, 1]，可更改\n    if(this.props.min) {\n      this.__min = parseFloat(this.props.min) || 0;\n    }\n    else {\n      this.__min = 0;\n    }\n    if(this.props.max) {\n      let max = parseFloat(this.props.max);\n      if(isNaN(max)) {\n        max = 1;\n      }\n      this.__max = max;\n    }\n    else {\n      this.__max = 1;\n    }\n  }\n\n  render() {\n    super.render();\n    let { x, y, width, height, style, ctx, pointList, max, min, origin } = this;\n    if(pointList.length < 2) {\n      return;\n    }\n    for(let i = 0, len = pointList.length; i < len; i++) {\n      if(!Array.isArray(pointList[i]) || pointList[i].length < 2) {\n        return;\n      }\n    }\n    let {\n      borderTopWidth,\n      borderRightWidth,\n      borderBottomWidth,\n      borderLeftWidth,\n      marginTop,\n      marginRight,\n      marginBottom,\n      marginLeft,\n      paddingTop,\n      paddingRight,\n      paddingBottom,\n      paddingLeft,\n      stroke,\n      strokeWidth,\n    } = style;\n    let scale = max - min;\n    if(scale <= 0) {\n      throw new Error(`scale can not <= 0: max(${this.max}) - min(${this.min})`);\n    }\n    let originX = x + borderLeftWidth.value + marginLeft.value + paddingLeft.value;\n    let originY = y + borderTopWidth.value + marginTop.value + paddingTop.value;\n    width -= borderLeftWidth.value + borderRightWidth.value + marginLeft.value + marginRight.value + paddingLeft.value + paddingRight.value;\n    height -= borderTopWidth.value + borderBottomWidth.value + marginTop.value + marginBottom.value + paddingTop.value + paddingBottom.value;\n    if(origin === 'TOP_LEFT') {\n      pointList.forEach(item => {\n        item[0] = originX + item[0] * width;\n        item[1] = originY + (item[1] - min) * height / scale;\n      });\n    }\n    else if(origin === 'TOP_RIGHT') {\n      pointList.forEach(item => {\n        item[0] = originX + width - item[0] * width;\n        item[1] = originY + (item[1] - min) * height / scale;\n      });\n    }\n    else if(origin === 'BOTTOM_LEFT') {\n      pointList.forEach(item => {\n        item[0] = originX + item[0] * width;\n        item[1] = originY + height - (item[1] - min) * height / scale;\n      });\n    }\n    else if(origin === 'BOTTOM_RIGHT') {\n      pointList.forEach(item => {\n        item[0] = originX + width - item[0] * width;\n        item[1] = originY + height - (item[1] - min) * height / scale;\n      });\n    }\n    if(this.mode === mode.CANVAS) {\n      ctx.strokeStyle = stroke;\n      ctx.lineWidth = strokeWidth;\n      ctx.beginPath();\n      ctx.moveTo(pointList[0][0], originY + pointList[0][1]);\n      for(let i = 1, len = pointList.length; i < len; i++) {\n        let point = pointList[i];\n        ctx.lineTo(point[0], originY + point[1]);\n      }\n      ctx.stroke();\n      ctx.closePath();\n    }\n    else if(this.mode === mode.SVG) {\n      let points = '';\n      for(let i = 0, len = pointList.length; i < len; i++) {\n        let point = pointList[i];\n        points += `${point[0]},${point[1]} `;\n      }\n      mode.appendHtml(`<polyline fill=\"none\" points=\"${points}\" stroke-width=\"${strokeWidth}\" stroke=\"${stroke}\"/>`);\n    }\n  }\n\n  get pointList() {\n    return this.__pointList;\n  }\n}\n\nexport default Polygon;\n","import Dom from './node/Dom';\nimport CS from './node/CS';\nimport Geom from './geom/Geom';\nimport Line from './geom/Line';\nimport Polygon from './geom/Polygon';\n\nlet karas = {\n  render(cs, dom) {\n    if(!(cs instanceof CS)) {\n      throw new Error('render root muse be canvas or svg');\n    }\n    if(dom) {\n      cs.appendTo(dom);\n    }\n    return cs;\n  },\n  createVd(tagName, props, children) {\n    if(['canvas', 'svg'].indexOf(tagName) > -1) {\n      return new CS(tagName, props, children);\n    }\n    if(Dom.isValid(tagName)) {\n      return new Dom(tagName, props, children);\n    }\n    throw new Error('can not use marker: ' + tagName);\n  },\n  createGm(tagName, props) {\n    if(Geom.isValid(tagName)) {\n      switch(tagName) {\n        case '$line':\n          return new Line(props);\n        case '$polygon':\n          return new Polygon(props);\n      }\n    }\n    throw new Error('can not use geom marker: ' + tagName);\n  },\n  createCp(tagName, props, children) {},\n};\n\nif(typeof window != 'undefined') {\n  window.karas = karas;\n}\n\nexport default karas;\n"],"names":["div","svgHtml","CANVAS","SVG","appendHtml","s","measure","style","document","createElement","position","left","top","visibility","body","appendChild","fontSize","innerText","css","window","getComputedStyle","parseFloat","width","Node","__x","__y","__width","__height","__prev","__next","__ctx","__parent","__style","__baseLine","__mode","mode","diff","this","Xom","tagName","props","Array","isArray","arr","hash","i","len","length","item","list","Object","keys","j","k","arr2hash","__props","temp","push","splice","spread","hash2arr","__tagName","_this","data","display","__preLayBlock","__preLayFlex","__preLayInline","parent","height","right","bottom","unit","value","__offsetX","__offsetY","ctx","x","y","backgroundColor","borderTopWidth","borderTopColor","borderRightWidth","borderRightColor","borderBottomWidth","borderBottomColor","borderLeftWidth","borderLeftColor","marginTop","marginLeft","paddingTop","paddingRight","paddingBottom","paddingLeft","x1","y1","w","h","beginPath","fillStyle","rect","fill","closePath","x2","lineWidth","strokeStyle","moveTo","lineTo","stroke","y2","marginRight","marginBottom","lhr","car","blr","mdr","lgr","RESET","borderSizing","fontFamily","color","fontStyle","fontWeight","lineHeight","borderTopStyle","borderRightStyle","borderBottomStyle","borderLeftStyle","verticalAlign","flexGrow","flexShrink","flexBasis","flexDirection","justifyContent","alignItems","textAlign","strokeWidth","reset","forEach","v","toString","isType","type","obj","call","isNumber","stringify","isNil","util","isObject","isString","isFunction","isBoolean","isDate","joinSourceArray","res","encodeHtml","prop","replace","parserOneBorder","direction","key","exec","c","indexOf","normalize","hasOwnProperty","background","bgc","flex","test","border","borderTop","borderRight","borderBottom","borderLeft","margin","padding","font","Math","max","setFontStyle","getBaseLine","normal","LineBox","content","__content","fillText","CHAR_WIDTH_CACHE","Text","__lineBoxes","__charWidthList","__charWidth","__textWidth","charWidthList","cache","sum","char","charAt","mw","measureText","charWidth","isVirtual","maxX","lineBoxes","begin","count","lineBox","slice","_this2","render","textWidth","n","min","last","baseLine","LineGroup","__list","__calBaseLine","TAG_NAME","Geom","total","isDirectionRow","b","main","fixedHeight","fixedWidth","__origin","__min","__max","INLINE","Dom","children","__children","__flowChildren","__absChildren","__lineGroups","__flowY","__traverseChildren","prev","Error","_this3","__traverse","text","parentStyle","__initStyle","__measure","flowChildren","__tryLayInline","isRecursion","__calAutoBasis","b2","min2","max2","__preLay","__calAbs","Infinity","lineGroups","lineGroup","add","outerWidth","size","outerHeight","horizonAlign","growList","shrinkList","basisList","minList","growSum","shrinkSum","basisSum","maxSum","maxCross","isOverflow","shrink","grow","overflow","free","child","center","between","around","_this4","absChildren","container","flowY","pw","ph","__preLayAbs","w2","h2","width2","height2","widthPx","heightPx","CS","__node","undefined","parseInt","isNaN","dom","o","querySelector","getDom","__initProps","nodeName","toUpperCase","setAttribute","__genHtml","insertAdjacentHTML","canvas","querySelectorAll","getPropertyValue","getContext","innerHTML","html","Line","__start","__end","start","end","origin","originX","originY","Polygon","__pointList","pointList","scale","point","points","karas","cs","appendTo","createVd","isValid","createGm","createCp"],"mappings":"k6CAAA,IAGIA,EACAC,EAAU,KAEC,CACbC,OAPa,EAQbC,IAPU,EAQVC,oBAAWC,GACTJ,GAAWI,qBAGJJ,GAETK,iBAAQD,EAAGE,GACLP,KACFA,EAAMQ,SAASC,cAAc,QACzBF,MAAMG,SAAW,WACrBV,EAAIO,MAAMI,KAAO,UACjBX,EAAIO,MAAMK,IAAM,WAChBZ,EAAIO,MAAMM,WAAa,SACvBL,SAASM,KAAKC,YAAYf,IAE5BA,EAAIO,MAAMS,SAAWT,EAAMS,SAAW,KACtChB,EAAIiB,UAAYZ,MACZa,EAAMC,OAAOC,iBAAiBpB,EAAK,aAChCqB,WAAWH,EAAII,SCzBpBC,yCAEGC,IAAM,OACNC,IAAM,OACNC,QAAU,OACVC,SAAW,OACXC,OAAS,UACTC,OAAS,UACTC,MAAQ,UACRC,SAAW,UACXC,QAAU,QACVC,WAAa,OACbC,OAASC,EAAKjC,mDAGXkC,QACHZ,KAAOY,oCAGJA,QACHX,KAAOW,mCAILC,KAAKb,qCAGLa,KAAKZ,yCAGLY,KAAKX,8CAGLW,KAAKV,mDAGLU,KAAKX,mDAGLW,KAAKV,6CAGLU,KAAKT,2CAGLS,KAAKR,6CAGLQ,KAAKN,8CAGLM,KAAKL,2CAGLK,KAAKP,8CAGLO,KAAKJ,+CAGLI,KAAKH,kBC7DR,IACF,IACK,MC0CLI,wBACQC,EAASC,oDAEnBA,EAAQA,GAAS,GAEdC,MAAMC,QAAQF,MACVA,MA/CX,SAAkBG,WACZC,EAAO,GACHC,EAAI,EAAGC,EAAMH,EAAII,OAAQF,EAAIC,EAAKD,IAAK,KACzCG,EAAOL,EAAIE,MACZJ,MAAMC,QAAQM,GACfJ,EAAKI,EAAK,IAAMA,EAAK,YAGjB,IAAIC,EAAOC,OAAOC,KAAKH,GAAOI,EAAIH,EAAKF,OAAS,EAAQ,GAALK,EAAQA,IAAK,KAC9DC,EAAIJ,EAAKG,GACbR,EAAKS,GAAKL,EAAKK,WAIdT,EAiCUU,CAASd,KACjBe,QAtBX,SAAgBZ,OACV,IAAIE,EAAI,EAAGC,EAAMH,EAAII,OAAQF,EAAIC,EAAKD,IAAK,KACzCG,EAAOL,EAAIE,OACXJ,MAAMC,QAAQM,GAAO,SACnBQ,EAAO,GACHP,EAAOC,OAAOC,KAAKH,GAAOI,EAAI,EAAGN,EAAMG,EAAKF,OAAQK,EAAIN,EAAKM,IAAK,KACpEC,EAAIJ,EAAKG,GACbI,EAAKC,KAAK,CAACJ,EAAGL,EAAKK,KAErBV,EAAIe,aAAJf,GAAWE,EAAG,UAAMW,YAGjBb,EAUYgB,CAAOnB,OAGjBA,MAAQA,IACRe,QAnCX,SAAkBX,WACZD,EAAM,GACFM,EAAOC,OAAOC,KAAKP,GAAOC,EAAI,EAAGC,EAAMG,EAAKF,OAAQF,EAAIC,EAAKD,IAAK,KACpEQ,EAAIJ,EAAKJ,GACbF,EAAIc,KAAK,CAACJ,EAAGT,EAAKS,YAEbV,EA6BYiB,CAASpB,MAErBqB,UAAYtB,IACZP,QAAU8B,EAAKtB,MAAMjC,OAAS,gBAdrBgB,uCAiBPwC,OACDxD,EAAU8B,KAAV9B,MACe,UAAlBA,EAAMyD,aACFC,cAAcF,GAEK,SAAlBxD,EAAMyD,aACPE,aAAaH,QAGbI,eAAeJ,SAGE1B,KAAK+B,QAAU/B,KAAjCf,IAAAA,MAAO+C,IAAAA,OAEX3D,EAKEH,EALFG,SACAE,EAIEL,EAJFK,IACA0D,EAGE/D,EAHF+D,MACAC,EAEEhE,EAFFgE,OACA5D,EACEJ,EADFI,QAEc,aAAbD,EAAyB,IACvBC,EAAK6D,OAASA,EAAW,KACtBpC,EAAOzB,EAAK6D,OAASA,EAAU7D,EAAK8D,MAAQ9D,EAAK8D,MAAQnD,EAAQ,SAChEoD,UAAUtC,QAEZ,GAAGkC,EAAME,OAASA,EAAW,KAC5BpC,EAAOkC,EAAME,OAASA,EAAUF,EAAMG,MAAQH,EAAMG,MAAQnD,EAAQ,SACnEoD,WAAWtC,MAEfxB,EAAI4D,OAASA,EAAW,KACrBpC,EAAOxB,EAAI4D,OAASA,EAAU5D,EAAI6D,MAAQ7D,EAAI6D,MAAQJ,EAAS,SAC9DM,UAAUvC,QAEZ,GAAGmC,EAAOC,OAASA,EAAW,KAC7BpC,EAAOmC,EAAOC,OAASA,EAAUD,EAAOE,MAAQF,EAAOE,MAAQJ,EAAS,SACvEM,WAAWvC,0CAMdwC,EAAoCvC,KAApCuC,IAAKrE,EAA+B8B,KAA/B9B,MAAOsE,EAAwBxC,KAAxBwC,EAAGC,EAAqBzC,KAArByC,EAAGxD,EAAkBe,KAAlBf,MAAO+C,EAAWhC,KAAXgC,OAE7BU,EAeExE,EAfFwE,gBACAC,EAcEzE,EAdFyE,eACAC,EAaE1E,EAbF0E,eACAC,EAYE3E,EAZF2E,iBACAC,EAWE5E,EAXF4E,iBACAC,EAUE7E,EAVF6E,kBACAC,EASE9E,EATF8E,kBACAC,EAQE/E,EARF+E,gBACAC,EAOEhF,EAPFgF,gBACAC,EAMEjF,EANFiF,UACAC,EAKElF,EALFkF,WACAC,EAIEnF,EAJFmF,WACAC,EAGEpF,EAHFoF,aACAC,EAEErF,EAFFqF,cACAC,EACEtF,EADFsF,eAECJ,IACDZ,GAAKY,EAAWhB,OAEfe,IACDV,GAAKU,EAAUf,OAEdM,EAAiB,KACde,EAAKjB,EACNS,IACDQ,GAAMR,EAAgBb,WAEpBsB,EAAKjB,EACNE,IACDe,GAAMf,EAAeP,WAEnBuB,EAAI1E,EAAQuE,EAAYpB,MAAQkB,EAAalB,MAC7CwB,EAAI5B,EAASqB,EAAWjB,MAAQmB,EAAcnB,MAC/CpC,KAAKF,OAASA,EAAKjC,QACpB0E,EAAIsB,YACJtB,EAAIuB,UAAYpB,EAChBH,EAAIwB,KAAKN,EAAIC,EAAIC,EAAGC,GACpBrB,EAAIyB,OACJzB,EAAI0B,aAEEjE,KAAKF,OAASA,EAAKhC,KACzBgC,EAAK/B,8BAAuB0F,kBAAUC,sBAAcC,uBAAcC,qBAAYlB,aAG/EC,EAAeP,MAAO,KACnBqB,EAAKjB,EAAIS,EAAgBb,MACzBsB,EAAKjB,EAA2B,GAAvBE,EAAeP,MACxB8B,EAAKT,EAAKxE,EACXuE,IACDU,GAAMV,EAAYpB,OAEjBkB,IACDY,GAAMZ,EAAalB,OAElBpC,KAAKF,OAASA,EAAKjC,QACpB0E,EAAIsB,YACJtB,EAAI4B,UAAYxB,EAAeP,MAC/BG,EAAI6B,YAAcxB,EAClBL,EAAI8B,OAAOZ,EAAIC,GACfnB,EAAI+B,OAAOJ,EAAIR,GACfnB,EAAIgC,SACJhC,EAAI0B,aAEEjE,KAAKF,OAASA,EAAKhC,KACzBgC,EAAK/B,+BAAwB0F,mBAAWC,mBAAWQ,mBAAWR,6BAAqBf,EAAeP,2BAAkBQ,aAGrHC,EAAiBT,MAAO,KACrBqB,EAAKjB,EAAIvD,EAAQgE,EAAgBb,MAAiC,GAAzBS,EAAiBT,MAC1DsB,EAAKjB,EACL+B,EAAKd,EAAK1B,EAASW,EAAeP,MAAQW,EAAkBX,MAC7DoB,IACDC,GAAMD,EAAYpB,OAEjBkB,IACDG,GAAMH,EAAalB,OAElBiB,IACDmB,GAAMnB,EAAWjB,OAEhBmB,IACDiB,GAAMjB,EAAcnB,OAEnBpC,KAAKF,OAASA,EAAKjC,QACpB0E,EAAIsB,YACJtB,EAAI4B,UAAYtB,EAAiBT,MACjCG,EAAI6B,YAActB,EAClBP,EAAI8B,OAAOZ,EAAIC,GACfnB,EAAI+B,OAAOb,EAAIe,GACfjC,EAAIgC,SACJhC,EAAI0B,aAEEjE,KAAKF,OAASA,EAAKhC,KACzBgC,EAAK/B,+BAAwB0F,mBAAWC,mBAAWD,mBAAWe,6BAAqB3B,EAAiBT,2BAAkBU,aAGvHC,EAAkBX,MAAO,KACtBqB,EAAKjB,EAAIS,EAAgBb,MACzBsB,EAAKjB,EAAIT,EAASW,EAAeP,MAAkC,GAA1BW,EAAkBX,MAC3D8B,EAAKT,EAAKxE,EACXuE,IACDU,GAAMV,EAAYpB,OAEjBkB,IACDY,GAAMZ,EAAalB,OAElBiB,IACDK,GAAML,EAAWjB,OAEhBmB,IACDG,GAAMH,EAAcnB,OAEnBpC,KAAKF,OAASA,EAAKjC,QACpB0E,EAAIsB,YACJtB,EAAI4B,UAAYpB,EAAkBX,MAClCG,EAAI6B,YAAcpB,EAClBT,EAAI8B,OAAOZ,EAAIC,GACfnB,EAAI+B,OAAOJ,EAAIR,GACfnB,EAAIgC,SACJhC,EAAI0B,aAEEjE,KAAKF,OAASA,EAAKhC,KACzBgC,EAAK/B,+BAAwB0F,mBAAWC,mBAAWQ,mBAAWR,6BAAqBX,EAAkBX,2BAAkBY,aAGxHC,EAAgBb,MAAO,KACpBqB,EAAKjB,EAA4B,GAAxBS,EAAgBb,MACzBsB,EAAKjB,EACL+B,EAAKd,EAAK1B,EAASW,EAAeP,MAAQW,EAAkBX,MAC7DiB,IACDmB,GAAMnB,EAAWjB,OAEhBmB,IACDiB,GAAMjB,EAAcnB,OAEnBpC,KAAKF,OAASA,EAAKjC,QACpB0E,EAAIsB,YACJtB,EAAI4B,UAAYlB,EAAgBb,MAChCG,EAAI6B,YAAclB,EAClBX,EAAI8B,OAAOZ,EAAIC,GACfnB,EAAI+B,OAAOb,EAAIe,GACfjC,EAAIgC,SACJhC,EAAI0B,aAEEjE,KAAKF,OAASA,EAAKhC,KACzBgC,EAAK/B,+BAAwB0F,mBAAWC,mBAAWD,mBAAWe,6BAAqBvB,EAAgBb,2BAAkBc,kDAMlHlD,KAAKwB,mDAUNxB,KAPA9B,MACJ+E,IAAAA,gBACAJ,IAAAA,iBACAO,IAAAA,WACAqB,IAAAA,YACAjB,IAAAA,YACAF,IAAAA,oBAEKtD,KAAKf,MACRgE,EAAgBb,MAChBS,EAAiBT,MACjBgB,EAAWhB,MACXqC,EAAYrC,MACZoB,EAAYpB,MACZkB,EAAalB,gDAUXpC,KAPA9B,MACJyE,IAAAA,eACAI,IAAAA,kBACAI,IAAAA,UACAuB,IAAAA,aACArB,IAAAA,WACAE,IAAAA,qBAEKvD,KAAKgC,OACRW,EAAeP,MACfW,EAAkBX,MAClBe,EAAUf,MACVsC,EAAatC,MACbiB,EAAWjB,MACXmB,EAAcnB,iBC/Rb,CACLuC,IAAK,cACLC,IAAK,UACLC,IAAK,YACLC,IAAK,aACLC,IAAK,cCRHC,EAAQ,CACZ3G,SAAU,SACVsD,QAAS,QACTsD,aAAc,cACd1G,IAAK,OACL0D,MAAO,OACPC,OAAQ,OACR5D,KAAM,OACN6E,UAAW,EACXsB,YAAa,EACbC,aAAc,EACdtB,WAAY,EACZC,WAAY,EACZC,aAAc,EACdC,cAAe,EACfC,YAAa,EACb7E,SAAU,GACVuG,WAAY,QACZC,MAAO,OACPC,UAAW,SACXC,WAAY,IACZC,WAAY,SACZ3C,eAAgB,EAChBE,iBAAkB,EAClBE,kBAAmB,EACnBE,gBAAiB,EACjBsC,eAAgB,QAChBC,iBAAkB,QAClBC,kBAAmB,QACnBC,gBAAiB,QACjBC,cAAe,WACf1G,MAAO,OACP+C,OAAQ,OACR4D,SAAU,EACVC,WAAY,EACZC,UAAW,OACXC,cAAe,MACfC,eAAgB,aAChBC,WAAY,UACZC,UAAW,OACX1H,WAAY,UACZ+F,OAAQ,OACR4B,YAAa,GAGXC,EAAQ,GAEZvF,OAAOC,KAAKkE,GAAOqB,QAAQ,SAAArF,OACrBsF,EAAItB,EAAMhE,GACdoF,EAAMhF,KAAK,CACTJ,EAAAA,EACAsF,EAAAA,MCnDJ,IAAIC,EAAW,GAAGA,SAClB,SAASC,EAAOC,UACP,SAASC,UACPH,EAASI,KAAKD,KAAS,WAAaD,EAAO,KAItD,IAAIG,EAAWJ,EAAO,UAgBtB,SAASK,EAAU7I,UACd8I,EAAM9I,GACA,GAEFA,EAAEuI,WAUX,SAASO,EAAMR,UACNA,MAAAA,EAGT,IAAIS,EAAO,CACTC,SAAUR,EAAO,UACjBS,SAAUT,EAAO,UACjBU,WAAYV,EAAO,YACnBI,SAAAA,EACAO,UAAWX,EAAO,WAClBY,OAAQZ,EAAO,QACfK,UAAAA,EACAQ,yBAAgB/G,UAxClB,SAAS+G,EAAgB/G,WACnBgH,EAAM,GACF9G,EAAI,EAAGC,EAAMH,EAAII,OAAQF,EAAIC,EAAKD,IAAK,KACzCG,EAAOL,EAAIE,GACZJ,MAAMC,QAAQM,GACf2G,GAAOD,EAAgB1G,GAGvB2G,GAAOT,EAAUlG,UAGd2G,EA8BED,CAAgB/G,IAEzBiH,WAtBF,SAAoBvJ,EAAGwJ,UAClBA,EACMxJ,EAAEyJ,QAAQ,KAAM,UAElBzJ,EAAEyJ,QAAQ,KAAM,SAASA,QAAQ,KAAM,SAmB9CX,MAAAA,GChDF,SAASY,EAAgBxJ,EAAOyJ,OAC1BC,kBAAeD,MACfzJ,EAAM0J,QAGNjE,EAAI,aAAakE,KAAK3J,EAAM0J,IAC7BjE,IACDzF,EAAM0J,EAAM,SAAWjE,EAAE,QAEvB3F,EAAI,aAAa6J,KAAK3J,EAAM0J,IAC7B5J,IACDE,EAAM0J,EAAM,SAAW5J,EAAE,QAEvB8J,EAAI,kBAAkBD,KAAK3J,EAAM0J,IAClCE,IAAoC,EAA/B,CAAC,EAAG,GAAGC,QAAQD,EAAE,GAAGpH,UAC1BxC,EAAM0J,EAAM,SAAWE,EAAE,WAoJd,CACbE,UAjJF,SAAmB9J,MAEjBkI,EAAMC,QAAQ,SAAA1F,GACRzC,EAAM+J,eAAetH,EAAKK,KAC5B9C,EAAMyC,EAAKK,GAAKL,EAAK2F,KAKtBpI,EAAMgK,WAAY,KACfC,EAAM,kBAAkBN,KAAK3J,EAAMgK,YACpCC,IAAwC,EAAjC,CAAC,EAAG,GAAGJ,QAAQI,EAAI,GAAGzH,UAC9BxC,EAAMwE,gBAAkByF,EAAI,IAG7BjK,EAAMkK,OACW,SAAflK,EAAMkK,MACPlK,EAAM0H,SAAW,EACjB1H,EAAM2H,WAAa,EACnB3H,EAAM4H,UAAY,QAEG,SAAf5H,EAAMkK,MACZlK,EAAM0H,SAAW,EACjB1H,EAAM2H,WAAa,EACnB3H,EAAM4H,UAAY,QAEZ,WAAWuC,KAAKnK,EAAMkK,OAC5BlK,EAAM0H,SAAW5G,WAAWd,EAAMkK,MAClClK,EAAM2H,WAAa,EACnB3H,EAAM4H,UAAY,GAEZ,aAAauC,KAAKnK,EAAMkK,OACxB,YAAYC,KAAKnK,EAAMkK,QAE7BlK,EAAM0H,SAAW,EACjB1H,EAAM2H,WAAa,EACnB3H,EAAM4H,UAAY,SAGnB5H,EAAMoK,SACPpK,EAAMqK,UAAYrK,EAAMsK,YAActK,EAAMuK,aAAevK,EAAMwK,WAAaxK,EAAMoK,QAEnFpK,EAAMyK,SACPzK,EAAMiF,UAAYjF,EAAMuG,YAAcvG,EAAMwG,aAAexG,EAAMkF,WAAalF,EAAMyK,QAEnFzK,EAAM0K,UACP1K,EAAMmF,WAAanF,EAAMoF,aAAepF,EAAMqF,cAAgBrF,EAAMsF,YAActF,EAAM0K,SAE1FlB,EAAgBxJ,EAAO,OACvBwJ,EAAgBxJ,EAAO,SACvBwJ,EAAgBxJ,EAAO,UACvBwJ,EAAgBxJ,EAAO,SAGrB,YACA,cACA,eACA,aACA,aACA,eACA,gBACA,cACA,iBACA,mBACA,oBACA,kBACA,MACA,QACA,SACA,OACA,QACA,SACA,aACAmI,QAAQ,SAAArF,OACJsF,EAAIpI,EAAM8C,IAEV+F,EAAKD,MAAMR,IAAMA,EAAEnE,OAGd,SAANmE,EACDpI,EAAM8C,GAAK,CACTmB,KAAMA,GAGF,KAAKkG,KAAK/B,IAChBA,EAAItH,WAAWsH,IAAM,EACrBpI,EAAM8C,GAAK,CACToB,MAAOkE,EACPnE,KAAMA,KAIRmE,EAAItH,WAAWsH,IAAM,EACrBpI,EAAM8C,GAAK,CACToB,MAAOkE,EACPnE,KAAMA,WAKRmD,EAAapH,EAAMoH,WAErBA,EADgB,WAAfA,EACY,CACXlD,MAAOlE,EAAMS,SAAWkK,EAAWlE,IACnCxC,KAAMA,GAGF,MAAMkG,KAAK/C,IACjBA,EAAatG,WAAWsG,GACX,CACXlD,MAAO0G,KAAKC,IAAI7K,EAAMS,SAAU2G,GAChCnD,KAAMA,IAOU,YAFlBmD,EAAatG,WAAWsG,IAAe,UAGxB,CACXlD,MAAOlE,EAAMS,SAAWkK,EAAWlE,IACnCxC,KAAMA,GAIK,CACXC,MAAOkD,EAAapH,EAAMS,SAC1BwD,KAAMA,GAIZjE,EAAMoH,WAAaA,GAenB0D,aAZF,SAAsB9K,OACdkH,EAAgDlH,EAAhDkH,UAAWC,EAAqCnH,EAArCmH,WAAY1G,EAAyBT,EAAzBS,SAAUuG,EAAehH,EAAfgH,2BAC7BE,cAAaC,cAAc1G,gBAAcA,gBAAcuG,IAWjE+D,YARF,SAAqB/K,OACfgL,EAAShL,EAAMS,SAAWkK,EAAWlE,UACE,IAAnCzG,EAAMoH,WAAWlD,MAAQ8G,GAAgBhL,EAAMS,SAAWkK,EAAWhE,MClKzEsE,wBACQrJ,EAAMyC,EAAKC,EAAGC,EAAGkB,EAAGyF,EAASlL,kBAClC2B,OAASC,OACTL,MAAQ8C,OACRpD,IAAMqD,OACNpD,IAAMqD,OACNpD,QAAUsE,OACV0F,UAAYD,OACZzJ,QAAUzB,iDAITqE,EAA8BvC,KAA9BuC,IAAKrE,EAAyB8B,KAAzB9B,MAAOkL,EAAkBpJ,KAAlBoJ,QAAS5G,EAASxC,KAATwC,EAAGC,EAAMzC,KAANyC,EAC3BzC,KAAKF,OAASA,EAAKjC,QACpB0E,EAAIuB,UAAY5F,EAAMiH,MACtB5C,EAAI+G,SAASF,EAAS5G,EAAGC,EAAI5D,EAAIoK,YAAY/K,KAEvC8B,KAAKF,OAASA,EAAKhC,KACzBgC,EAAK/B,8BAAuByE,kBAASC,EAAI5D,EAAIoK,YAAY/K,sBAAiBA,EAAMiH,8BAAqBjH,EAAMS,wBAAeyK,gDAIpHrJ,QACHZ,KAAOY,oCAGJA,QACHX,KAAOW,qCAILC,KAAKP,uCAGLO,KAAKb,qCAGLa,KAAKZ,yCAGLY,KAAKX,+CAGLW,KAAKqJ,+CAGLrJ,KAAKL,gDAGLd,EAAIoK,YAAYjJ,KAAK9B,2CAGrB8B,KAAKH,gBClDV0J,EAAmB,GAEnBC,wBACQJ,sDAELC,UAAYD,EAAQ7C,aACpBkD,YAAc,KACdC,gBAAkB,KAClBC,YAAc,IACdC,YAAc,eAPJ1K,+CAYVwK,gBAAkB,OACjBnH,EAAuCvC,KAAvCuC,IAAK6G,EAAkCpJ,KAAlCoJ,QAASlL,EAAyB8B,KAAzB9B,MAAO2L,EAAkB7J,KAAlB6J,cACxB7J,KAAKF,OAASA,EAAKjC,SACpB0E,EAAIsG,KAAOhK,EAAImK,aAAa9K,YAE1B4L,EAAQP,EAAiBrL,EAAMS,UAAY4K,EAAiBrL,EAAMS,WAAa,GAC/E+B,EAAS0I,EAAQ1I,OACjBqJ,EAAM,EACFvJ,EAAI,EAAGA,EAAIE,EAAQF,IAAK,KAC1BwJ,EAAOZ,EAAQa,OAAOzJ,GACtB0J,SACDJ,EAAM7B,eAAe+B,GACtBE,EAAKJ,EAAME,GAELhK,KAAKF,OAASA,EAAKjC,OACzBqM,EAAK3H,EAAI4H,YAAYH,GAAM/K,MAErBe,KAAKF,OAASA,EAAKhC,MACzBoM,EAAKpK,EAAK7B,QAAQ+L,EAAM9L,IAE1B2L,EAAczI,KAAK8I,GACnBH,GAAOG,OACFP,YAAcb,KAAKC,IAAI/I,KAAKoK,UAAWF,QAEzCN,YAAcG,mCAGZrI,EAAM2I,cACP7H,EAAed,EAAfc,EAAGC,EAAYf,EAAZe,EAAGkB,EAASjC,EAATiC,EAASjC,EAANkC,OACVzE,IAAMqD,OACNpD,IAAMqD,UACP6H,EAAO9H,EACLD,EAAkDvC,KAAlDuC,IAAK6G,EAA6CpJ,KAA7CoJ,QAASlL,EAAoC8B,KAApC9B,MAAOqM,EAA6BvK,KAA7BuK,UAAWV,EAAkB7J,KAAlB6J,cAElCW,EAAQ,EACRhK,EAAI,EACJiK,EAAQ,EACR/J,EAAS0I,EAAQ1I,OACfF,EAAIE,OACR+J,GAASZ,EAAcrJ,MACTmD,EAAG,KACX+G,EAAU,IAAIvB,EAAQnJ,KAAKF,KAAMyC,EAAKC,EAAGC,EAAGgI,EAAOrB,EAAQuB,MAAMH,EAAOhK,EAAI,GAAItC,GACpFqM,EAAUnJ,KAAKsJ,GACfJ,EAAOxB,KAAKC,IAAIuB,EAAM9H,EAAIiI,GAC1BhI,GAAKzC,KAAK9B,MAAMoH,WAAWlD,MAE3B5B,GADAgK,EAAQhK,EAAI,GACA,EACZiK,EAAQ,OAEL,GAAY9G,EAAR8G,EAAW,CAEfjK,IAAMgK,IACPhK,EAAIgK,EAAQ,OAEVE,EAAU,IAAIvB,EAAQnJ,KAAKF,KAAMyC,EAAKC,EAAGC,EAAGgI,EAAQZ,EAAcrJ,GAAI4I,EAAQuB,MAAMH,EAAOhK,GAAItC,GACnGqM,EAAUnJ,KAAKsJ,GACfJ,EAAOxB,KAAKC,IAAIuB,EAAM9H,EAAIiI,EAAQZ,EAAcrJ,IAChDiC,GAAKzC,KAAK9B,MAAMoH,WAAWlD,MAC3BoI,EAAQhK,EACRA,GAAQ,EACRiK,EAAQ,OAGRjK,OAGDgK,EAAQ9J,GAAU8J,EAAQhK,EAAG,KAC9BiK,EAAQ,EACJjK,EAAIgK,EAAOhK,EAAIE,EAAQF,IACzBiK,GAASZ,EAAcrJ,OAErBkK,EAAU,IAAIvB,EAAQnJ,KAAKF,KAAMyC,EAAKC,EAAGC,EAAGgI,EAAOrB,EAAQuB,MAAMH,EAAO9J,GAASxC,GACrFqM,EAAUnJ,KAAKsJ,GACfJ,EAAOxB,KAAKC,IAAIuB,EAAM9H,EAAIiI,GAC1BhI,GAAKvE,EAAMoH,WAAWlD,cAEnB/C,QAAUiL,EAAO9H,OACjBlD,SAAWmD,EAAIf,EAAKe,EACtB4H,OACIZ,YAAc,OAEhB,KACGvD,EAAchI,EAAdgI,WACuC,EAA1C,CAAC,SAAU,SAAS6B,QAAQ7B,IAC7BqE,EAAUlE,QAAQ,SAAAqE,OACZ3K,EAAO6K,EAAKvL,QAAUqL,EAAQzL,MACxB,EAAPc,GACD2K,EAAQrI,UAAwB,WAAd6D,EAAgC,GAAPnG,EAAaA,uCAQ7DC,KAAKF,OAASA,EAAKjC,cACf0E,IAAIsG,KAAOhK,EAAImK,aAAahJ,KAAK9B,aAEnCqM,UAAUlE,QAAQ,SAAA1F,GACrBA,EAAKkK,kDAIMlH,UACNA,EAAI3D,KAAK8K,4CAGR/K,gDACQA,QACXwK,UAAUlE,QAAQ,SAAA1F,GACrBA,EAAK0B,UAAUtC,uCAITA,gDACQA,QACXwK,UAAUlE,QAAQ,SAAA1F,GACrBA,EAAK2B,UAAUvC,uDAKbgL,EAAI,cACHlB,cAAcxD,QAAQ,SAAA1F,GACzBoK,EAAIjC,KAAKC,IAAIgC,EAAGpK,KAEX,CAAEoI,IAAK/I,KAAK8K,UAAWE,IAAKD,0CAI5B/K,KAAKqJ,wBAEF/C,QACL+C,UAAY/C,2CAGVtG,KAAKyJ,yDAGLzJ,KAAK0J,yDAGL1J,KAAK2J,qDAGL3J,KAAK4J,iDAGRqB,EAAOjL,KAAKuK,UAAUvK,KAAKuK,UAAU7J,OAAS,UAC3CuK,EAAKxI,EAAIzC,KAAKyC,EAAIwI,EAAKC,kBCxK5BC,wBACQ3I,EAAGC,kBACR2I,OAAS,QACTjM,IAAMqD,OACNpD,IAAMqD,OACN7C,WAAa,wCAGhBe,QACGC,KAAKQ,KAAKT,+CAIXuK,EAAW,cACVtK,KAAKyF,QAAQ,SAAA1F,GAChBuK,EAAWpC,KAAKC,IAAImC,EAAUvK,EAAKuK,YAE9BA,0DAIFtL,WAAaI,KAAKqL,gBAED,EAAnBrL,KAAKY,KAAKF,aACNE,KAAKyF,QAAQ,SAAA1F,GACbA,EAAKuK,WAAazJ,EAAKyJ,UACxBvK,EAAK2B,UAAUb,EAAKyJ,SAAWvK,EAAKuK,iDAM/BnL,QACNa,KAAKyF,QAAQ,SAAA1F,GAChBA,EAAK0B,UAAUtC,yCAKVC,KAAKoL,wCAGLpL,KAAKb,qCAGLa,KAAKZ,sCAGRH,EAAQ,cACP2B,KAAKyF,QAAQ,SAAA1F,GAChB1B,GAAS0B,EAAK1B,QAETA,qCAGH+C,EAAS,cACRpB,KAAKyF,QAAQ,SAAA1F,GAChBqB,EAAS8G,KAAKC,IAAI/G,EAAQrB,EAAKqB,UAE1BA,0CAGAhC,KAAKJ,+CAGLI,KAAKoL,OAAO1K,gBC7DjB4K,EAAW,QACN,YACG,GAGRC,yBACQrL,EAASC,0CACbD,EAASC,eAFAF,4CAMfpB,EAAImJ,UAAUhI,KAAK9B,8CAGNyF,EAAG6H,OAEDvM,EAAYe,KAArB9B,MAASe,aACZA,EAAMkD,OAASA,EACTwB,EAAI1E,EAAMmD,MAEXnD,EAAMkD,OAASA,EACdwB,EAAI6H,EAAQvM,EAAMmD,MAAQ,IAE5BuB,yCAGM8H,EAAgB9H,EAAGC,OAC5B8H,EAAI,EACJV,EAAM,EACNjC,EAAM,EACJ7K,EAAU8B,KAAV9B,MAGJe,EAMEf,EANFe,MACA+C,EAKE9D,EALF8D,OACAW,EAIEzE,EAJFyE,eACAE,EAGE3E,EAHF2E,iBACAE,EAEE7E,EAFF6E,kBACAE,EACE/E,EADF+E,gBAEE0I,EAAOF,EAAiBxM,EAAQ+C,KACjC2J,EAAKxJ,OAASA,IACfuJ,EAAI3C,GAAO4C,EAAKvJ,OAGfqJ,EAAgB,KACb9H,EAAId,EAAiBT,MAAQa,EAAgBb,MACjDsJ,GAAK/H,EACLoF,GAAOpF,EACPqH,GAAOrH,MAEJ,KACCC,EAAIjB,EAAeP,MAAQW,EAAkBX,MACjDsJ,GAAK9H,EACLmF,GAAOnF,EACPoH,GAAOpH,QAEF,CAAE8H,EAAAA,EAAGV,IAAAA,EAAKjC,IAAAA,yCAGLrH,OACNc,EAAed,EAAfc,EAAGC,EAAYf,EAAZe,EAAGkB,EAASjC,EAATiC,EAAGC,EAAMlC,EAANkC,OACVzE,IAAMqD,OACNpD,IAAMqD,OACNpD,QAAUsE,MAWXiI,EAVE1N,EAAU8B,KAAV9B,MAEJe,EAMEf,EANFe,MACA+C,EAKE9D,EALF8D,OACAW,EAIEzE,EAJFyE,eACAE,EAGE3E,EAHF2E,iBACAE,EAEE7E,EAFF6E,kBACAE,EACE/E,EADF+E,mBAIChE,GAASA,EAAMkD,OAASA,SAClBlD,EAAMkD,WACNA,EACHwB,EAAI1E,EAAMmD,SAIbJ,GAAUA,EAAOG,OAASA,SAC3ByJ,GAAc,EACP5J,EAAOG,WACPA,EACHyB,EAAI5B,EAAOI,iBAERD,EACHyB,GAAoB,IAAf5B,EAAOI,MAKlBI,GAAKS,EAAgBb,MACrBV,EAAKc,EAAIA,EACTC,GAAKE,EAAeP,MACpBV,EAAKe,EAAIA,EACTkB,GAAKV,EAAgBb,MAAQS,EAAiBT,MAC9CwB,GAAKjB,EAAeP,MAAQW,EAAkBX,WACzC/C,QAAUsE,OACVrE,SAAWsM,EAAchI,EAAI,uCAGvBlC,QAENE,cAAcF,0CAGNA,OACPc,EAAed,EAAfc,EAAGC,EAAYf,EAAZe,EAAGkB,EAASjC,EAATiC,EAAGC,EAAMlC,EAANkC,OACVzE,IAAMqD,OACNpD,IAAMqD,MAWPoJ,EACAD,EAXE1N,EAAU8B,KAAV9B,MAEJe,EAMEf,EANFe,MACA+C,EAKE9D,EALF8D,OACAW,EAIEzE,EAJFyE,eACAE,EAGE3E,EAHF2E,iBACAE,EAEE7E,EAFF6E,kBACAE,EACE/E,EADF+E,mBAKChE,GAASA,EAAMkD,OAASA,SACzB0J,GAAa,EACN5M,EAAMkD,WACNA,EACHwB,EAAI1E,EAAMmD,SAIbJ,GAAUA,EAAOG,OAASA,SAC3ByJ,GAAc,EACP5J,EAAOG,WACPA,EACHyB,EAAI5B,EAAOI,MAKjBI,GAAKS,EAAgBb,MACrBV,EAAKc,EAAIA,EACTC,GAAKE,EAAeP,MACpBV,EAAKe,EAAIA,EACTkB,GAAKV,EAAgBb,MAAQS,EAAiBT,MAC9CwB,GAAKjB,EAAeP,MAAQW,EAAkBX,WAEzC/C,QAAUwM,EAAalI,EAAInB,EAAId,EAAKc,OACpClD,SAAWsM,EAAchI,EAAInB,EAAIf,EAAKe,qHAQpCzC,KAAKwB,kDAGLxB,KAAKV,+CAGLU,KAAK8L,4CAGL9L,KAAK+L,yCAGL/L,KAAKgM,wCAGChO,UACNsN,EAASrD,eAAejK,YC3K7BsN,EAAW,MACR,QACC,GAEJW,EAAS,OACL,GAGJC,wBACQhM,EAASC,EAAOgM,mDACpBjM,EAASC,KACViM,WAAaD,IACbE,eAAiB,KACjBC,cAAgB,KAChBC,aAAe,KACfC,QAAU,eAPDvM,yCAiBLsC,EAAKzC,cACVc,EAAO,QACN6L,mBAAmBzM,KAAKmM,SAAUvL,EAAM2B,EAAKzC,OAC9C,IAAIU,EAAII,EAAKF,OAAS,EAAO,EAAJF,EAAOA,IAAK,KACnCG,EAAOC,EAAKJ,MACbG,aAAgB6I,EAAM,KACnBkD,EAAO9L,EAAKJ,EAAI,GACjBkM,aAAgBlD,GACjBkD,EAAKtD,SAAWzI,EAAKyI,QACrBxI,EAAKS,OAAOb,EAAG,IAGfA,QAIoB,WAAvBR,KAAK9B,MAAMyD,SAAsD,SAA9B3B,KAAK+B,OAAO7D,MAAMyD,YAClD,IAAInB,EAAII,EAAKF,OAAS,EAAQ,GAALF,EAAQA,IAAK,KACpCG,EAAOC,EAAKJ,MACbG,aAAgBuL,GAA8B,WAAvBvL,EAAKzC,MAAMyD,cAC7B,IAAIgL,MAAM,qCAKtB/L,EAAKyF,QAAQ,SAAA1F,GACXA,EAAKlB,MAAQ8C,EAIb5B,EAAKjB,SAAWkL,EAChBjK,EAAKpB,OAPI,KAQNoB,aAAgB6I,GAAgC,aAAxB7I,EAAKzC,MAAMG,SACpCuM,EAAKyB,eAAejL,KAAKT,GAGzBiK,EAAK0B,cAAclL,KAAKT,UAGvByL,WAAaxL,6CAGDuL,EAAUvL,EAAM2B,EAAKzC,iBACnCM,MAAMC,QAAQ8L,GACfA,EAAS9F,QAAQ,SAAA1F,GACfiM,EAAKH,mBAAmB9L,EAAMC,EAAM2B,EAAKzC,UAGxC,GAAGqM,aAAoBD,EAC1BtL,EAAKQ,KAAK+K,GACVA,EAASU,WAAWtK,EAAKzC,GACzBqM,EAAStM,OAASC,OAGf,GAAGqM,aAAoBZ,GAC1B3K,EAAKQ,KAAK+K,GACVA,EAAStM,OAASC,OAGf,IAAIiH,EAAKD,MAAMqF,GAAW,KACzBW,EAAO,IAAItD,EAAK2C,GACpBW,EAAKjN,OAASC,EACdc,EAAKQ,KAAK0L,8CAMR5O,EAAQ8B,KAAKL,QAEbzB,EAAMyD,UAA2E,IAAhE,CAAC,OAAQ,QAAS,SAAU,QAAQoG,QAAQ7J,EAAMyD,WAClEsK,EAAOhE,eAAejI,KAAKE,SAC5BhC,EAAMyD,QAAU,SAGhBzD,EAAMyD,QAAU,aAIhBI,EAAS/B,KAAK+B,UACfA,EAAQ,KACLgL,EAAchL,EAAO7D,OACxB,WAAY,aAAc,YAAa,aAAc,YAAa,QAAS,aAAamI,QAAQ,SAAArF,IAC3F9C,EAAM+J,eAAejH,IAAM+L,EAAY9E,eAAejH,KACxD9C,EAAM8C,GAAK+L,EAAY/L,MAK7BnC,EAAImJ,UAAU9J,QACTiO,SAAS9F,QAAQ,SAAA1F,GACjBA,aAAgBuL,GAAOvL,aAAgB4K,GACxC5K,EAAKqM,eAGLrM,EAAKhB,QAAUzB,EAEfyC,EAAKsM,sDAMItJ,EAAG6H,OACV0B,EAAmClN,KAAnCkN,aAAuBjO,EAAYe,KAArB9B,MAASe,SAC1BA,EAAMkD,OAASA,SACTwB,EAAI1E,EAAMmD,MAEd,GAAGnD,EAAMkD,OAASA,SACdwB,EAAI6H,EAAQvM,EAAMmD,MAAQ,QAE/B,IAAI5B,EAAI,EAAGA,EAAI0M,EAAaxM,OAAQF,IAAK,IAExCmD,EAAI,SACEA,MAELhD,EAAOuM,EAAa1M,GAEtBmD,GADChD,aAAgBuL,GAAOvL,aAAgB4K,GACnC5K,EAAKwM,eAAexJ,EAAG6H,GAGvB7K,EAAKmK,iBAGPnH,oCAIC5D,gDACQA,QACXmN,aAAa7G,QAAQ,SAAA1F,GACrBA,GACDA,EAAK0B,UAAUtC,uCAMXA,gDACQA,QACXmN,aAAa7G,QAAQ,SAAA1F,GACrBA,GACDA,EAAK2B,UAAUvC,4CAKN0L,EAAgB9H,EAAGC,EAAGwJ,OAC/B1B,EAAI,EACJV,EAAM,EACNjC,EAAM,EACJmE,EAAwBlN,KAAxBkN,aAAchP,EAAU8B,KAAV9B,MAGlBe,EAcEf,EAdFe,MACA+C,EAaE9D,EAbF8D,OACAW,EAYEzE,EAZFyE,eACAE,EAWE3E,EAXF2E,iBACAE,EAUE7E,EAVF6E,kBACAE,EASE/E,EATF+E,gBACAE,EAQEjF,EARFiF,UACAsB,EAOEvG,EAPFuG,YACAC,EAMExG,EANFwG,aACAtB,EAKElF,EALFkF,WACAC,EAIEnF,EAJFmF,WACAC,EAGEpF,EAHFoF,aACAC,EAEErF,EAFFqF,cACAC,EACEtF,EADFsF,YAEEmI,EAAOF,EAAiBxM,EAAQ+C,KACjC2J,EAAKxJ,OAASA,IACfuJ,EAAI3C,EAAM4C,EAAKvJ,MAEZgL,IACDpC,EAAMU,IAIVwB,EAAa7G,QAAQ,SAAA1F,MAChBA,aAAgBuL,GAAOvL,aAAgB4K,GAAM,OACR5K,EAAK0M,eAAe5B,EAAgB9H,EAAGC,GAAG,GAAvE0J,IAAH5B,EAAY6B,IAALvC,IAAgBwC,IAALzE,IACxB2C,EAAI5C,KAAKC,IAAI2C,EAAG4B,GAChBtC,EAAMlC,KAAKC,IAAIiC,EAAKuC,GACpBxE,EAAMD,KAAKC,IAAIA,EAAKyE,QAIpBzE,EAFM0C,GACNT,EAAMlC,KAAKC,IAAIpI,EAAKyJ,UAAWY,GACzBlC,KAAKC,IAAIpI,EAAKmK,UAAW/B,KAG/BpI,EAAK8M,SAAS,CACZjL,EAAG,EACHC,EAAG,EACHkB,EAAAA,EACAC,EAAAA,IACC,GACHoH,EAAMlC,KAAKC,IAAIiC,EAAKrK,EAAKqB,QACnB8G,KAAKC,IAAIA,EAAKpI,EAAKqB,WAI1ByJ,EAAgB,KACb9H,EAAId,EAAiBT,MAAQa,EAAgBb,MAAQgB,EAAWhB,MAAQqC,EAAYrC,MAAQoB,EAAYpB,MAAQkB,EAAalB,MACjIsJ,GAAK/H,EACLoF,GAAOpF,EACPqH,GAAOrH,MAEJ,KACCC,EAAIjB,EAAeP,MAAQW,EAAkBX,MAAQe,EAAUf,MAAQsC,EAAatC,MAAQiB,EAAWjB,MAAQmB,EAAcnB,MACjIsJ,GAAK9H,EACLmF,GAAOnF,EACPoH,GAAOpH,QAEF,CAAE8H,EAAAA,EAAGV,IAAAA,EAAKjC,IAAAA,oCAGV0C,OACH1C,EAAM,EACJmE,EAAwBlN,KAAxBkN,aAAchP,EAAU8B,KAAV9B,MAGlBe,EAcEf,EAdFe,MACA+C,EAaE9D,EAbF8D,OACAW,EAYEzE,EAZFyE,eACAE,EAWE3E,EAXF2E,iBACAE,EAUE7E,EAVF6E,kBACAE,EASE/E,EATF+E,gBACAE,EAQEjF,EARFiF,UACAsB,EAOEvG,EAPFuG,YACAC,EAMExG,EANFwG,aACAtB,EAKElF,EALFkF,WACAC,EAIEnF,EAJFmF,WACAC,EAGEpF,EAHFoF,aACAC,EAEErF,EAFFqF,cACAC,EACEtF,EADFsF,YAEEmI,EAAOF,EAAiBxM,EAAQ+C,KACjC2J,EAAKxJ,OAASA,IACf4G,EAAM4C,EAAKvJ,OAGb8K,EAAa7G,QAAQ,SAAA1F,MAChBA,aAAgBuL,GAAOvL,aAAgB4K,GAAM,KAC1CiC,EAAO7M,EAAK+M,SAASjC,GACzB1C,EAAMD,KAAKC,IAAIA,EAAKyE,QAGpBzE,EADM0C,EACA3C,KAAKC,IAAIpI,EAAKmK,UAAW/B,IAG/BpI,EAAK8M,SAAS,CACZjL,EAAG,EACHC,EAAG,EACHkB,EAAGgK,EAAAA,EACH/J,EAAG+J,EAAAA,IACF,GACG7E,KAAKC,IAAIA,EAAKpI,EAAKqB,WAI1ByJ,EAAgB,KACb9H,EAAId,EAAiBT,MAAQa,EAAgBb,MAAQgB,EAAWhB,MAAQqC,EAAYrC,MAAQoB,EAAYpB,MAAQkB,EAAalB,MACjI2G,GAAOpF,MAEJ,KACCC,EAAIjB,EAAeP,MAAQW,EAAkBX,MAAQe,EAAUf,MAAQsC,EAAatC,MAAQiB,EAAWjB,MAAQmB,EAAcnB,MACjI2G,GAAOnF,SAEFmF,wCAIKrH,OACNc,EAAed,EAAfc,EAAGC,EAAYf,EAAZe,EAAGkB,EAASjC,EAATiC,EAAGC,EAAMlC,EAANkC,OACVzE,IAAMqD,OACNpD,IAAMqD,OACNpD,QAAUsE,MAoBXiI,EAnBEsB,EAAoClN,KAApCkN,aAAchP,EAAsB8B,KAAtB9B,MAAO0P,EAAe5N,KAAf4N,WAEzB3O,EAeEf,EAfFe,MACA+C,EAcE9D,EAdF8D,OACAW,EAaEzE,EAbFyE,eACAE,EAYE3E,EAZF2E,iBACAE,EAWE7E,EAXF6E,kBACAE,EAUE/E,EAVF+E,gBACAE,EASEjF,EATFiF,UACAsB,EAQEvG,EARFuG,YACAC,EAOExG,EAPFwG,aACAtB,EAMElF,EANFkF,WACAC,EAKEnF,EALFmF,WACAC,EAIEpF,EAJFoF,aACAC,EAGErF,EAHFqF,cACAC,EAEEtF,EAFFsF,YACA0C,EACEhI,EADFgI,aAICjH,GAASA,EAAMkD,OAASA,SAClBlD,EAAMkD,WACNA,EACHwB,EAAI1E,EAAMmD,iBAEPD,EACHwB,GAAmB,IAAd1E,EAAMmD,SAIdJ,GAAUA,EAAOG,OAASA,SAC3ByJ,GAAc,EACP5J,EAAOG,WACPA,EACHyB,EAAI5B,EAAOI,iBAERD,EACHyB,GAAoB,IAAf5B,EAAOI,MAKlBI,GAAKS,EAAgBb,MAAQgB,EAAWhB,MAAQoB,EAAYpB,MAC5DV,EAAKc,EAAIA,EACTC,GAAKE,EAAeP,MAAQe,EAAUf,MAAQiB,EAAWjB,MACzDV,EAAKe,EAAIA,EACTkB,GAAKV,EAAgBb,MAAQS,EAAiBT,MAAQgB,EAAWhB,MAAQqC,EAAYrC,MAAQoB,EAAYpB,MAAQkB,EAAalB,MAC9HwB,GAAKjB,EAAeP,MAAQW,EAAkBX,MAAQe,EAAUf,MAAQsC,EAAatC,MAAQiB,EAAWjB,MAAQmB,EAAcnB,UAE1HyL,EAAY,IAAI1C,EAAU3I,EAAGC,GACjCyK,EAAa7G,QAAQ,SAAA1F,GAChBA,aAAgBuL,GAAOvL,aAAgB4K,GACd,WAAvB5K,EAAKzC,MAAMyD,QAETa,IAAMd,EAAKc,GACZqL,EAAUC,IAAInN,GACdA,EAAKmB,eAAe,CAClBU,EAAAA,EACAC,EAAAA,EACAkB,EAAAA,EACAC,EAAAA,IAEFpB,GAAK7B,EAAKoN,aAMD,GAFApN,EAAKwM,eAAexJ,EAAInB,EAAGmB,GAGlChD,EAAKmB,eAAe,CAClBU,EAAAA,EACAC,EAAAA,EACAkB,EAAAA,EACAC,EAAAA,KAKFgK,EAAWxM,KAAKyM,GAChBA,EAAUlI,gBACVnD,EAAId,EAAKc,EACTC,GAAKoL,EAAU7L,OACfrB,EAAKmB,eAAe,CAClBU,EAAGd,EAAKc,EACRC,EAAAA,EACAkB,EAAAA,EACAC,EAAAA,IAEFiK,EAAY,IAAI1C,EAAU3I,EAAGC,IAE/BD,GAAK7B,EAAKoN,WACVF,EAAUC,IAAInN,KAKbkN,EAAUG,OACXJ,EAAWxM,KAAKyM,GAChBA,EAAUlI,gBACVlD,GAAKoL,EAAU7L,OACf6L,EAAY,IAAI1C,EAAUzJ,EAAKc,EAAGC,IAEpC9B,EAAK8M,SAAS,CACZjL,EAAGd,EAAKc,EACRC,EAAAA,EACAkB,EAAAA,EACAC,EAAAA,IAEFpB,EAAId,EAAKc,EACTC,GAAK9B,EAAKsN,aAMTzL,IAAMd,EAAKc,GACZqL,EAAUC,IAAInN,GACdA,EAAK8M,SAAS,CACZjL,EAAAA,EACAC,EAAAA,EACAkB,EAAAA,EACAC,EAAAA,IAEFpB,GAAK7B,EAAK1B,QAMD,GAFA0B,EAAKwM,eAAexJ,EAAInB,EAAGmB,GAGlChD,EAAK8M,SAAS,CACZjL,EAAAA,EACAC,EAAAA,EACAkB,EAAAA,EACAC,EAAAA,KAKFgK,EAAWxM,KAAKyM,GAChBA,EAAUlI,gBACVnD,EAAId,EAAKc,EACTC,GAAKoL,EAAU7L,OACfrB,EAAK8M,SAAS,CACZjL,EAAGd,EAAKc,EACRC,EAAAA,EACAkB,EAAAA,EACAC,EAAAA,IAEFiK,EAAY,IAAI1C,EAAU3I,EAAGC,IAE/BD,GAAK7B,EAAK1B,MACV4O,EAAUC,IAAInN,MAKjBkN,EAAUG,OACXJ,EAAWxM,KAAKyM,GAChBA,EAAUlI,gBACVlD,GAAKoL,EAAU7L,SAG4B,EAA1C,CAAC,SAAU,SAAS+F,QAAQ7B,IAC7B0H,EAAWvH,QAAQ,SAAAwH,OACb9N,EAAO4D,EAAIkK,EAAU5O,MACf,EAAPc,GACD8N,EAAUK,aAA2B,WAAdhI,EAAgC,GAAPnG,EAAaA,UAI9DV,QAAUsE,OACVrE,SAAWsM,EAAchI,EAAInB,EAAIf,EAAKe,OACtC+J,QAAU/J,uCAIJf,OACLc,EAAed,EAAfc,EAAGC,EAAYf,EAAZe,EAAGkB,EAASjC,EAATiC,EAAGC,EAAMlC,EAANkC,OACVzE,IAAMqD,OACNpD,IAAMqD,OACNpD,QAAUsE,MAsBXkI,EACAD,EAtBEsB,EAAwBlN,KAAxBkN,aAAchP,EAAU8B,KAAV9B,MAElBe,EAiBEf,EAjBFe,MACA+C,EAgBE9D,EAhBF8D,OACA+D,EAeE7H,EAfF6H,cACApD,EAcEzE,EAdFyE,eACAE,EAaE3E,EAbF2E,iBACAE,EAYE7E,EAZF6E,kBACAE,EAWE/E,EAXF+E,gBACAE,EAUEjF,EAVFiF,UACAsB,EASEvG,EATFuG,YACAC,EAQExG,EARFwG,aACAtB,EAOElF,EAPFkF,WACAC,EAMEnF,EANFmF,WACAC,EAKEpF,EALFoF,aACAC,EAIErF,EAJFqF,cACAC,EAGEtF,EAHFsF,YACAwC,EAEE9H,EAFF8H,eACAC,EACE/H,EADF+H,cAKChH,GAASA,EAAMkD,OAASA,SACzB0J,GAAa,EACN5M,EAAMkD,WACNA,EACHwB,EAAI1E,EAAMmD,iBAEPD,EACHwB,GAAmB,IAAd1E,EAAMmD,SAIdJ,GAAUA,EAAOG,OAASA,SAC3ByJ,GAAc,EACP5J,EAAOG,WACPA,EACHyB,EAAI5B,EAAOI,iBAERD,EACHyB,GAAoB,IAAf5B,EAAOI,MAKlBI,GAAKS,EAAgBb,MAAQgB,EAAWhB,MAAQoB,EAAYpB,MAC5DV,EAAKc,EAAIA,EACTC,GAAKE,EAAeP,MAAQe,EAAUf,MAAQiB,EAAWjB,MACzDV,EAAKe,EAAIA,EACTkB,GAAKV,EAAgBb,MAAQS,EAAiBT,MAAQgB,EAAWhB,MAAQqC,EAAYrC,MAAQoB,EAAYpB,MAAQkB,EAAalB,MAC9HwB,GAAKjB,EAAeP,MAAQW,EAAkBX,MAAQe,EAAUf,MAAQsC,EAAatC,MAAQiB,EAAWjB,MAAQmB,EAAcnB,UAC1HqJ,EAAmC,QAAlB1F,MAEjB0F,IAAmBG,SACrBsB,EAAa7G,QAAQ,SAAA1F,MAChBA,aAAgBuL,GAAOvL,aAAgB4K,GAAM,KACtCrN,EAAmDyC,EAAnDzC,QAAmDyC,EAA5CzC,MAASyD,IAAAA,QAASoE,IAAAA,cAAe9G,IAAAA,MAEjC,WAAZ0C,EACDzD,EAAMyD,QAAU,QAGE,SAAZA,GAAwC,QAAlBoE,GAA2B9G,EAAMkD,OAASA,IACtElD,EAAMmD,MAAQuB,EACd1E,EAAMkD,KAAOA,GAEfxB,EAAK8M,SAAS,CACZjL,EAAAA,EACAC,EAAAA,EACAkB,EAAAA,EACAC,EAAAA,IAEFnB,GAAK9B,EAAKsN,iBAGVtN,EAAK8M,SAAS,CACZjL,EAAAA,EACAC,EAAAA,EACAkB,EAAAA,EACAC,EAAAA,IAEFnB,GAAK9B,EAAKsN,mBAGT5O,QAAUsE,YACVrE,SAAWmD,EAAIf,EAAKe,OAIvB0L,EAAW,GACXC,EAAa,GACbC,EAAY,GACZC,EAAU,GACVC,EAAU,EACVC,EAAY,EACZC,EAAW,EACXC,EAAS,EACbxB,EAAa7G,QAAQ,SAAA1F,MAChBA,aAAgBuL,GAAOvL,aAAgB4K,GAAM,OACJ5K,EAAKzC,MAAzC0H,IAAAA,SAAUC,IAAAA,WAAYC,IAAAA,UAC5BqI,EAAS/M,KAAKwE,GACdwI,EAAWhN,KAAKyE,GAChB0I,GAAW3I,EACX4I,GAAa3I,QACSlF,EAAK0M,eAAe5B,EAAgB9H,EAAGC,GAAvD8H,IAAAA,EAAGV,IAAAA,IAAKjC,IAAAA,IAEXjD,EAAU3D,OAASA,GACpBkM,EAAUjN,KAAK2H,GACf0F,GAAY1F,GAENjD,EAAU3D,OAASA,GACzBuJ,EAAI5F,EAAU1D,MACdiM,EAAUjN,KAAKsK,GACf+C,GAAY/C,GAEN5F,EAAU3D,OAASA,IACzBuJ,GAAKD,EAAiB9H,EAAIC,GAAKkC,EAAU1D,MACzCiM,EAAUjN,KAAKsK,GACf+C,GAAY/C,GAEdgD,GAAU3F,EACVuF,EAAQlN,KAAK4J,QAGbmD,EAAS/M,KAAK,GACdgN,EAAWhN,KAAK,GAChBoN,GAAa,EACV/C,GACD4C,EAAUjN,KAAKT,EAAKmK,WACpB2D,GAAY9N,EAAKmK,UACjB4D,GAAU/N,EAAKmK,UACfwD,EAAQlN,KAAKT,EAAKyJ,aAGlBzJ,EAAK8M,SAAS,CACZjL,EAAG,EACHC,EAAG,EACHkB,EAAAA,EACAC,EAAAA,IACC,GACHyK,EAAUjN,KAAKT,EAAKqB,QACpByM,GAAY9N,EAAKqB,OACjB0M,GAAU/N,EAAKqB,OACfsM,EAAQlN,KAAKT,EAAKqB,eAIpB2M,EAAW,EAEXC,GAAuBnD,EAAiB9H,EAAIC,GAA/B8K,EACjBxB,EAAa7G,QAAQ,SAAC1F,EAAMH,OACtBmL,EACAkD,EAAST,EAAW5N,GACpBsO,EAAOX,EAAS3N,MAEjBoO,EAAY,KACTG,EAAWN,GAAYhD,EAAiB9H,EAAIC,GAChD+H,EAAOkD,EAAUR,EAAU7N,GAAKuO,EAAWF,EAASL,EAAaH,EAAU7N,OAExE,KACCwO,GAAQvD,EAAiB9H,EAAIC,GAAK6K,EACtC9C,EAAOmD,EAAQT,EAAU7N,GAAKwO,EAAOF,EAAOP,EAAWF,EAAU7N,MAGnEmL,EAAO7C,KAAKC,IAAI4C,EAAM2C,EAAQ9N,IAC3BG,aAAgBuL,GAAOvL,aAAgB4K,GAAM,KACtCrN,EAA2DyC,EAA3DzC,QAA2DyC,EAApDzC,MAASyD,IAAAA,QAASoE,IAAAA,cAAe9G,IAAAA,MAAO+C,IAAAA,OACpDyJ,GAEc,WAAZ9J,EACDzD,EAAMyD,QAAU,QAGE,SAAZA,GAAwC,WAAlBoE,GAA8B6F,GAAe5J,EAAOG,OAASA,IACzFH,EAAOI,MAAQwB,EACf5B,EAAOG,KAAOA,GAEhBxB,EAAK8M,SAAS,CACZjL,EAAAA,EACAC,EAAAA,EACAkB,EAAGgI,EACH/H,EAAAA,MAKa,WAAZjC,EACDzD,EAAMyD,QAAU,QAGE,SAAZA,GAAwC,QAAlBoE,GAA2B9G,EAAMkD,OAASA,IACtElD,EAAMmD,MAAQuB,EACd1E,EAAMkD,KAAOA,GAEfxB,EAAK8M,SAAS,CACZjL,EAAAA,EACAC,EAAAA,EACAkB,EAAAA,EACAC,EAAG+H,KAIJiD,GAAcC,EACZpD,EACD9K,EAAKtB,QAAUsM,EAGfhL,EAAKrB,SAAWqM,GAGXiD,GAAcE,IAClBrD,EACD9K,EAAKtB,QAAUsM,EAGfhL,EAAKrB,SAAWqM,QAKpBhL,EAAK8M,SAAS,CACZjL,EAAAA,EACAC,EAAAA,EACAkB,EAAG8H,EAAiBE,EAAOhI,EAC3BC,EAAG6H,EAAiB7H,EAAI+H,IAK1BgD,EAFClD,GACDjJ,GAAK7B,EAAKoN,WACCjF,KAAKC,IAAI4F,EAAUhO,EAAKsN,eAGnCxL,GAAK9B,EAAKsN,YACCnF,KAAKC,IAAI4F,EAAUhO,EAAKoN,mBAInChO,EAAO0L,EAAiB9H,EAAInB,EAAId,EAAKc,EAAIoB,EAAInB,EAAIf,EAAKe,MAEtDmM,GAA0B,IAAZL,GAAwB,EAAPxO,EAAU,KACvCU,EAAMyM,EAAaxM,UACD,aAAnBsF,MACG,IAAIxF,EAAI,EAAGA,EAAIC,EAAKD,IAAK,KACvByO,EAAQ/B,EAAa1M,GACzBiL,EAAiBwD,EAAM5M,UAAUtC,GAAQkP,EAAM3M,UAAUvC,QAGxD,GAAsB,WAAnBiG,UACFkJ,EAAgB,GAAPnP,EACLS,EAAI,EAAGA,EAAIC,EAAKD,IAAK,KACvByO,EAAQ/B,EAAa1M,GACzBiL,EAAiBwD,EAAM5M,UAAU6M,GAAUD,EAAM3M,UAAU4M,QAG1D,GAAsB,kBAAnBlJ,UACFmJ,EAAUpP,GAAQU,EAAM,GACpBD,EAAI,EAAGA,EAAIC,EAAKD,IAAK,KACvByO,EAAQ/B,EAAa1M,GACzBiL,EAAiBwD,EAAM5M,UAAU8M,EAAU3O,GAAKyO,EAAM3M,UAAU6M,EAAU3O,QAGzE,GAAsB,iBAAnBwF,UACFoJ,EAASrP,GAAQU,EAAM,GACnBD,EAAI,EAAGA,EAAIC,EAAKD,IAAK,KACvByO,EAAQ/B,EAAa1M,GACzBiL,EAAiBwD,EAAM5M,UAAU+M,GAAU5O,EAAI,IAAMyO,EAAM3M,UAAU8M,GAAU5O,EAAI,KAKtFiL,GAEEG,IACD+C,EAAW/K,GAEbnB,GAAKkM,GAGF9C,IACD8C,EAAWhL,GAIG,YAAfsC,EAEDiH,EAAa7G,QAAQ,SAAA1F,OACbzC,EAAUyC,EAAVzC,MACHuN,EACEvN,EAAM8D,OAAOG,OAASA,IACvBxB,EAAKrB,SAAWqP,EACZzQ,EAAMiF,UAAUf,MAChBlE,EAAMwG,aAAatC,MACnBlE,EAAMmF,WAAWjB,MACjBlE,EAAMqF,cAAcnB,MACpBlE,EAAMyE,eAAeP,MACrBlE,EAAM6E,kBAAkBX,OAI3BlE,EAAMe,MAAMkD,OAASA,IACtBxB,EAAKtB,QAAUsP,EACXzQ,EAAMkF,WAAWhB,MACjBlE,EAAMuG,YAAYrC,MAClBlE,EAAMsF,YAAYpB,MAClBlE,EAAMoF,aAAalB,MACnBS,EAAiBT,MACjBa,EAAgBb,SAKL,WAAf6D,EACNiH,EAAa7G,QAAQ,SAAA1F,OACfZ,EAAO4O,EAAWhO,EAAKsN,YACjB,EAAPlO,GACDY,EAAK2B,UAAiB,GAAPvC,KAIE,aAAfkG,GACNiH,EAAa7G,QAAQ,SAAA1F,OACfZ,EAAO4O,EAAWhO,EAAKsN,YACjB,EAAPlO,GACDY,EAAK2B,UAAUvC,UAIhBV,QAAUsE,OACVrE,SAAWsM,EAAchI,EAAInB,EAAIf,EAAKe,OACtC+J,QAAU/J,yCAIFf,cACPc,EAAed,EAAfc,EAAGC,EAAYf,EAAZe,EAAGkB,EAASjC,EAATiC,EAAGC,EAAMlC,EAANkC,OACVzE,IAAMqD,OACNpD,IAAMqD,MAqBPoJ,EACAD,EArBAtB,EAAO9H,EACL0K,EAAoClN,KAApCkN,aAAchP,EAAsB8B,KAAtB9B,MAAO0P,EAAe5N,KAAf4N,WAEzB3O,EAeEf,EAfFe,MACA+C,EAcE9D,EAdF8D,OACAW,EAaEzE,EAbFyE,eACAE,EAYE3E,EAZF2E,iBACAE,EAWE7E,EAXF6E,kBACAE,EAUE/E,EAVF+E,gBACAE,EASEjF,EATFiF,UACAsB,EAQEvG,EARFuG,YACAC,EAOExG,EAPFwG,aACAtB,EAMElF,EANFkF,WACAC,EAKEnF,EALFmF,WACAC,EAIEpF,EAJFoF,aACAC,EAGErF,EAHFqF,cACAC,EAEEtF,EAFFsF,YACA0C,EACEhI,EADFgI,aAKCjH,GAASA,EAAMkD,OAASA,SACzB0J,GAAa,EACN5M,EAAMkD,WACNA,EACHwB,EAAI1E,EAAMmD,iBAEPD,EACHwB,GAAmB,IAAd1E,EAAMmD,SAIdJ,GAAUA,EAAOG,OAASA,SAC3ByJ,GAAc,EACP5J,EAAOG,WACPA,EACHyB,EAAI5B,EAAOI,iBAERD,EACHyB,GAAoB,IAAf5B,EAAOI,MAKlBI,GAAKS,EAAgBb,MAAQgB,EAAWhB,MAAQoB,EAAYpB,MAC5DV,EAAKc,EAAIA,EACTC,GAAKE,EAAeP,MAAQe,EAAUf,MAAQiB,EAAWjB,MACzDV,EAAKe,EAAIA,EACTkB,GAAKV,EAAgBb,MAAQS,EAAiBT,MAAQgB,EAAWhB,MAAQqC,EAAYrC,MAAQoB,EAAYpB,MAAQkB,EAAalB,MAC9HwB,GAAKjB,EAAeP,MAAQW,EAAkBX,MAAQe,EAAUf,MAAQsC,EAAatC,MAAQiB,EAAWjB,MAAQmB,EAAcnB,UAE1HyL,EAAY,IAAI1C,EAAU3I,EAAGC,GACjCyK,EAAa7G,QAAQ,SAAA1F,MAChBA,aAAgBuL,GAAOvL,aAAgB4K,GAAM,IAEnB,aAAxB5K,EAAKzC,MAAMG,qBACZgR,EAAKC,YAAYlO,KAAKT,MAIrB6B,IAAMd,EAAKc,EACZqL,EAAUC,IAAInN,GACdA,EAAKmB,eAAe,CAClBU,EAAAA,EACAC,EAAAA,EACAkB,EAAAA,EACAC,EAAAA,IAEFpB,GAAK7B,EAAKoN,WACVzD,EAAOxB,KAAKC,IAAIuB,EAAM9H,QAMb,GAFA7B,EAAKwM,eAAexJ,EAAInB,EAAGmB,GAGlChD,EAAKmB,eAAe,CAClBU,EAAAA,EACAC,EAAAA,EACAkB,EAAAA,EACAC,EAAAA,KAKFgK,EAAWxM,KAAKyM,GAChBA,EAAUlI,gBACVnD,EAAId,EAAKc,EACTC,GAAKoL,EAAU7L,OACfrB,EAAKmB,eAAe,CAClBU,EAAGd,EAAKc,EACRC,EAAAA,EACAkB,EAAAA,EACAC,EAAAA,IAEFiK,EAAY,IAAI1C,EAAU3I,EAAGC,IAE/BD,GAAK7B,EAAKoN,WACVzD,EAAOxB,KAAKC,IAAIuB,EAAM9H,GACtBqL,EAAUC,IAAInN,OAIb,IACA6B,IAAMd,EAAKc,EACZqL,EAAUC,IAAInN,GACdA,EAAK8M,SAAS,CACZjL,EAAAA,EACAC,EAAAA,EACAkB,EAAAA,EACAC,EAAAA,IAEFpB,GAAK7B,EAAK1B,MACVqL,EAAOxB,KAAKC,IAAIuB,EAAM9H,QAMb,GAFA7B,EAAKwM,eAAexJ,EAAInB,EAAGmB,GAGlChD,EAAK8M,SAAS,CACZjL,EAAAA,EACAC,EAAAA,EACAkB,EAAAA,EACAC,EAAAA,KAKFgK,EAAWxM,KAAKyM,GAChBA,EAAUlI,gBACVnD,EAAId,EAAKc,EACTC,GAAKoL,EAAU7L,OACfrB,EAAK8M,SAAS,CACZjL,EAAGd,EAAKc,EACRC,EAAAA,EACAkB,EAAAA,EACAC,EAAAA,IAEFiK,EAAY,IAAI1C,EAAU3I,EAAGC,IAE/BD,GAAK7B,EAAK1B,MACVqL,EAAOxB,KAAKC,IAAIuB,EAAM9H,GACtBqL,EAAUC,IAAInN,MAKjBkN,EAAUG,OACXJ,EAAWxM,KAAKyM,GAChBA,EAAUlI,gBACVlD,GAAKoL,EAAU7L,SAG4B,EAA1C,CAAC,SAAU,SAAS+F,QAAQ7B,IAC7B0H,EAAWvH,QAAQ,SAAAwH,OACb9N,EAAO4D,EAAIkK,EAAU5O,MACf,EAAPc,GACD8N,EAAUK,aAA2B,WAAdhI,EAAgC,GAAPnG,EAAaA,UAK9DV,QAAUwM,EAAalI,EAAI2G,EAAO5I,EAAKc,OACvClD,SAAWsM,EAAchI,EAAInB,EAAIf,EAAKe,OACtC+J,QAAU/J,sCAIL8M,OACJ/M,EAA6DxC,KAA7DwC,EAAGC,EAA0DzC,KAA1DyC,EAAG+M,EAAuDxP,KAAvDwP,MAAOvQ,EAAgDe,KAAhDf,MAAO+C,EAAyChC,KAAzCgC,OAAQmK,EAAiCnM,KAAjCmM,SAAUmD,EAAuBtP,KAAvBsP,YAAapR,EAAU8B,KAAV9B,MAEvDiF,EAQEjF,EARFiF,UACAC,EAOElF,EAPFkF,WACAC,EAMEnF,EANFmF,WACAG,EAKEtF,EALFsF,YACAF,EAIEpF,EAJFoF,aACAC,EAGErF,EAHFqF,cACAZ,EAEEzE,EAFFyE,eACAM,EACE/E,EADF+E,gBAEEwM,EAAKxQ,EAAQuE,EAAYpB,MAAQkB,EAAalB,MAC9CsN,EAAK1N,EAASqB,EAAWjB,MAAQmB,EAAcnB,MAEnD+J,EAAS9F,QAAQ,SAAA1F,GACZA,aAAgBuL,GACjBvL,EAAKgP,aAAqE,EAAzD,CAAC,WAAY,YAAY5H,QAAQpH,EAAKzC,MAAMG,UAAiBsC,EAAO4O,KAIzFD,EAAYjJ,QAAQ,SAAA1F,OAEduD,EAAIM,EAAIoL,EAAIC,EADV3R,EAA+EyC,EAA/EzC,QAA+EyC,EAAxEzC,MAASI,IAAAA,KAAMC,IAAAA,IAAK0D,IAAAA,MAAOC,IAAAA,OAAe4N,IAAP7Q,MAAuB8Q,IAAR/N,UAG5D1D,EAAK6D,OAASA,GAAaF,EAAME,OAASA,EAC3C+B,EAAK5F,EAAK6D,OAASA,EAAUK,EAAIlE,EAAK8D,MAAQI,EAAIY,EAAWhB,MAAQa,EAAgBb,MAAQnD,EAAQX,EAAK8D,MAAQ,IAClHwN,EAAK3N,EAAME,OAASA,EAAUK,EAAIY,EAAWhB,MAAQa,EAAgBb,MAAQqN,EAAKxN,EAAMG,MAAQ8B,EAAK1B,EAAIY,EAAWhB,MAAQa,EAAgBb,MAAQqN,EAAKxQ,EAAQgD,EAAMG,MAAQ,IAAO8B,OAEnL,GAAG5F,EAAK6D,OAASA,GAAa2N,EAAO3N,OAASA,EACjD+B,EAAK5F,EAAK6D,OAASA,EAAUK,EAAIlE,EAAK8D,MAAQI,EAAIY,EAAWhB,MAAQa,EAAgBb,MAAQnD,EAAQX,EAAK8D,MAAQ,IAClHwN,EAAKE,EAAO3N,OAASA,EAAU2N,EAAO1N,MAAQnD,OAE3C,GAAGgD,EAAME,OAASA,GAAa2N,EAAO3N,OAASA,EAAW,CAC7DyN,EAAKE,EAAO3N,OAASA,EAAU2N,EAAO1N,MAAQnD,MAC1C+Q,EAAUF,EAAO3N,OAASA,EAAU2N,EAAO1N,MAAQnD,EAAQ6Q,EAAO1N,MAAQ,IAC9E8B,EAAKjC,EAAME,OAASA,EAAUK,EAAIY,EAAWhB,MAAQa,EAAgBb,MAAQqN,EAAKxN,EAAMG,MAAQ4N,EAAUxN,EAAIY,EAAWhB,MAAQa,EAAgBb,MAAQqN,EAAKxQ,EAAQgD,EAAMG,MAAQ,IAAO4N,OAErL1R,EAAK6D,OAASA,GACpB+B,EAAK5F,EAAK6D,OAASA,EAAUK,EAAIlE,EAAK8D,MAAQI,EAAIY,EAAWhB,MAAQa,EAAgBb,MAAQnD,EAAQX,EAAK8D,MAAQ,IAClHwN,EAAKjP,EAAK+M,UAAS,IAEbzL,EAAME,OAASA,GACrByN,EAAKjP,EAAK+M,UAAS,GACnBxJ,EAAKjC,EAAME,OAASA,EAAUK,EAAIY,EAAWhB,MAAQa,EAAgBb,MAAQqN,EAAKxN,EAAMG,MAAQwN,EAAKpN,EAAIY,EAAWhB,MAAQa,EAAgBb,MAAQqN,EAAKxQ,EAAQgD,EAAMG,MAAQ,IAAOwN,GAItLA,EAFME,EAAO3N,OAASA,GACtB+B,EAAK1B,EAAIY,EAAWhB,MAAQa,EAAgBb,MACvC0N,EAAO3N,OAASA,EAAU2N,EAAO1N,MAAQnD,IAG9CiF,EAAK1B,EAAIY,EAAWhB,MAAQa,EAAgBb,MACvCzB,EAAK+M,UAAS,OAGlBnP,EAAI4D,OAASA,GAAaD,EAAOC,OAASA,EAC3CqC,EAAKjG,EAAI4D,OAASA,EAAUM,EAAIlE,EAAI6D,MAAQK,EAAIU,EAAUf,MAAQO,EAAeP,MAAQJ,EAASzD,EAAI6D,MAAQ,IAC9GyN,EAAK3N,EAAOC,OAASA,EAAUM,EAAIU,EAAUf,MAAQO,EAAeP,MAAQsN,EAAKxN,EAAOE,MAAQoC,EAAK/B,EAAIU,EAAUf,MAAQO,EAAeP,MAAQsN,EAAK1N,EAASE,EAAOE,MAAQ,IAAOoC,EACtLtG,EAAM8D,OAAS,CACbI,MAAOyN,EACP1N,KAAMA,QAGL,GAAG5D,EAAI4D,OAASA,GAAa4N,EAAQ5N,OAASA,EACjDqC,EAAKjG,EAAI4D,OAASA,EAAUM,EAAIlE,EAAI6D,MAAQK,EAAIU,EAAUf,MAAQO,EAAeP,MAAQJ,EAASzD,EAAI6D,MAAQ,IAC9GyN,EAAKE,EAAQ5N,OAASA,EAAU4N,EAAQ3N,MAAQJ,OAE7C,GAAGE,EAAOC,OAASA,GAAa4N,EAAQ5N,OAASA,EAAW,CAC/D0N,EAAKE,EAAQ5N,OAASA,EAAU4N,EAAQ3N,MAAQJ,MAC5CiO,EAAWF,EAAQ5N,OAASA,EAAU4N,EAAQ3N,MAAQJ,EAAS+N,EAAQ3N,MAAQ,IACnFoC,EAAKtC,EAAOC,OAASA,EAAUM,EAAIU,EAAUf,MAAQO,EAAeP,MAAQsN,EAAKxN,EAAOE,MAAQ6N,EAAWxN,EAAIU,EAAUf,MAAQO,EAAeP,MAAQsN,EAAK1N,EAASE,EAAOE,MAAQ,IAAO6N,OAEtL1R,EAAI4D,OAASA,GACnBqC,EAAKjG,EAAI4D,OAASA,EAAUM,EAAIlE,EAAI6D,MAAQK,EAAIU,EAAUf,MAAQO,EAAeP,MAAQJ,EAASzD,EAAI6D,MAAQ,IAC9GyN,EAAKlP,EAAK+M,YAEJxL,EAAOC,OAASA,GACtB0N,EAAKlP,EAAK+M,WACVlJ,EAAKtC,EAAOC,OAASA,EAAUM,EAAIU,EAAUf,MAAQO,EAAeP,MAAQsN,EAAKxN,EAAOE,MAAQyN,EAAKpN,EAAIU,EAAUf,MAAQO,EAAeP,MAAQsN,EAAK1N,EAASE,EAAOE,MAAQ,IAAOyN,GAItLA,EAFME,EAAQ5N,OAASA,GACvBqC,EAAKgL,EAAQrM,EAAUf,MAAQO,EAAeP,MACzC2N,EAAQ5N,OAASA,EAAU4N,EAAQ3N,MAAQJ,IAGhDwC,EAAKgL,EAAQrM,EAAUf,MAAQO,EAAeP,MACzCzB,EAAK+M,YAGS,WAAlBxP,EAAMyD,UACPzD,EAAMyD,QAAU,SAElBhB,EAAK8M,SAAS,CACZjL,EAAG0B,EACHzB,EAAG+B,EACHb,EAAGiM,EACHhM,EAAGiM,sFAOD3C,EAA2BlN,KAA3BkN,aAAcf,EAAanM,KAAbmM,SAEpBe,EAAa7G,QAAQ,SAAA1F,IAChBA,aAAgB6I,GAAgC,WAAxB7I,EAAKzC,MAAMG,WACpCsC,EAAKkK,WAITsB,EAAS9F,QAAQ,SAAA1F,IACXA,aAAgBuL,GAAOvL,aAAgB4K,MAAkE,EAAzD,CAAC,WAAY,YAAYxD,QAAQpH,EAAKzC,MAAMG,WAC9FsC,EAAKkK,kDAMF7K,KAAKwB,kDAGLxB,KAAKoM,uDAGLpM,KAAKqM,0DAGLrM,KAAKsM,wDAGLtM,KAAKuM,kDAGR9L,EAAMT,KAAK4N,WAAWlN,UACvBD,EAAK,KACFwK,EAAOjL,KAAK4N,WAAWnN,EAAM,UAC1BwK,EAAKxI,EAAIzC,KAAKyC,EAAIwI,EAAKC,gBAEzBlL,KAAKyC,uCAGLzC,KAAKwM,0CAGCxO,UACNsN,EAASrD,eAAejK,gBChmC7BkS,wBACQhQ,EAASC,EAAOgM,mDACpBjM,EAASC,EAAOgM,KACjBgE,OAAS,kBAHDjE,oDAOWkE,IAArBpQ,KAAKG,MAAMlB,MAAqB,KAC7BmD,EAAQiO,SAASrQ,KAAKG,MAAMlB,QAC5BqR,MAAMlO,IAAkB,EAARA,SACb/C,QAAU+C,WAGMgO,IAAtBpQ,KAAKG,MAAM6B,OAAsB,KAC9BI,EAAQiO,SAASrQ,KAAKG,MAAM6B,SAC5BsO,MAAMlO,IAAkB,EAARA,SACb9C,SAAW8C,gDAxBJpB,EAAGsF,EACjBtI,EA6BEsJ,aAAUtH,KAAKE,SAEXM,EAAI,EAAGC,EAAMT,KAAKkB,QAAQR,OAAQF,EAAIC,EAAKD,IAAK,KAClDG,EAAOX,KAAKkB,QAAQV,GACxB8G,IAlCctG,EAkCIL,EAAK,GAlCN2F,EAkCU3F,EAAK,QAjChC3C,EAAAA,EAAIoC,MAAMC,QAAQiG,GAAKS,EAAKM,gBAAgBf,GAAKS,EAAKF,UAAUP,GAC3D,cAANtF,IACDA,EAAI,SAEC,IAAMA,EAAI,KAAO+F,EAAKQ,WAAWvJ,GAAG,GAAQ,YA+BjDsJ,gBAAatH,KAAKE,8CAIXqQ,MACPA,EAvDJ,SAAgBA,MACXxJ,EAAKE,SAASsJ,GAAM,KACjBC,EAAIrS,SAASsS,cAAcF,OAC3BC,QACI,IAAI7D,MAAM,iCAAmC4D,UAE9CC,MAELD,QACI,IAAI5D,MAAM,qBAAuB4D,UAElCA,EA4CCG,CAAOH,QACRI,cAEFJ,EAAIK,SAASC,gBAAkB7Q,KAAKE,QAAQ2Q,mBACxCV,OAASI,EACXvQ,KAAKf,OACNsR,EAAIO,aAAa,QAAS9Q,KAAKf,OAE9Be,KAAKgC,QACNuO,EAAIO,aAAa,SAAU9Q,KAAKgC,YAI/B,KACChE,EAAIgC,KAAK+Q,YACbR,EAAIS,mBAAmB,YAAahT,OAChCiT,EAASV,EAAIW,iBAAiBlR,KAAKE,cAClCiQ,OAASc,EAAOA,EAAOvQ,OAAS,OAGnCV,KAAKf,QAAUe,KAAKgC,OAAQ,KAC1BnD,EAAMC,OAAOC,iBAAiBwR,EAAK,MACnCvQ,KAAKf,aACFI,QAAUgR,SAASxR,EAAIsS,iBAAiB,UAC7CZ,EAAIO,aAAa,QAAS9Q,KAAKf,QAE7Be,KAAKgC,cACF1C,SAAW+Q,SAASxR,EAAIsS,iBAAiB,WAC9CZ,EAAIO,aAAa,SAAU9Q,KAAKgC,aAI9B9D,EAAU8B,KAAV9B,OAC2C,IAA9C,CAAC,OAAQ,SAAS6J,QAAQ7J,EAAMyD,WACjCzD,EAAMyD,QAAU,SAGI,aAAnBzD,EAAMG,WACPH,EAAMG,SAAW,UAGC,WAAjB2B,KAAKE,cACDT,MAAQO,KAAKmQ,OAAOiB,WAAW,WAC/BvR,OAASC,EAAKjC,QAEI,QAAjBmC,KAAKE,eACNL,OAASC,EAAKhC,UAEhB+O,WAAW7M,KAAKP,MAAOO,KAAKH,QAEjC3B,EAAMe,MAAQe,KAAKf,MACnBf,EAAM8D,OAAShC,KAAKgC,YACfgL,mBACAS,SAAS,CACZjL,EAAG,EACHC,EAAG,EACHkB,EAAG3D,KAAKf,MACR2E,EAAG5D,KAAKgC,cAEL2N,YAAY3P,WACZ6K,SACF7K,KAAKF,OAASA,EAAKhC,WACfqS,OAAOkB,UAAYvR,EAAKwR,0CAKxBtR,KAAKmQ,gBC3HVoB,wBACQpR,mDACJ,QAASA,KAEVqR,QAAU,KACVC,MAAQ,GACVrR,MAAMC,QAAQoB,EAAKtB,MAAMuR,WACrBF,QAAU/P,EAAKtB,MAAMuR,OAEzBtR,MAAMC,QAAQoB,EAAKtB,MAAMwR,SACrBF,MAAQhQ,EAAKtB,MAAMwR,MAGgE,EAAvF,CAAC,WAAY,YAAa,cAAe,gBAAgB5J,QAAQtG,EAAKtB,MAAMyR,UACxE9F,SAAWrK,EAAKtB,MAAMyR,SAGtB9F,SAAW,2BAjBHP,uFAuBT/I,EAAwDxC,KAAxDwC,EAAGC,EAAqDzC,KAArDyC,EAAGxD,EAAkDe,KAAlDf,MAAO+C,EAA2ChC,KAA3CgC,OAAQ9D,EAAmC8B,KAAnC9B,MAAOqE,EAA4BvC,KAA5BuC,IAAKmP,EAAuB1R,KAAvB0R,MAAOC,EAAgB3R,KAAhB2R,IAAKC,EAAW5R,KAAX4R,YAChDF,EAAMhR,OAAS,GAAKiR,EAAIjR,OAAS,QAmBhC+C,EAAIC,EAAIQ,EAAIM,EAfd7B,EAcEzE,EAdFyE,eACAE,EAaE3E,EAbF2E,iBACAE,EAYE7E,EAZF6E,kBACAE,EAWE/E,EAXF+E,gBACAE,EAUEjF,EAVFiF,UACAsB,EASEvG,EATFuG,YACAC,EAQExG,EARFwG,aACAtB,EAOElF,EAPFkF,WACAC,EAMEnF,EANFmF,WACAC,EAKEpF,EALFoF,aACAC,EAIErF,EAJFqF,cACAC,EAGEtF,EAHFsF,YACAe,EAEErG,EAFFqG,OACA4B,EACEjI,EADFiI,YAGE0L,EAAUrP,EAAIS,EAAgBb,MAAQgB,EAAWhB,MAAQoB,EAAYpB,MACrE0P,EAAUrP,EAAIE,EAAeP,MAAQe,EAAUf,MAAQiB,EAAWjB,MACtEnD,GAASgE,EAAgBb,MAAQS,EAAiBT,MAAQgB,EAAWhB,MAAQqC,EAAYrC,MAAQoB,EAAYpB,MAAQkB,EAAalB,MAClIJ,GAAUW,EAAeP,MAAQW,EAAkBX,MAAQe,EAAUf,MAAQsC,EAAatC,MAAQiB,EAAWjB,MAAQmB,EAAcnB,MACrH,aAAXwP,GACDnO,EAAKoO,EAAUH,EAAM,GAAKzS,EAC1ByE,EAAKoO,EAAUJ,EAAM,GAAK1P,EAC1BkC,EAAK2N,EAAUF,EAAI,GAAK1S,EACxBuF,EAAKsN,EAAUH,EAAI,GAAK3P,GAEP,cAAX4P,GACNnO,EAAKoO,EAAU5S,EAAQyS,EAAM,GAAKzS,EAClCyE,EAAKoO,EAAUJ,EAAM,GAAK1P,EAC1BkC,EAAK2N,EAAU5S,EAAQ0S,EAAI,GAAK1S,EAChCuF,EAAKsN,EAAUH,EAAI,GAAK3P,GAEP,gBAAX4P,GACNnO,EAAKoO,EAAUH,EAAM,GAAKzS,EAC1ByE,EAAKoO,EAAU9P,EAAS0P,EAAM,GAAK1P,EACnCkC,EAAK2N,EAAUF,EAAI,GAAK1S,EACxBuF,EAAKsN,EAAU9P,EAAS2P,EAAI,GAAK3P,GAEhB,iBAAX4P,IACNnO,EAAKoO,EAAU5S,EAAQyS,EAAM,GAAKzS,EAClCyE,EAAKoO,EAAU9P,EAAS0P,EAAM,GAAK1P,EACnCkC,EAAK2N,EAAU5S,EAAQ0S,EAAI,GAAK1S,EAChCuF,EAAKsN,EAAU9P,EAAS2P,EAAI,GAAK3P,GAEhChC,KAAKF,OAASA,EAAKjC,QACpB0E,EAAI6B,YAAcG,EAClBhC,EAAI4B,UAAYgC,EAChB5D,EAAIsB,YACJtB,EAAI8B,OAAOZ,EAAIC,GACfnB,EAAI+B,OAAOJ,EAAIM,GACfjC,EAAIgC,SACJhC,EAAI0B,aAEEjE,KAAKF,OAASA,EAAKhC,KACzBgC,EAAK/B,+BAAwB0F,mBAAWC,mBAAWQ,mBAAWM,6BAAqB2B,uBAAwB5B,gDAKtGvE,KAAKwR,2CAGLxR,KAAKyR,eC1FVM,wBACQ5R,+CACJ,WAAYA,KAEb6R,YAAc,GAChB5R,MAAMC,QAAQoB,EAAKtB,MAAM8R,eACrBD,YAAcvQ,EAAKtB,MAAM8R,YAG0D,EAAvF,CAAC,WAAY,YAAa,cAAe,gBAAgBlK,QAAQtG,EAAKtB,MAAMyR,UACxE9F,SAAWrK,EAAKtB,MAAMyR,SAGtB9F,SAAW,cAGfrK,EAAKtB,MAAM6K,MACPe,MAAQ/M,WAAWyC,EAAKtB,MAAM6K,MAAQ,IAGtCe,MAAQ,EAEZtK,EAAKtB,MAAM4I,IAAK,KACbA,EAAM/J,WAAWyC,EAAKtB,MAAM4I,KAC7BuH,MAAMvH,KACPA,EAAM,KAEHiD,MAAQjD,SAGRiD,MAAQ,sBA9BGT,uFAoCZ/I,EAAiExC,KAAjEwC,EAAGC,EAA8DzC,KAA9DyC,EAAGxD,EAA2De,KAA3Df,MAAO+C,EAAoDhC,KAApDgC,OAAQ9D,EAA4C8B,KAA5C9B,MAAOqE,EAAqCvC,KAArCuC,IAAK0P,EAAgCjS,KAAhCiS,UAAWlJ,EAAqB/I,KAArB+I,IAAKiC,EAAgBhL,KAAhBgL,IAAK4G,EAAW5R,KAAX4R,YACzDK,EAAUvR,OAAS,QAGlB,IAAIF,EAAI,EAAGC,EAAMwR,EAAUvR,OAAQF,EAAIC,EAAKD,QAC1CJ,MAAMC,QAAQ4R,EAAUzR,KAAOyR,EAAUzR,GAAGE,OAAS,aAKzDiC,EAcEzE,EAdFyE,eACAE,EAaE3E,EAbF2E,iBACAE,EAYE7E,EAZF6E,kBACAE,EAWE/E,EAXF+E,gBACAE,EAUEjF,EAVFiF,UACAsB,EASEvG,EATFuG,YACAC,EAQExG,EARFwG,aACAtB,EAOElF,EAPFkF,WACAC,EAMEnF,EANFmF,WACAC,EAKEpF,EALFoF,aACAC,EAIErF,EAJFqF,cACAC,EAGEtF,EAHFsF,YACAe,EAEErG,EAFFqG,OACA4B,EACEjI,EADFiI,YAEE+L,EAAQnJ,EAAMiC,KACfkH,GAAS,QACJ,IAAIvF,wCAAiC3M,KAAK+I,uBAAc/I,KAAKgL,cAEjE6G,EAAUrP,EAAIS,EAAgBb,MAAQgB,EAAWhB,MAAQoB,EAAYpB,MACrE0P,EAAUrP,EAAIE,EAAeP,MAAQe,EAAUf,MAAQiB,EAAWjB,SACtEnD,GAASgE,EAAgBb,MAAQS,EAAiBT,MAAQgB,EAAWhB,MAAQqC,EAAYrC,MAAQoB,EAAYpB,MAAQkB,EAAalB,MAClIJ,GAAUW,EAAeP,MAAQW,EAAkBX,MAAQe,EAAUf,MAAQsC,EAAatC,MAAQiB,EAAWjB,MAAQmB,EAAcnB,MACrH,aAAXwP,EACDK,EAAU5L,QAAQ,SAAA1F,GAChBA,EAAK,GAAKkR,EAAUlR,EAAK,GAAK1B,EAC9B0B,EAAK,GAAKmR,GAAWnR,EAAK,GAAKqK,GAAOhJ,EAASkQ,IAGhC,cAAXN,EACNK,EAAU5L,QAAQ,SAAA1F,GAChBA,EAAK,GAAKkR,EAAU5S,EAAQ0B,EAAK,GAAK1B,EACtC0B,EAAK,GAAKmR,GAAWnR,EAAK,GAAKqK,GAAOhJ,EAASkQ,IAGhC,gBAAXN,EACNK,EAAU5L,QAAQ,SAAA1F,GAChBA,EAAK,GAAKkR,EAAUlR,EAAK,GAAK1B,EAC9B0B,EAAK,GAAKmR,EAAU9P,GAAUrB,EAAK,GAAKqK,GAAOhJ,EAASkQ,IAGzC,iBAAXN,GACNK,EAAU5L,QAAQ,SAAA1F,GAChBA,EAAK,GAAKkR,EAAU5S,EAAQ0B,EAAK,GAAK1B,EACtC0B,EAAK,GAAKmR,EAAU9P,GAAUrB,EAAK,GAAKqK,GAAOhJ,EAASkQ,IAGzDlS,KAAKF,OAASA,EAAKjC,OAAQ,CAC5B0E,EAAI6B,YAAcG,EAClBhC,EAAI4B,UAAYgC,EAChB5D,EAAIsB,YACJtB,EAAI8B,OAAO4N,EAAU,GAAG,GAAIH,EAAUG,EAAU,GAAG,QAC/C,IAAIzR,EAAI,EAAGC,EAAMwR,EAAUvR,OAAQF,EAAIC,EAAKD,IAAK,KAC/C2R,EAAQF,EAAUzR,GACtB+B,EAAI+B,OAAO6N,EAAM,GAAIL,EAAUK,EAAM,IAEvC5P,EAAIgC,SACJhC,EAAI0B,iBAED,GAAGjE,KAAKF,OAASA,EAAKhC,IAAK,SAC1BsU,EAAS,GACL5R,EAAI,EAAGC,EAAMwR,EAAUvR,OAAQF,EAAIC,EAAKD,IAAK,KAC/C2R,EAAQF,EAAUzR,GACtB4R,aAAaD,EAAM,eAAMA,EAAM,QAEjCrS,EAAK/B,mDAA4CqU,6BAAyBjM,uBAAwB5B,qDAK7FvE,KAAKgS,qBCjHZK,EAAQ,CACVxH,gBAAOyH,EAAI/B,QACJ+B,aAAcpC,SACX,IAAIvD,MAAM,4CAEf4D,GACD+B,EAAGC,SAAShC,GAEP+B,GAETE,kBAAStS,EAASC,EAAOgM,OACkB,EAAtC,CAAC,SAAU,OAAOpE,QAAQ7H,UACpB,IAAIgQ,EAAGhQ,EAASC,EAAOgM,MAE7BD,EAAIuG,QAAQvS,UACN,IAAIgM,EAAIhM,EAASC,EAAOgM,SAE3B,IAAIQ,MAAM,uBAAyBzM,IAE3CwS,kBAASxS,EAASC,MACboL,GAAKkH,QAAQvS,UACPA,OACA,eACI,IAAIqR,EAAKpR,OACb,kBACI,IAAI4R,EAAQ5R,SAGnB,IAAIwM,MAAM,4BAA8BzM,IAEhDyS,kBAASzS,EAASC,EAAOgM,YAGP,oBAAVrN,SACRA,OAAOuT,MAAQA"}