{"version":3,"file":"index.min.js","sources":["src/node/mode.js","src/node/Node.js","src/node/Xom.js","src/style/unit.js","src/style/font.js","src/style/reset.js","src/util.js","src/style/css.js","src/node/LineBox.js","src/node/Text.js","src/node/LineGroup.js","src/geom/Geom.js","src/node/Dom.js","src/node/CS.js","src/geom/Line.js","src/geom/Polygon.js","src/index.js"],"sourcesContent":["let mode = 0;\nlet measureDom;\nlet svgHtml;\n\nexport default {\n  setCanvas() {\n    mode = 0;\n  },\n  setSvg() {\n    mode = 1;\n    svgHtml = '';\n  },\n  isCanvas() {\n    return mode === 0;\n  },\n  isSvg() {\n    return mode === 1;\n  },\n  appendHtml(s) {\n    svgHtml += s;\n  },\n  get html() {\n    return svgHtml;\n  },\n  get measure() {\n    if(!measureDom) {\n      measureDom = document.createElement('div');\n      measureDom.style.position = 'absolute';\n      measureDom.style.left = '99999px';\n      measureDom.style.top = '-99999px';\n      measureDom.style.visibility = 'hidden';\n      document.body.appendChild(measureDom);\n    }\n    return measureDom;\n  }\n};\n","class Node {\n  constructor() {\n    this.__x = 0;\n    this.__y = 0;\n    this.__width = 0;\n    this.__height = 0;\n    this.__prev = null;\n    this.__next = null;\n    this.__ctx = null; // canvas的context\n    this.__parent = null;\n    this.__style = {}; // style被解析后的k-v形式\n    this.__baseLine = 0;\n  }\n\n  __offsetX(diff) {\n    this.__x += diff;\n  }\n\n  __offsetY(diff) {\n    this.__y += diff;\n  }\n\n  get x() {\n    return this.__x;\n  }\n  get y() {\n    return this.__y;\n  }\n  get width() {\n    return this.__width;\n  }\n  get height() {\n    return this.__height;\n  }\n  get outerWidth() {\n    return this.__width;\n  }\n  get outerHeight() {\n    return this.__height;\n  }\n  get prev() {\n    return this.__prev;\n  }\n  get next() {\n    return this.__next;\n  }\n  get parent() {\n    return this.__parent;\n  }\n  get style() {\n    return this.__style;\n  }\n  get ctx() {\n    return this.__ctx;\n  }\n  get baseLine() {\n    return this.__baseLine;\n  }\n}\n\nexport default Node;\n","import Node from './Node';\nimport mode from './mode';\n\nfunction arr2hash(arr) {\n  let hash = {};\n  for(let i = 0, len = arr.length; i < len; i++) {\n    let item = arr[i];\n    if(Array.isArray(item)) {\n      hash[item[0]] = item[1];\n    }\n    else {\n      for(let list = Object.keys(item), j = list.length - 1; j >= 0; j--) {\n        let k = list[j];\n        hash[k] = item[k];\n      }\n    }\n  }\n  return hash;\n}\n\nfunction hash2arr(hash) {\n  let arr = [];\n  for(let list = Object.keys(hash), i = 0, len = list.length; i < len; i++) {\n    let k = list[i];\n    arr.push([k, hash[k]]);\n  }\n  return arr;\n}\n\nfunction spread(arr) {\n  for(let i = 0, len = arr.length; i < len; i++) {\n    let item = arr[i];\n    if(!Array.isArray(item)) {\n      let temp = [];\n      for(let list = Object.keys(item), j = 0, len = list.length; j < len; j++) {\n        let k = list[j];\n        temp.push([k, item[k]]);\n      }\n      arr.splice(i, 1, ...temp);\n    }\n  }\n  return arr;\n}\n\nclass Xom extends Node {\n  constructor(tagName, props) {\n    super();\n    props = props || [];\n    // 构建工具中都是arr，手写可能出现hash情况\n    if(Array.isArray(props)) {\n      this.props = arr2hash(props);\n      this.__props = spread(props);\n    }\n    else {\n      this.props = props;\n      this.__props = hash2arr(props);\n    }\n    this.__tagName = tagName;\n    this.__style = this.props.style || {}; // style被解析后的k-v形式\n  }\n\n  __preLay(data) {\n    let { style } = this;\n    if(style.display === 'block') {\n      this.__preLayBlock(data);\n    }\n    else if(style.display === 'flex') {\n      this.__preLayFlex(data);\n    }\n    else {\n      this.__preLayInline(data);\n    }\n  }\n\n  render() {\n    let { ctx, style, x, y, width, height, outerWidth, outerHeight } = this;\n    let {\n      backgroundColor,\n      borderTopWidth,\n      borderTopColor,\n      borderRightWidth,\n      borderRightColor,\n      borderBottomWidth,\n      borderBottomColor,\n      borderLeftWidth,\n      borderLeftColor,\n    } = style;\n    if(backgroundColor) {\n      let x1 = x;\n      if(borderLeftWidth) {\n        x1 += borderLeftWidth.value;\n      }\n      let y1 = y;\n      if(borderTopWidth) {\n        y1 += borderTopWidth.value;\n      }\n      if(mode.isCanvas()) {\n        ctx.beginPath();\n        ctx.fillStyle = backgroundColor;\n        ctx.rect(x1, y1, width, height);\n        ctx.fill();\n        ctx.closePath();\n      }\n      else if(mode.isSvg()) {\n        mode.appendHtml(`<rect x=\"${x1}\" y=\"${y1}\" width=\"${width}\" height=\"${height}\" fill=\"${backgroundColor}\"/>`);\n      }\n    }\n    if(borderTopWidth.value) {\n      let y1 = y + borderTopWidth.value * 0.5;\n      if(mode.isCanvas()) {\n        ctx.beginPath();\n        ctx.lineWidth = borderTopWidth.value;\n        ctx.strokeStyle = borderTopColor;\n        ctx.moveTo(x + borderLeftWidth.value, y1);\n        ctx.lineTo(x + borderLeftWidth.value + width, y1);\n        ctx.stroke();\n        ctx.closePath();\n      }\n      else {\n        mode.appendHtml(`<line x1=\"${x}\" y1=\"${y1}\" x2=\"${x + outerWidth}\" y2=\"${y1}\" stroke-width=\"${borderTopWidth.value}\" stroke=\"${borderTopColor}\"/>`);\n      }\n    }\n    if(borderRightWidth.value) {\n      let x1 = x + width + borderLeftWidth.value + borderRightWidth.value * 0.5;\n      let y2 = y + outerHeight;\n      if(mode.isCanvas()) {\n        ctx.beginPath();\n        ctx.lineWidth = borderRightWidth.value;\n        ctx.strokeStyle = borderRightColor;\n        ctx.moveTo(x1, y);\n        ctx.lineTo(x1, y2);\n        ctx.stroke();\n        ctx.closePath();\n      }\n      else {\n        mode.appendHtml(`<line x1=\"${x1}\" y1=\"${y}\" x2=\"${x1}\" y2=\"${y2}\" stroke-width=\"${borderRightWidth.value}\" stroke=\"${borderRightColor}\"/>`);\n      }\n    }\n    if(borderBottomWidth.value) {\n      let y1 = y + height + borderTopWidth.value + borderBottomWidth.value * 0.5;\n      if(mode.isCanvas()) {\n        ctx.beginPath();\n        ctx.lineWidth = borderBottomWidth.value;\n        ctx.strokeStyle = borderBottomColor;\n        ctx.moveTo(x + borderLeftWidth.value, y1);\n        ctx.lineTo(x + borderLeftWidth.value + width, y1);\n        ctx.stroke();\n        ctx.closePath();\n      }\n      else {\n        mode.appendHtml(`<line x1=\"${x}\" y1=\"${y1}\" x2=\"${x + outerWidth}\" y2=\"${y1}\" stroke-width=\"${borderBottomWidth.value}\" stroke=\"${borderBottomColor}\"/>`);\n      }\n    }\n    if(borderLeftWidth.value) {\n      let x1 = x + borderLeftWidth.value * 0.5;\n      if(mode.isCanvas()) {\n        ctx.beginPath();\n        ctx.lineWidth = borderLeftWidth.value;\n        ctx.strokeStyle = borderLeftColor;\n        ctx.moveTo(x1, y);\n        ctx.lineTo(x1, y + height + borderTopWidth.value + borderBottomWidth.value);\n        ctx.stroke();\n        ctx.closePath();\n      }\n      else {\n        mode.appendHtml(`<line x1=\"${x1}\" y1=\"${y}\" x2=\"${x1}\" y2=\"${y + outerHeight}\" stroke-width=\"${borderLeftWidth.value}\" stroke=\"${borderLeftColor}\"/>`);\n      }\n    }\n  }\n\n  get tagName() {\n    return this.__tagName;\n  }\n  get outerWidth() {\n    let { style: { borderLeftWidth, borderRightWidth } } = this;\n    return this.width + borderLeftWidth.value + borderRightWidth.value;\n  }\n  get outerHeight() {\n    let { style: { borderTopWidth, borderBottomWidth } } = this;\n    return this.height + borderTopWidth.value + borderBottomWidth.value;\n  }\n}\n\nexport default Xom;\n","export default {\n  AUTO: 0,\n  PX: 1,\n  PERCENT: 2,\n};\n","'use strict';\n\nexport default {\n  arial: {\n    lhr: 1.14990234375, // 默认line-height ratio，(67+1854+434)/2048\n    car: 1.1171875, // content-area ratio，(1854+434)/2048\n    blr: 0.9052734375, // base-line ratio，1854/2048\n    mdr: 0.64599609375, // middle ratio，(1854-1062/2)/2048\n    lgr: 0.03271484375, // line-gap ratio，67/2048\n  },\n};\n","const RESET = {\n  display: 'block',\n  borderSizing: 'content-box',\n  marginTop: 0,\n  marginRight: 0,\n  marginBottom: 0,\n  marginLeft: 0,\n  paddingTop: 0,\n  paddingRight: 0,\n  paddingBottom: 0,\n  paddingLeft: 0,\n  fontSize: 24,\n  fontFamily: 'arial',\n  color: '#000',\n  fontStyle: 'normal',\n  fontWeight: 400,\n  lineHeight: 'normal',\n  borderTopWidth: 0,\n  borderRightWidth: 0,\n  borderBottomWidth: 0,\n  borderLeftWidth: 0,\n  borderTopStyle: 'solid',\n  borderRightStyle: 'solid',\n  borderBottomStyle: 'solid',\n  borderLeftStyle: 'solid',\n  verticalAlign: 'baseline',\n  width: 'auto',\n  height: 'auto',\n  flexGrow: 0,\n  flexShrink: 1,\n  flexBasis: 'auto',\n  flexDirection: 'row',\n  justifyContent: 'flex-start',\n  alignItem: 'stretch',\n  textAlign: 'left',\n  stroke: '#000',\n  strokeWidth: 1,\n};\n\nlet reset = [];\n\nObject.keys(RESET).forEach(k => {\n  let v = RESET[k];\n  reset.push({\n    k,\n    v,\n  });\n});\n\nexport default reset;\n","let toString = {}.toString;\nfunction isType(type) {\n  return function(obj) {\n    return toString.call(obj) === '[object ' + type + ']';\n  }\n}\n\nlet isNumber = isType('Number');\n\nfunction joinSourceArray(arr) {\n  var res = '';\n  for(var i = 0, len = arr.length; i < len; i++) {\n    var item = arr[i];\n    if(Array.isArray(item)) {\n      res += joinSourceArray(item);\n    }\n    else {\n      res += stringify(item);\n    }\n  }\n  return res;\n}\n\nfunction stringify(s) {\n  if(isNil(s)) {\n    return '';\n  }\n  return s.toString();\n}\n\nfunction encodeHtml(s, prop) {\n  if(prop) {\n    return s.replace(/\"/g, '&quot;');\n  }\n  return s.replace(/&/g, '&amp;').replace(/</g, '&lt;');\n}\n\nfunction isNil(v) {\n  return v === undefined || v === null;\n}\n\nlet util = {\n  isObject: isType('Object'),\n  isString: isType('String'),\n  isFunction: isType('Function'),\n  isNumber,\n  isBoolean: isType('Boolean'),\n  isDate: isType('Date'),\n  stringify,\n  joinSourceArray(arr) {\n    return joinSourceArray(arr);\n  },\n  encodeHtml,\n  isNil,\n};\n\nexport default util;\n","import unit from './unit';\nimport font from './font';\nimport reset from './reset';\nimport util from '../util';\n\nfunction parserOneBorder(style, direction) {\n  let key = `border${direction}`;\n  if(!style[key]) {\n    return;\n  }\n  let w = /\\b\\d+px\\b/i.exec(style[key]);\n  if(w) {\n    style[key + 'Width'] = w[0];\n  }\n  let s = /\\bsolid\\b/i.exec(style[key]);\n  if(s) {\n    style[key + 'Style'] = s[0];\n  }\n  let c = /#[0-9a-f]{3,6}/i.exec(style[key]);\n  if(c && [4, 7].indexOf(c[0].length) > -1) {\n    style[key + 'Color'] = c[0];\n  }\n}\n\nfunction normalize(style) {\n  // 默认reset\n  reset.forEach(item => {\n    if(!style.hasOwnProperty(item.k)) {\n      style[item.k] = item.v;\n    }\n  });\n  // 处理缩写\n  // TODO: 重复声明时优先级\n  if(style.background) {\n    let bgc = /#[0-9a-f]{3,6}/i.exec(style.background);\n    if(bgc && [4, 7].indexOf(bgc[0].length) > -1) {\n      style.backgroundColor = bgc[0];\n    }\n  }\n  if(style.flex) {\n    if(style.flex === 'none') {\n      style.flexGrow = 0;\n      style.flexShrink = 0;\n      style.flexBasis = 'auto';\n    }\n    else if(style.flex === 'auto') {\n      style.flexGrow = 1;\n      style.flexShrink = 1;\n      style.flexBasis = 'auto';\n    }\n    else if(/^[\\d.]+$/.test(style.flex)) {\n      style.flexGrow = parseFloat(style.flex);\n      style.flexShrink = 1;\n      style.flexBasis = 0;\n    }\n    else if(/^[\\d.]+px$/.test(style.flex)) {}\n    else if(/^[\\d.]+%$/.test(style.flex)) {}\n    else {\n      style.flexGrow = 0;\n      style.flexShrink = 1;\n      style.flexBasis = 'auto';\n    }\n  }\n  if(style.border) {\n    style.borderTop = style.borderRight = style.borderBottom = style.borderLeft = style.border;\n  }\n  parserOneBorder(style, 'Top');\n  parserOneBorder(style, 'Right');\n  parserOneBorder(style, 'Bottom');\n  parserOneBorder(style, 'Left');\n  // 转化不同单位值为对象标准化\n  [\n    'marginTop',\n    'marginRight',\n    'marginDown',\n    'marginLeft',\n    'paddingTop',\n    'paddingRight',\n    'paddingDown',\n    'paddingLeft',\n    'borderTopWidth',\n    'borderRightWidth',\n    'borderBottomWidth',\n    'borderLeftWidth',\n    'width',\n    'height',\n    'flexBasis',\n  ].forEach(k => {\n    let v = style[k];\n    // 编译工具前置解析优化跳出\n    if(!util.isNil(v) && v.unit) {\n      return;\n    }\n    if(v === 'auto') {\n      style[k] = {\n        unit: unit.AUTO,\n      };\n    }\n    else if(/%$/.test(v)) {\n      v = parseFloat(v) || 0;\n      if(v <= 0) {\n        style[k] = {\n          value: 0,\n          unit: unit.PX,\n        };\n      }\n      else {\n        style[k] = {\n          value: v,\n          unit: unit.PERCENT,\n        };\n      }\n    }\n    else {\n      v = parseFloat(v) || 0;\n      style[k] = {\n        value: Math.max(v, 0),\n        unit: unit.PX,\n      };\n    }\n  });\n  // 计算lineHeight为px值，最小范围\n  let lineHeight = style.lineHeight;\n  if(lineHeight === 'normal') {\n    lineHeight = {\n      value: style.fontSize * font.arial.lhr,\n      unit: unit.PX,\n    };\n  }\n  else if(/px$/.test(lineHeight)) {\n    lineHeight = parseFloat(lineHeight);\n    lineHeight = {\n      value: Math.max(style.fontSize, lineHeight),\n      unit: unit.PX,\n    };\n  }\n  // 纯数字比例\n  else {\n    lineHeight = parseFloat(lineHeight) || 'normal';\n    // 非法数字\n    if(lineHeight === 'normal') {\n      lineHeight = {\n        value: style.fontSize * font.arial.lhr,\n        unit: unit.PX,\n      };\n    }\n    else {\n      lineHeight = {\n        value: lineHeight * style.fontSize,\n        unit: unit.PX,\n      };\n    }\n  }\n  style.lineHeight = lineHeight;\n}\n\nfunction setFontStyle(style) {\n  let { fontStyle, fontWeight, fontSize, fontFamily } = style;\n  return `${fontStyle} ${fontWeight} ${fontSize}px/${fontSize}px ${fontFamily}`;\n}\n\nfunction getBaseLine(style) {\n  let normal = style.fontSize * font.arial.lhr;\n  return (style.lineHeight.value - normal) * 0.5 + style.fontSize * font.arial.blr;\n}\n\nexport default {\n  normalize,\n  setFontStyle,\n  getBaseLine,\n};\n","import css from '../style/css';\nimport mode from './mode';\n\nclass LineBox {\n  constructor(ctx, x, y, content, style) {\n    this.__ctx = ctx;\n    this.__x = x;\n    this.__y = y;\n    this.__content = content;\n    this.__style = style;\n  }\n\n  render() {\n    let { ctx, style, content, x, y } = this;\n    if(mode.isCanvas()) {\n      ctx.fillStyle = style.color;\n      ctx.fillText(content, x, y + css.getBaseLine(style));\n    }\n    else if(mode.isSvg()) {\n      mode.appendHtml(`<text x=\"${x}\" y=\"${y + css.getBaseLine(style)}\" fill=\"${style.color}\" font-size=\"${style.fontSize}px\">${content}</text>`);\n    }\n  }\n\n  __offsetX(diff) {\n    this.__x += diff;\n  }\n\n  __offsetY(diff) {\n    this.__y += diff;\n  }\n\n  get ctx() {\n    return this.__ctx;\n  }\n  get x() {\n    return this.__x;\n  }\n  get y() {\n    return this.__y;\n  }\n  get content() {\n    return this.__content;\n  }\n  get style() {\n    return this.__style;\n  }\n  get baseLine() {\n    return css.getBaseLine(this.style);\n  }\n}\n\nexport default LineBox;\n","import Node from './Node';\nimport LineBox from './LineBox';\nimport css from '../style/css';\nimport mode from './mode';\n\nconst CHAR_WIDTH_CACHE = {};\n\nclass Text extends Node {\n  constructor(content) {\n    super();\n    this.__content = content.toString();\n    this.__lineBoxes = [];\n    this.__charWidthList = [];\n    this.__charWidth = 0;\n    this.__textWidth = 0;\n  }\n\n  // 预先计算每个字的宽度\n  __measure() {\n    this.__charWidthList = [];\n    let { ctx, content, style, charWidthList } = this;\n    if(mode.isCanvas()) {\n      ctx.font = css.setFontStyle(style);\n    }\n    let cache = CHAR_WIDTH_CACHE[style.fontSize] = CHAR_WIDTH_CACHE[style.fontSize] || {};\n    let length = content.length;\n    let sum = 0;\n    for(let i = 0; i < length; i++) {\n      let char = content.charAt(i);\n      let mw;\n      if(cache.hasOwnProperty(char)) {\n        mw = cache[char];\n      }\n      else if(mode.isCanvas()) {\n        mw = ctx.measureText(char).width;\n      }\n      else if(mode.isSvg()) {\n        let dom = mode.measure;\n        dom.style.fontSize = style.fontSize + 'px';\n        dom.innerText = char;\n        let css = window.getComputedStyle(dom, null);\n        mw = parseFloat(css.width);\n      }\n      charWidthList.push(mw);\n      sum += mw;\n      this.__charWidth = Math.max(this.charWidth, mw);\n    }\n    this.__textWidth = sum;\n  }\n\n  __preLay(data, isVirtual) {\n    let { x, y, w, h } = data;\n    this.__x = x;\n    this.__y = y;\n    let maxX = x;\n    let { ctx, content, style, lineBoxes, charWidthList } = this;\n    // 顺序尝试分割字符串为lineBox，形成多行\n    let begin = 0;\n    let i = 0;\n    let count = 0;\n    let length = content.length;\n    while(i < length) {\n      count += charWidthList[i];\n      if (count === w) {\n        let lineBox = new LineBox(ctx, x, y, content.slice(begin, i + 1), style);\n        lineBoxes.push(lineBox);\n        maxX = Math.max(maxX, x + count);\n        y += this.style.lineHeight.value;\n        begin = i + 1;\n        i = begin + 1;\n        count = 0;\n      }\n      else if (count > w) {\n        // 宽度不足时无法跳出循环，至少也要塞个字符形成一行\n        if(i === begin) {\n          i = begin + 1;\n        }\n        let lineBox = new LineBox(ctx, x, y, content.slice(begin, i), style);\n        lineBoxes.push(lineBox);\n        maxX = Math.max(maxX, x + count - charWidthList[i]);\n        y += this.style.lineHeight.value;\n        begin = i;\n        i = i + 1;\n        count = 0;\n      }\n      else {\n        i++;\n      }\n    }\n    if(begin < length && begin < i) {\n      let lineBox = new LineBox(ctx, x, y, content.slice(begin, i), style);\n      lineBoxes.push(lineBox);\n      maxX = Math.max(maxX, x + count);\n      y += this.style.lineHeight.value;\n    }\n    this.__width = maxX - x;\n    this.__height = y - data.y;\n    if(isVirtual) {\n      this.__lineBoxes = [];\n    }\n  }\n\n  render() {\n    if(mode.isCanvas()) {\n      this.ctx.font = css.setFontStyle(this.style);\n    }\n    this.lineBoxes.forEach(item => {\n      item.render();\n    });\n  }\n\n  __tryLayInline(w) {\n    this.ctx.font = css.setFontStyle(this.style);\n    let tw = this.ctx.measureText(this.content).width;\n    return w - tw;\n  }\n\n  __offsetX(diff) {\n    super.__offsetX(diff);\n    this.lineBoxes.forEach(item => {\n      item.__offsetX(diff);\n    });\n  }\n\n  __offsetY(diff) {\n    super.__offsetY(diff);\n    this.lineBoxes.forEach(item => {\n      item.__offsetY(diff);\n    });\n  }\n\n  __calMaxAndMinWidth() {\n    let n = 0;\n    this.charWidthList.forEach(item => {\n      n = Math.max(n, item);\n    });\n    return { max: this.textWidth, min: n };\n  }\n\n  get content() {\n    return this.__content;\n  }\n  set content(v) {\n    this.__content = v;\n  }\n  get lineBoxes() {\n    return this.__lineBoxes;\n  }\n  get charWidthList() {\n    return this.__charWidthList;\n  }\n  get charWidth() {\n    return this.__charWidth;\n  }\n  get textWidth() {\n    return this.__textWidth;\n  }\n  get baseLine() {\n    let last = this.lineBoxes[this.lineBoxes.length - 1];\n    return last.y - this.y + last.baseLine;\n  }\n}\n\nexport default Text;\n","class LineGroup {\n  constructor(x, y) {\n    this.__list = [];\n    this.__x = x;\n    this.__y = y;\n    this.__height = 0;\n    this.__baseLine = 0;\n  }\n\n  add(item) {\n    this.list.push(item);\n  }\n\n  __calBaseLine() {\n    let baseLine = 0;\n    this.list.forEach(item => {\n      baseLine = Math.max(baseLine, item.baseLine);\n    });\n    return baseLine;\n  }\n\n  __calHeight() {\n    let height = 0;\n    this.list.forEach(item => {\n      height = Math.max(height, item.height);\n    });\n    return height;\n  }\n\n  verticalAlign() {\n    this.__height = this.__calHeight();\n    this.__baseLine = this.__calBaseLine();\n    // 仅当有2个和以上时才需要vertical对齐调整\n    if(this.list.length > 1) {\n      this.list.forEach(item => {\n        if(item.baseLine !== this.baseLine) {\n          item.__offsetY(this.baseLine - item.baseLine);\n        }\n      });\n    }\n  }\n\n  get list() {\n    return this.__list;\n  }\n  get x() {\n    return this.__x;\n  }\n  get y() {\n    return this.__y;\n  }\n  get height() {\n    return this.__height;\n  }\n  get baseLine() {\n    return this.__baseLine;\n  }\n  get size() {\n    return this.__list.length;\n  }\n}\n\nexport default LineGroup;\n","import Xom from '../node/Xom';\nimport css from '../style/css';\nimport unit from '../style/unit';\n\nconst TAG_NAME = {\n  '$line': true,\n  '$polygon': true,\n};\n\nclass Geom extends Xom {\n  constructor(tagName, props) {\n    super(tagName, props);\n  }\n\n  __initStyle() {\n    css.normalize(this.style);\n  }\n\n  __calAutoBasis(isDirectionRow, w, h) {\n    let b = 0;\n    let min = 0;\n    let max = 0;\n    let { style } = this;\n    // 计算需考虑style的属性\n    let {\n      width,\n      height,\n      borderTopWidth,\n      borderRightWidth,\n      borderBottomWidth,\n      borderLeftWidth,\n    } = style;\n    let main = isDirectionRow ? width : height;\n    if(main.unit !== unit.AUTO) {\n      b = max += main.value;\n    }\n    // border也得计算在内\n    if(isDirectionRow) {\n      let w = borderRightWidth.value + borderLeftWidth.value;\n      b += w;\n      max += w;\n      min += w;\n    }\n    else {\n      let h = borderTopWidth.value + borderBottomWidth.value;\n      b += h;\n      max += h;\n      min += h;\n    }\n    return { b, min, max };\n  }\n\n  __preLayBlock(data) {}\n\n  __preLayFlex(data) {}\n\n  __preLayInline(data) {\n    let { x, y, w, h } = data;\n    this.__x = x;\n    this.__y = y;\n    let { style } = this;\n    let {\n      width,\n      height,\n      borderTopWidth,\n      borderRightWidth,\n      borderBottomWidth,\n      borderLeftWidth,\n    } = style;\n    // 除了auto外都是固定高度\n    let fixedWidth;\n    let fixedHeight;\n    if(width && width.unit !== unit.AUTO) {\n      fixedWidth = true;\n      switch(width.unit) {\n        case unit.PX:\n          w = width.value;\n          break;\n      }\n    }\n    if(height && height.unit !== unit.AUTO) {\n      fixedHeight = true;\n      switch(height.unit) {\n        case unit.PX:\n          h = height.value;\n          break;\n      }\n    }\n    // border影响x和y\n    x += borderLeftWidth.value;\n    data.x = x;\n    y += borderTopWidth.value;\n    data.y = y;\n    w -= borderLeftWidth.value + borderRightWidth.value;\n    h -= borderTopWidth.value + borderBottomWidth.value;\n    // 元素的width不能超过父元素w\n    this.__width = fixedWidth ? w : x - data.x;\n    this.__height = fixedHeight ? h : y - data.y;\n  }\n\n  render() {\n    super.render();\n  }\n\n  get tagName() {\n    return this.__tagName;\n  }\n  get baseLine() {\n    return 0;\n  }\n\n  static isValid(s) {\n    return TAG_NAME.hasOwnProperty(s);\n  }\n}\n\nexport default Geom;\n","import Xom from './Xom';\nimport Text from './Text';\nimport LineGroup from './LineGroup';\nimport Geom from '../geom/Geom';\nimport util from '../util';\nimport css from '../style/css';\nimport unit from '../style/unit';\n\nconst TAG_NAME = {\n  'div': true,\n  'span': true,\n};\nconst INLINE = {\n  'span': true,\n};\n\nclass Dom extends Xom {\n  constructor(tagName, props, children) {\n    super(tagName, props);\n    this.__children = children;\n    this.__lineGroups = []; // 一行inline元素组成的LineGroup对象后的存放列表\n  }\n\n  /**\n   * 1. 封装string为Text节点\n   * 2. 打平children中的数组，变成一维\n   * 3. 合并相连的Text节点\n   * 4. 检测inline不能包含block\n   * 5. 设置parent和prev/next和ctx\n   */\n  __traverse(ctx) {\n    let list = [];\n    this.__traverseChildren(this.children, list, ctx);\n    for(let i = list.length - 1; i > 0; i--) {\n      let item = list[i];\n      if(item instanceof Text) {\n        let prev = list[i - 1];\n        if(prev instanceof Text) {\n          prev.content += item.content;\n          list.splice(i, 1);\n        }\n        else {\n          i--;\n        }\n      }\n    }\n    if(this.style.display === 'inline' && this.parent.style.display !== 'flex') {\n      for(let i = list.length - 1; i >= 0; i--) {\n        let item = list[i];\n        if(item instanceof Dom && item.style.display !== 'inline') {\n          throw new Error('inline can not contain block');\n        }\n      }\n    }\n    let prev = null;\n    list.forEach(item => {\n      item.__ctx = ctx;\n      if(prev) {\n        prev.__next = item;\n      }\n      item.__parent = this;\n      item.__prev = prev;\n    });\n    this.__children = list;\n  }\n\n  __traverseChildren(children, list, ctx) {\n    if(Array.isArray(children)) {\n      children.forEach(item => {\n        this.__traverseChildren(item, list, ctx);\n      });\n    }\n    else if(children instanceof Dom) {\n      list.push(children);\n      children.__traverse(ctx);\n    }\n    // 图形没有children\n    else if(children instanceof Geom) {\n      list.push(children);\n    }\n    // 排除掉空的文本\n    else if(!util.isNil(children)) {\n      list.push(new Text(children));\n    }\n  }\n\n  // 合并设置style，包括继承和默认值，修改一些自动值和固定值，测量所有文字的宽度\n  __initStyle() {\n    let style = this.__style;\n    // 仅支持flex/block/inline/none\n    if(!style.display || ['flex', 'block', 'inline', 'none'].indexOf(style.display) === -1) {\n      if(INLINE.hasOwnProperty(this.tagName)) {\n        style.display = 'inline';\n      }\n      else {\n        style.display = 'block';\n      }\n    }\n    // 继承父元素样式\n    let parent = this.parent;\n    if(parent) {\n      let parentStyle = parent.style;\n      ['fontSize', 'fontWeight', 'fontStyle', 'lineHeight', 'wordBreak', 'color', 'textAlign'].forEach(k => {\n        if(!style.hasOwnProperty(k) && parentStyle.hasOwnProperty(k)) {\n          style[k] = parentStyle[k];\n        }\n      });\n    }\n    // 标准化处理，默认值、简写属性\n    css.normalize(style);\n    this.children.forEach(item => {\n      if(item instanceof Dom || item instanceof Geom) {\n        item.__initStyle();\n      }\n      else {\n        item.__style = style;\n        // 文字首先测量所有字符宽度\n        item.__measure();\n      }\n    });\n  }\n\n  // 给定父宽度情况下，尝试行内放下后的剩余宽度，为负数即放不下\n  __tryLayInline(w) {\n    let { children } = this;\n    for(let i = 0; i < children.length; i++) {\n      // 当放不下时直接返回，无需继续多余的尝试计算\n      if(w < 0) {\n        return w;\n      }\n      let item = children[i];\n      if(item instanceof Dom || item instanceof Geom) {\n        w = item.__tryLayInline(w);\n      }\n      else {\n        w -= item.textWidth;\n      }\n    }\n    return w;\n  }\n\n  // 设置y偏移值，递归包括children，此举在flex行元素的child进行justify-content对齐用\n  __offsetX(diff) {\n    super.__offsetX(diff);\n    this.children.forEach(item => {\n      if(item) {\n        item.__offsetX(diff);\n      }\n    });\n  }\n\n  // 设置y偏移值，递归包括children，此举在初步确定inline布局后设置元素vertical-align用\n  __offsetY(diff) {\n    super.__offsetY(diff);\n    this.children.forEach(item => {\n      if(item) {\n        item.__offsetY(diff);\n      }\n    });\n  }\n\n  __calAutoBasis(isDirectionRow, w, h, isRecursion) {\n    let b = 0;\n    let min = 0;\n    let max = 0;\n    let { children, style } = this;\n    // 计算需考虑style的属性\n    let {\n      width,\n      height,\n      borderTopWidth,\n      borderRightWidth,\n      borderBottomWidth,\n      borderLeftWidth,\n    } = style;\n    let main = isDirectionRow ? width : height;\n    if(main.unit !== unit.AUTO) {\n      b = max += main.value;\n      // 递归时children的长度会影响flex元素的最小宽度\n      if(isRecursion) {\n        min = b;\n      }\n    }\n    // 递归children取最大值\n    children.forEach(item => {\n      if(item instanceof Dom || item instanceof Geom) {\n        let { b: b2, min: min2, max: max2 } = item.__calAutoBasis(isDirectionRow, w, h, true);\n        b = Math.max(b, b2);\n        min = Math.max(min, min2);\n        max = Math.max(max, max2);\n      }\n      else if(isDirectionRow) {\n        min = Math.max(item.charWidth, min);\n        max = Math.max(item.textWidth, max);\n      }\n      else {\n        item.__preLay({\n          x: 0,\n          y: 0,\n          w,\n          h,\n        }, true);\n        min = Math.max(min, item.height);\n        max = Math.max(max, item.height);\n      }\n    });\n    // border也得计算在内\n    if(isDirectionRow) {\n      let w = borderRightWidth.value + borderLeftWidth.value;\n      b += w;\n      max += w;\n      min += w;\n    }\n    else {\n      let h = borderTopWidth.value + borderBottomWidth.value;\n      b += h;\n      max += h;\n      min += h;\n    }\n    return { b, min, max };\n  }\n\n  // 本身block布局时计算好所有子元素的基本位置\n  __preLayBlock(data) {\n    let { x, y, w, h } = data;\n    this.__x = x;\n    this.__y = y;\n    this.__width = w;\n    let { children, style } = this;\n    let {\n      width,\n      height,\n      borderTopWidth,\n      borderRightWidth,\n      borderBottomWidth,\n      borderLeftWidth,\n    } = style;\n    // 除了auto外都是固定高度\n    let fixedHeight;\n    if(width && width.unit !== unit.AUTO) {\n      switch(width.unit) {\n        case unit.PX:\n          w = width.value;\n          break;\n      }\n    }\n    if(height && height.unit !== unit.AUTO) {\n      fixedHeight = true;\n      switch(height.unit) {\n        case unit.PX:\n          h = height.value;\n          break;\n        case unit.PERCENT:\n          h *= height.value * 0.01;\n          break;\n      }\n    }\n    // border影响x和y和尺寸\n    x += borderLeftWidth.value;\n    data.x = x;\n    y += borderTopWidth.value;\n    data.y = y;\n    w -= borderLeftWidth.value + borderRightWidth.value;\n    h -= borderTopWidth.value + borderBottomWidth.value;\n    // 递归布局，将inline的节点组成lineGroup一行\n    let lineGroup = new LineGroup(x, y);\n    children.forEach(item => {\n      if(item instanceof Dom) {\n        if(item.style.display === 'inline') {\n          // inline开头，不用考虑是否放得下直接放\n          if(x === data.x) {\n            lineGroup.add(item);\n            item.__preLayInline({\n              x,\n              y,\n              w,\n              h,\n            });\n            x += item.outerWidth;\n          }\n          else {\n            // 非开头先尝试是否放得下\n            let fw = item.__tryLayInline(w - x);\n            // 放得下继续\n            if(fw >= 0) {\n              item.__preLayInline({\n                x,\n                y,\n                w,\n              });\n            }\n            // 放不下处理之前的lineGroup，并重新开头\n            else {\n              this.lineGroups.push(lineGroup);\n              lineGroup.verticalAlign();\n              x = data.x;\n              y += lineGroup.height;\n              item.__preLayInline({\n                x: data.x,\n                y,\n                w,\n              });\n              lineGroup = new LineGroup(x, y);\n            }\n            x += item.outerWidth;\n            lineGroup.add(item);\n          }\n        }\n        else {\n          // block先处理之前可能的lineGroup\n          if(lineGroup.size) {\n            this.lineGroups.push(lineGroup);\n            lineGroup.verticalAlign();\n            y += lineGroup.height;\n            lineGroup = new LineGroup(data.x, y);\n          }\n          item.__preLay({\n            x: data.x,\n            y,\n            w,\n            h,\n          });\n          x = data.x;\n          y += item.outerHeight;\n        }\n      }\n      else if(item instanceof Geom) {\n        // 图形也是block先处理之前可能的行\n        if(lineGroup.size) {\n          this.lineGroups.push(lineGroup);\n          lineGroup.verticalAlign();\n          y += lineGroup.height;\n          lineGroup = new LineGroup(data.x, y);\n        }\n        item.__preLay({\n          x: data.x,\n          y,\n          w,\n        });\n        x = data.x;\n        y += item.outerHeight;\n      }\n      // 文字和inline类似\n      else {\n        // x开头，不用考虑是否放得下直接放\n        if(x === data.x) {\n          lineGroup.add(item);\n          item.__preLay({\n            x,\n            y,\n            w,\n            h,\n          });\n          x += item.width;\n        }\n        else {\n          // 非开头先尝试是否放得下\n          let fw = item.__tryLayInline(w - x);\n          // 放得下继续\n          if(fw >= 0) {\n            item.__preLay({\n              x,\n              y,\n              w,\n              h,\n            });\n          }\n          // 放不下处理之前的lineGroup，并重新开头\n          else {\n            this.lineGroups.push(lineGroup);\n            lineGroup.verticalAlign();\n            x = data.x;\n            y += lineGroup.height;\n            item.__preLay({\n              x: data.x,\n              y,\n              w,\n              h,\n            });\n            lineGroup = new LineGroup(x, y);\n          }\n          x += item.width;\n          lineGroup.add(item);\n        }\n      }\n    });\n    // 结束后处理可能遗留的最后的lineGroup\n    if(lineGroup.size) {\n      this.lineGroups.push(lineGroup);\n      lineGroup.verticalAlign();\n      y += lineGroup.height;\n    }\n    this.__width = w;\n    this.__height = fixedHeight ? h : y - data.y;\n  }\n\n  // 弹性布局时的计算位置\n  __preLayFlex(data) {\n    let { x, y, w, h } = data;\n    this.__x = x;\n    this.__y = y;\n    this.__width = w;\n    let { children, style } = this;\n    let {\n      width,\n      height,\n      flexDirection,\n      borderTopWidth,\n      borderRightWidth,\n      borderBottomWidth,\n      borderLeftWidth,\n      justifyContent,\n    } = style;\n    // 除了auto外都是固定高度\n    let fixedHeight;\n    if(width && width.unit !== unit.AUTO) {\n      switch(width.unit) {\n        case unit.PX:\n          w = width.value;\n          break;\n      }\n    }\n    if(height && height.unit !== unit.AUTO) {\n      fixedHeight = true;\n      switch(height.unit) {\n        case unit.PX:\n          h = height.value;\n          break;\n        case unit.PERCENT:\n          h *= height.value * 0.01;\n          break;\n      }\n    }\n    // border影响x和y和尺寸\n    x += borderLeftWidth.value;\n    data.x = x;\n    y += borderTopWidth.value;\n    data.y = y;\n    w -= borderLeftWidth.value + borderRightWidth.value;\n    h -= borderTopWidth.value + borderBottomWidth.value;\n    let isDirectionRow = flexDirection === 'row';\n    // column时height可能为auto，此时取消伸展，退化为类似block布局，但所有子元素强制block\n    if(!isDirectionRow && !fixedHeight) {\n      children.forEach(item => {\n        if(item instanceof Dom || item instanceof Geom) {\n          const { style, style: { display, flexDirection, width, height }} = item;\n          // column的flex的child如果是inline，变为block\n          if(display === 'inline') {\n            style.display = 'block';\n          }\n          // 竖向flex的child如果是横向flex，宽度自动的话要等同于父flex的宽度\n          else if(display === 'flex' && flexDirection === 'row' && width.unit === unit.AUTO) {\n            width.value = w;\n            width.unit = unit.PX;\n          }\n          item.__preLay({\n            x,\n            y,\n            w,\n            h,\n          });\n          y += item.outerHeight;\n        }\n        else {\n          item.__preLay({\n            x,\n            y,\n            w,\n            h,\n          });\n          y += item.outerHeight;\n        }\n      });\n      this.__width = w;\n      this.__height = y - data.y;\n      return;\n    }\n    // 计算伸缩基数\n    let growList = [];\n    let shrinkList = [];\n    let basisList = [];\n    let minList = [];\n    let growSum = 0;\n    let shrinkSum = 0;\n    let basisSum = 0;\n    let maxSum = 0;\n    children.forEach(item => {\n      if(item instanceof Dom || item instanceof Geom) {\n        let { flexGrow, flexShrink, flexBasis } = item.style;\n        growList.push(flexGrow);\n        shrinkList.push(flexShrink);\n        growSum += flexGrow;\n        shrinkSum += flexShrink;\n        let { b, min, max } = item.__calAutoBasis(isDirectionRow, w, h);\n        // 根据basis不同，计算方式不同\n        if(flexBasis.unit === unit.AUTO) {\n          basisList.push(max);\n          basisSum += max;\n        }\n        else if(flexBasis.unit === unit.PX) {\n          b = flexBasis.value;\n          basisList.push(b);\n          basisSum += b;\n        }\n        else if(flexBasis.unit === unit.PERCENT) {\n          b = (isDirectionRow ? w : h) * flexBasis.value;\n          basisList.push(b);\n          basisSum += b;\n        }\n        maxSum += max;\n        minList.push(min);\n      }\n      else {\n        growList.push(0);\n        shrinkList.push(1);\n        shrinkSum += 1;\n        if(isDirectionRow) {\n          basisList.push(item.textWidth);\n          basisSum += item.textWidth;\n          maxSum += item.textWidth;\n          minList.push(item.charWidth);\n        }\n        else {\n          item.__preLay({\n            x: 0,\n            y: 0,\n            w,\n            h,\n          }, true);\n          basisList.push(item.height);\n          basisSum += item.height;\n          maxSum += item.height;\n          minList.push(item.height);\n        }\n      }\n    });\n    let maxCross = 0;\n    let free = 0;\n    // 判断是否超出，决定使用grow还是shrink\n    let isOverflow = maxSum > (isDirectionRow ? w : h);\n    children.forEach((item, i) => {\n      let main;\n      let shrink = shrinkList[i];\n      let grow = growList[i];\n      // 计算主轴长度\n      if(isOverflow) {\n        let overflow = basisSum - (isDirectionRow ? w : h);\n        main = shrink ? (basisList[i] - overflow * shrink / shrinkSum) : basisList[i];\n      }\n      else {\n        free = (isDirectionRow ? w : h) - basisSum;\n        main = grow ? (basisList[i] + free * grow / growSum) : basisList[i];\n      }\n      // 主轴长度的最小值不能小于元素的最小长度，比如横向时的字符宽度\n      main = Math.max(main, minList[i]);\n      if(item instanceof Dom || item instanceof Geom) {\n        const { style, style: { display, flexDirection, width, height }} = item;\n        if(isDirectionRow) {\n          // row的flex的child如果是block，则等同于inline-block布局\n          if(display === 'block') {\n            style.display = 'inline';\n          }\n          // 横向flex的child如果是竖向flex，高度自动的话要等同于父flex的高度\n          else if(display === 'flex' && flexDirection === 'column' && fixedHeight && height.unit === unit.AUTO) {\n            height.value = h;\n            height.unit = unit.PX;\n          }\n          item.__preLay({\n            x,\n            y,\n            w: main,\n            h,\n          })\n        }\n        else {\n          // column的flex的child如果是inline，变为block\n          if(display === 'inline') {\n            style.display = 'block';\n          }\n          // 竖向flex的child如果是横向flex，宽度自动的话要等同于父flex的宽度\n          else if(display === 'flex' && flexDirection === 'row' && width.unit === unit.AUTO) {\n            width.value = w;\n            width.unit = unit.PX;\n          }\n          item.__preLay({\n            x,\n            y,\n            w,\n            h: main,\n          });\n        }\n        // 重设因伸缩而导致的主轴长度\n        if(isOverflow && shrink) {\n          if(isDirectionRow) {\n            item.__width = main;\n          }\n          else {\n            item.__height = main;\n          }\n        }\n        else if(!isOverflow && grow) {\n          if(isDirectionRow) {\n            item.__width = main;\n          }\n          else {\n            item.__height = main;\n          }\n        }\n      }\n      else {\n        item.__preLay({\n          x,\n          y,\n          w: isDirectionRow ? main : w,\n          h: isDirectionRow ? h : main,\n        });\n      }\n      if(isDirectionRow) {\n        x += item.outerWidth;\n        maxCross = Math.max(maxCross, item.outerHeight);\n      }\n      else {\n        y += item.outerHeight;\n        x = data.x;\n        maxCross = Math.max(maxCross, item.outerWidth);\n      }\n    });\n    // 主轴侧轴对齐方式\n    if(!isOverflow && growSum === 0 && free > 0) {\n      let len = children.length;\n      if(justifyContent === 'flex-end') {\n        for(let i = 0; i < len; i++) {\n          let child = children[i];\n          isDirectionRow ? child.__offsetX(free) : child.__offsetY(free);\n        }\n      }\n      else if(justifyContent === 'center') {\n        let center = free * 0.5;\n        for(let i = 0; i < len; i++) {\n          let child = children[i];\n          isDirectionRow ? child.__offsetX(center) : child.__offsetY(center);\n        }\n      }\n      else if(justifyContent === 'space-between') {\n        let between = free / (len - 1);\n        for(let i = 1; i < len; i++) {\n          let child = children[i];\n          isDirectionRow ? child.__offsetX(between * i) : child.__offsetY(between * i);\n        }\n      }\n      else if(justifyContent === 'space-around') {\n        let around = free / (len + 1);\n        for(let i = 0; i < len; i++) {\n          let child = children[i];\n          isDirectionRow ? child.__offsetX(around * (i + 1)) : child.__offsetY(around * (i + 1));\n        }\n      }\n    }\n    // 子元素侧轴伸展\n    if(isDirectionRow) {\n      // 父元素固定高度，子元素可能超过，侧轴最大长度取固定高度\n      if(fixedHeight) {\n        maxCross = h;\n      }\n      y += maxCross;\n    }\n    // 所有短侧轴的children伸张侧轴长度至相同，超过的不动，固定宽高的也不动\n    children.forEach(item => {\n      let { style } = item;\n      if(isDirectionRow) {\n        if(item.style.height.unit === unit.AUTO) {\n          item.__height = maxCross - style.borderTopWidth.value - style.borderBottomWidth.value;\n        }\n      }\n      else {\n        if(item.style.width.unit === unit.AUTO) {\n          item.__width = maxCross - style.borderRightWidth.value - style.borderLeftWidth.value;\n        }\n      }\n    });\n    this.__width = w;\n    this.__height = fixedHeight ? h : y - data.y;\n  }\n\n  // inline比较特殊，先简单顶部对其，后续还需根据vertical和lineHeight计算y偏移\n  __preLayInline(data) {\n    let { x, y, w, h } = data;\n    this.__x = x;\n    this.__y = y;\n    let maxX = x;\n    let { children, style } = this;\n    let {\n      width,\n      height,\n      borderTopWidth,\n      borderRightWidth,\n      borderBottomWidth,\n      borderLeftWidth,\n    } = style;\n    // 除了auto外都是固定高度\n    let fixedWidth;\n    let fixedHeight;\n    if(width && width.unit !== unit.AUTO) {\n      fixedWidth = true;\n      switch(width.unit) {\n        case unit.PX:\n          w = width.value;\n          break;\n      }\n    }\n    if(height && height.unit !== unit.AUTO) {\n      fixedHeight = true;\n      switch(height.unit) {\n        case unit.PX:\n          h = height.value;\n          break;\n      }\n    }\n    // border影响x和y\n    x += borderLeftWidth.value;\n    data.x = x;\n    y += borderTopWidth.value;\n    data.y = y;\n    w -= borderLeftWidth.value + borderRightWidth.value;\n    h -= borderTopWidth.value + borderBottomWidth.value;\n    // 递归布局，将inline的节点组成lineGroup一行\n    let lineGroup = new LineGroup(x, y);\n    children.forEach(item => {\n      if(item instanceof Dom) {\n        // inline开头，不用考虑是否放得下直接放\n        if(x === data.x) {\n          lineGroup.add(item);\n          item.__preLayInline({\n            x,\n            y,\n            w,\n          });\n          x += item.outerWidth;\n          maxX = Math.max(maxX, x);\n        }\n        else {\n          // 非开头先尝试是否放得下\n          let fw = item.__tryLayInline(w - x);\n          // 放得下继续\n          if(fw >= 0) {\n            item.__preLayInline({\n              x,\n              y,\n              w,\n            });\n          }\n          // 放不下处理之前的lineGroup，并重新开头\n          else {\n            this.lineGroups.push(lineGroup);\n            lineGroup.verticalAlign();\n            x = data.x;\n            y += lineGroup.height;\n            item.__preLayInline({\n              x: data.x,\n              y,\n              w,\n            });\n            lineGroup = new LineGroup(x, y);\n          }\n          x += item.outerWidth;\n          maxX = Math.max(maxX, x);\n          lineGroup.add(item);\n        }\n      }\n      // inline里的其它只有文本\n      else {\n        if(x === data.x) {\n          lineGroup.add(item);\n          item.__preLay({\n            x,\n            y,\n            w,\n            h,\n          });\n          x += item.width;\n          maxX = Math.max(maxX, x);\n        }\n        else {\n          // 非开头先尝试是否放得下\n          let fw = item.__tryLayInline(w - x);\n          // 放得下继续\n          if(fw >= 0) {\n            item.__preLay({\n              x,\n              y,\n              w,\n              h,\n            });\n          }\n          // 放不下处理之前的lineGroup，并重新开头\n          else {\n            this.lineGroups.push(lineGroup);\n            lineGroup.verticalAlign();\n            x = data.x;\n            y += lineGroup.height;\n            item.__preLay({\n              x: data.x,\n              y,\n              w,\n              h,\n            });\n            lineGroup = new LineGroup(x, y);\n          }\n          x += item.width;\n          maxX = Math.max(maxX, x);\n          lineGroup.add(item);\n        }\n      }\n    });\n    // 结束后处理可能遗留的最后的lineGroup，children为空时可能size为空\n    if(lineGroup.size) {\n      this.lineGroups.push(lineGroup);\n      lineGroup.verticalAlign();\n      y += lineGroup.height;\n    }\n    // 元素的width不能超过父元素w\n    this.__width = fixedWidth ? w : maxX - data.x;\n    this.__height = fixedHeight ? h : y - data.y;\n  }\n\n  render() {\n    super.render();\n    this.children.forEach(item => {\n      if(item) {\n        item.render();\n      }\n    });\n  }\n\n  get tagName() {\n    return this.__tagName;\n  }\n  get children() {\n    return this.__children;\n  }\n  get lineGroups() {\n    return this.__lineGroups;\n  }\n  get baseLine() {\n    let len = this.lineGroups.length;\n    if(len) {\n      let last = this.lineGroups[len - 1];\n      return last.y - this.y + last.baseLine;\n    }\n    return this.y;\n  }\n\n  static isValid(s) {\n    return TAG_NAME.hasOwnProperty(s);\n  }\n}\n\nexport default Dom;\n","import Dom from '../node/Dom';\nimport util from '../util';\nimport mode from './mode';\n\nfunction getDom(dom) {\n  if(util.isString(dom)) {\n    let o = document.querySelector(dom);\n    if(!o) {\n      throw new Error('can not find dom of selector: ' + dom);\n    }\n    return o;\n  }\n  if(!dom) {\n    throw new Error('can not find dom: ' + dom);\n  }\n  return dom;\n}\n\nfunction renderProp(k, v) {\n  let s = Array.isArray(v) ? util.joinSourceArray(v) : util.stringify(v);\n  if(k === 'className') {\n    k = 'class';\n  }\n  return ' ' + k + '=\"' + util.encodeHtml(s, true) + '\"';\n}\n\nclass CS extends Dom {\n  constructor(tagName, props, children) {\n    super(tagName, props, children);\n    this.__node = null; // 真实DOM引用\n  }\n\n  __initProps() {\n    if(this.props.width !== undefined) {\n      let value = parseInt(this.props.width);\n      if(!isNaN(value) && value > 0) {\n        this.__width = value;\n      }\n    }\n    if(this.props.height !== undefined) {\n      let value = parseInt(this.props.height);\n      if(!isNaN(value) && value > 0) {\n        this.__height = value;\n      }\n    }\n  }\n\n  __genHtml() {\n    let res = `<${this.tagName}`;\n    // 拼接处理属性\n    for(let i = 0, len = this.__props.length; i < len; i++) {\n      let item = this.__props[i];\n      res += renderProp(item[0], item[1]);\n    }\n    res += `></${this.tagName}>`;\n    return res;\n  }\n\n  appendTo(dom) {\n    dom = getDom(dom);\n    this.__initProps();\n    // 已有canvas节点\n    if(dom.nodeName.toUpperCase() === this.tagName.toUpperCase()) {\n      this.__node = dom;\n      if(this.width) {\n        dom.setAttribute('width', this.width);\n      }\n      if(this.height) {\n        dom.setAttribute('height', this.height);\n      }\n    }\n    // 没有canvas节点则生成一个新的\n    else {\n      let s = this.__genHtml();\n      dom.insertAdjacentHTML('beforeend', s);\n      let canvas = dom.querySelectorAll(this.tagName);\n      this.__node = canvas[canvas.length - 1];\n    }\n    // 没有设置width/height则采用css计算形式\n    if(!this.width || !this.height) {\n      let css = window.getComputedStyle(dom, null);\n      if(!this.width) {\n        this.__width = parseInt(css.getPropertyValue('width'));\n        dom.setAttribute('width', this.width);\n      }\n      if(!this.height) {\n        this.__height = parseInt(css.getPropertyValue('height'));\n        dom.setAttribute('height', this.height);\n      }\n    }\n    // canvas作为根节点一定是block或flex，不会是inline\n    let { style } = this;\n    if(['flex', 'block'].indexOf(style.display) === -1) {\n      style.display = 'block';\n    }\n    // 只有canvas有ctx，svg用真实dom\n    if(this.tagName === 'canvas') {\n      this.__ctx = this.__node.getContext('2d');\n      mode.setCanvas();\n    }\n    else if(this.tagName === 'svg') {\n      mode.setSvg();\n    }\n    this.__traverse(this.__ctx);\n    // canvas的宽高固定初始化\n    style.width = this.width;\n    style.height = this.height;\n    this.__initStyle();\n    this.__preLay({\n      x: 0,\n      y: 0,\n      w: this.width,\n      h: this.height,\n    });\n    this.render();\n    if(mode.isSvg()) {\n      this.__node.innerHTML = mode.html;\n    }\n  }\n\n  get node() {\n    return this.__node;\n  }\n}\n\nexport default CS;\n","import Geom from './Geom';\nimport mode from '../node/mode';\n\nclass Line extends Geom {\n  constructor(props) {\n    super('$line', props);\n    this.__start = [0, 0];\n    this.__end = [1, 1];\n    if(Array.isArray(this.props.start)) {\n      this.__start = this.props.start;\n    }\n    if(Array.isArray(this.props.end)) {\n      this.__end = this.props.end;\n    }\n  }\n\n  render() {\n    super.render();\n    let { x, y, width, height, style, ctx, start, end } = this;\n    let {\n      borderTopWidth,\n      borderLeftWidth,\n      stroke,\n      strokeWidth,\n    } = style;\n    let originX = x + borderLeftWidth.value;\n    let originY = y + borderTopWidth.value;\n    let x1 = originX + start[0] * width;\n    let y1 = originY + start[1] * height;\n    let x2 = originX + end[0] * width;\n    let y2 = originY + end[1] * height;\n    if(mode.isCanvas()) {\n      ctx.strokeStyle = stroke;\n      ctx.lineWidth = strokeWidth;\n      ctx.beginPath();\n      ctx.moveTo(x1, y1);\n      ctx.lineTo(x2, y2);\n      ctx.stroke();\n      ctx.closePath();\n    }\n    else if(mode.isSvg()) {\n      mode.appendHtml(`<line x1=\"${x1}\" y1=\"${y1}\" x2=\"${x2}\" y2=\"${y2}\" stroke-width=\"${strokeWidth}\" stroke=\"${stroke}\"/>`);\n    }\n  }\n\n  get start() {\n    return this.__start;\n  }\n  get end() {\n    return this.__end;\n  }\n}\n\nexport default Line;\n","import Geom from './Geom';\nimport mode from '../node/mode';\n\nclass Polygon extends Geom {\n  constructor(props) {\n    super('$polygon', props);\n    this.__pointList = [];\n    if(Array.isArray(this.props.pointList)) {\n      this.__pointList = this.props.pointList;\n    }\n  }\n\n  render() {\n    super.render();\n    let { x, y, width, height, style, ctx, pointList } = this;\n    let {\n      borderTopWidth,\n      borderLeftWidth,\n      stroke,\n      strokeWidth,\n    } = style;\n    let originX = x + borderLeftWidth.value;\n    let originY = y + borderTopWidth.value;\n    if(mode.isCanvas()) {\n      ctx.strokeStyle = stroke;\n      ctx.lineWidth = strokeWidth;\n      ctx.beginPath();\n      ctx.moveTo(originX + pointList[0][0] * width, originY + pointList[0][1] * height);\n      for(let i = 1, len = pointList.length; i < len; i++) {\n        let point = pointList[i];\n        ctx.lineTo(originX + point[0] * width, originY + point[1] * height);\n      }\n      ctx.stroke();\n      ctx.closePath();\n    }\n    else if(mode.isSvg()) {\n      let points = '';\n      for(let i = 0, len = pointList.length; i < len; i++) {\n        let point = pointList[i];\n        points += `${originX + point[0] * width},${originY + point[1] * height} `;\n      }\n      mode.appendHtml(`<polyline fill=\"none\" points=\"${points}\" stroke-width=\"${strokeWidth}\" stroke=\"${stroke}\"/>`);\n    }\n  }\n\n  get pointList() {\n    return this.__pointList;\n  }\n}\n\nexport default Polygon;\n","import Dom from './node/Dom';\nimport CS from './node/CS';\nimport Geom from './geom/Geom';\nimport Line from './geom/Line';\nimport Polygon from './geom/Polygon';\n\nlet karas = {\n  render(cs, dom) {\n    if(!(cs instanceof CS)) {\n      throw new Error('render root muse be canvas or svg');\n    }\n    if(dom) {\n      cs.appendTo(dom);\n    }\n    return cs;\n  },\n  createVd(tagName, props, children) {\n    if(['canvas', 'svg'].indexOf(tagName) > -1) {\n      return new CS(tagName, props, children);\n    }\n    if(Dom.isValid(tagName)) {\n      return new Dom(tagName, props, children);\n    }\n    throw new Error('can not use marker: ' + tagName);\n  },\n  createGm(tagName, props) {\n    if(Geom.isValid(tagName)) {\n      switch(tagName) {\n        case '$line':\n          return new Line(props);\n        case '$polygon':\n          return new Polygon(props);\n      }\n    }\n    throw new Error('can not use geom marker: ' + tagName);\n  },\n  createCp(tagName, props, children) {},\n};\n\nif(typeof window != 'undefined') {\n  window.karas = karas;\n}\n\nexport default karas;\n"],"names":["measureDom","svgHtml","Node","__x","__y","__width","__height","__prev","__next","__ctx","__parent","__style","__baseLine","diff","this","mode","setCanvas","setSvg","isCanvas","isSvg","appendHtml","s","document","createElement","style","position","left","top","visibility","body","appendChild","Xom","tagName","props","Array","isArray","arr","hash","i","len","length","item","list","Object","keys","j","k","arr2hash","__props","temp","push","splice","spread","hash2arr","__tagName","_this","data","display","__preLayBlock","__preLayFlex","__preLayInline","ctx","x","y","width","height","outerWidth","outerHeight","backgroundColor","borderTopWidth","borderTopColor","borderRightWidth","borderRightColor","borderBottomWidth","borderBottomColor","borderLeftWidth","borderLeftColor","x1","value","y1","beginPath","fillStyle","rect","fill","closePath","lineWidth","strokeStyle","moveTo","lineTo","stroke","y2","lhr","car","blr","mdr","lgr","RESET","borderSizing","marginTop","marginRight","marginBottom","marginLeft","paddingTop","paddingRight","paddingBottom","paddingLeft","fontSize","fontFamily","color","fontStyle","fontWeight","lineHeight","borderTopStyle","borderRightStyle","borderBottomStyle","borderLeftStyle","verticalAlign","flexGrow","flexShrink","flexBasis","flexDirection","justifyContent","alignItem","textAlign","strokeWidth","reset","forEach","v","toString","isType","type","obj","call","isNumber","stringify","isNil","util","isObject","isString","isFunction","isBoolean","isDate","joinSourceArray","res","encodeHtml","prop","replace","parserOneBorder","direction","key","w","exec","c","indexOf","normalize","hasOwnProperty","background","bgc","flex","test","parseFloat","border","borderTop","borderRight","borderBottom","borderLeft","unit","Math","max","font","setFontStyle","getBaseLine","normal","LineBox","content","__content","fillText","css","CHAR_WIDTH_CACHE","Text","__lineBoxes","__charWidthList","__charWidth","__textWidth","charWidthList","cache","sum","char","charAt","mw","measureText","dom","measure","innerText","window","getComputedStyle","charWidth","isVirtual","h","maxX","lineBoxes","begin","count","lineBox","slice","render","__offsetX","__offsetY","n","textWidth","min","last","baseLine","LineGroup","__list","__calHeight","__calBaseLine","TAG_NAME","Geom","isDirectionRow","b","main","fixedWidth","fixedHeight","INLINE","Dom","children","__children","__lineGroups","__traverseChildren","prev","parent","Error","_this2","_this3","__traverse","parentStyle","__initStyle","__measure","__tryLayInline","isRecursion","__calAutoBasis","b2","min2","max2","__preLay","lineGroup","add","_this4","lineGroups","size","growList","shrinkList","basisList","minList","growSum","shrinkSum","basisSum","maxSum","maxCross","free","isOverflow","shrink","grow","overflow","child","center","between","around","_this5","CS","__node","undefined","parseInt","isNaN","o","querySelector","getDom","__initProps","nodeName","toUpperCase","setAttribute","__genHtml","insertAdjacentHTML","canvas","querySelectorAll","getPropertyValue","getContext","innerHTML","html","Line","__start","__end","start","end","originX","originY","x2","Polygon","__pointList","pointList","point","points","karas","cs","appendTo","createVd","isValid","createGm","createCp"],"mappings":"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"}