{"version":3,"file":"index.min.js","sources":["src/mode.js","src/node/Node.js","src/style/unit.js","src/node/Xom.js","src/style/font.js","src/style/reset.js","src/util.js","src/style/css.js","src/node/LineBox.js","src/node/Text.js","src/node/LineGroup.js","src/geom/Geom.js","src/node/Dom.js","src/domDiff.js","src/node/Root.js","src/geom/Line.js","src/geom/Polyline.js","src/geom/Polygon.js","src/geom/Sector.js","src/geom/Rect.js","src/geom/Circle.js","src/geom/Ellipse.js","src/geom/Grid.js","src/index.js"],"sourcesContent":["const CANVAS = 0;\nconst SVG = 1;\n\nlet div;\n\nexport default {\n  CANVAS,\n  SVG,\n  measure(s, style) {\n    if(!div) {\n      div = document.createElement('div');\n      div.style.position = 'absolute';\n      div.style.left = '99999px';\n      div.style.top = '-99999px';\n      div.style.visibility = 'hidden';\n      document.body.appendChild(div);\n    }\n    div.style.fontSize = style.fontSize + 'px';\n    div.innerText = s;\n    let css = window.getComputedStyle(div, null);\n    return parseFloat(css.width);\n  }\n};\n","class Node {\n  constructor() {\n    this.__x = 0;\n    this.__y = 0;\n    this.__ox = 0; // relative/transform2d/margin:auto/text-align等造成的偏移量\n    this.__oy = 0;\n    this.__width = 0;\n    this.__height = 0;\n    this.__prev = null;\n    this.__next = null;\n    this.__ctx = null; // canvas的context\n    this.__parent = null;\n    this.__style = {}; // style被解析后的k-v形式\n    this.__baseLine = 0;\n    this.__virtualDom = {};\n  }\n\n  __offsetX(diff) {\n    this.__ox += diff;\n  }\n\n  __offsetY(diff) {\n    this.__oy += diff;\n  }\n\n  get x() {\n    return this.__x;\n  }\n  get y() {\n    return this.__y;\n  }\n  get ox() {\n    return this.__ox;\n  }\n  get oy() {\n    return this.__oy;\n  }\n  get rx() {\n    return this.x + this.ox;\n  }\n  get ry() {\n    return this.y + this.oy;\n  }\n  get width() {\n    return this.__width;\n  }\n  get height() {\n    return this.__height;\n  }\n  get outerWidth() {\n    return this.__width;\n  }\n  get outerHeight() {\n    return this.__height;\n  }\n  get prev() {\n    return this.__prev;\n  }\n  get next() {\n    return this.__next;\n  }\n  get parent() {\n    return this.__parent;\n  }\n  get style() {\n    return this.__style;\n  }\n  get ctx() {\n    return this.__ctx;\n  }\n  get baseLine() {\n    return this.__baseLine;\n  }\n  get virtualDom() {\n    return this.__virtualDom;\n  }\n}\n\nexport default Node;\n","export default {\n  AUTO: 0,\n  PX: 1,\n  PERCENT: 2,\n};\n","import Node from './Node';\nimport mode from '../mode';\nimport unit from '../style/unit';\n\nfunction arr2hash(arr) {\n  let hash = {};\n  for(let i = 0, len = arr.length; i < len; i++) {\n    let item = arr[i];\n    if(Array.isArray(item)) {\n      hash[item[0]] = item[1];\n    }\n    else {\n      for(let list = Object.keys(item), j = list.length - 1; j >= 0; j--) {\n        let k = list[j];\n        hash[k] = item[k];\n      }\n    }\n  }\n  return hash;\n}\n\nfunction hash2arr(hash) {\n  let arr = [];\n  for(let list = Object.keys(hash), i = 0, len = list.length; i < len; i++) {\n    let k = list[i];\n    arr.push([k, hash[k]]);\n  }\n  return arr;\n}\n\nfunction spread(arr) {\n  for(let i = 0, len = arr.length; i < len; i++) {\n    let item = arr[i];\n    if(!Array.isArray(item)) {\n      let temp = [];\n      for(let list = Object.keys(item), j = 0, len = list.length; j < len; j++) {\n        let k = list[j];\n        temp.push([k, item[k]]);\n      }\n      arr.splice(i, 1, ...temp);\n    }\n  }\n  return arr;\n}\n\n/* 获取合适的虚线实体空白宽度ps/pd和数量n\n * 总长total，start边长bs，end边长be，内容长w，\n * 实体长范围[smin,smax]，空白长范围[dmin,dmax]\n */\nfunction getFitDashed(total, bs, be, w, smin, smax, dmin, dmax) {\n  let n = 1;\n  let ps = 1;\n  let pd = 1;\n  // 从最大实体空白长开始尝试\n  outer:\n  for(let i = smax; i >= smin; i--) {\n    for(let j = dmax; j >= dmin; j--) {\n      // 已知实体空白长度，n实体和n-1空白组成total，计算获取n数量\n      let per = i + j;\n      let num = Math.floor((total + j) / per);\n      let k = j;\n      // 可能除不尽，此时扩展空白长\n      if(num * per < j + total) {\n        let free = total - num * i;\n        k = free / (num - 1);\n        if(k > dmax) {\n          continue;\n        }\n      }\n      per = i + k;\n      // bs比实体大才有效，因为小的话必定和第一个实体完整相连\n      if(bs > 1 && bs > i) {\n        let mo = bs % per;\n        if(mo > i) {\n          continue;\n        }\n        if(be > 1) {\n          let mo = (bs + w) % per;\n          if(mo > i) {\n            continue;\n          }\n        }\n      }\n      if(be > 1) {\n        let mo = (bs + w) % per;\n        if(mo > i) {\n          continue;\n        }\n      }\n      if(num > 0) {\n        n = num;\n        ps = i;\n        pd = k;\n      }\n      break outer;\n    }\n  }\n  return {\n    n,\n    ps,\n    pd,\n  };\n}\n\n// dashed时n个实线和n-1虚线默认以3:1宽度组成，dotted则是n和n以1:1组成\nfunction getDashed(style, m1, m2, m3, m4, bw) {\n  let total = m4 - m1;\n  let w = m3 - m2;\n  let bs = m2 - m1;\n  let be = m4 - m3;\n  if(style === 'dotted') {\n    return getFitDashed(total, bs, be, w, bw, bw, Math.max(1, bw * 0.25), bw * 2);\n  }\n  else {\n    let { n, ps, pd } = getFitDashed(total, bs, be, w, bw, bw * 3, Math.max(1, bw * 0.25), bw * 2);\n    if(n === 1) {\n      return getFitDashed(total, bs, be, w, bw, bw, Math.max(1, bw * 0.25), bw * 2);\n    }\n    // 降级为dotted\n    return { n, ps, pd };\n  }\n}\n\nfunction renderBorder(renderMode, points, color, ctx, virtualDom) {\n  if(renderMode === mode.CANVAS) {\n    points.forEach(point => {\n      ctx.beginPath();\n      ctx.fillStyle = color;\n      ctx.moveTo(point[0], point[1]);\n      for(let i = 2, len = point.length; i < len; i += 2) {\n        ctx.lineTo(point[i], point[i + 1]);\n      }\n      ctx.fill();\n      ctx.closePath();\n    });\n  }\n  else if(renderMode === mode.SVG) {\n    let s = '';\n    points.forEach(point => {\n      s += `M ${point[0]} ${point[1]}`;\n      for(let i = 2, len = point.length; i < len; i += 2) {\n        s += `L ${point[i]} ${point[i + 1]} `;\n      }\n    });\n    let item = {\n      type: 'item',\n      tagName: 'path',\n      props: [\n        ['d', s],\n        ['fill', color],\n      ],\n    };\n    virtualDom.bb.push(item);\n  }\n}\n\nclass Xom extends Node {\n  constructor(tagName, props) {\n    super();\n    props = props || [];\n    // 构建工具中都是arr，手写可能出现hash情况\n    if(Array.isArray(props)) {\n      this.props = arr2hash(props);\n      this.__props = spread(props);\n    }\n    else {\n      this.props = props;\n      this.__props = hash2arr(props);\n    }\n    this.__tagName = tagName;\n    this.__style = this.props.style || {}; // style被解析后的k-v形式\n    this.__listener = {};\n    this.__props.forEach(item => {\n      let k = item[0];\n      if(/^on[a-zA-Z]/.test(k)) {\n        this.__listener[k.slice(2).toLowerCase()] = item[1];\n      }\n    });\n    // margin和padding的宽度\n    this.__mtw = 0;\n    this.__mrw = 0;\n    this.__mbw = 0;\n    this.__mlw = 0;\n    this.__ptw = 0;\n    this.__prw = 0;\n    this.__pbw = 0;\n    this.__plw = 0;\n  }\n\n  __layout(data) {\n    let { w } = data;\n    let { style: {\n      display,\n      width,\n      marginTop,\n      marginRight,\n      marginBottom,\n      marginLeft,\n      paddingTop,\n      paddingRight,\n      paddingBottom,\n      paddingLeft,\n    } } = this;\n    if(display === 'none') {\n      return;\n    }\n    if(width && width.unit !== unit.AUTO) {\n      switch(width.unit) {\n        case unit.PX:\n          w = width.value;\n          break;\n        case unit.PERCENT:\n          w *= width.value * 0.01;\n          break;\n      }\n    }\n    this.__mlw = this.__mpWidth(marginLeft, w);\n    this.__mtw = this.__mpWidth(marginTop, w);\n    this.__mrw = this.__mpWidth(marginRight, w);\n    this.__mbw = this.__mpWidth(marginBottom, w);\n    this.__plw = this.__mpWidth(paddingLeft, w);\n    this.__ptw = this.__mpWidth(paddingTop, w);\n    this.__prw = this.__mpWidth(paddingRight, w);\n    this.__pbw = this.__mpWidth(paddingBottom, w);\n    if(display === 'block') {\n      this.__layoutBlock(data);\n    }\n    else if(display === 'flex') {\n      this.__layoutFlex(data);\n    }\n    else if(display === 'inline') {\n      this.__layoutInline(data);\n    }\n  }\n\n  // 获取margin/padding的实际值\n  __mpWidth(mp, w) {\n    if(mp.unit === unit.PX) {\n      return mp.value;\n    }\n    else if(mp.unit === unit.PERCENT) {\n      return mp.value * w * 0.01;\n    }\n    return 0;\n  }\n\n  render(renderMode) {\n    this.__virtualDom = {\n      bb: [],\n    };\n    let { ctx, style, width, height, mlw, mtw, plw, ptw, prw, pbw, virtualDom } = this;\n    let {\n      display,\n      position,\n      top,\n      right,\n      bottom,\n      left,\n      backgroundColor: bgc,\n      borderTopWidth,\n      borderTopColor: btc,\n      borderTopStyle: bts,\n      borderRightWidth,\n      borderRightColor: brc,\n      borderRightStyle: brs,\n      borderBottomWidth,\n      borderBottomColor: bbc,\n      borderBottomStyle: bbs,\n      borderLeftWidth,\n      borderLeftColor: blc,\n      borderLeftStyle : bls,\n      transform,\n    } = style;\n    if(display === 'none') {\n      return;\n    }\n    // 除root节点外relative渲染时做偏移，百分比基于父元素，若父元素没有一定高则为0\n    if(position === 'relative' && this.parent) {\n      let { width, height } = this.parent;\n      let h = this.parent.style.height;\n      if(left.unit !== unit.AUTO) {\n        let diff = left.unit === unit.PX ? left.value : left.value * width * 0.01;\n        this.__offsetX(diff);\n      }\n      else if(right.unit !== unit.AUTO) {\n        let diff = right.unit === unit.PX ? right.value : right.value * width * 0.01;\n        this.__offsetX(-diff);\n      }\n      if(top.unit !== unit.AUTO) {\n        let diff = top.unit === unit.PX ? top.value : top.value * height * 0.01 * (h.unit === unit.AUTO ? 0 : 1);\n        this.__offsetY(diff);\n      }\n      else if(bottom.unit !== unit.AUTO) {\n        let diff = bottom.unit === unit.PX ? bottom.value : bottom.value * height * 0.01 * (h.unit === unit.AUTO ? 0 : 1);\n        this.__offsetY(-diff);\n      }\n    }\n    // translate相对于自身\n    if(transform) {\n      let { translateX, translateY } = transform;\n      if(translateX) {\n        let diff = translateX.unit === unit.PX ? translateX.value : translateX.value * width * 0.01;\n        this.__offsetX(diff);\n      }\n      if(translateY) {\n        let diff = translateY.unit === unit.PX ? translateY.value : translateY.value * height * 0.01;\n        this.__offsetY(diff);\n      }\n    }\n    // 使用rx和ry渲染位置，考虑了relative和translate影响\n    let { rx: x, ry: y } = this;\n    let btw = borderTopWidth.value;\n    let brw = borderRightWidth.value;\n    let bbw = borderBottomWidth.value;\n    let blw = borderLeftWidth.value;\n    let x1 = x + mlw;\n    let x2 = x1 + blw;\n    let x3 = x2 + width + plw + prw;\n    let x4 = x3 + brw;\n    let y1 = y + mtw;\n    let y2 = y1 + btw;\n    let y3 = y2 + height + ptw + pbw;\n    let y4 = y3 + bbw;\n    if(bgc && bgc !== 'transparent') {\n      let w = width + plw + prw;\n      let h = height + ptw + pbw;\n      if(renderMode === mode.CANVAS) {\n        ctx.beginPath();\n        ctx.fillStyle = bgc;\n        ctx.rect(x2, y2, w, h);\n        ctx.fill();\n        ctx.closePath();\n      }\n      else if(renderMode === mode.SVG) {\n        virtualDom.bb.push({\n          type: 'item',\n          tagName: 'rect',\n          props: [\n            ['x', x2],\n            ['y', y2],\n            ['width', w],\n            ['height', h],\n            ['fill', bgc]\n          ],\n        });\n      }\n    }\n    // 边框需考虑尖角，两条相交边平分45°夹角\n    if(btw > 0 && btc !== 'transparent') {\n      let points = [];\n      if(['dashed', 'dotted'].indexOf(bts) > -1) {\n        // 寻找一个合适的虚线线段长度和之间空白边距长度\n        let { n, ps, pd } = getDashed(bts, x1, x2, x3, x4, btw);\n        if(n <= 1) {\n          points.push([x1, y1, x4, y1, x3, y2, x2, y2]);\n        }\n        else {\n          let deg1 = Math.atan(btw / blw);\n          let deg2 = Math.atan(btw / brw);\n          for(let i = 0; i < n; i++) {\n            // 最后一个可能没有到底，延长之\n            let isLast = i === n - 1;\n            let xx1 = i ? (x1 + ps * i + pd * i) : x1;\n            let xx4 = xx1 + ps;\n            let yy1;\n            let yy2;\n            // 整个和borderLeft重叠\n            if(xx4 < x2) {\n              if(isLast) {\n                points.push([x1, y1, x4, y1, x3, y2, x2, y2]);\n              }\n              else {\n                yy1 = y1 + (xx1 - x1) * Math.tan(deg1);\n                yy2 = y1 + (xx4 - x1) * Math.tan(deg1);\n                points.push([xx1, y1, xx4, y1, xx4, yy2, xx1, yy1]);\n              }\n            }\n            // 整个和borderRight重叠\n            else if(xx1 > x3) {\n              yy1 = y1 + (x4 - xx1) * Math.tan(deg2);\n              yy2 = y1 + (x4 - xx4) * Math.tan(deg2);\n              if(isLast) {\n                points.push([xx1, y1, x4, y1, xx1, yy1]);\n              }\n              else {\n                points.push([xx1, y1, xx4, y1, xx4, yy2, xx1, yy1]);\n              }\n            }\n            // 不被整个重叠的情况再细分\n            else {\n              // 上部分和borderLeft重叠\n              if(xx1 < x2) {\n                yy1 = y1 + (xx1 - x1) * Math.tan(deg1);\n                if(isLast) {\n                  points.push([xx1, y1, x4, y1, x3, y2, x2, y2, xx1, yy1]);\n                }\n                else {\n                  // 下部分和borderRight重叠\n                  if(xx4 > x3) {\n                    points.push([xx1, y1, xx4, y1, x3, y2, x2, y2, xx1, yy1]);\n                  }\n                  // 下部独立\n                  else {\n                    points.push([xx1, y1, xx4, y1, xx4, y2, x2, y2, xx1, yy1]);\n                  }\n                }\n              }\n              // 下部分和borderRight重叠\n              else if(xx4 > x3) {\n                yy1 = y1 + (x4 - xx4) * Math.tan(deg2);\n                // 上部分和borderLeft重叠\n                if(xx1 < x2) {\n                  if(isLast) {\n                    points.push([xx1, y1, x4, y1, x3, y2, x2, y2, xx1, yy1]);\n                  }\n                  else {\n                    points.push([xx1, y1, xx4, y1, xx4, yy1, x3, y2, x2, y2, xx1, yy1]);\n                  }\n                }\n                // 上部独立\n                else {\n                  if(isLast) {\n                    points.push([xx1, y1, x4, y1, x3, y2, xx1, y2]);\n                  }\n                  else {\n                    points.push([xx1, y1, xx4, y1, xx4, yy1, x3, y2, xx1, y2]);\n                  }\n                }\n              }\n              // 完全独立\n              else {\n                if(isLast) {\n                  points.push([xx1, y1, x4, y1, x3, y2, xx1, y2]);\n                }\n                else {\n                  points.push([xx1, y1, xx4, y1, xx4, y2, xx1, y2]);\n                }\n              }\n            }\n          }\n        }\n      }\n      else {\n        points.push([x1, y1, x4, y1, x3, y2, x2, y2]);\n      }\n      renderBorder(renderMode, points, btc, ctx, virtualDom);\n    }\n    if(brw > 0 && brc !== 'transparent') {\n      let points = [];\n      if(['dashed', 'dotted'].indexOf(brs) > -1) {\n        // 寻找一个合适的虚线线段长度和之间空白边距长度\n        let { n, ps, pd } = getDashed(brs, y1, y2, y3, y4, brw);\n        if(n <= 1) {\n          points.push([x3, y2, x4, y1, x4, y4, x3, y3]);\n        }\n        else {\n          let deg1 = Math.atan(brw / btw);\n          let deg2 = Math.atan(brw / bbw);\n          for(let i = 0; i < n; i++) {\n            // 最后一个可能没有到底，延长之\n            let isLast = i === n - 1;\n            let yy1 = i ? (y1 + ps * i + pd * i) : y1;\n            let yy4 = yy1 + ps;\n            let xx1;\n            let xx2;\n            // 整个和borderTop重叠\n            if(yy4 < y2) {\n              if(isLast) {\n                points.push([x3, y2, x4, y1, x4, y4, x3, y3]);\n              }\n              else {\n                xx1 = x4 - (yy4 - y1) * Math.tan(deg1);\n                xx2 = x4 - (yy1 - y1) * Math.tan(deg1);\n                points.push([xx1, yy4, xx2, yy1, x4, yy1, x4, yy4]);\n              }\n            }\n            // 整个和borderBottom重叠\n            else if(yy1 > y3) {\n              xx1 = x3 + (yy1 - y3) * Math.tan(deg2);\n              xx2 = x3 + (yy4 - y3) * Math.tan(deg2);\n              if(isLast) {\n                points.push([xx1, yy1, x4, yy1, x4, y4]);\n              }\n              else {\n                points.push([xx1, yy1, x4, yy1, x4, yy4, xx2, yy4]);\n              }\n            }\n            // 不被整个重叠的情况再细分\n            else {\n              // 上部分和borderTop重叠\n              if(yy1 < y2) {\n                xx1 = x3 + (y2 - yy1) * Math.tan(deg1);\n                if(isLast) {\n                  points.push([x3, y2, xx1, yy1, x4, yy1, x4, y4, x3, y4]);\n                }\n                else {\n                  // 下部分和borderBottom重叠\n                  if(yy4 > y3) {\n                    points.push([x3, y2, xx1, yy1, x4, yy1, x4, yy4, xx1, yy4, x3, y3]);\n                  }\n                  // 下部独立\n                  else {\n                    points.push([x3, y2, xx1, yy1, x4, yy1, x4, yy4, x3, yy4]);\n                  }\n                }\n              }\n              // 下部分和borderBottom重叠\n              else if(yy4 > y3) {\n                xx1 = x3 + (yy4 - y3) * Math.tan(deg2);\n                // 上部分和borderTop重叠\n                if(yy1 < y2) {\n                  if(isLast) {\n                    points.push([x3, y2, xx1, yy1, x4, yy1, x4, y4, x3, y3]);\n                  }\n                  else {\n                    points.push([x3, y2, xx1, yy1, x4, yy1, x4, yy4, xx1, yy4, x3, y3]);\n                  }\n                }\n                // 上部独立\n                else {\n                  if(isLast) {\n                    points.push([x3, yy1, x4, yy1, x4, y4, x3, y3]);\n                  }\n                  else {\n                    points.push([x3, yy1, x4, yy1, x4, yy4, xx1, yy4, x3, y3]);\n                  }\n                }\n              }\n              // 完全独立\n              else {\n                if(isLast) {\n                  points.push([x3, yy1, x4, yy1, x4, y4, x3, y3]);\n                }\n                else {\n                  points.push([x3, yy1, x4, yy1, x4, yy4, x3, yy4]);\n                }\n              }\n            }\n          }\n        }\n      }\n      else {\n        points.push([x3, y2, x4, y1, x4, y4, x3, y3]);\n      }\n      renderBorder(renderMode, points, brc, ctx, virtualDom);\n    }\n    if(bbw > 0 && bbc !== 'transparent') {\n      let points = [];\n      // 寻找一个合适的虚线线段长度和之间空白边距长度\n      if(['dashed', 'dotted'].indexOf(bbs) > -1) {\n        // 寻找一个合适的虚线线段长度和之间空白边距长度\n        let { n, ps, pd } = getDashed(bbs, x1, x2, x3, x4, bbw);\n        let deg1 = Math.atan(bbw / blw);\n        let deg2 = Math.atan(bbw / brw);\n        for(let i = 0; i < n; i++) {\n          // 最后一个可能没有到底，延长之\n          let isLast = i === n - 1;\n          let xx1 = i ? (x1 + ps * i + pd * i) : x1;\n          let xx4 = xx1 + ps;\n          let yy1;\n          let yy2;\n          // 整个和borderLeft重叠\n          if(xx4 < x2) {\n            if(isLast) {\n              points.push([x1, y4, x2, y3, x3, y3, x4, y4]);\n            }\n            else {\n              yy1 = y4 - (xx1 - x1) * Math.tan(deg1);\n              yy2 = y4 - (xx4 - x1) * Math.tan(deg1);\n              points.push([xx1, yy1, xx4, yy2, xx4, y4, xx1, y4]);\n            }\n          }\n          // 整个和borderRight重叠\n          else if(xx1 > x3) {\n            yy1 = y4 - (xx1 - x1) * Math.tan(deg2);\n            yy2 = y4 - (xx4 - x1) * Math.tan(deg2);\n            if(isLast) {\n              points.push([xx1, yy1, x4, y4, xx1, y4]);\n            }\n            else {\n              points.push([xx1, yy1, xx4, yy2, xx4, y4, xx1, y4]);\n            }\n          }\n          // 不被整个重叠的情况再细分\n          else {\n            // 上部分和borderLeft重叠\n            if(xx1 < x2) {\n              yy1 = y3 + (xx1 - x1) * Math.tan(deg1);\n              if(isLast) {\n                points.push([xx1, yy1, x2, y3, x3, y3, x4, y4, xx1, y4]);\n              }\n              else {\n                // 下部分和borderRight重叠\n                if(xx4 > x3) {\n                  points.push([xx1, yy1, x2, y3, x3, y3, xx4, y4, xx1, y4]);\n                }\n                // 下部独立\n                else {\n                  points.push([xx1, yy1, x2, y3, xx4, y3, xx4, y4, xx1, y4]);\n                }\n              }\n            }\n            // 下部分和borderRight重叠\n            else if(xx4 > x3) {\n              yy1 = y4 - (x4 - xx4) * Math.tan(deg2);\n              // 上部分和borderLeft重叠\n              if(xx1 < x2) {\n                if(isLast) {\n                  points.push([xx1, yy1, x3, y3, x4, y4, xx1, y4]);\n                }\n                else {\n                  points.push([xx1, yy1, x3, y3, xx4, yy1, xx4, y4, xx1, y4]);\n                }\n              }\n              // 上部独立\n              else {\n                if(isLast) {\n                  points.push([xx1, y3, x3, y3, x4, y4, xx1, y4]);\n                }\n                else {\n                  points.push([xx1, y3, x3, y3, xx4, yy1, xx4, y4, xx1, y4]);\n                }\n              }\n            }\n            // 完全独立\n            else {\n              if(isLast) {\n                points.push([xx1, y3, x3, y3, x4, y4, xx1, y4]);\n              }\n              else {\n                points.push([xx1, y3, xx4, y3, xx4, y4, xx1, y4]);\n              }\n            }\n          }\n        }\n      }\n      else {\n        points.push([x1, y4, x2, y3, x3, y3, x4, y4]);\n      }\n      renderBorder(renderMode, points, bbc, ctx, virtualDom);\n    }\n    if(blw > 0 && blc !== 'transparent') {\n      let points = [];\n      if(['dashed', 'dotted'].indexOf(bls) > -1) {\n        // 寻找一个合适的虚线线段长度和之间空白边距长度\n        let { n, ps, pd } = getDashed(bls, y1, y2, y3, y4, blw);\n        if(n <= 1) {\n          points.push([x1, y1, x2, y2, x2, y3, x1, y4]);\n        }\n        else {\n          let deg1 = Math.atan(blw / btw);\n          let deg2 = Math.atan(blw / bbw);\n          for(let i = 0; i < n; i++) {\n            // 最后一个可能没有到底，延长之\n            let isLast = i === n - 1;\n            let yy1 = i ? (y1 + ps * i + pd * i) : y1;\n            let yy4 = yy1 + ps;\n            let xx1;\n            let xx2;\n            // 整个和borderTop重叠\n            if(yy4 < y2) {\n              if(isLast) {\n                points.push([x1, y1, x2, y2, x2, y3, x1, y4]);\n              }\n              else {\n                xx1 = x1 + (yy1 - y1) * Math.tan(deg1);\n                xx2 = x1 + (yy4 - y1) * Math.tan(deg1);\n                points.push([x1, yy1, xx1, yy1, xx2, yy4, x1, yy4]);\n              }\n            }\n            // 整个和borderBottom重叠\n            else if(yy1 > y3) {\n              xx1 = x1 + (y4 - yy1) * Math.tan(deg2);\n              xx2 = x1 + (y4 - yy4) * Math.tan(deg2);\n              if(isLast) {\n                points.push([x1, yy1, xx1, yy1, x1, y4]);\n              }\n              else {\n                points.push([x1, yy1, xx1, yy1, xx2, yy4, x1, yy4]);\n              }\n            }\n            // 不被整个重叠的情况再细分\n            else {\n              // 上部分和borderTop重叠\n              if(yy1 < y2) {\n                xx1 = x1 + (yy1 - y1) * Math.tan(deg1);\n                if(isLast) {\n                  points.push([x1, yy1, xx1, yy1, x2, y2, x2, y3, x1, y4]);\n                }\n                else {\n                  // 下部分和borderBottom重叠\n                  if(yy4 > y3) {\n                    points.push([x1, yy1, xx1, yy1, x2, y2, x2, y3, xx1, yy4, x1, yy4]);\n                  }\n                  // 下部独立\n                  else {\n                    points.push([x1, yy1, xx1, yy1, x2, y2, x2, yy4, x1, yy4]);\n                  }\n                }\n              }\n              // 下部分和borderBottom重叠\n              else if(yy4 > y3) {\n                xx1 = x1 + (y4 - yy4) * Math.tan(deg2);\n                // 上部分和borderTop重叠\n                if(yy1 < y2) {\n                  if(isLast) {\n                    points.push([x1, yy1, xx1, yy1, x2, y2, x2, y3, x1, y4]);\n                  }\n                  else {\n                    points.push([x1, yy1, xx1, yy1, x2, y2, x2, y3, xx1, yy4, x1, yy4]);\n                  }\n                }\n                // 上部独立\n                else {\n                  if(isLast) {\n                    points.push([x1, yy1, x2, yy1, x2, y3, x1, y4]);\n                  }\n                  else {\n                    points.push([x1, yy1, x2, yy1, x2, y3, xx1, yy4, x1, yy4]);\n                  }\n                }\n              }\n              // 完全独立\n              else {\n                if(isLast) {\n                  points.push([x1, yy1, x2, yy1, x2, y3, x1, y4]);\n                }\n                else {\n                  points.push([x1, yy1, x2, yy1, x2, yy4, x1, yy4]);\n                }\n              }\n            }\n          }\n        }\n      }\n      else {\n        points.push([x1, y1, x2, y2, x2, y3, x1, y4]);\n      }\n      renderBorder(renderMode, points, blc, ctx, virtualDom);\n    }\n  }\n\n  get tagName() {\n    return this.__tagName;\n  }\n  get mtw() {\n    return this.__mtw;\n  }\n  get mrw() {\n    return this.__mrw;\n  }\n  get mbw() {\n    return this.__mbw;\n  }\n  get mlw() {\n    return this.__mlw;\n  }\n  get ptw() {\n    return this.__ptw;\n  }\n  get prw() {\n    return this.__prw;\n  }\n  get pbw() {\n    return this.__pbw;\n  }\n  get plw() {\n    return this.__plw;\n  }\n  get outerWidth() {\n    let { mlw, mrw, plw, prw, style: {\n      borderLeftWidth,\n      borderRightWidth,\n    } } = this;\n    return this.width\n      + borderLeftWidth.value\n      + borderRightWidth.value\n      + mlw\n      + mrw\n      + plw\n      + prw;\n  }\n  get outerHeight() {\n    let { mtw, mbw, ptw, pbw, style: {\n      borderTopWidth,\n      borderBottomWidth,\n    } } = this;\n    return this.height\n      + borderTopWidth.value\n      + borderBottomWidth.value\n      + mtw\n      + mbw\n      + ptw\n      + pbw;\n  }\n  get listener() {\n    return this.__listener;\n  }\n}\n\nexport default Xom;\n","'use strict';\n\nexport default {\n  arial: {\n    lhr: 1.14990234375, // 默认line-height ratio，(67+1854+434)/2048\n    car: 1.1171875, // content-area ratio，(1854+434)/2048\n    blr: 0.9052734375, // base-line ratio，1854/2048\n    mdr: 0.64599609375, // middle ratio，(1854-1062/2)/2048\n    lgr: 0.03271484375, // line-gap ratio，67/2048\n  },\n};\n","const RESET = {\n  position: 'static',\n  display: 'block',\n  borderSizing: 'content-box',\n  top: 'auto',\n  right: 'auto',\n  bottom: 'auto',\n  left: 'auto',\n  marginTop: 0,\n  marginRight: 0,\n  marginBottom: 0,\n  marginLeft: 0,\n  paddingTop: 0,\n  paddingRight: 0,\n  paddingBottom: 0,\n  paddingLeft: 0,\n  fontSize: 16,\n  fontFamily: 'arial',\n  color: '#000',\n  fontStyle: 'normal',\n  fontWeight: 400,\n  lineHeight: 'normal',\n  borderTopWidth: 0,\n  borderRightWidth: 0,\n  borderBottomWidth: 0,\n  borderLeftWidth: 0,\n  borderTopColor: '#000',\n  borderRightColor: '#000',\n  borderBottomColor: '#000',\n  borderLeftColor: '#000',\n  borderTopStyle: 'solid',\n  borderRightStyle: 'solid',\n  borderBottomStyle: 'solid',\n  borderLeftStyle: 'solid',\n  borderTopLeftRadius: 0,\n  borderTopRightRadius: 0,\n  borderBottomLeftRadius: 0,\n  borderBottomRightRadius: 0,\n  verticalAlign: 'baseline',\n  width: 'auto',\n  height: 'auto',\n  flexGrow: 0,\n  flexShrink: 1,\n  flexBasis: 'auto',\n  flexDirection: 'row',\n  justifyContent: 'flex-start',\n  alignItems: 'stretch',\n  textAlign: 'left',\n  visibility: 'visible',\n  fill: '#000',\n  stroke: '#000',\n  strokeWidth: 0,\n  strokeDasharray: [],\n};\n\nlet reset = [];\n\nObject.keys(RESET).forEach(k => {\n  let v = RESET[k];\n  reset.push({\n    k,\n    v,\n  });\n});\n\nexport default reset;\n","let toString = {}.toString;\nfunction isType(type) {\n  return function(obj) {\n    return toString.call(obj) === '[object ' + type + ']';\n  }\n}\n\nlet isNumber = isType('Number');\n\nfunction joinSourceArray(arr) {\n  var res = '';\n  for(var i = 0, len = arr.length; i < len; i++) {\n    var item = arr[i];\n    if(Array.isArray(item)) {\n      res += joinSourceArray(item);\n    }\n    else {\n      res += stringify(item);\n    }\n  }\n  return res;\n}\n\nfunction stringify(s) {\n  if(isNil(s)) {\n    return '';\n  }\n  return s.toString();\n}\n\nfunction encodeHtml(s, prop) {\n  if(prop) {\n    return s.replace(/\"/g, '&quot;');\n  }\n  return s.replace(/&/g, '&amp;').replace(/</g, '&lt;');\n}\n\nfunction isNil(v) {\n  return v === undefined || v === null;\n}\n\nfunction joinVirtualDom(vd) {\n  if(vd.type === 'item') {\n    let s = '';\n    vd.props.forEach(item => {\n      s += ` ${item[0]}=\"${item[1]}\"`;\n    });\n    if(vd.tagName === 'text') {\n      return `<text${s}>${vd.content}</text>`;\n    }\n    return `<${vd.tagName}${s}/>`;\n  }\n  else if(vd.type === 'text') {\n    let s = ``;\n    vd.children.forEach(item => {\n      s += joinVirtualDom(item);\n    });\n    return `<g>${s}</g>`;\n  }\n  else if(vd.type === 'dom') {\n    let s = '<g>';\n    vd.bb.forEach(item => {\n      s += joinVirtualDom(item);\n    });\n    s += '</g><g>';\n    vd.children.forEach(item => {\n      s += joinVirtualDom(item);\n    });\n    s += '</g>';\n    return `<g>${s}</g>`;\n  }\n  else if(vd.type === 'geom') {\n    let s = '<g>';\n    vd.bb.forEach(item => {\n      s += joinVirtualDom(item);\n    });\n    s += '</g><g>';\n    vd.content.forEach(item => {\n      s += joinVirtualDom(item);\n    });\n    s += '</g>';\n    return `<g>${s}</g>`;\n  }\n}\n\nlet util = {\n  isObject: isType('Object'),\n  isString: isType('String'),\n  isFunction: isType('Function'),\n  isNumber,\n  isBoolean: isType('Boolean'),\n  isDate: isType('Date'),\n  stringify,\n  joinSourceArray(arr) {\n    return joinSourceArray(arr);\n  },\n  encodeHtml,\n  isNil,\n  joinVirtualDom,\n};\n\nexport default util;\n","import unit from './unit';\nimport font from './font';\nimport reset from './reset';\nimport util from '../util';\n\nfunction parserOneBorder(style, direction) {\n  let key = `border${direction}`;\n  if(!style[key]) {\n    return;\n  }\n  let w = /\\b\\d+px\\b/i.exec(style[key]);\n  if(w) {\n    style[key + 'Width'] = w[0];\n  }\n  let s = /\\b(solid|dashed|dotted)\\b/i.exec(style[key]);\n  if(s) {\n    style[key + 'Style'] = s[1];\n  }\n  let c = /#[0-9a-f]{3,6}/i.exec(style[key]);\n  if(c && [4, 7].indexOf(c[0].length) > -1) {\n    style[key + 'Color'] = c[0];\n  }\n  else if(/\\btransparent\\b/i.test(style[key])) {\n    style[key + 'Color'] = 'transparent';\n  }\n}\n\nfunction normalize(style) {\n  // 默认reset\n  reset.forEach(item => {\n    if(!style.hasOwnProperty(item.k)) {\n      style[item.k] = item.v;\n    }\n  });\n  // 处理缩写\n  // TODO: 重复声明时优先级\n  if(style.background) {\n    let bgc = /#[0-9a-f]{3,6}/i.exec(style.background);\n    if(bgc && [4, 7].indexOf(bgc[0].length) > -1) {\n      style.backgroundColor = bgc[0];\n    }\n  }\n  if(style.flex) {\n    if(style.flex === 'none') {\n      style.flexGrow = 0;\n      style.flexShrink = 0;\n      style.flexBasis = 'auto';\n    }\n    else if(style.flex === 'auto') {\n      style.flexGrow = 1;\n      style.flexShrink = 1;\n      style.flexBasis = 'auto';\n    }\n    else if(/^[\\d.]+$/.test(style.flex)) {\n      style.flexGrow = parseFloat(style.flex);\n      style.flexShrink = 1;\n      style.flexBasis = 0;\n    }\n    else if(/^[\\d.]+px$/.test(style.flex)) {}\n    else if(/^[\\d.]+%$/.test(style.flex)) {}\n    else {\n      style.flexGrow = 0;\n      style.flexShrink = 1;\n      style.flexBasis = 'auto';\n    }\n  }\n  if(style.border) {\n    style.borderTop = style.borderRight = style.borderBottom = style.borderLeft = style.border;\n  }\n  if(style.margin) {\n    let match = style.margin.match(/([\\d.]+(px|%)?)|(auto)/ig);\n    if(match) {\n      if(match.length === 1) {\n        match[3] = match[2] = match[1] = match[0];\n      }\n      else if(match.length === 2) {\n        match[2] = match[0];\n        match[3] = match[1];\n      }\n      else if(match.length === 3) {\n        match[3] = match[1];\n      }\n      style.marginTop = match[0];\n      style.marginRight = match[1];\n      style.marginBottom = match[2];\n      style.marginLeft = match[3];\n    }\n  }\n  if(style.padding) {\n    let match = style.padding.match(/([\\d.]+(px|%)?)|(auto)/ig);\n    if(match) {\n      if(match.length === 1) {\n        match[3] = match[2] = match[1] = match[0];\n      }\n      else if(match.length === 2) {\n        match[2] = match[0];\n        match[3] = match[1];\n      }\n      else if(match.length === 3) {\n        match[3] = match[1];\n      }\n      style.paddingTop = match[0];\n      style.paddingRight = match[1];\n      style.paddingBottom = match[2];\n      style.paddingLeft = match[3];\n    }\n  }\n  if(style.borderRadius) {\n    style.borderTopRightRadius = style.borderTopLeftRadius = style.borderBottomRightRadius = style.borderBottomLeftRadius = style.borderRadius;\n  }\n  if(style.transform) {\n    let match = style.transform.match(/\\w+\\(.+?\\)/g);\n    if(match) {\n      let transform = style.transform = {};\n      match.forEach(item => {\n        let i = item.indexOf('(');\n        let k = item.slice(0, i);\n        let v = item.slice(i + 1, item.length - 1);\n        if(k === 'matrix') {\n          let arr = v.split(',');\n          arr = arr.map(item => parseFloat(item));\n          if(arr.length > 6) {\n            arr = arr.slice(0, 6);\n          }\n          else if(arr.length < 6) {\n            while(arr.length < 6) {\n              arr.push(0);\n            }\n          }\n          transform.matrix = arr;\n        }\n        else if(k === 'matrix3d') {\n          let arr = v.split(',');\n          arr = arr.map(item => parseFloat(item));\n          if(arr.length > 9) {\n            arr = arr.slice(0, 9);\n          }\n          else if(arr.length < 9) {\n            while(arr.length < 9) {\n              arr.push(0);\n            }\n          }\n          transform.matrix3d = arr;\n        }\n        else if(k === 'translateX') {\n          transform.translateX = v;\n        }\n        else if(k === 'translateY') {\n          transform.translateY = v;\n        }\n        else if(k === 'translateZ') {\n          transform.translateZ = v;\n        }\n        else if(k === 'translate') {\n          let arr = v.split(',');\n          transform.translateX = arr[0];\n          transform.translateY = arr[1];\n        }\n        else if(k === 'translate3d') {\n          let arr = v.split(',');\n          transform.translateX = arr[0];\n          transform.translateY = arr[1];\n          transform.translateZ = arr[2];\n        }\n        else if(k === 'scaleX') {\n          transform.scaleX = parseFloat(v) || 0;\n        }\n        else if(k === 'scaleY') {\n          transform.scaleY = parseFloat(v) || 0;\n        }\n        else if(k === 'scaleZ') {\n          transform.scaleZ = parseFloat(v) || 0;\n        }\n        else if(k === 'scale') {\n          let arr = v.split(',');\n          transform.scaleX = parseFloat(arr[0]) || 0;\n          transform.scaleY = parseFloat(arr[1]) || 0;\n        }\n        else if(k === 'scale3d') {\n          let arr = v.split(',');\n          transform.scaleX = parseFloat(arr[0]) || 0;\n          transform.scaleY = parseFloat(arr[1]) || 0;\n          transform.scaleZ = parseFloat(arr[2]) || 0;\n        }\n        else if(k === 'rotateX') {\n          transform.rotateX = parseFloat(v) || 0;\n        }\n        else if(k === 'rotateY') {\n          transform.rotateY = parseFloat(v) || 0;\n        }\n        else if(k === 'rotateZ') {\n          transform.rotateZ = parseFloat(v) || 0;\n        }\n        else if(k === 'rotate') {\n          let arr = v.split(',');\n          transform.rotateX = parseFloat(arr[0]) || 0;\n          transform.rotateY = parseFloat(arr[1]) || 0;\n        }\n        else if(k === 'rotate3d') {\n          let arr = v.split(',');\n          transform.rotateX = parseFloat(arr[0]) || 0;\n          transform.rotateY = parseFloat(arr[1]) || 0;\n          transform.rotateZ = parseFloat(arr[2]) || 0;\n        }\n        else if(k === 'skewX') {\n          transform.skewX = parseFloat(v) || 0;\n        }\n        else if(k === 'skewY') {\n          transform.skewY = parseFloat(v) || 0;\n        }\n        else if(k === 'skew') {\n          let arr = v.split(',');\n          transform.skewX = parseFloat(arr[0]) || 0;\n          transform.skewY = parseFloat(arr[1]) || 0;\n        }\n        else if(k === 'perspective') {\n          transform.perspective = parseFloat(v);\n        }\n      });\n      [\n        'translateX',\n        'translateY',\n        'translateZ',\n      ].forEach(k => {\n        let v = transform[k];\n        // 编译工具前置解析优化跳出\n        if(!util.isNil(v) && v.unit) {\n          return;\n        }\n        if(/%$/.test(v)) {\n          v = parseFloat(v) || 0;\n          transform[k] = {\n            value: v,\n            unit: unit.PERCENT,\n          };\n        }\n        else {\n          v = parseFloat(v) || 0;\n          transform[k] = {\n            value: v,\n            unit: unit.PX,\n          };\n        }\n      });\n    }\n  }\n  parserOneBorder(style, 'Top');\n  parserOneBorder(style, 'Right');\n  parserOneBorder(style, 'Bottom');\n  parserOneBorder(style, 'Left');\n  // 转化不同单位值为对象标准化\n  [\n    'marginTop',\n    'marginRight',\n    'marginBottom',\n    'marginLeft',\n    'paddingTop',\n    'paddingRight',\n    'paddingBottom',\n    'paddingLeft',\n    'borderTopWidth',\n    'borderRightWidth',\n    'borderBottomWidth',\n    'borderLeftWidth',\n    'borderTopLeftRadius',\n    'borderTopRightRadius',\n    'borderBottomLeftRadius',\n    'borderBottomRightRadius',\n    'top',\n    'right',\n    'bottom',\n    'left',\n    'width',\n    'height',\n    'flexBasis',\n  ].forEach(k => {\n    let v = style[k];\n    // 编译工具前置解析优化跳出\n    if(!util.isNil(v) && v.unit) {\n      return;\n    }\n    if(v === 'auto') {\n      style[k] = {\n        unit: unit.AUTO,\n      };\n    }\n    else if(/%$/.test(v)) {\n      // border不支持百分比\n      if(k.indexOf('border') === 0) {\n        style[k] = {\n          value: 0,\n          unit: unit.PX,\n        };\n      }\n      else {\n        v = parseFloat(v) || 0;\n        style[k] = {\n          value: v,\n          unit: unit.PERCENT,\n        };\n      }\n    }\n    else {\n      v = parseFloat(v) || 0;\n      style[k] = {\n        value: v,\n        unit: unit.PX,\n      };\n    }\n  });\n  // 计算lineHeight为px值，最小范围\n  let lineHeight = style.lineHeight;\n  if(lineHeight === 'normal') {\n    lineHeight = {\n      value: style.fontSize * font.arial.lhr,\n      unit: unit.PX,\n    };\n  }\n  else if(/px$/.test(lineHeight)) {\n    lineHeight = parseFloat(lineHeight);\n    lineHeight = {\n      value: Math.max(style.fontSize, lineHeight),\n      unit: unit.PX,\n    };\n  }\n  // 纯数字比例\n  else {\n    lineHeight = parseFloat(lineHeight) || 'normal';\n    // 非法数字\n    if(lineHeight === 'normal') {\n      lineHeight = {\n        value: style.fontSize * font.arial.lhr,\n        unit: unit.PX,\n      };\n    }\n    else {\n      lineHeight = {\n        value: lineHeight * style.fontSize,\n        unit: unit.PX,\n      };\n    }\n  }\n  style.lineHeight = lineHeight;\n}\n\nfunction setFontStyle(style) {\n  let { fontStyle, fontWeight, fontSize, fontFamily } = style;\n  return `${fontStyle} ${fontWeight} ${fontSize}px/${fontSize}px ${fontFamily}`;\n}\n\nfunction getBaseLine(style) {\n  let normal = style.fontSize * font.arial.lhr;\n  return (style.lineHeight.value - normal) * 0.5 + style.fontSize * font.arial.blr;\n}\n\nexport default {\n  normalize,\n  setFontStyle,\n  getBaseLine,\n};\n","import css from '../style/css';\nimport mode from '../mode';\n\nclass LineBox {\n  constructor(parent, x, y, w, content, style) {\n    this.__parent = parent;\n    this.__x = x;\n    this.__y = y;\n    this.__width = w;\n    this.__content = content;\n    this.__style = style;\n    this.__virtualDom = {};\n  }\n\n  render(renderMode, ctx) {\n    let { style, content, x, y, parent: { ox, oy } } = this;\n    y += css.getBaseLine(style);\n    x += ox;\n    y += oy;\n    if(renderMode === mode.CANVAS) {\n      ctx.fillText(content, x, y);\n    }\n    else if(renderMode === mode.SVG) {\n      this.__virtualDom = {\n        type: 'item',\n        tagName: 'text',\n        props: [\n          ['x', x],\n          ['y', y],\n          ['fill', style.color],\n          ['font-size', `${style.fontSize}px`]\n        ],\n        content,\n      };\n    }\n  }\n\n  __offsetX(diff) {\n    this.__x += diff;\n  }\n\n  __offsetY(diff) {\n    this.__y += diff;\n  }\n\n  get x() {\n    return this.__x;\n  }\n  get y() {\n    return this.__y;\n  }\n  get width() {\n    return this.__width;\n  }\n  get content() {\n    return this.__content;\n  }\n  get style() {\n    return this.__style;\n  }\n  get baseLine() {\n    return css.getBaseLine(this.style);\n  }\n  get virtualDom() {\n    return this.__virtualDom;\n  }\n  get parent() {\n    return this.__parent;\n  }\n}\n\nexport default LineBox;\n","import Node from './Node';\nimport LineBox from './LineBox';\nimport css from '../style/css';\nimport mode from '../mode';\n\nconst CHAR_WIDTH_CACHE = {};\n\nclass Text extends Node {\n  constructor(content) {\n    super();\n    this.__content = content.toString();\n    this.__lineBoxes = [];\n    this.__charWidthList = [];\n    this.__charWidth = 0;\n    this.__textWidth = 0;\n  }\n\n  // 预先计算每个字的宽度\n  __measure() {\n    this.__charWidthList = [];\n    let { ctx, content, style, charWidthList, renderMode } = this;\n    if(renderMode === mode.CANVAS) {\n      ctx.font = css.setFontStyle(style);\n    }\n    let cache = CHAR_WIDTH_CACHE[style.fontSize] = CHAR_WIDTH_CACHE[style.fontSize] || {};\n    let length = content.length;\n    let sum = 0;\n    for(let i = 0; i < length; i++) {\n      let char = content.charAt(i);\n      let mw;\n      if(cache.hasOwnProperty(char)) {\n        mw = cache[char];\n      }\n      else if(renderMode === mode.CANVAS) {\n        mw = cache[char] = ctx.measureText(char).width;\n      }\n      else if(renderMode === mode.SVG) {\n        mw = cache[char] = mode.measure(char, style);\n      }\n      charWidthList.push(mw);\n      sum += mw;\n      this.__charWidth = Math.max(this.charWidth, mw);\n    }\n    this.__textWidth = sum;\n  }\n\n  __layout(data, isVirtual) {\n    let { x, y, w, h } = data;\n    this.__x = x;\n    this.__y = y;\n    let maxX = x;\n    let { ctx, content, style, lineBoxes, charWidthList, renderMode } = this;\n    // 顺序尝试分割字符串为lineBox，形成多行\n    let begin = 0;\n    let i = 0;\n    let count = 0;\n    let length = content.length;\n    while(i < length) {\n      count += charWidthList[i];\n      if (count === w) {\n        let lineBox = new LineBox(this, x, y, count, content.slice(begin, i + 1), style);\n        lineBoxes.push(lineBox);\n        maxX = Math.max(maxX, x + count);\n        y += this.style.lineHeight.value;\n        begin = i + 1;\n        i = begin + 1;\n        count = 0;\n      }\n      else if (count > w) {\n        // 宽度不足时无法跳出循环，至少也要塞个字符形成一行\n        if(i === begin) {\n          i = begin + 1;\n        }\n        let lineBox = new LineBox(this, x, y, count - charWidthList[i], content.slice(begin, i), style);\n        lineBoxes.push(lineBox);\n        maxX = Math.max(maxX, x + count - charWidthList[i]);\n        y += this.style.lineHeight.value;\n        begin = i;\n        i = i + 1;\n        count = 0;\n      }\n      else {\n        i++;\n      }\n    }\n    if(begin < length && begin < i) {\n      count = 0;\n      for(i = begin ;i < length; i++) {\n        count += charWidthList[i];\n      }\n      let lineBox = new LineBox(this, x, y, count, content.slice(begin, length), style);\n      lineBoxes.push(lineBox);\n      maxX = Math.max(maxX, x + count);\n      y += style.lineHeight.value;\n    }\n    this.__width = maxX - x;\n    this.__height = y - data.y;\n    if(isVirtual) {\n      this.__lineBoxes = [];\n    }\n    else {\n      let { textAlign } = style;\n      if(['center', 'right'].indexOf(textAlign) > -1) {\n        lineBoxes.forEach(lineBox => {\n          let diff = this.__width - lineBox.width;\n          if(diff > 0) {\n            lineBox.__offsetX(textAlign === 'center' ? diff * 0.5 : diff);\n          }\n        });\n      }\n    }\n  }\n\n  render(renderMode) {\n    const { ctx, style } = this;\n    if(renderMode === mode.CANVAS) {\n      ctx.font = css.setFontStyle(style);\n      ctx.fillStyle = style.color;\n    }\n    this.lineBoxes.forEach(item => {\n      item.render(renderMode, ctx);\n    });\n    if(renderMode === mode.SVG) {\n      this.__virtualDom = {\n        type: 'text',\n        children: this.lineBoxes.map(lineBox => lineBox.virtualDom),\n      };\n    }\n  }\n\n  __tryLayInline(w) {\n    return w - this.textWidth;\n  }\n\n  __calMaxAndMinWidth() {\n    let n = 0;\n    this.charWidthList.forEach(item => {\n      n = Math.max(n, item);\n    });\n    return { max: this.textWidth, min: n };\n  }\n\n  get content() {\n    return this.__content;\n  }\n  set content(v) {\n    this.__content = v;\n  }\n  get lineBoxes() {\n    return this.__lineBoxes;\n  }\n  get charWidthList() {\n    return this.__charWidthList;\n  }\n  get charWidth() {\n    return this.__charWidth;\n  }\n  get textWidth() {\n    return this.__textWidth;\n  }\n  get baseLine() {\n    let last = this.lineBoxes[this.lineBoxes.length - 1];\n    return last.y - this.y + last.baseLine;\n  }\n  get renderMode() {\n    return this.__renderMode;\n  }\n}\n\nexport default Text;\n","class LineGroup {\n  constructor(x, y) {\n    this.__list = [];\n    this.__x = x;\n    this.__y = y;\n    this.__baseLine = 0;\n  }\n\n  add(item) {\n    this.list.push(item);\n  }\n\n  __calBaseLine() {\n    let baseLine = 0;\n    this.list.forEach(item => {\n      baseLine = Math.max(baseLine, item.baseLine);\n    });\n    return baseLine;\n  }\n\n  verticalAlign() {\n    this.__baseLine = this.__calBaseLine();\n    // 仅当有2个和以上时才需要vertical对齐调整\n    if(this.list.length > 1) {\n      this.list.forEach(item => {\n        if(item.baseLine !== this.baseLine) {\n          item.__offsetY(this.baseLine - item.baseLine);\n        }\n      });\n    }\n  }\n\n  horizonAlign(diff) {\n    this.list.forEach(item => {\n      item.__offsetX(diff);\n    });\n  }\n\n  get list() {\n    return this.__list;\n  }\n  get x() {\n    return this.__x;\n  }\n  get y() {\n    return this.__y;\n  }\n  get width() {\n    let width = 0;\n    this.list.forEach(item => {\n      width += item.width;\n    });\n    return width;\n  }\n  get height() {\n    let height = 0;\n    this.list.forEach(item => {\n      height = Math.max(height, item.height);\n    });\n    return height;\n  }\n  get baseLine() {\n    return this.__baseLine;\n  }\n  get size() {\n    return this.__list.length;\n  }\n}\n\nexport default LineGroup;\n","import Xom from '../node/Xom';\nimport css from '../style/css';\nimport unit from '../style/unit';\nimport mode from '../mode';\n\nconst IMPLEMENT = {};\n\nclass Geom extends Xom {\n  constructor(tagName, props) {\n    super(tagName, props);\n  }\n\n  __initStyle() {\n    css.normalize(this.style);\n  }\n\n  __tryLayInline(w, total) {\n    // 无children，直接以style的width为宽度，不定义则为0\n    let { style: { width } } = this;\n    if(width.unit === unit.PX) {\n      return w - width.value;\n    }\n    else if(width.unit === unit.PERCENT) {\n      return w - total * width.value * 0.01;\n    }\n    return w;\n  }\n\n  __calAutoBasis(isDirectionRow, w, h) {\n    let b = 0;\n    let min = 0;\n    let max = 0;\n    let { style } = this;\n    // 计算需考虑style的属性\n    let {\n      width,\n      height,\n      borderTopWidth,\n      borderRightWidth,\n      borderBottomWidth,\n      borderLeftWidth,\n    } = style;\n    let main = isDirectionRow ? width : height;\n    if(main.unit !== unit.AUTO) {\n      b = max += main.value;\n    }\n    // border也得计算在内\n    if(isDirectionRow) {\n      let w = borderRightWidth.value + borderLeftWidth.value;\n      b += w;\n      max += w;\n      min += w;\n    }\n    else {\n      let h = borderTopWidth.value + borderBottomWidth.value;\n      b += h;\n      max += h;\n      min += h;\n    }\n    return { b, min, max };\n  }\n\n  __layoutBlock(data) {\n    let { x, y, w, h } = data;\n    this.__x = x;\n    this.__y = y;\n    this.__width = w;\n    let { style } = this;\n    let {\n      width,\n      height,\n      borderTopWidth,\n      borderRightWidth,\n      borderBottomWidth,\n      borderLeftWidth,\n    } = style;\n    // 除了auto外都是固定高度\n    let fixedHeight;\n    if(width && width.unit !== unit.AUTO) {\n      switch(width.unit) {\n        case unit.PX:\n          w = width.value;\n          break;\n      }\n    }\n    if(height && height.unit !== unit.AUTO) {\n      fixedHeight = true;\n      switch(height.unit) {\n        case unit.PX:\n          h = height.value;\n          break;\n        case unit.PERCENT:\n          h *= height.value * 0.01;\n          break;\n      }\n    }\n    // border影响x和y和尺寸\n    x += borderLeftWidth.value;\n    data.x = x;\n    y += borderTopWidth.value;\n    data.y = y;\n    w -= borderLeftWidth.value + borderRightWidth.value;\n    h -= borderTopWidth.value + borderBottomWidth.value;\n    this.__width = w;\n    this.__height = fixedHeight ? h : 0;\n  }\n\n  __layoutFlex(data) {\n    // 无children所以等同于block\n    this.__layoutBlock(data);\n  }\n\n  __layoutInline(data) {\n    let { x, y, w, h } = data;\n    this.__x = x;\n    this.__y = y;\n    let { style } = this;\n    let {\n      width,\n      height,\n      borderTopWidth,\n      borderRightWidth,\n      borderBottomWidth,\n      borderLeftWidth,\n    } = style;\n    // 除了auto外都是固定高度\n    let fixedWidth;\n    let fixedHeight;\n    if(width && width.unit !== unit.AUTO) {\n      fixedWidth = true;\n      switch(width.unit) {\n        case unit.PX:\n          w = width.value;\n          break;\n      }\n    }\n    if(height && height.unit !== unit.AUTO) {\n      fixedHeight = true;\n      switch(height.unit) {\n        case unit.PX:\n          h = height.value;\n          break;\n      }\n    }\n    // border影响x和y\n    x += borderLeftWidth.value;\n    data.x = x;\n    y += borderTopWidth.value;\n    data.y = y;\n    w -= borderLeftWidth.value + borderRightWidth.value;\n    h -= borderTopWidth.value + borderBottomWidth.value;\n    // 元素的width不能超过父元素w\n    this.__width = fixedWidth ? w : x - data.x;\n    this.__height = fixedHeight ? h : y - data.y;\n  }\n\n  __calAbs() {\n    return 0;\n  }\n\n  __emitEvent(e, force) {\n    let { event: { type }, x, y, covers } = e;\n    let { listener, style, rx, ry, outerWidth, outerHeight } = this;\n    if(style.display === 'none') {\n      return;\n    }\n    let cb;\n    if(listener.hasOwnProperty(type)) {\n      cb = listener[type];\n    }\n    if(force) {\n      cb && cb(e);\n    }\n    else if(x >= rx && y >= ry && x <= rx + outerWidth && y <= ry + outerHeight) {\n      for(let i = 0, len = covers.length; i < len; i++) {\n        let { x: x2, y: y2, w, h: h } = covers[i];\n        if(x >= x2 && y >= y2 && x <= x2 + w && y <= y2 + h) {\n          return;\n        }\n      }\n      if(!e.target) {\n        e.target = this;\n      }\n      covers.push({\n        x,\n        y,\n        w: outerWidth,\n        h: outerHeight,\n      });\n      cb && cb(e);\n    }\n  }\n\n  render(renderMode) {\n    super.render(renderMode);\n    if(renderMode === mode.SVG) {\n      this.__virtualDom = {\n        ...super.virtualDom,\n        type: 'geom',\n        content: [],\n      };\n    }\n  }\n\n  get tagName() {\n    return this.__tagName;\n  }\n  get baseLine() {\n    return this.__height;\n  }\n\n  static getImplement(name) {\n    if(!IMPLEMENT.hasOwnProperty(name)) {\n      throw new Error(`Geom has not register: ${name}`);\n    }\n    return IMPLEMENT[name];\n  }\n  static register(name, implement) {\n    if(IMPLEMENT.hasOwnProperty(name)) {\n      throw new Error(`Geom has already register: ${name}`);\n    }\n    IMPLEMENT[name] = implement;\n  }\n}\n\nexport default Geom;\n","import Xom from './Xom';\nimport Text from './Text';\nimport LineGroup from './LineGroup';\nimport Geom from '../geom/Geom';\nimport util from '../util';\nimport css from '../style/css';\nimport unit from '../style/unit';\nimport mode from '../mode';\n\nconst TAG_NAME = {\n  'div': true,\n  'span': true,\n};\nconst INLINE = {\n  'span': true,\n};\n\nclass Dom extends Xom {\n  constructor(tagName, props, children) {\n    super(tagName, props);\n    this.__children = children;\n    this.__flowChildren = []; // 非绝对定位孩子\n    this.__absChildren = []; // 绝对定位孩子\n    this.__lineGroups = []; // 一行inline元素组成的LineGroup对象后的存放列表\n    this.__flowY = 0; // 文档流布局结束后的y坐标，供absolute布局默认位置使用\n  }\n\n  /**\n   * 1. 封装string为Text节点\n   * 2. 打平children中的数组，变成一维\n   * 3. 合并相连的Text节点\n   * 4. 检测inline不能包含block和flex\n   * 5. 设置parent和prev/next和ctx和mode\n   */\n  __traverse(ctx, renderMode) {\n    let list = [];\n    this.__traverseChildren(this.children, list, ctx, renderMode);\n    for(let i = list.length - 1; i > 0; i--) {\n      let item = list[i];\n      if(item instanceof Text) {\n        let prev = list[i - 1];\n        if(prev instanceof Text) {\n          prev.content += item.content;\n          list.splice(i, 1);\n        }\n        else {\n          i--;\n        }\n      }\n    }\n    if(this.style.display === 'inline' && this.parent.style.display !== 'flex') {\n      for(let i = list.length - 1; i >= 0; i--) {\n        let item = list[i];\n        if(item instanceof Dom && item.style.display !== 'inline') {\n          throw new Error('inline can not contain block/flex');\n        }\n      }\n    }\n    let prev = null;\n    list.forEach(item => {\n      item.__ctx = ctx;\n      if(prev) {\n        prev.__next = item;\n      }\n      item.__parent = this;\n      item.__prev = prev;\n      if(item instanceof Text || item.style.position !== 'absolute') {\n        this.__flowChildren.push(item);\n      }\n      else {\n        this.__absChildren.push(item);\n      }\n    });\n    this.__children = list;\n  }\n\n  __traverseChildren(children, list, ctx, renderMode) {\n    if(Array.isArray(children)) {\n      children.forEach(item => {\n        this.__traverseChildren(item, list, ctx, renderMode);\n      });\n    }\n    else if(children instanceof Dom) {\n      list.push(children);\n      children.__traverse(ctx, renderMode);\n    }\n    // 图形没有children\n    else if(children instanceof Geom) {\n      list.push(children);\n    }\n    // 排除掉空的文本\n    else if(!util.isNil(children)) {\n      let text = new Text(children);\n      text.__renderMode = renderMode;\n      list.push(text);\n    }\n  }\n\n  // 合并设置style，包括继承和默认值，修改一些自动值和固定值，测量所有文字的宽度\n  __initStyle() {\n    let style = this.__style;\n    // 仅支持flex/block/inline/none\n    if(!style.display || ['flex', 'block', 'inline', 'none'].indexOf(style.display) === -1) {\n      if(INLINE.hasOwnProperty(this.tagName)) {\n        style.display = 'inline';\n      }\n      else {\n        style.display = 'block';\n      }\n    }\n    // 继承父元素样式\n    let parent = this.parent;\n    if(parent) {\n      let parentStyle = parent.style;\n      ['fontSize', 'fontWeight', 'fontStyle', 'lineHeight', 'wordBreak', 'color', 'textAlign'].forEach(k => {\n        if(!style.hasOwnProperty(k) && parentStyle.hasOwnProperty(k)) {\n          style[k] = parentStyle[k];\n        }\n      });\n    }\n    // 标准化处理，默认值、简写属性\n    css.normalize(style);\n    this.children.forEach(item => {\n      if(item instanceof Xom) {\n        item.__initStyle();\n      }\n      else {\n        item.__style = style;\n        // 文字首先测量所有字符宽度\n        item.__measure();\n      }\n    });\n  }\n\n  // 给定父宽度情况下，尝试行内放下后的剩余宽度，为负数即放不下\n  __tryLayInline(w, total) {\n    let { flowChildren, style: { width } } = this;\n    if(width.unit === unit.PX) {\n      return w - width.value;\n    }\n    else if(width.unit === unit.PERCENT) {\n      return w - total * width.value * 0.01;\n    }\n    for(let i = 0; i < flowChildren.length; i++) {\n      // 当放不下时直接返回，无需继续多余的尝试计算\n      if(w < 0) {\n        return w;\n      }\n      let item = flowChildren[i];\n      if(item instanceof Xom) {\n        w -= item.__tryLayInline(w, total);\n      }\n      else {\n        w -= item.textWidth;\n      }\n    }\n    return w;\n  }\n\n  // 设置y偏移值，递归包括children，此举在flex行元素的child进行justify-content对齐用\n  __offsetX(diff) {\n    super.__offsetX(diff);\n    this.flowChildren.forEach(item => {\n      if(item) {\n        item.__offsetX(diff);\n      }\n    });\n  }\n\n  // 设置y偏移值，递归包括children，此举在初步确定inline布局后设置元素vertical-align用\n  __offsetY(diff) {\n    super.__offsetY(diff);\n    this.flowChildren.forEach(item => {\n      if(item) {\n        item.__offsetY(diff);\n      }\n    });\n  }\n\n  __calAutoBasis(isDirectionRow, w, h, isRecursion) {\n    let b = 0;\n    let min = 0;\n    let max = 0;\n    let { mtw, mrw, mbw, mlw, ptw, prw, pbw, plw, flowChildren, style } = this;\n    // 计算需考虑style的属性\n    let {\n      width,\n      height,\n      borderTopWidth,\n      borderRightWidth,\n      borderBottomWidth,\n      borderLeftWidth,\n    } = style;\n    let main = isDirectionRow ? width : height;\n    if(main.unit === unit.PX) {\n      b = max = main.value;\n      // 递归时children的长度会影响flex元素的最小宽度\n      if(isRecursion) {\n        min = b;\n      }\n    }\n    // 递归children取最大值\n    flowChildren.forEach(item => {\n      if(item instanceof Xom) {\n        let { b: b2, min: min2, max: max2 } = item.__calAutoBasis(isDirectionRow, w, h, true);\n        b = Math.max(b, b2);\n        min = Math.max(min, min2);\n        max = Math.max(max, max2);\n      }\n      else if(isDirectionRow) {\n        min = Math.max(item.charWidth, min);\n        max = Math.max(item.textWidth, max);\n      }\n      else {\n        item.__layout({\n          x: 0,\n          y: 0,\n          w,\n          h,\n        }, true);\n        min = Math.max(min, item.height);\n        max = Math.max(max, item.height);\n      }\n    });\n    // margin/padding/border也得计算在内\n    if(isDirectionRow) {\n      let w = borderRightWidth.value + borderLeftWidth.value + mlw + mrw + plw + prw;\n      b += w;\n      max += w;\n      min += w;\n    }\n    else {\n      let h = borderTopWidth.value + borderBottomWidth.value + mtw + mbw + ptw + pbw;\n      b += h;\n      max += h;\n      min += h;\n    }\n    return { b, min, max };\n  }\n\n  __calAbs(isDirectionRow) {\n    let max = 0;\n    let { mtw, mrw, mbw, mlw, ptw, prw, pbw, plw, flowChildren, style } = this;\n    // 计算需考虑style的属性\n    let {\n      width,\n      height,\n      borderTopWidth,\n      borderRightWidth,\n      borderBottomWidth,\n      borderLeftWidth,\n    } = style;\n    let main = isDirectionRow ? width : height;\n    if(main.unit === unit.PX) {\n      max = main.value;\n    }\n    // 递归children取最大值\n    flowChildren.forEach(item => {\n      if(item instanceof Xom) {\n        let max2 = item.__calAbs(isDirectionRow);\n        max = Math.max(max, max2);\n      }\n      else if(isDirectionRow) {\n        max = Math.max(item.textWidth, max);\n      }\n      else {\n        item.__layout({\n          x: 0,\n          y: 0,\n          w: Infinity,\n          h: Infinity,\n        }, true);\n        max = Math.max(max, item.height);\n      }\n    });\n    // margin/padding/border也得计算在内\n    if(isDirectionRow) {\n      let w = borderRightWidth.value + borderLeftWidth.value + mlw + mrw + plw + prw;\n      max += w;\n    }\n    else {\n      let h = borderTopWidth.value + borderBottomWidth.value + mtw + mbw + ptw + pbw;\n      max += h;\n    }\n    return max;\n  }\n\n  // 本身block布局时计算好所有子元素的基本位置\n  __layoutBlock(data) {\n    let { x, y, w, h } = data;\n    this.__x = x;\n    this.__y = y;\n    this.__width = w;\n    let { flowChildren, style, lineGroups, mlw, mtw, mrw, mbw, plw, ptw, prw, pbw } = this;\n    let {\n      width,\n      height,\n      marginLeft,\n      marginRight,\n      borderTopWidth,\n      borderRightWidth,\n      borderBottomWidth,\n      borderLeftWidth,\n      textAlign,\n    } = style;\n    // 除了auto外都是固定高度\n    let fixedHeight;\n    if(width && width.unit !== unit.AUTO) {\n      switch(width.unit) {\n        case unit.PX:\n          w = width.value;\n          break;\n        case unit.PERCENT:\n          w *= width.value * 0.01;\n          break;\n      }\n    }\n    if(height && height.unit !== unit.AUTO) {\n      fixedHeight = true;\n      switch(height.unit) {\n        case unit.PX:\n          h = height.value;\n          break;\n        case unit.PERCENT:\n          h *= height.value * 0.01;\n          break;\n      }\n    }\n    // margin/padding/border影响x和y和尺寸\n    x += borderLeftWidth.value + mlw + plw;\n    data.x = x;\n    y += borderTopWidth.value + mtw + ptw;\n    data.y = y;\n    if(width.unit === unit.AUTO) {\n      w -= borderLeftWidth.value + borderRightWidth.value + mlw + mrw + plw + prw;\n    }\n    if(height.unit === unit.AUTO) {\n      h -= borderTopWidth.value + borderBottomWidth.value + mtw + mbw + ptw + pbw;\n    }\n    // 递归布局，将inline的节点组成lineGroup一行\n    let lineGroup = new LineGroup(x, y);\n    flowChildren.forEach(item => {\n      if(item instanceof Xom) {\n        if(item.style.display === 'inline') {\n          // inline开头，不用考虑是否放得下直接放\n          if(x === data.x) {\n            lineGroup.add(item);\n            item.__layout({\n              x,\n              y,\n              w,\n              h,\n            });\n            x += item.outerWidth;\n          }\n          else {\n            // 非开头先尝试是否放得下\n            let fw = item.__tryLayInline(w - x, w);\n            // 放得下继续\n            if(fw >= 0) {\n              item.__layout({\n                x,\n                y,\n                w,\n                h,\n              });\n            }\n            // 放不下处理之前的lineGroup，并重新开头\n            else {\n              lineGroups.push(lineGroup);\n              lineGroup.verticalAlign();\n              x = data.x;\n              y += lineGroup.height;\n              item.__layout({\n                x: data.x,\n                y,\n                w,\n                h,\n              });\n              lineGroup = new LineGroup(x, y);\n            }\n            x += item.outerWidth;\n            lineGroup.add(item);\n          }\n        }\n        else {\n          // block先处理之前可能的lineGroup\n          if(lineGroup.size) {\n            lineGroups.push(lineGroup);\n            lineGroup.verticalAlign();\n            y += lineGroup.height;\n            lineGroup = new LineGroup(data.x, y);\n          }\n          item.__layout({\n            x: data.x,\n            y,\n            w,\n            h,\n          });\n          x = data.x;\n          y += item.outerHeight;\n        }\n      }\n      // 文字和inline类似\n      else {\n        // x开头，不用考虑是否放得下直接放\n        if(x === data.x) {\n          lineGroup.add(item);\n          item.__layout({\n            x,\n            y,\n            w,\n            h,\n          });\n          x += item.width;\n        }\n        else {\n          // 非开头先尝试是否放得下\n          let fw = item.__tryLayInline(w - x, w);\n          // 放得下继续\n          if(fw >= 0) {\n            item.__layout({\n              x,\n              y,\n              w,\n              h,\n            });\n          }\n          // 放不下处理之前的lineGroup，并重新开头\n          else {\n            lineGroups.push(lineGroup);\n            lineGroup.verticalAlign();\n            x = data.x;\n            y += lineGroup.height;\n            item.__layout({\n              x: data.x,\n              y,\n              w,\n              h,\n            });\n            lineGroup = new LineGroup(x, y);\n          }\n          x += item.width;\n          lineGroup.add(item);\n        }\n      }\n    });\n    // 结束后处理可能遗留的最后的lineGroup\n    if(lineGroup.size) {\n      lineGroups.push(lineGroup);\n      lineGroup.verticalAlign();\n      y += lineGroup.height;\n    }\n    // text-align\n    if(['center', 'right'].indexOf(textAlign) > -1) {\n      lineGroups.forEach(lineGroup => {\n        let diff = w - lineGroup.width;\n        if(diff > 0) {\n          lineGroup.horizonAlign(textAlign === 'center' ? diff * 0.5 : diff);\n        }\n      });\n    }\n    this.__width = w;\n    this.__height = fixedHeight ? h : y - data.y;\n    this.__flowY = y;\n    // 处理margin:xx auto居中对齐\n    if(marginLeft.unit === unit.AUTO && marginRight.unit === unit.AUTO && width.unit !== unit.AUTO) {\n      let ow = this.outerWidth;\n      if(ow < data.w) {\n        this.__offsetX((data.w - ow) * 0.5);\n      }\n    }\n  }\n\n  // 弹性布局时的计算位置\n  __layoutFlex(data) {\n    let { x, y, w, h } = data;\n    this.__x = x;\n    this.__y = y;\n    this.__width = w;\n    let { flowChildren, style, mlw, mtw, mrw, mbw, plw, ptw, prw, pbw } = this;\n    let {\n      width,\n      height,\n      flexDirection,\n      borderTopWidth,\n      borderRightWidth,\n      borderBottomWidth,\n      borderLeftWidth,\n      justifyContent,\n      alignItems,\n    } = style;\n    // 除了auto外都是固定高度\n    let fixedWidth;\n    let fixedHeight;\n    if(width && width.unit !== unit.AUTO) {\n      fixedWidth = true;\n      switch(width.unit) {\n        case unit.PX:\n          w = width.value;\n          break;\n        case unit.PERCENT:\n          w *= width.value * 0.01;\n          break;\n      }\n    }\n    if(height && height.unit !== unit.AUTO) {\n      fixedHeight = true;\n      switch(height.unit) {\n        case unit.PX:\n          h = height.value;\n          break;\n        case unit.PERCENT:\n          h *= height.value * 0.01;\n          break;\n      }\n    }\n    // margin/padding/border影响x和y和尺寸\n    x += borderLeftWidth.value + mlw + plw;\n    data.x = x;\n    y += borderTopWidth.value + mtw + ptw;\n    data.y = y;\n    if(width.unit === unit.AUTO) {\n      w -= borderLeftWidth.value + borderRightWidth.value + mlw + mrw + plw + prw;\n    }\n    if(height.unit === unit.AUTO) {\n      h -= borderTopWidth.value + borderBottomWidth.value + mtw + mbw + ptw + pbw;\n    }\n    let isDirectionRow = flexDirection === 'row';\n    // column时height可能为auto，此时取消伸展，退化为类似block布局，但所有子元素强制block\n    if(!isDirectionRow && !fixedHeight) {\n      flowChildren.forEach(item => {\n        if(item instanceof Xom) {\n          const { style, style: { display, flexDirection, width }} = item;\n          // column的flex的child如果是inline，变为block\n          if(display === 'inline') {\n            style.display = 'block';\n          }\n          // 竖向flex的child如果是横向flex，宽度自动的话要等同于父flex的宽度\n          else if(display === 'flex' && flexDirection === 'row' && width.unit === unit.AUTO) {\n            width.value = w;\n            width.unit = unit.PX;\n          }\n          item.__layout({\n            x,\n            y,\n            w,\n            h,\n          });\n          y += item.outerHeight;\n        }\n        else {\n          item.__layout({\n            x,\n            y,\n            w,\n            h,\n          });\n          y += item.outerHeight;\n        }\n      });\n      this.__width = w;\n      this.__height = y - data.y;\n      return;\n    }\n    // 计算伸缩基数\n    let growList = [];\n    let shrinkList = [];\n    let basisList = [];\n    let minList = [];\n    let growSum = 0;\n    let shrinkSum = 0;\n    let basisSum = 0;\n    let maxSum = 0;\n    flowChildren.forEach(item => {\n      if(item instanceof Xom) {\n        let { flexGrow, flexShrink, flexBasis } = item.style;\n        growList.push(flexGrow);\n        shrinkList.push(flexShrink);\n        growSum += flexGrow;\n        shrinkSum += flexShrink;\n        let { b, min, max } = item.__calAutoBasis(isDirectionRow, w, h);\n        // 根据basis不同，计算方式不同\n        if(flexBasis.unit === unit.AUTO) {\n          basisList.push(max);\n          basisSum += max;\n        }\n        else if(flexBasis.unit === unit.PX) {\n          b = flexBasis.value;\n          basisList.push(b);\n          basisSum += b;\n        }\n        else if(flexBasis.unit === unit.PERCENT) {\n          b = (isDirectionRow ? w : h) * flexBasis.value;\n          basisList.push(b);\n          basisSum += b;\n        }\n        maxSum += max;\n        minList.push(min);\n      }\n      else {\n        growList.push(0);\n        shrinkList.push(1);\n        shrinkSum += 1;\n        if(isDirectionRow) {\n          basisList.push(item.textWidth);\n          basisSum += item.textWidth;\n          maxSum += item.textWidth;\n          minList.push(item.charWidth);\n        }\n        else {\n          item.__layout({\n            x: 0,\n            y: 0,\n            w,\n            h,\n          }, true);\n          basisList.push(item.height);\n          basisSum += item.height;\n          maxSum += item.height;\n          minList.push(item.height);\n        }\n      }\n    });\n    let maxCross = 0;\n    // 判断是否超出，决定使用grow还是shrink\n    let isOverflow = maxSum > (isDirectionRow ? w : h);\n    flowChildren.forEach((item, i) => {\n      let main;\n      let shrink = shrinkList[i];\n      let grow = growList[i];\n      // 计算主轴长度\n      if(isOverflow) {\n        let overflow = basisSum - (isDirectionRow ? w : h);\n        main = shrink ? (basisList[i] - overflow * shrink / shrinkSum) : basisList[i];\n      }\n      else {\n        let free = (isDirectionRow ? w : h) - basisSum;\n        main = grow ? (basisList[i] + free * grow / growSum) : basisList[i];\n      }\n      // 主轴长度的最小值不能小于元素的最小长度，比如横向时的字符宽度\n      main = Math.max(main, minList[i]);\n      if(item instanceof Xom) {\n        const { style, mlw, mtw, mrw, mbw, plw, ptw, prw, pbw, style: {\n          display,\n          flexDirection,\n          width,\n          height,\n          borderTopWidth,\n          borderRightWidth,\n          borderBottomWidth,\n          borderLeftWidth,\n        }} = item;\n        if(isDirectionRow) {\n          // row的flex的child如果是inline，变为block\n          if(display === 'inline') {\n            style.display = 'block';\n          }\n          // 横向flex的child如果是竖向flex，高度自动的话要等同于父flex的高度\n          else if(display === 'flex' && flexDirection === 'column' && fixedHeight && height.unit === unit.AUTO) {\n            height.value = h;\n            height.unit = unit.PX;\n          }\n          item.__layout({\n            x,\n            y,\n            w: main,\n            h,\n          })\n        }\n        else {\n          // column的flex的child如果是inline，变为block\n          if(display === 'inline') {\n            style.display = 'block';\n          }\n          // 竖向flex的child如果是横向flex，宽度自动的话要等同于父flex的宽度\n          else if(display === 'flex' && flexDirection === 'row' && width.unit === unit.AUTO) {\n            width.value = w;\n            width.unit = unit.PX;\n          }\n          item.__layout({\n            x,\n            y,\n            w,\n            h: main,\n          });\n        }\n        // 重设因伸缩而导致的主轴长度\n        if(isOverflow && shrink) {\n          if(isDirectionRow) {\n            item.__width = main - mlw - mrw - plw - prw - borderLeftWidth.value - borderRightWidth.value;\n          }\n          else {\n            item.__height = main - mtw - mbw - ptw - pbw - borderTopWidth.value - borderBottomWidth.value;\n          }\n        }\n        else if(!isOverflow && grow) {\n          if(isDirectionRow) {\n            item.__width = main - mlw - mrw - plw - prw - borderLeftWidth.value - borderRightWidth.value;\n          }\n          else {\n            item.__height = main - mtw - mbw - ptw - pbw - borderTopWidth.value - borderBottomWidth.value;\n          }\n        }\n      }\n      else {\n        item.__layout({\n          x,\n          y,\n          w: isDirectionRow ? main : w,\n          h: isDirectionRow ? h : main,\n        });\n      }\n      if(isDirectionRow) {\n        x += item.outerWidth;\n        maxCross = Math.max(maxCross, item.outerHeight);\n      }\n      else {\n        y += item.outerHeight;\n        maxCross = Math.max(maxCross, item.outerWidth);\n      }\n    });\n    // 计算主轴剩余时要用真实剩余空间而不能用伸缩剩余空间\n    let diff = isDirectionRow ? w - x + data.x : h - y + data.y;\n    // 主轴侧轴对齐方式\n    if(!isOverflow && growSum === 0 && diff > 0) {\n      let len = flowChildren.length;\n      if(justifyContent === 'flex-end') {\n        for(let i = 0; i < len; i++) {\n          let child = flowChildren[i];\n          isDirectionRow ? child.__offsetX(diff) : child.__offsetY(diff);\n        }\n      }\n      else if(justifyContent === 'center') {\n        let center = diff * 0.5;\n        for(let i = 0; i < len; i++) {\n          let child = flowChildren[i];\n          isDirectionRow ? child.__offsetX(center) : child.__offsetY(center);\n        }\n      }\n      else if(justifyContent === 'space-between') {\n        let between = diff / (len - 1);\n        for(let i = 1; i < len; i++) {\n          let child = flowChildren[i];\n          isDirectionRow ? child.__offsetX(between * i) : child.__offsetY(between * i);\n        }\n      }\n      else if(justifyContent === 'space-around') {\n        let around = diff / (len + 1);\n        for(let i = 0; i < len; i++) {\n          let child = flowChildren[i];\n          isDirectionRow ? child.__offsetX(around * (i + 1)) : child.__offsetY(around * (i + 1));\n        }\n      }\n    }\n    // 子元素侧轴伸展\n    if(isDirectionRow) {\n      // 父元素固定高度，子元素可能超过，侧轴最大长度取固定高度\n      if(fixedHeight) {\n        maxCross = h;\n      }\n      y += maxCross;\n    }\n    else {\n      if(fixedWidth) {\n        maxCross = w;\n      }\n    }\n    // 侧轴对齐\n    if(alignItems === 'stretch') {\n      // 短侧轴的children伸张侧轴长度至相同，超过的不动，固定宽高的也不动\n      flowChildren.forEach(item => {\n        let { style, mlw, mtw, mrw, mbw, ptw, prw, plw, pbw } = item;\n        if(isDirectionRow) {\n          if(style.height.unit === unit.AUTO) {\n            item.__height = maxCross - mtw - mbw - ptw - pbw\n              - style.borderTopWidth.value\n              - style.borderBottomWidth.value;\n          }\n        }\n        else {\n          if(style.width.unit === unit.AUTO) {\n            item.__width = maxCross - mlw - mrw - plw - prw\n              - borderRightWidth.value\n              - borderLeftWidth.value;\n          }\n        }\n      });\n    }\n    else if(alignItems === 'center') {\n      flowChildren.forEach(item => {\n        let diff = maxCross - item.outerHeight;\n        if(diff > 0) {\n          item.__offsetY(diff * 0.5);\n        }\n      });\n    }\n    else if(alignItems === 'flex-end') {\n      flowChildren.forEach(item => {\n        let diff = maxCross - item.outerHeight;\n        if(diff > 0) {\n          item.__offsetY(diff);\n        }\n      });\n    }\n    this.__width = w;\n    this.__height = fixedHeight ? h : y - data.y;\n    this.__flowY = y;\n  }\n\n  // inline比较特殊，先简单顶部对其，后续还需根据vertical和lineHeight计算y偏移\n  __layoutInline(data) {\n    let { x, y, w, h } = data;\n    this.__x = x;\n    this.__y = y;\n    let maxX = x;\n    let { flowChildren, style, lineGroups, mlw, mtw, mrw, mbw, plw, ptw, prw, pbw } = this;\n    let {\n      width,\n      height,\n      marginLeft,\n      marginRight,\n      borderTopWidth,\n      borderRightWidth,\n      borderBottomWidth,\n      borderLeftWidth,\n      textAlign,\n    } = style;\n    // 除了auto外都是固定高度\n    let fixedWidth;\n    let fixedHeight;\n    if(width && width.unit !== unit.AUTO) {\n      fixedWidth = true;\n      switch(width.unit) {\n        case unit.PX:\n          w = width.value;\n          break;\n        case unit.PERCENT:\n          w *= width.value * 0.01;\n          break;\n      }\n    }\n    if(height && height.unit !== unit.AUTO) {\n      fixedHeight = true;\n      switch(height.unit) {\n        case unit.PX:\n          h = height.value;\n          break;\n        case unit.PERCENT:\n          h *= height.value * 0.01;\n          break;\n      }\n    }\n    // margin/padding/border影响x和y和尺寸\n    x += borderLeftWidth.value + mlw + plw;\n    data.x = x;\n    y += borderTopWidth.value + mtw + ptw;\n    data.y = y;\n    if(width.unit === unit.AUTO) {\n      w -= borderLeftWidth.value + borderRightWidth.value + mlw + mrw + plw + prw;\n    }\n    if(height.unit === unit.AUTO) {\n      h -= borderTopWidth.value + borderBottomWidth.value + mtw + mbw + ptw + pbw;\n    }\n    // 递归布局，将inline的节点组成lineGroup一行\n    let lineGroup = new LineGroup(x, y);\n    flowChildren.forEach(item => {\n      if(item instanceof Xom) {\n        // 绝对定位跳过\n        if(item.style.position === 'absolute') {\n          this.absChildren.push(item);\n          return;\n        }\n        item.style.display = 'inline';\n        // inline开头，不用考虑是否放得下直接放\n        if(x === data.x) {\n          lineGroup.add(item);\n          item.__layout({\n            x,\n            y,\n            w,\n            h,\n          });\n          x += item.outerWidth;\n          maxX = Math.max(maxX, x);\n        }\n        else {\n          // 非开头先尝试是否放得下\n          let fw = item.__tryLayInline(w - x, w);\n          // 放得下继续\n          if(fw >= 0) {\n            item.__layout({\n              x,\n              y,\n              w,\n              h,\n            });\n          }\n          // 放不下处理之前的lineGroup，并重新开头\n          else {\n            lineGroups.push(lineGroup);\n            lineGroup.verticalAlign();\n            x = data.x;\n            y += lineGroup.height;\n            item.__layout({\n              x: data.x,\n              y,\n              w,\n              h,\n            });\n            lineGroup = new LineGroup(x, y);\n          }\n          x += item.outerWidth;\n          maxX = Math.max(maxX, x);\n          lineGroup.add(item);\n        }\n      }\n      // inline里的其它只有文本\n      else {\n        if(x === data.x) {\n          lineGroup.add(item);\n          item.__layout({\n            x,\n            y,\n            w,\n            h,\n          });\n          x += item.width;\n          maxX = Math.max(maxX, x);\n        }\n        else {\n          // 非开头先尝试是否放得下\n          let fw = item.__tryLayInline(w - x, w);\n          // 放得下继续\n          if(fw >= 0) {\n            item.__layout({\n              x,\n              y,\n              w,\n              h,\n            });\n          }\n          // 放不下处理之前的lineGroup，并重新开头\n          else {\n            lineGroups.push(lineGroup);\n            lineGroup.verticalAlign();\n            x = data.x;\n            y += lineGroup.height;\n            item.__layout({\n              x: data.x,\n              y,\n              w,\n              h,\n            });\n            lineGroup = new LineGroup(x, y);\n          }\n          x += item.width;\n          maxX = Math.max(maxX, x);\n          lineGroup.add(item);\n        }\n      }\n    });\n    // 结束后处理可能遗留的最后的lineGroup，children为空时可能size为空\n    if(lineGroup.size) {\n      lineGroups.push(lineGroup);\n      lineGroup.verticalAlign();\n      y += lineGroup.height;\n    }\n    // text-align\n    if(['center', 'right'].indexOf(textAlign) > -1) {\n      lineGroups.forEach(lineGroup => {\n        let diff = w - lineGroup.width;\n        if(diff > 0) {\n          lineGroup.horizonAlign(textAlign === 'center' ? diff * 0.5 : diff);\n        }\n      });\n    }\n    // 元素的width不能超过父元素w\n    this.__width = fixedWidth ? w : maxX - data.x;\n    this.__height = fixedHeight ? h : y - data.y;\n    this.__flowY = y;\n    // 处理margin:xx auto居中对齐\n    if(marginLeft.unit === unit.AUTO && marginRight.unit === unit.AUTO && width.unit !== unit.AUTO) {\n      let ow = this.outerWidth;\n      if(ow < data.w) {\n        this.__offsetX((data.w - ow) * 0.5);\n      }\n    }\n  }\n\n  // 只针对绝对定位children布局\n  __layoutAbs(container) {\n    let { x, y, flowY, width, height, children, absChildren, style, mlw, mtw, mrw, mbw, plw, ptw, prw, pbw } = this;\n    let {\n      borderTopWidth,\n      borderLeftWidth,\n    } = style;\n    let pw = width + plw + prw;\n    let ph = height + ptw + pbw;\n    // 递归进行，遇到absolute/relative的设置新容器\n    children.forEach(item => {\n      if(item instanceof Dom) {\n        item.__layoutAbs(['absolute', 'relative'].indexOf(item.style.position) > -1 ? item : container);\n      }\n    });\n    // 对absolute的元素进行相对容器布局\n    absChildren.forEach(item => {\n      let { mtw, mlw, style, style: {\n        left, top, right, bottom, width: width2, height: height2\n      } } = item;\n      let x2, y2, w2, h2;\n      // width优先级高于right高于left，即最高left+right，其次left+width，再次right+width，然后仅申明单个，最次全部auto\n      if(left.unit !== unit.AUTO && right.unit !== unit.AUTO) {\n        x2 = left.unit === unit.PX ? x + mlw + borderLeftWidth.value + left.value : x + mlw + borderLeftWidth.value + width * left.value * 0.01;\n        w2 = right.unit === unit.PX ? x + mlw + borderLeftWidth.value + pw - right.value - x2 : x + mlw + borderLeftWidth.value + pw - width * right.value * 0.01 - x2;\n      }\n      else if(left.unit !== unit.AUTO && width2.unit !== unit.AUTO) {\n        x2 = left.unit === unit.PX ? x + mlw + borderLeftWidth.value + left.value : x + mlw + borderLeftWidth.value + width * left.value * 0.01;\n        w2 = width2.unit === unit.PX ? width2.value : width;\n      }\n      else if(right.unit !== unit.AUTO && width2.unit !== unit.AUTO) {\n        w2 = width2.unit === unit.PX ? width2.value : width;\n        let widthPx = width2.unit === unit.PX ? width2.value : width * width2.value * 0.01;\n        x2 = right.unit === unit.PX ? x + mlw + borderLeftWidth.value + pw - right.value - widthPx : x + mlw + borderLeftWidth.value + pw - width * right.value * 0.01 - widthPx;\n      }\n      else if(left.unit !== unit.AUTO) {\n        x2 = left.unit === unit.PX ? x + left.value : x + mlw + borderLeftWidth.value + width * left.value * 0.01;\n        w2 = item.__calAbs(true);\n      }\n      else if(right.unit !== unit.AUTO) {\n        w2 = item.__calAbs(true);\n        x2 = right.unit === unit.PX ? x + mlw + borderLeftWidth.value + pw - right.value - w2 : x + mlw + borderLeftWidth.value + pw - width * right.value * 0.01 - w2;\n      }\n      else if(width2.unit !== unit.AUTO) {\n        x2 = x + mlw + borderLeftWidth.value;\n        w2 = width2.unit === unit.PX ? width2.value : width;\n      }\n      else {\n        x2 = x + mlw + borderLeftWidth.value;\n        w2 = item.__calAbs(true);\n      }\n      // top/bottom/height优先级同上\n      if(top.unit !== unit.AUTO && bottom.unit !== unit.AUTO) {\n        y2 = top.unit === unit.PX ? y + top.value : y + mtw + borderTopWidth.value + height * top.value * 0.01;\n        h2 = bottom.unit === unit.PX ? y + mtw + borderTopWidth.value + ph - bottom.value - y2 : y + mtw + borderTopWidth.value + ph - height * bottom.value * 0.01 - y2;\n        style.height = {\n          value: h2,\n          unit: unit.PX,\n        };\n      }\n      else if(top.unit !== unit.AUTO && height2.unit !== unit.AUTO) {\n        y2 = top.unit === unit.PX ? y + top.value : y + mtw + borderTopWidth.value + height * top.value * 0.01;\n        h2 = height2.unit === unit.PX ? height2.value : height;\n      }\n      else if(bottom.unit !== unit.AUTO && height2.unit !== unit.AUTO) {\n        h2 = height2.unit === unit.PX ? height2.value : height;\n        let heightPx = height2.unit === unit.PX ? height2.value : height * height2.value * 0.01;\n        y2 = bottom.unit === unit.PX ? y + mtw + borderTopWidth.value + ph - bottom.value - heightPx : y + mtw + borderTopWidth.value + ph - height * bottom.value * 0.01 - heightPx;\n      }\n      else if(top.unit !== unit.AUTO) {\n        y2 = top.unit === unit.PX ? y + top.value : y + mtw + borderTopWidth.value + height * top.value * 0.01;\n        h2 = item.__calAbs();\n      }\n      else if(bottom.unit !== unit.AUTO) {\n        h2 = item.__calAbs();\n        y2 = bottom.unit === unit.PX ? y + mtw + borderTopWidth.value + ph - bottom.value - h2 : y + mtw + borderTopWidth.value + ph - height * bottom.value * 0.01 - h2;\n      }\n      else if(height2.unit !== unit.AUTO) {\n        y2 = flowY + mtw + borderTopWidth.value;\n        h2 = height2.unit === unit.PX ? height2.value : height;\n      }\n      else {\n        y2 = flowY + mtw + borderTopWidth.value;\n        h2 = item.__calAbs();\n      }\n      // absolute时inline强制block\n      if(style.display === 'inline') {\n        style.display = 'block';\n      }\n      item.__layout({\n        x: x2,\n        y: y2,\n        w: w2,\n        h: h2,\n      });\n    });\n  }\n\n  __emitEvent(e, force) {\n    let { event: { type }, x, y, covers } = e;\n    let { listener, children, style, rx, ry, outerWidth, outerHeight } = this;\n    if(style.display === 'none') {\n      return;\n    }\n    let cb;\n    if(listener.hasOwnProperty(type)) {\n      cb = listener[type];\n    }\n    let hasChildEmit;\n    // 先响应absolute/relative高优先级\n    for(let i = children.length - 1; i >= 0; i--) {\n      let child = children[i];\n      if(child instanceof Xom && ['absolute', 'relative'].indexOf(child.style.position) > -1) {\n        if(child.__emitEvent(e, force)) {\n          hasChildEmit = true;\n        }\n      }\n    }\n    // 再看普通流\n    for(let i = children.length - 1; i >= 0; i--) {\n      let child = children[i];\n      if(child instanceof Xom && ['absolute', 'relative'].indexOf(child.style.position) === -1) {\n        if(child.__emitEvent(e, force)) {\n          hasChildEmit = true;\n        }\n      }\n    }\n    if(force) {\n      cb && cb(e);\n      return;\n    }\n    // child触发则parent一定触发\n    if(hasChildEmit) {\n      covers.push({\n        x,\n        y,\n        w: outerWidth,\n        h: outerHeight,\n      });\n      cb && cb(e);\n    }\n    // 否则判断坐标是否位于自己内部，以及没被遮挡\n    else if(x >= rx && y >= ry && x <= rx + outerWidth && y <= ry + outerHeight) {\n      for(let i = 0, len = covers.length; i < len; i++) {\n        let { x: x2, y: y2, w, h: h } = covers[i];\n        if(x >= x2 && y >= y2 && x <= x2 + w && y <= y2 + h) {\n          return;\n        }\n      }\n      if(!e.target) {\n        e.target = this;\n      }\n      covers.push({\n        x,\n        y,\n        w: outerWidth,\n        h: outerHeight,\n      });\n      cb && cb(e);\n    }\n  }\n\n  render(renderMode) {\n    super.render(renderMode);\n    let { style, flowChildren, children } = this;\n    let {\n      display,\n      position,\n      top,\n      right,\n      bottom,\n      left,\n      height: h,\n    } = style;\n    if(display === 'none') {\n      return;\n    }\n    // 先绘制static\n    flowChildren.forEach(item => {\n      if(item instanceof Text || item.style.position === 'static') {\n        item.render(renderMode);\n      }\n    });\n    // 再绘制relative和absolute\n    children.forEach(item => {\n      if((item instanceof Xom) && ['relative', 'absolute'].indexOf(item.style.position) > -1) {\n        item.render(renderMode);\n      }\n    });\n    if(renderMode === mode.SVG) {\n      this.__virtualDom = {\n        ...super.virtualDom,\n        type: 'dom',\n        children: this.children.map(item => item.virtualDom),\n      };\n    }\n  }\n\n  get tagName() {\n    return this.__tagName;\n  }\n  get children() {\n    return this.__children;\n  }\n  get flowChildren() {\n    return this.__flowChildren;\n  }\n  get absChildren() {\n    return this.__absChildren;\n  }\n  get lineGroups() {\n    return this.__lineGroups;\n  }\n  get baseLine() {\n    let len = this.lineGroups.length;\n    if(len) {\n      let last = this.lineGroups[len - 1];\n      return last.y - this.y + last.baseLine;\n    }\n    return this.y;\n  }\n  get flowY() {\n    return this.__flowY;\n  }\n\n  static isValid(s) {\n    return TAG_NAME.hasOwnProperty(s);\n  }\n}\n\nexport default Dom;\n","import util from './util';\n\nfunction diff(elem, ovd, nvd) {\n  if(ovd.type === 'dom') {\n    if(nvd.type === 'dom') {\n      diffD2D(elem, ovd, nvd);\n    }\n    else if(nvd.type === 'text') {\n      replaceWith(elem, nvd);\n    }\n    else if(nvd.type === 'geom') {\n      diffD2G(elem, ovd, nvd);\n    }\n  }\n  else if(nvd.type === 'text') {\n    if(nvd.type === 'dom') {\n      replaceWith(elem, nvd);\n    }\n    else if(nvd.type === 'text') {\n      diffT2T(elem, ovd, nvd);\n    }\n    else if(nvd.type === 'geom') {\n      replaceWith(elem, nvd);\n    }\n  }\n  else if(nvd.type === 'geom') {\n    if(nvd.type === 'dom') {\n      diffG2D(elem, ovd, nvd);\n    }\n    else if(nvd.type === 'text') {\n      replaceWith(elem, nvd);\n    }\n    else if(nvd.type === 'geom') {\n      diffG2G(elem, ovd, nvd);\n    }\n  }\n}\n\nfunction diffD2D(elem, ovd, nvd) {\n  diffBb(elem.firstChild, ovd.bb, nvd.bb);\n  let ol = ovd.children.length;\n  let nl = nvd.children.length;\n  let i = 0;\n  let lastChild = elem.lastChild;\n  let cns = lastChild.childNodes;\n  for(; i < Math.min(ol, nl); i++) {\n    diff(cns[i], ovd.children[i], nvd.children[i]);\n  }\n  if(i < ol) {\n    for(; i < ol; i++) {\n      removeAt(lastChild, cns, i);\n    }\n  }\n  else if(i < nl) {\n    for(; i < nl; i++) {\n      insertAt(lastChild, cns, i, nvd.children[i]);\n    }\n  }\n}\n\nfunction diffD2G(elem, ovd, nvd) {\n  diffBb(elem.firstChild, ovd.bb, nvd.bb);\n  replaceWith(elem.lastChild, nvd.content);\n}\n\nfunction diffT2T(elem, ovd, nvd) {\n  let ol = ovd.children.length;\n  let nl = nvd.children.length;\n  let i = 0;\n  for(; i < Math.min(ol, nl); i++) {\n    diffItem(elem, i, ovd.children[i], nvd.children[i], true);\n  }\n  let cns = elem.childNodes;\n  if(i < ol) {\n    for(; i < ol; i++) {\n      removeAt(elem, cns, i);\n    }\n  }\n  else if(i < nl) {\n    for(; i < nl; i++) {\n      insertAt(elem, cns, i, nvd.children[i]);\n    }\n  }\n}\n\nfunction diffG2D(elem, ovd, nvd) {\n  diffBb(elem.firstChild, ovd.bb, nvd.bb);\n  replaceWith(elem.lastChild, nvd.children);\n}\n\nfunction diffG2G(elem, ovd, nvd) {\n  diffBb(elem.firstChild, ovd.bb, nvd.bb);\n  let ol = ovd.content.length;\n  let nl = nvd.content.length;\n  let i = 0;\n  let lastChild = elem.lastChild;\n  let cns = lastChild.childNodes;\n  for(; i < Math.min(ol, nl); i++) {\n    diffItem(lastChild, i, ovd.content[i], nvd.content[i]);\n  }\n  if(i < ol) {\n    for(; i < ol; i++) {\n      removeAt(lastChild, cns, i);\n    }\n  }\n  else if(i < nl) {\n    for(; i < nl; i++) {\n      insertAt(lastChild, cns, i, nvd.content[i]);\n    }\n  }\n}\n\nfunction diffBb(elem, obb, nbb) {\n  let ol = obb.length;\n  let nl = nbb.length;\n  let i = 0;\n  for(; i < Math.min(ol, nl); i++) {\n    diffItem(elem, i, obb[i], nbb[i]);\n  }\n  let cns = elem.childNodes;\n  if(i < ol) {\n    for(; i < ol; i++) {\n      removeAt(elem, cns, i);\n    }\n  }\n  else if(i < nl) {\n    for(; i < nl; i++) {\n      insertAt(elem, cns, i, nbb[i]);\n    }\n  }\n}\n\nfunction diffItem(elem, i, ovd, nvd, isText) {\n  let cns = elem.childNodes;\n  if(ovd.tagName !== nvd.tagName) {\n    replaceWith(cns[i], nvd);\n  }\n  else {\n    let op = {};\n    for(let j = 0, len = ovd.props.length; j < len; j++) {\n      let prop = ovd.props[j];\n      let [k, v] = prop;\n      op[k] = v;\n    }\n    for(let j = 0, len = nvd.props.length; j < len; j++) {\n      let prop = nvd.props[j];\n      let [k, v] = prop;\n      // 已有不等更新，没有添加\n      if(op.hasOwnProperty(k)) {\n        if(op[k] !== v) {\n          cns[i].setAttribute(k, v);\n        }\n        delete op[k];\n      }\n      else {\n        cns[i].setAttribute(k, v);\n      }\n    }\n    // 多余的删除\n    for(var k in op) {\n      if(op.hasOwnProperty(k)) {\n        cns[i].removeAttribute(k);\n      }\n    }\n    if(isText && ovd.content !== nvd.content) {\n      cns[i].textContent = nvd.content;\n    }\n  }\n}\n\nfunction replaceWith(elem, vd) {\n  let res;\n  if(Array.isArray(vd)) {\n    res = '';\n    vd.forEach(item => {\n      res += util.joinVirtualDom(item);\n    });\n  }\n  else {\n    res = util.joinVirtualDom(vd);\n  }\n  elem.insertAdjacentHTML('afterend', res);\n  elem.parentNode.removeChild(elem);\n}\n\nfunction insertAt(elem, cns, index, vd) {\n  let res = util.joinVirtualDom(vd);\n  if(index >= cns.length) {\n    elem.insertAdjacentHTML('beforeend', res);\n  }\n  else {\n    cns[index].insertAdjacentHTML('beforebegin', res);\n  }\n}\n\nfunction removeAt(elem, cns, index) {\n  if(cns[index]) {\n    elem.removeChild(cns[index]);\n  }\n}\n\nexport default diff;\n","import Dom from '../node/Dom';\nimport util from '../util';\nimport mode from '../mode';\nimport domDiff from '../domDiff';\n\nfunction getDom(dom) {\n  if(util.isString(dom)) {\n    let o = document.querySelector(dom);\n    if(!o) {\n      throw new Error('can not find dom of selector: ' + dom);\n    }\n    return o;\n  }\n  if(!dom) {\n    throw new Error('can not find dom: ' + dom);\n  }\n  return dom;\n}\n\nfunction renderProp(k, v) {\n  let s = Array.isArray(v) ? util.joinSourceArray(v) : util.stringify(v);\n  if(k === 'className') {\n    k = 'class';\n  }\n  return ' ' + k + '=\"' + util.encodeHtml(s, true) + '\"';\n}\n\nclass Root extends Dom {\n  constructor(tagName, props, children) {\n    super(tagName, props, children);\n    this.__node = null; // 真实DOM引用\n  }\n\n  __initProps() {\n    if(this.props.width !== undefined) {\n      let value = parseInt(this.props.width);\n      if(!isNaN(value) && value > 0) {\n        this.__width = value;\n      }\n    }\n    if(this.props.height !== undefined) {\n      let value = parseInt(this.props.height);\n      if(!isNaN(value) && value > 0) {\n        this.__height = value;\n      }\n    }\n  }\n\n  __genHtml() {\n    let res = `<${this.tagName}`;\n    // 拼接处理属性\n    for(let i = 0, len = this.__props.length; i < len; i++) {\n      let item = this.__props[i];\n      res += renderProp(item[0], item[1]);\n    }\n    res += `></${this.tagName}>`;\n    return res;\n  }\n\n  __cb(e, force) {\n    if(e.touches && e.touches.length > 1) {\n      return;\n    }\n    let { node } = this;\n    let { x, y, top, right } = node.getBoundingClientRect();\n    x = x || top || 0;\n    y = y || right || 0;\n    let { clientX, clientY } = e.touches ? (e.touches[0] || {}) : e;\n    x = clientX - x;\n    y = clientY - y;\n    this.__emitEvent({\n      event: e,\n      x,\n      y,\n      covers: [],\n    }, force);\n  }\n\n  __initEvent() {\n    let { node } = this;\n    ['click', 'dblclick', 'mousedown', 'mousemove', 'mouseup', 'touchstart', 'touchmove', 'touchend', 'touchcancel'].forEach(type => {\n      node.addEventListener(type, e => {\n        this.__cb(e, ['touchend', 'touchcancel'].indexOf(type) > -1);\n      });\n    });\n  }\n\n  appendTo(dom) {\n    dom = getDom(dom);\n    this.__initProps();\n    // 已有root节点\n    if(dom.nodeName.toUpperCase() === this.tagName.toUpperCase()) {\n      this.__node = dom;\n      if(this.width) {\n        dom.setAttribute('width', this.width);\n      }\n      if(this.height) {\n        dom.setAttribute('height', this.height);\n      }\n    }\n    // 没有canvas/svg节点则生成一个新的\n    else {\n      this.__node = dom.querySelector(this.tagName);\n      if(!this.__node) {\n        dom.innerHTML = this.__genHtml();\n        this.__node = dom.querySelector(this.tagName);\n      }\n    }\n    // 没有设置width/height则采用css计算形式\n    if(!this.width || !this.height) {\n      let css = window.getComputedStyle(dom, null);\n      if(!this.width) {\n        this.__width = parseInt(css.getPropertyValue('width'));\n        dom.setAttribute('width', this.width);\n      }\n      if(!this.height) {\n        this.__height = parseInt(css.getPropertyValue('height'));\n        dom.setAttribute('height', this.height);\n      }\n    }\n    // 只有canvas有ctx，svg用真实dom\n    let renderMode;\n    if(this.tagName === 'canvas') {\n      this.__ctx = this.__node.getContext('2d');\n      this.__ctx.clearRect(0, 0, this.width, this.height);\n      renderMode = mode.CANVAS;\n    }\n    else if(this.tagName === 'svg') {\n      renderMode = mode.SVG;\n    }\n    // canvas/svg作为根节点一定是block或flex，不会是inline\n    let { style } = this;\n    if(['flex', 'block'].indexOf(style.display) === -1) {\n      style.display = 'block';\n    }\n    // 同理position不能为absolute\n    if(style.position === 'absolute') {\n      style.position = 'static';\n    }\n    this.__traverse(this.__ctx, renderMode);\n    // canvas的宽高固定初始化\n    style.width = this.width;\n    style.height = this.height;\n    this.__initStyle();\n    this.__layout({\n      x: 0,\n      y: 0,\n      w: this.width,\n      h: this.height,\n    });\n    this.__layoutAbs(this);\n    this.render(renderMode);\n    if(renderMode === mode.SVG) {\n      let nvd = this.virtualDom;\n      if(this.node.__karasInit) {\n        domDiff(this.node.firstChild, this.node.__ovd, nvd);\n      } else {\n        this.node.innerHTML = util.joinVirtualDom(nvd);\n      }\n      this.node.__ovd = nvd;\n    }\n    if(!this.node.__karasInit) {\n      this.node.__karasInit = true;\n      this.__initEvent();\n    }\n  }\n\n  get node() {\n    return this.__node;\n  }\n}\n\nexport default Root;\n","import Geom from './Geom';\nimport mode from '../mode';\n\nclass Line extends Geom {\n  constructor(tagName, props) {\n    super(tagName, props);\n    // start和end表明线段的首尾坐标，control表明控制点坐标\n    this.__start = [];\n    this.__end = [];\n    this.__control = [];\n    if(Array.isArray(this.props.start)) {\n      this.__start = this.props.start;\n    }\n    if(Array.isArray(this.props.end)) {\n      this.__end = this.props.end;\n    }\n    if(Array.isArray(this.props.control)) {\n      this.__control = this.props.control;\n    }\n  }\n\n  render(renderMode) {\n    super.render(renderMode);\n    let { rx: x, ry: y, width, height, mlw, mtw, plw, ptw, style, ctx, start, end, control, virtualDom } = this;\n    if(start.length < 2 || end.length < 2) {\n      return;\n    }\n    let {\n      display,\n      borderTopWidth,\n      borderRightWidth,\n      borderBottomWidth,\n      borderLeftWidth,\n      stroke,\n      strokeWidth,\n      strokeDasharray,\n    } = style;\n    if(display === 'none') {\n      return;\n    }\n    let originX = x + borderLeftWidth.value + mlw + plw;\n    let originY = y + borderTopWidth.value + mtw + ptw;\n    let x1 = originX + start[0] * width;\n    let y1 = originY + start[1] * height;\n    let x2 = originX + end[0] * width;\n    let y2 = originY + end[1] * height;\n    let curve = 0;\n    let cx1, cy1, cx2, cy2;\n    if(Array.isArray(control[0])) {\n      curve++;\n      cx1 = originX + control[0][0] * width;\n      cy1 = originY + control[0][1] * height;\n    }\n    if(Array.isArray(control[1])) {\n      curve++;\n      cx2 = originX + control[1][0] * width;\n      cy2 = originY + control[1][1] * height;\n    }\n    if(renderMode === mode.CANVAS) {\n      ctx.strokeStyle = stroke;\n      ctx.lineWidth = strokeWidth;\n      ctx.setLineDash(strokeDasharray);\n      ctx.beginPath();\n      ctx.moveTo(x1, y1);\n      if(curve === 2) {\n        ctx.bezierCurveTo(cx1, cy1, cx2, cy2, x2, y2);\n      }\n      else if(curve === 1) {\n        ctx.quadraticCurveTo(cx1, cy1, x2, y2);\n      }\n      else {\n        ctx.lineTo(x2, y2);\n      }\n      ctx.stroke();\n      ctx.closePath();\n    }\n    else if(renderMode === mode.SVG) {\n      if(curve === 2) {\n        virtualDom.content.push({\n          type: 'item',\n          tagName: 'path',\n          props: [\n            ['d', `M${x1} ${y1} C${cx1} ${cy1} ${cx2} ${cy2} ${x2} ${y2}`],\n            ['fill', 'none'],\n            ['stroke', stroke],\n            ['stroke-width', strokeWidth],\n            ['stroke-dasharray', strokeDasharray]\n          ],\n        });\n      }\n      else if(curve === 1) {\n        virtualDom.content.push({\n          type: 'item',\n          tagName: 'path',\n          props: [\n            ['d', `M${x1} ${y1} Q${cx1} ${cy1} ${x2} ${y2}`],\n            ['fill', 'none'],\n            ['stroke', stroke],\n            ['stroke-width', strokeWidth],\n            ['stroke-dasharray', strokeDasharray]\n          ],\n        });\n      }\n      else {\n        virtualDom.content.push({\n          type: 'item',\n          tagName: 'line',\n          props: [\n            ['x1', x1],\n            ['y1', y1],\n            ['x2', x2],\n            ['y2', y2],\n            ['stroke', stroke],\n            ['stroke-width', strokeWidth],\n            ['stroke-dasharray', strokeDasharray]\n          ],\n        });\n      }\n    }\n  }\n\n  get start() {\n    return this.__start;\n  }\n  get end() {\n    return this.__end;\n  }\n  get control() {\n    return this.__control;\n  }\n}\n\nexport default Line;\n","import Geom from './Geom';\nimport mode from '../mode';\n\nclass Polyline extends Geom {\n  constructor(tagName, props) {\n    super(tagName, props);\n    // 折线所有点的列表\n    this.__points = [];\n    if(Array.isArray(this.props.points)) {\n      this.__points = this.props.points;\n    }\n    // 原点位置，4个角，默认左下\n    if(['TOP_LEFT', 'TOP_RIGHT', 'BOTTOM_LEFT', 'BOTTOM_RIGHT'].indexOf(this.props.origin) > -1) {\n      this.__origin = this.props.origin;\n    }\n    else {\n      this.__origin = 'BOTTOM_LEFT';\n    }\n  }\n\n  render(renderMode) {\n    super.render(renderMode);\n    let { rx: x, ry: y, width, height, mlw, mtw, plw, ptw, style, ctx, points, origin, virtualDom } = this;\n    if(points.length < 2) {\n      return;\n    }\n    for(let i = 0, len = points.length; i < len; i++) {\n      if(!Array.isArray(points[i]) || points[i].length < 2) {\n        return;\n      }\n    }\n    let {\n      display,\n      borderTopWidth,\n      borderLeftWidth,\n      stroke,\n      strokeWidth,\n      strokeDasharray,\n    } = style;\n    if(display === 'none') {\n      return;\n    }\n    let originX = x + borderLeftWidth.value + mlw + plw;\n    let originY = y + borderTopWidth.value + mtw + ptw;\n    let pts = this.__pts = [];\n    if(origin === 'TOP_LEFT') {\n      points.forEach(item => {\n        pts.push([\n          originX + item[0] * width,\n          originY + item[1] * height\n        ]);\n      });\n    }\n    else if(origin === 'TOP_RIGHT') {\n      points.forEach(item => {\n        pts.push([\n          originX + width - item[0] * width,\n          originY + item[1] * height\n        ]);\n      });\n    }\n    else if(origin === 'BOTTOM_LEFT') {\n      points.forEach(item => {\n        pts.push([\n          originX + item[0] * width,\n          originY + height - item[1] * height\n        ]);\n      });\n    }\n    else if(origin === 'BOTTOM_RIGHT') {\n      points.forEach(item => {\n        pts.push([\n          originX + width - item[0] * width,\n          originY + height - item[1] * height\n        ]);\n      });\n    }\n    if(renderMode === mode.CANVAS) {\n      ctx.strokeStyle = stroke;\n      ctx.lineWidth = strokeWidth;\n      ctx.setLineDash(strokeDasharray);\n      ctx.beginPath();\n      ctx.moveTo(pts[0][0], originY + pts[0][1]);\n      for(let i = 1, len = pts.length; i < len; i++) {\n        let point = pts[i];\n        ctx.lineTo(point[0], point[1]);\n      }\n      if(strokeWidth && stroke !== 'transparent') {\n        ctx.stroke();\n      }\n      ctx.closePath();\n    }\n    else if(renderMode === mode.SVG) {\n      let points = '';\n      for(let i = 0, len = pts.length; i < len; i++) {\n        let point = pts[i];\n        points += `${point[0]},${point[1]} `;\n      }\n      virtualDom.content.push({\n        type: 'item',\n        tagName: 'polyline',\n        props: [\n          ['points', points],\n          ['fill', 'none'],\n          ['stroke', stroke],\n          ['stroke-width', strokeWidth],\n          ['stroke-dasharray', strokeDasharray]\n        ],\n      });\n    }\n  }\n\n  getPointsByX(x) {\n    let min = Infinity;\n    let len = this.__pts.length;\n    let res = [];\n    for(let i = 0; i < len; i++) {\n      let diff = Math.abs(this.__pts[i][0] - x);\n      if(diff < min) {\n        min = diff;\n      }\n    }\n    for(let i = 0; i < len; i++) {\n      let diff = Math.abs(this.__pts[i][0] - x);\n      if(diff === min) {\n        res.push({\n          index: i,\n          x: this.__pts[i][0],\n          y: this.__pts[i][1],\n        });\n      }\n    }\n    return res;\n  }\n\n  get points() {\n    return this.__points;\n  }\n  get origin() {\n    return this.__origin;\n  }\n}\n\nexport default Polyline;\n","import Geom from './Geom';\nimport mode from '../mode';\n\nclass Polygon extends Geom {\n  constructor(tagName, props) {\n    super(tagName, props);\n    // 所有点的列表\n    this.__points = [];\n    if(Array.isArray(this.props.points)) {\n      this.__points = this.props.points;\n    }\n  }\n\n  render(renderMode) {\n    super.render(renderMode);\n    let { rx: x, ry: y, width, height, mlw, mtw, plw, ptw, style, ctx, points, virtualDom } = this;\n    if(points.length < 3) {\n      return;\n    }\n    for(let i = 0, len = points.length; i < len; i++) {\n      if(!Array.isArray(points[i]) || points[i].length < 2) {\n        return;\n      }\n    }\n    let {\n      display,\n      borderTopWidth,\n      borderLeftWidth,\n      stroke,\n      strokeWidth,\n      strokeDasharray,\n      fill,\n    } = style;\n    if(display === 'none') {\n      return;\n    }\n    let originX = x + borderLeftWidth.value + mlw + plw;\n    let originY = y + borderTopWidth.value + mtw + ptw;\n    points.forEach(item => {\n      item[0] = originX + item[0] * width;\n      item[1] = originY + item[1] * height;\n    });\n    if(renderMode === mode.CANVAS) {\n      ctx.strokeStyle = stroke;\n      ctx.lineWidth = strokeWidth;\n      ctx.fillStyle = fill;\n      ctx.setLineDash(strokeDasharray);\n      ctx.beginPath();\n      ctx.moveTo(points[0][0], originY + points[0][1]);\n      for(let i = 1, len = points.length; i < len; i++) {\n        let point = points[i];\n        ctx.lineTo(point[0], point[1]);\n      }\n      ctx.fill();\n      if(strokeWidth && stroke !== 'transparent') {\n        ctx.stroke();\n      }\n      ctx.closePath();\n    }\n    else if(renderMode === mode.SVG) {\n      let points = '';\n      for(let i = 0, len = points.length; i < len; i++) {\n        let point = points[i];\n        points += `${point[0]},${point[1]} `;\n      }\n      virtualDom.content.push({\n        type: 'item',\n        tagName: 'polygon',\n        props: [\n          ['points', points],\n          ['fill', fill],\n          ['stroke', stroke],\n          ['stroke-width', strokeWidth],\n          ['stroke-dasharray', strokeDasharray]\n        ],\n      });\n    }\n  }\n\n  get points() {\n    return this.__points;\n  }\n}\n\nexport default Polygon;\n","import Geom from './Geom';\nimport mode from '../mode';\n\nconst OFFSET = Math.PI * 0.5;\n\nfunction getCoordByDegree(x, y, r, d) {\n  while(d > 360) {\n    d -= 360;\n  }\n  while(d < 0) {\n    d += 360;\n  }\n  if(d >= 0 && d < 90) {\n    return [\n      x + Math.sin(d * Math.PI / 180) * r,\n      y - Math.cos(d * Math.PI / 180) * r\n    ];\n  }\n  else if(d >= 90 && d < 180) {\n    return [\n      x + Math.cos((d - 90) * Math.PI / 180) * r,\n      y + Math.sin((d - 90) * Math.PI / 180) * r,\n    ];\n  }\n  else if(d >= 180 && d < 270) {\n    return [\n      x - Math.cos((270 - d) * Math.PI / 180) * r,\n      y + Math.sin((270 - d) * Math.PI / 180) * r,\n    ];\n  }\n  else {\n    return [\n      x - Math.sin((360 - d) * Math.PI / 180) * r,\n      y - Math.cos((360 - d) * Math.PI / 180) * r,\n    ];\n  }\n}\n\nclass Sector extends Geom {\n  constructor(tagName, props) {\n    super(tagName, props);\n    // 角度\n    this.__start = 0;\n    this.__end = 0;\n    if(this.props.start) {\n      this.__start = parseFloat(this.props.start);\n      if(isNaN(this.start)) {\n        this.__start = 0;\n      }\n    }\n    if(this.props.end) {\n      this.__end = parseFloat(this.props.end);\n      if(isNaN(this.end)) {\n        this.__end = 0;\n      }\n    }\n    // 半径0~1，默认1\n    this.__r = 1;\n    if(this.props.r) {\n      this.__r = parseFloat(this.props.r);\n      if(isNaN(this.r)) {\n        this.__r = 1;\n      }\n    }\n  }\n\n  render(renderMode) {\n    super.render(renderMode);\n    let { rx: x, ry: y, width, height, mlw, mtw, plw, ptw, style, ctx, start, end, r, virtualDom } = this;\n    if(start === end) {\n      return;\n    }\n    let {\n      display,\n      borderTopWidth,\n      borderLeftWidth,\n      stroke,\n      strokeWidth,\n      strokeDasharray,\n      fill,\n    } = style;\n    if(display === 'none') {\n      return;\n    }\n    let originX = x + borderLeftWidth.value + mlw + plw;\n    let originY = y + borderTopWidth.value + mtw + ptw;\n    originX += width * 0.5;\n    originY += height * 0.5;\n    r *= Math.min(width, height) * 0.5;\n    if(renderMode === mode.CANVAS) {\n      ctx.strokeStyle = stroke;\n      ctx.lineWidth = strokeWidth;\n      ctx.fillStyle = fill;\n      ctx.setLineDash(strokeDasharray);\n      ctx.beginPath();\n      ctx.moveTo(originX, originY);\n      ctx.arc(originX, originY, r, start * Math.PI / 180 - OFFSET, end * Math.PI / 180 - OFFSET);\n      ctx.fill();\n      if(strokeWidth && stroke !== 'transparent') {\n        ctx.stroke();\n      }\n      ctx.closePath();\n    }\n    else if(renderMode === mode.SVG) {\n      let x1, y1, x2, y2;\n      [ x1, y1 ] = getCoordByDegree(originX, originY, r, start);\n      [ x2, y2 ] = getCoordByDegree(originX, originY, r, end);\n      let large = (end - start) > 180 ? 1 : 0;\n      virtualDom.content.push({\n        type: 'item',\n        tagName: 'path',\n        props: [\n          ['d', `M${originX} ${originY} L${x1} ${y1} A${r} ${r} 0 ${large} 1 ${x2} ${y2} z`],\n          ['fill', fill],\n          ['stroke', stroke],\n          ['stroke-width', strokeWidth],\n          ['stroke-dasharray', strokeDasharray]\n        ],\n      });\n    }\n  }\n\n  get start() {\n    return this.__start;\n  }\n  get end() {\n    return this.__end;\n  }\n  get r() {\n    return this.__r;\n  }\n}\n\nexport default Sector;\n","import Geom from './Geom';\nimport mode from '../mode';\n\nclass Rect extends Geom {\n  constructor(tagName, props) {\n    super(tagName, props);\n  }\n\n  render(renderMode) {\n    super.render(renderMode);\n    let { rx: x, ry: y, width, height, mlw, mtw, plw, ptw, style, ctx, virtualDom } = this;\n    let {\n      display,\n      borderTopWidth,\n      borderLeftWidth,\n      stroke,\n      strokeWidth,\n      strokeDasharray,\n      fill,\n    } = style;\n    if(display === 'none') {\n      return;\n    }\n    let originX = x + borderLeftWidth.value + mlw + plw;\n    let originY = y + borderTopWidth.value + mtw + ptw;\n    if(renderMode === mode.CANVAS) {\n      ctx.strokeStyle = stroke;\n      ctx.lineWidth = strokeWidth;\n      ctx.fillStyle = fill;\n      ctx.setLineDash(strokeDasharray);\n      ctx.beginPath();\n      ctx.moveTo(originX, originY);\n      ctx.lineTo(originX + width, originY);\n      ctx.lineTo(originX + width, originY + height);\n      ctx.lineTo(originX, originY + height);\n      ctx.fill();\n      if(strokeWidth && stroke !== 'transparent') {\n        ctx.stroke();\n      }\n      ctx.closePath();\n    }\n    else if(renderMode === mode.SVG) {\n      virtualDom.content.push({\n        type: 'item',\n        tagName: 'rect',\n        props: [\n          ['x', x],\n          ['y', y],\n          ['width', width],\n          ['height', height],\n          ['fill', fill],\n          ['stroke', stroke],\n          ['stroke-width', strokeWidth],\n          ['stroke-dasharray', strokeDasharray]\n        ],\n      });\n    }\n  }\n}\n\nexport default Rect;\n","import Geom from './Geom';\nimport mode from '../mode';\n\nclass Circle extends Geom {\n  constructor(tagName, props) {\n    super(tagName, props);\n    // 半径0~1，默认1\n    this.__r = 1;\n    if(this.props.r) {\n      this.__r = parseFloat(this.props.r);\n      if(isNaN(this.r)) {\n        this.__r = 1;\n      }\n    }\n  }\n\n  render(renderMode) {\n    super.render(renderMode);\n    let { rx: x, ry: y, width, height, mlw, mtw, plw, ptw, style, ctx, r, virtualDom } = this;\n    let {\n      display,\n      borderTopWidth,\n      borderLeftWidth,\n      stroke,\n      strokeWidth,\n      strokeDasharray,\n      fill,\n    } = style;\n    if(display === 'none') {\n      return;\n    }\n    let originX = x + borderLeftWidth.value + mlw + plw;\n    let originY = y + borderTopWidth.value + mtw + ptw;\n    originX += width * 0.5;\n    originY += height * 0.5;\n    r *= Math.min(width, height) * 0.5;\n    if(renderMode === mode.CANVAS) {\n      ctx.strokeStyle = stroke;\n      ctx.lineWidth = strokeWidth;\n      ctx.fillStyle = fill;\n      ctx.setLineDash(strokeDasharray);\n      ctx.beginPath();\n      ctx.arc(originX, originY, r, 0, 2 * Math.PI);\n      if(fill !== 'transparent') {\n        ctx.fill();\n      }\n      if(strokeWidth && stroke !== 'transparent') {\n        ctx.stroke();\n      }\n      ctx.closePath();\n    }\n    else if(renderMode === mode.SVG) {\n      virtualDom.content.push({\n        type: 'item',\n        tagName: 'circle',\n        props: [\n          ['cx', originX],\n          ['cy', originY],\n          ['r', r],\n          ['fill', fill],\n          ['stroke', stroke],\n          ['stroke-width', strokeWidth],\n          ['stroke-dasharray', strokeDasharray]\n        ],\n      });\n    }\n  }\n\n  get r() {\n    return this.__r;\n  }\n}\n\nexport default Circle;\n","import Geom from './Geom';\nimport mode from '../mode';\n\nclass Ellipse extends Geom {\n  constructor(tagName, props) {\n    super(tagName, props);\n    // 半径0~1，默认1\n    this.__rx = 1;\n    if(this.props.rx) {\n      this.__rx = parseFloat(this.props.rx);\n      if(isNaN(this.rx)) {\n        this.__rx = 1;\n      }\n    }\n    this.__ry = 1;\n    if(this.props.ry) {\n      this.__ry = parseFloat(this.props.ry);\n      if(isNaN(this.rx)) {\n        this.__ry = 1;\n      }\n    }\n  }\n\n  render(renderMode) {\n    super.render(renderMode);\n    let { rx: x, ry: y, width, height, mlw, mtw, plw, ptw, style, ctx, rx, ry, virtualDom } = this;\n    let {\n      display,\n      borderTopWidth,\n      borderLeftWidth,\n      stroke,\n      strokeWidth,\n      strokeDasharray,\n      fill,\n    } = style;\n    if(display === 'none') {\n      return;\n    }\n    let originX = x + borderLeftWidth.value + mlw + plw;\n    let originY = y + borderTopWidth.value + mtw + ptw;\n    originX += width * 0.5;\n    originY += height * 0.5;\n    rx *= width * 0.5;\n    ry *= height * 0.5;\n    if(renderMode === mode.CANVAS) {\n      ctx.strokeStyle = stroke;\n      ctx.lineWidth = strokeWidth;\n      ctx.fillStyle = fill;\n      ctx.setLineDash(strokeDasharray);\n      ctx.beginPath();\n      ctx.moveTo(originX, originY);\n      ctx.ellipse && ctx.ellipse(originX, originY, rx, ry, 0, 0, 2 * Math.PI);\n      ctx.fill();\n      if(strokeWidth && stroke !== 'transparent') {\n        ctx.stroke();\n      }\n      ctx.closePath();\n    }\n    else if(renderMode === mode.SVG) {\n      virtualDom.content.push({\n        type: 'item',\n        tagName: 'ellipse',\n        props: [\n          ['cx', originX],\n          ['cy', originY],\n          ['rx', rx],\n          ['ry', ry],\n          ['fill', fill],\n          ['stroke', stroke],\n          ['stroke-width', strokeWidth],\n          ['stroke-dasharray', strokeDasharray]\n        ],\n      });\n    }\n  }\n\n  get rx() {\n    return this.__rx;\n  }\n  get ry() {\n    return this.__ry;\n  }\n}\n\nexport default Ellipse;\n","import Geom from './Geom';\nimport mode from '../mode';\n\nclass Grid extends Geom {\n  constructor(tagName, props) {\n    super(tagName, props);\n    // x,y被分为几格\n    this.__nx = 0;\n    if(this.props.nx) {\n      this.__nx = parseFloat(this.props.nx);\n      if(isNaN(this.nx)) {\n        this.__nx = 0;\n      }\n    }\n    this.__ny = 0;\n    if(this.props.ny) {\n      this.__ny = parseFloat(this.props.ny);\n      if(isNaN(this.ny)) {\n        this.__ny = 0;\n      }\n    }\n  }\n\n  render(renderMode) {\n    super.render(renderMode);\n    let { rx: x, ry: y, width, height, mlw, mtw, plw, ptw, style, ctx, nx, ny, virtualDom } = this;\n    if(width <= 0 || height <= 0) {\n      return;\n    }\n    if(nx < 3 && ny < 3) {\n      return;\n    }\n    let {\n      display,\n      borderTopWidth,\n      borderLeftWidth,\n      stroke,\n      strokeWidth,\n      strokeDasharray,\n    } = style;\n    if(display === 'none') {\n      return;\n    }\n    let originX = x + borderLeftWidth.value + mlw + plw;\n    let originY = y + borderTopWidth.value + mtw + ptw;\n    let endX = originX + width;\n    let endY = originY + height;\n    let lx = [];\n    let ly = [];\n    if(nx >= 3) {\n      let per = width / (nx - 1);\n      for(let i = 0; i < nx; i++) {\n        ly.push(originX + i * per);\n      }\n    }\n    if(ny >= 3) {\n      let per = height / (ny - 1);\n      for(let i = 0; i < ny; i++) {\n        lx.push(originY + i * per);\n      }\n    }\n    if(renderMode === mode.CANVAS) {\n      ctx.strokeStyle = stroke;\n      ctx.lineWidth = strokeWidth;\n      ctx.setLineDash(strokeDasharray);\n      ctx.beginPath();\n      lx.forEach(item => {\n        ctx.moveTo(originX, item);\n        ctx.lineTo(endX, item);\n      });\n      ly.forEach(item => {\n        ctx.moveTo(item, originY);\n        ctx.lineTo(item, endY);\n      });\n      if(strokeWidth && stroke !== 'transparent') {\n        ctx.stroke();\n      }\n      ctx.closePath();\n    }\n    else if(renderMode === mode.SVG) {\n      lx.forEach(item => {\n        virtualDom.content.push({\n          type: 'item',\n          tagName: 'line',\n          props: [\n            ['x1', originX],\n            ['y1', item],\n            ['x2', endX],\n            ['y2', item],\n            ['stroke', stroke],\n            ['stroke-width', strokeWidth],\n            ['stroke-dasharray', strokeDasharray]\n          ],\n        });\n      });\n      ly.forEach(item => {\n        virtualDom.content.push({\n          type: 'item',\n          tagName: 'line',\n          props: [\n            ['x1', item],\n            ['y1', originY],\n            ['x2', item],\n            ['y2', endY],\n            ['stroke', stroke],\n            ['stroke-width', strokeWidth],\n            ['stroke-dasharray', strokeDasharray]\n          ],\n        });\n      });\n    }\n  }\n\n  get nx() {\n    return this.__nx;\n  }\n  get ny() {\n    return this.__ny;\n  }\n  get dash() {\n    return this.__dash;\n  }\n}\n\nexport default Grid;\n","import Dom from './node/Dom';\nimport Root from './node/Root';\nimport mode from './mode';\nimport Geom from './geom/Geom';\nimport Line from './geom/Line';\nimport Polyline from './geom/Polyline';\nimport Polygon from './geom/Polygon';\nimport Sector from './geom/Sector';\nimport Rect from './geom/Rect';\nimport Circle from './geom/Circle';\nimport Ellipse from './geom/Ellipse';\nimport Grid from './geom/Grid';\n\nGeom.register('$line', Line);\nGeom.register('$polyline', Polyline);\nGeom.register('$polygon', Polygon);\nGeom.register('$sector', Sector);\nGeom.register('$rect', Rect);\nGeom.register('$circle', Circle);\nGeom.register('$ellipse', Ellipse);\nGeom.register('$grid', Grid);\n\nlet karas = {\n  render(root, dom) {\n    if(!(root instanceof Root)) {\n      throw new Error('render root muse be canvas or svg');\n    }\n    if(dom) {\n      root.appendTo(dom);\n    }\n    return root;\n  },\n  createVd(tagName, props, children) {\n    if(['canvas', 'svg'].indexOf(tagName) > -1) {\n      return new Root(tagName, props, children);\n    }\n    if(Dom.isValid(tagName)) {\n      return new Dom(tagName, props, children);\n    }\n    throw new Error('can not use marker: ' + tagName);\n  },\n  createGm(tagName, props) {\n    let klass = Geom.getImplement(tagName);\n    return new klass(tagName, props);\n  },\n  createCp(cp, props) {\n    return new cp(props);\n  },\n  Geom,\n  mode,\n};\n\nif(typeof window != 'undefined') {\n  window.karas = karas;\n}\n\nexport default karas;\n"],"names":["div","Node","__x","__y","__ox","__oy","__width","__height","__prev","__next","__ctx","__parent","__style","__baseLine","__virtualDom","diff","this","x","ox","y","oy","CANVAS","SVG","measure","s","style","document","createElement","position","left","top","visibility","body","appendChild","fontSize","innerText","css","window","getComputedStyle","parseFloat","width","getFitDashed","total","bs","be","w","smin","smax","dmin","dmax","n","ps","pd","outer","i","j","per","num","Math","floor","k","getDashed","m1","m2","m3","m4","bw","max","renderBorder","renderMode","points","color","ctx","virtualDom","mode","forEach","point","beginPath","fillStyle","moveTo","len","length","lineTo","fill","closePath","item","type","tagName","props","bb","push","Xom","Array","isArray","arr","hash","list","Object","keys","arr2hash","__props","temp","splice","spread","hash2arr","__tagName","_this","__listener","test","slice","toLowerCase","__mtw","__mrw","__mbw","__mlw","__ptw","__prw","__pbw","__plw","data","display","marginTop","marginRight","marginBottom","marginLeft","paddingTop","paddingRight","paddingBottom","paddingLeft","unit","value","__mpWidth","__layoutBlock","__layoutFlex","__layoutInline","mp","height","mlw","mtw","plw","ptw","prw","pbw","right","bottom","bgc","backgroundColor","borderTopWidth","btc","borderTopColor","bts","borderTopStyle","borderRightWidth","brc","borderRightColor","brs","borderRightStyle","borderBottomWidth","bbc","borderBottomColor","bbs","borderBottomStyle","borderLeftWidth","blc","borderLeftColor","bls","borderLeftStyle","transform","parent","h","__offsetX","__offsetY","translateX","translateY","rx","ry","btw","brw","bbw","blw","x1","x2","x3","x4","y1","y2","y3","y4","rect","indexOf","deg1","atan","deg2","isLast","xx1","xx4","yy1","yy2","tan","yy4","xx2","mrw","mbw","lhr","car","blr","mdr","lgr","RESET","borderSizing","fontFamily","fontStyle","fontWeight","lineHeight","borderTopLeftRadius","borderTopRightRadius","borderBottomLeftRadius","borderBottomRightRadius","verticalAlign","flexGrow","flexShrink","flexBasis","flexDirection","justifyContent","alignItems","textAlign","stroke","strokeWidth","strokeDasharray","reset","v","toString","isType","obj","call","isNumber","stringify","isNil","util","isObject","isString","isFunction","isBoolean","isDate","joinSourceArray","res","encodeHtml","prop","replace","joinVirtualDom","vd","content","children","parserOneBorder","direction","key","exec","c","normalize","hasOwnProperty","background","flex","border","borderTop","borderRight","borderBottom","borderLeft","margin","match","padding","borderRadius","split","map","matrix","matrix3d","translateZ","scaleX","scaleY","scaleZ","rotateX","rotateY","rotateZ","skewX","skewY","perspective","font","setFontStyle","getBaseLine","normal","LineBox","__content","fillText","CHAR_WIDTH_CACHE","Text","__lineBoxes","__charWidthList","__charWidth","__textWidth","charWidthList","cache","sum","char","charAt","mw","measureText","charWidth","isVirtual","maxX","lineBoxes","begin","count","lineBox","_this2","render","textWidth","min","last","baseLine","__renderMode","LineGroup","__list","__calBaseLine","IMPLEMENT","Geom","isDirectionRow","b","main","fixedHeight","fixedWidth","e","force","cb","event","covers","listener","outerWidth","outerHeight","target","name","Error","implement","TAG_NAME","INLINE","Dom","__children","__flowChildren","__absChildren","__lineGroups","__flowY","__traverseChildren","prev","_this3","__traverse","text","parentStyle","__initStyle","__measure","flowChildren","__tryLayInline","isRecursion","__calAutoBasis","b2","min2","max2","__layout","__calAbs","Infinity","lineGroups","lineGroup","add","size","horizonAlign","ow","growList","shrinkList","basisList","minList","growSum","shrinkSum","basisSum","maxSum","maxCross","isOverflow","shrink","grow","overflow","free","child","center","between","around","_this4","absChildren","container","flowY","pw","ph","__layoutAbs","w2","h2","width2","height2","widthPx","heightPx","hasChildEmit","__emitEvent","elem","ovd","nvd","diffBb","firstChild","ol","nl","lastChild","cns","childNodes","removeAt","insertAt","diffD2D","replaceWith","diffD2G","diffItem","diffT2T","diffG2D","diffG2G","obb","nbb","isText","op","setAttribute","removeAttribute","textContent","insertAdjacentHTML","parentNode","removeChild","index","Root","__node","undefined","parseInt","isNaN","touches","node","getBoundingClientRect","clientX","clientY","addEventListener","__cb","dom","o","querySelector","getDom","__initProps","nodeName","toUpperCase","innerHTML","__genHtml","getPropertyValue","getContext","clearRect","__karasInit","domDiff","__ovd","__initEvent","Line","__start","__end","__control","start","end","control","cx1","cy1","cx2","cy2","originX","originY","curve","strokeStyle","lineWidth","setLineDash","bezierCurveTo","quadraticCurveTo","Polyline","__points","origin","__origin","pts","__pts","abs","Polygon","OFFSET","PI","getCoordByDegree","r","d","sin","cos","Sector","__r","arc","large","Rect","Circle","Ellipse","__rx","__ry","ellipse","Grid","__nx","nx","__ny","ny","endX","endY","lx","ly","__dash","register","karas","root","appendTo","createVd","isValid","createGm","getImplement","createCp","cp"],"mappings":"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"}