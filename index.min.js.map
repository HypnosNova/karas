{"version":3,"file":"index.min.js","sources":["src/mode.js","src/node/Node.js","src/style/unit.js","src/util.js","src/style/transform.js","src/style/gradient.js","src/style/border.js","src/node/Xom.js","src/style/font.js","src/style/reset.js","src/style/css.js","src/node/LineBox.js","src/node/Text.js","src/node/LineGroup.js","src/geom/Geom.js","src/node/Dom.js","src/domDiff.js","src/node/Defs.js","src/node/Root.js","src/geom/Line.js","src/geom/Polyline.js","src/geom/Polygon.js","src/geom/Sector.js","src/geom/Rect.js","src/geom/Circle.js","src/geom/Ellipse.js","src/geom/Grid.js","src/index.js"],"sourcesContent":["const CANVAS = 0;\nconst SVG = 1;\n\nlet div;\n\nexport default {\n  CANVAS,\n  SVG,\n  measure(s, style) {\n    if(!div) {\n      div = document.createElement('div');\n      div.style.position = 'absolute';\n      div.style.left = '99999px';\n      div.style.top = '-99999px';\n      div.style.visibility = 'hidden';\n      document.body.appendChild(div);\n    }\n    div.style.fontSize = style.fontSize + 'px';\n    div.innerText = s;\n    let css = window.getComputedStyle(div, null);\n    return parseFloat(css.width);\n  }\n};\n","class Node {\n  constructor() {\n    this.__x = 0;\n    this.__y = 0;\n    this.__ox = 0; // relative/margin:auto/text-align等造成的偏移量\n    this.__oy = 0;\n    this.__width = 0;\n    this.__height = 0;\n    this.__prev = null;\n    this.__next = null;\n    this.__ctx = null; // canvas的context\n    this.__defs = null; // svg的defs\n    this.__parent = null;\n    this.__style = {}; // style被解析后的k-v形式\n    this.__baseLine = 0;\n    this.__virtualDom = {};\n  }\n\n  __offsetX(diff) {\n    this.__ox += diff;\n  }\n\n  __offsetY(diff) {\n    this.__oy += diff;\n  }\n\n  get x() {\n    return this.__x;\n  }\n  get y() {\n    return this.__y;\n  }\n  get ox() {\n    return this.__ox;\n  }\n  get oy() {\n    return this.__oy;\n  }\n  get rx() {\n    return this.x + this.ox;\n  }\n  get ry() {\n    return this.y + this.oy;\n  }\n  get width() {\n    return this.__width;\n  }\n  get height() {\n    return this.__height;\n  }\n  get outerWidth() {\n    return this.__width;\n  }\n  get outerHeight() {\n    return this.__height;\n  }\n  get prev() {\n    return this.__prev;\n  }\n  get next() {\n    return this.__next;\n  }\n  get parent() {\n    return this.__parent;\n  }\n  get root() {\n    if(this.parent) {\n      return this.parent.root;\n    }\n    return this;\n  }\n  get style() {\n    return this.__style;\n  }\n  get ctx() {\n    return this.__ctx;\n  }\n  get defs() {\n    return this.__defs;\n  }\n  get baseLine() {\n    return this.__baseLine;\n  }\n  get virtualDom() {\n    return this.__virtualDom;\n  }\n}\n\nexport default Node;\n","export default {\n  AUTO: 0,\n  PX: 1,\n  PERCENT: 2,\n  POSITION: 3,\n};\n","let toString = {}.toString;\nfunction isType(type) {\n  return function(obj) {\n    return toString.call(obj) === '[object ' + type + ']';\n  }\n}\n\nlet isNumber = isType('Number');\n\nfunction joinSourceArray(arr) {\n  var res = '';\n  for(var i = 0, len = arr.length; i < len; i++) {\n    var item = arr[i];\n    if(Array.isArray(item)) {\n      res += joinSourceArray(item);\n    }\n    else {\n      res += stringify(item);\n    }\n  }\n  return res;\n}\n\nfunction stringify(s) {\n  if(isNil(s)) {\n    return '';\n  }\n  return s.toString();\n}\n\nfunction encodeHtml(s, prop) {\n  if(prop) {\n    return s.replace(/\"/g, '&quot;');\n  }\n  return s.replace(/&/g, '&amp;').replace(/</g, '&lt;');\n}\n\nfunction isNil(v) {\n  return v === undefined || v === null;\n}\n\nfunction joinVirtualDom(vd, nd) {\n  let s = '<defs>';\n  nd.forEach(item => {\n    s += joinDef(item);\n  });\n  s += '</defs><g>';\n  vd.bb.forEach(item => {\n    s += joinVd(item);\n  });\n  s += '</g><g>';\n  vd.children.forEach(item => {\n    s += joinVd(item);\n  });\n  s += '</g>';\n  return s;\n}\n\nfunction joinVd(vd) {\n  if(vd.type === 'item') {\n    let s = '';\n    vd.props.forEach(item => {\n      s += ` ${item[0]}=\"${item[1]}\"`;\n    });\n    if(vd.tagName === 'text') {\n      return `<text${s}>${vd.content}</text>`;\n    }\n    return `<${vd.tagName}${s}/>`;\n  }\n  else if(vd.type === 'text') {\n    let s = ``;\n    vd.children.forEach(item => {\n      s += joinVd(item);\n    });\n    return `<g>${s}</g>`;\n  }\n  else if(vd.type === 'dom' || vd.type === 'geom') {\n    let s = '<g>';\n    vd.bb.forEach(item => {\n      s += joinVd(item);\n    });\n    s += '</g><g>';\n    vd.children.forEach(item => {\n      s += joinVd(item);\n    });\n    s += '</g>';\n    return `<g transform=\"${joinTransform(vd.transform)}\">${s}</g>`;\n  }\n}\n\nfunction joinTransform(transform) {\n  let s = '';\n  transform.forEach(item => {\n    s += `${item[0]}(${item[1]}) `;\n  });\n  return s;\n}\n\nfunction joinDef(def) {\n  let s = `<${def.tagName} id=\"${def.uuid}\" gradientUnits=\"userSpaceOnUse\"`;\n  def.props.forEach(item => {\n    s += ` ${item[0]}=\"${item[1]}\"`;\n  });\n  s += '>';\n  def.stop.forEach(item => {\n    s += `<stop stop-color=\"${item[0]}\" offset=\"${item[1] * 100}%\"/>`;\n  });\n  s += `</${def.tagName}>`;\n  return s;\n}\n\nfunction r2d(n) {\n  return n * Math.PI / 180;\n}\n\nfunction rgb2int(color) {\n  let res = [];\n  if(color.charAt(0) === '#') {\n    color = color.slice(1);\n    if(color.length === 3) {\n      res.push(parseInt(color.charAt(0) + color.charAt(0), 16));\n      res.push(parseInt(color.charAt(1) + color.charAt(1), 16));\n      res.push(parseInt(color.charAt(2) + color.charAt(2), 16));\n    } else if(color.length === 6) {\n      res.push(parseInt(color.slice(0, 2), 16));\n      res.push(parseInt(color.slice(2, 4), 16));\n      res.push(parseInt(color.slice(4), 16));\n    }\n  }\n  else {\n    let c = color.match(/rgba?\\s*\\(\\s*(\\d+)\\s*,\\s*(\\d+)\\s*,\\s*(\\d+)(?:\\s*,\\s*([\\d.]+))?\\s*\\)/i);\n    if(c) {\n      res = [parseInt(c[1]), parseInt(c[2]), parseInt(c[3])];\n      if(c[4]) {\n        res[3] = parseFloat(c[4]);\n      }\n\n    }\n  }\n  return res;\n}\n\nfunction arr2hash(arr) {\n  let hash = {};\n  for(let i = 0, len = arr.length; i < len; i++) {\n    let item = arr[i];\n    if(Array.isArray(item)) {\n      hash[item[0]] = item[1];\n    }\n    else {\n      for(let list = Object.keys(item), j = list.length - 1; j >= 0; j--) {\n        let k = list[j];\n        hash[k] = item[k];\n      }\n    }\n  }\n  return hash;\n}\n\nfunction hash2arr(hash) {\n  let arr = [];\n  for(let list = Object.keys(hash), i = 0, len = list.length; i < len; i++) {\n    let k = list[i];\n    arr.push([k, hash[k]]);\n  }\n  return arr;\n}\n\nlet util = {\n  isObject: isType('Object'),\n  isString: isType('String'),\n  isFunction: isType('Function'),\n  isNumber,\n  isBoolean: isType('Boolean'),\n  isDate: isType('Date'),\n  stringify,\n  joinSourceArray(arr) {\n    return joinSourceArray(arr);\n  },\n  encodeHtml,\n  isNil,\n  joinVirtualDom,\n  joinVd,\n  joinTransform,\n  joinDef,\n  r2d,\n  rgb2int,\n  arr2hash,\n  hash2arr,\n};\n\nexport default util;\n","import unit from '../style/unit';\nimport util from '../util';\n\nfunction calMatrix(transform, ox, oy) {\n  let matrix = [\n    [1, 0, 0],\n    [0, 1, 0],\n    [0, 0, 1]\n  ];\n  transform.forEach(item => {\n    let [k, v] = item;\n    if(k === 'translateX') {\n      matrix = multiply(matrix, [\n        [1, 0, 0],\n        [0, 1, 0],\n        [v, 0, 1]\n      ]);\n    }\n    else if(k === 'translateY') {\n      matrix = multiply(matrix, [\n        [1, 0, 0],\n        [0, 1, 0],\n        [0, v, 1]\n      ]);\n    }\n    else if(k === 'scaleX') {\n      matrix = multiply(matrix, [\n        [v, 0, 0],\n        [0, 1, 0],\n        [0, 0, 1]\n      ]);\n    }\n    else if(k === 'scaleY') {\n      matrix = multiply(matrix, [\n        [1, 0, 0],\n        [0, v, 0],\n        [0, 0, 1]\n      ]);\n    }\n    else if(k === 'skewX') {\n      v = util.r2d(v);\n      let tan = Math.tan(v);\n      matrix = multiply(matrix, [\n        [1, 0, 0],\n        [tan, 1, 0],\n        [0, 0, 1]\n      ]);\n    }\n    else if(k === 'skewY') {\n      v = util.r2d(v);\n      let tan = Math.tan(v);\n      matrix = multiply(matrix, [\n        [1, tan, 0],\n        [0, 1, 0],\n        [0, 0, 1]\n      ]);\n    }\n    else if(k === 'rotate') {\n      v = util.r2d(v);\n      let sin = Math.sin(v);\n      let cos = Math.cos(v);\n      matrix = multiply(matrix, [\n        [cos, sin, 0],\n        [-sin, cos, 0],\n        [-ox * cos + oy * sin + ox, -ox * sin - oy * cos + oy, 1]\n      ]);\n    }\n  });\n  return [\n    matrix[0][0], matrix[0][1],\n    matrix[1][0], matrix[1][1],\n    matrix[2][0], matrix[2][1]];\n}\n\n// 矩阵a*b\nfunction multiply(a, b) {\n  let res = [];\n  let m = a[0].length;\n  let p = a.length;\n  let n = b.length;\n  for(let i = 0; i < m; i++) {\n    let col = [];\n    for(let j = 0; j < n; j++) {\n      let s = 0;\n      for(let k = 0; k < p; k++) {\n        s += a[i][k] * b[k][j];\n      }\n      col.push(s);\n    }\n    res.push(col);\n  }\n  return res;\n}\n\nfunction transformPoint(matrix, x, y) {\n  let [a, b, c, d, e, f] = matrix;\n  return [a * x + c * y + e, b * x + d * y + f];\n}\n\n// 向量积\nfunction vectorProduct(x1, y1, x2, y2) {\n  return x1 * y2 - x2 * y1;\n}\n\nfunction pointInQuadrilateral(x, y, x1, y1, x2, y2, x3, y3, x4, y4, matrix) {\n  if(matrix) {\n    [x1, y1] = transformPoint(matrix, x1, y1);\n    [x2, y2] = transformPoint(matrix, x2, y2);\n    [x3, y3] = transformPoint(matrix, x3, y3);\n    [x4, y4] = transformPoint(matrix, x4, y4);\n    if(vectorProduct(x2 - x1, y2 - y1, x - x1, y - y1) > 0\n      && vectorProduct(x4 - x2, y4 - y2, x - x2, y - y2) > 0\n      && vectorProduct(x3 - x4, y3 - y4, x - x4, y - y4) > 0\n      && vectorProduct(x1 - x3, y1 - y3, x - x3, y - y3) > 0) {\n      return true;\n    }\n  }\n  else {\n    return x >= x1 && y >= y1 && x <= x4 && y <= y4;\n  }\n}\n\nfunction normalize(transform, ox, oy, w, h) {\n  let res = [];\n  transform.forEach(item => {\n    let [k, v] = item;\n    if(k === 'translateX') {\n      if(v.unit === unit.PERCENT) {\n        res.push([item[0], v.value * w * 0.01]);\n      }\n      else {\n        res.push([item[0], item[1].value]);\n      }\n    }\n    else if(k === 'translateY') {\n      if(v.unit === unit.PERCENT) {\n        res.push([item[0], v.value * h * 0.01]);\n      }\n      else {\n        res.push([item[0], item[1].value]);\n      }\n    }\n    else {\n      res.push([item[0], item[1]]);\n    }\n  });\n  return res;\n}\n\nfunction getOrigin(transformOrigin, x, y, w, h) {\n  let tfo = [];\n  transformOrigin.forEach((item, i) => {\n    if(item.unit === unit.PX) {\n      tfo.push(item.value);\n    }\n    else if(item.unit === unit.PERCENT) {\n      tfo.push((i ? y : x) + item.value * (i ? h : w) * 0.01);\n    }\n    else if(item.value === 'left') {\n      tfo.push(x);\n    }\n    else if(item.value === 'right') {\n      tfo.push(x + w);\n    }\n    else if(item.value === 'top') {\n      tfo.push(y);\n    }\n    else if(item.value === 'bottom') {\n      tfo.push(y + h);\n    }\n    else {\n      tfo.push(i ? (y + h * 0.5) : (x + w * 0.5));\n    }\n  });\n  return tfo;\n}\n\nfunction mergeMatrix(a, b) {\n  let matrix = multiply(\n    [\n      [a[0], a[1], 0],\n      [a[2], a[3], 0],\n      [a[4], a[5], 1]\n    ],\n    [\n      [b[0], b[1], 0],\n      [b[2], b[3], 0],\n      [b[4], b[5], 1]\n    ]\n  );\n  return [\n    matrix[0][0], matrix[0][1],\n    matrix[1][0], matrix[1][1],\n    matrix[2][0], matrix[2][1]];\n}\n\nexport default {\n  calMatrix,\n  pointInQuadrilateral,\n  normalize,\n  getOrigin,\n  mergeMatrix,\n};\n","import util from \"../util\";\n\nfunction getLinearDeg(v) {\n  let deg = 180;\n  if(v[0] === 'to top') {\n    deg = 0;\n  }\n  else if(v[0] === 'to top right') {\n    deg = 45;\n  }\n  else if(v[0] === 'to right') {\n    deg = 90;\n  }\n  else if(v[0] === 'to bottom right') {\n    deg = 135;\n  }\n  else if(v[0] === 'to bottom') {\n  }\n  else if(v[0] === 'to bottom left') {\n    deg = 225;\n  }\n  else if(v[0] === 'to left') {\n    deg = 270;\n  }\n  else if(v[0] === 'to top left') {\n    deg = 315;\n  }\n  // 数字角度，没有的话取默认角度\n  else {\n    let match = /([\\d.]+)deg/.exec(v[0]);\n    if(match) {\n      deg = parseFloat(match[1]);\n    }\n    else {\n      v.unshift(null);\n    }\n  }\n  while(deg >= 360) {\n    deg = deg % 360;\n  }\n  while(deg < 0) {\n    deg += 360;\n  }\n  return deg;\n}\n\n// 获取color-stop区间范围，去除无用值\nfunction getColorStop(v, length) {\n  let list = [];\n  // 先把已经声明距离的换算成[0,1]以数组形式存入，未声明的原样存入\n  for(let i = 1, len = v.length; i < len; i++) {\n    let item = v[i];\n    // 考虑是否声明了位置\n    let arr = item.trim().split(/\\s+/);\n    if(arr.length > 1) {\n      let c = arr[0];\n      let p = arr[1];\n      if(/%$/.test(p)) {\n        list.push([c, parseFloat(p) * 0.01]);\n      }\n      else {\n        list.push([c, parseFloat(p) / length]);\n      }\n    }\n    else {\n      list.push(arr[0]);\n    }\n  }\n  // 首尾不声明默认为[0, 1]\n  if(list.length > 1) {\n    if(!Array.isArray(list[0])) {\n      list[0] = [list[0], 0];\n    }\n    if(!Array.isArray(list[list.length - 1])) {\n      list[list.length - 1] = [list[list.length - 1], 1];\n    }\n  }\n  else if(!Array.isArray(list[0])) {\n    list[0] = [list[0], 0];\n  }\n  // 不是数组形式的是未声明的，需区间计算，找到连续的未声明的，前后的区间平分\n  let start = list[0][1];\n  for(let i = 1, len = list.length; i < len - 1; i++) {\n    let item = list[i];\n    if(Array.isArray(item)) {\n      start = item[1];\n    }\n    else {\n      let j = i + 1;\n      let end = list[list.length - 1][1];\n      for(; j < len - 1; j++) {\n        let item = list[j];\n        if(Array.isArray(item)) {\n          end = item[1];\n          break;\n        }\n      }\n      let num = j - i + 1;\n      let per = (end - start) / num;\n      for(let k = i;k < j; k++) {\n        let item = list[k];\n        list[k] = [item, start + per * (k + 1 - i)];\n      }\n      i = j;\n    }\n  }\n  // 每个不能小于前面的，canvas/svg不能兼容这种情况，需处理\n  for(let i = 1, len = list.length; i < len; i++) {\n    let item = list[i];\n    let prev = list[i - 1];\n    if(item[1] < prev[1]) {\n      item[1] = prev[1];\n    }\n  }\n  // 0之前的和1之后的要过滤掉\n  for(let i = 0, len = list.length; i < len - 1; i++) {\n    let item = list[i];\n    if(item[1] > 1) {\n      list.splice(i + 1);\n      break;\n    }\n  }\n  for(let i = list.length - 1; i > 0; i--) {\n    let item = list[i];\n    if(item[1] < 0) {\n      list.splice(0, i);\n      break;\n    }\n  }\n  // 可能存在超限情况，如在使用px单位超过len或<len时，canvas会报错超过[0,1]区间，需手动换算至区间内\n  let len = list.length;\n  // 在只有1个的情况下可简化\n  if(len === 1) {\n    list[0][1] = 0;\n  }\n  else {\n    // 全部都在[0,1]之外也可以简化\n    let allBefore = true;\n    let allAfter = true;\n    for(let i = len - 1; i >= 0; i--) {\n      let item = list[i];\n      let p = item[1];\n      if(p > 0) {\n        allBefore = false;\n      }\n      if(p < 1) {\n        allAfter = false;\n      }\n    }\n    if(allBefore) {\n      list.splice(0, len - 1);\n      list[0][1] = 0;\n    }\n    else if(allAfter) {\n      list.splice(1);\n      list[0][1] = 0;\n    }\n    // 部分在区间之外需复杂计算\n    else {\n      let first = list[0];\n      let last = list[len - 1];\n      // 只要2个的情况下就是首尾都落在外面\n      if(len === 2) {\n        if(first[1] < 0 && last[1] > 1) {\n          getCsLimit(first, last, length);\n        }\n      }\n      // 只有1个在外面的情况较为容易\n      else {\n        if(first[1] < 0) {\n          let next = list[1];\n          let c1 = util.rgb2int(first[0]);\n          let c2 = util.rgb2int(next[0]);\n          let c = getCsStartLimit(c1, first[1], c2, next[1], length);\n          first[0] = `rgba(${c[0]},${c[1]},${c[2]},${c[3]})`;\n          first[1] = 0;\n        }\n        if(last[1] > 1) {\n          let prev = list[len - 2];\n          let c1 = util.rgb2int(prev[0]);\n          let c2 = util.rgb2int(last[0]);\n          let c = getCsEndLimit(c1, prev[1], c2, last[1], length);\n          last[0] = `rgba(${c[0]},${c[1]},${c[2]},${c[3]})`;\n          last[1] = 1;\n        }\n      }\n    }\n  }\n  // 防止精度计算溢出[0,1]\n  list.forEach(item => {\n    if(item[1] < 0) {\n      item[1] = 0;\n    }\n    else if(item[1] > 1) {\n      item[1] = 1;\n    }\n  });\n  return list;\n}\n\n// 根据角度和圆心获取渐变的4个点坐标\nfunction calLinearCoords(deg, length, cx, cy) {\n  let x0;\n  let y0;\n  let x1;\n  let y1;\n  if(deg >= 270) {\n    let r = util.r2d(360 - deg);\n    x0 = cx + Math.sin(r) * length;\n    y0 = cy + Math.cos(r) * length;\n    x1 = cx - Math.sin(r) * length;\n    y1 = cy - Math.cos(r) * length;\n  }\n  else if(deg >= 180) {\n    let r = util.r2d(deg - 180);\n    x0 = cx + Math.sin(r) * length;\n    y0 = cy - Math.cos(r) * length;\n    x1 = cx - Math.sin(r) * length;\n    y1 = cy + Math.cos(r) * length;\n  }\n  else if(deg >= 90) {\n    let r = util.r2d(180 - deg);\n    x0 = cx - Math.sin(r) * length;\n    y0 = cy - Math.cos(r) * length;\n    x1 = cx + Math.sin(r) * length;\n    y1 = cy + Math.cos(r) * length;\n  }\n  else {\n    let r = util.r2d(deg);\n    x0 = cx - Math.sin(r) * length;\n    y0 = cy + Math.cos(r) * length;\n    x1 = cx + Math.sin(r) * length;\n    y1 = cy - Math.cos(r) * length;\n  }\n  return [x0, y0, x1, y1];\n}\n\n// 获取径向渐变半径\nfunction calRadialRadius(v, iw, ih, cx, cy, x2, y2, x3, y3) {\n  let size = 'farthest-corner';\n  let r; // 半径\n  if(/circle|ellipse|at|closest|farthest/i.test(v[0])\n    || !/#[0-9a-f]{3,6}/i.test(v[0]) && !/\\brgba?\\(.*\\)/i.test(v[0])) {\n    let i = v[0].indexOf('at');\n    let at;\n    let s;\n    if(i > -1) {\n      at = v[0].slice(i + 2);\n      s = v[0].slice(0, i - 1);\n    }\n    s = /(closest|farthest)-(side|corner)/.exec(s);\n    if(s) {\n      size = s[0];\n    }\n    // 指定宽高后size失效，置null标识\n    else {\n      s = /\\s+(-?[\\d.]+(?:px|%))\\s*(-?[\\d.]+(?:px|%))?/.exec(s);\n      if(s) {\n        size = null;\n        if(s[1].indexOf('px') > -1) {\n          r = parseFloat(s[1]) * 0.5;\n        }\n        else {\n          r = parseFloat(s[1]) * iw * 0.005;\n        }\n      }\n    }\n    if(at) {\n      s = /\\s+(-?[\\d.]+(?:px|%))\\s*(-?[\\d.]+(?:px|%))?/.exec(at);\n      if(s) {\n        if(s[1].indexOf('px') > -1) {\n          cx = x2 + parseFloat(s[1]);\n        }\n        else {\n          cx =  x2 + parseFloat(s[1]) * iw * 0.01;\n        }\n        // y可以省略，此时等同于x\n        let by = s[2] || s[1];\n        if(by.indexOf('px') > -1) {\n          cy = y2 + parseFloat(by);\n        }\n        else {\n          cy = y2 + parseFloat(by) * ih * 0.01;\n        }\n      }\n    }\n  }\n  else {\n    v.unshift(null);\n  }\n  if(size) {\n    if(size === 'closest-side') {\n      // 在边外特殊情况只有end颜色填充\n      if(cx <= x2 || cx >= x3 || cy <= y2 || cy >= y3) {\n        r = 0;\n      }\n      else {\n        let xl;\n        let yl;\n        if(cx < x2 + iw * 0.5) {\n          xl = cx - x2;\n        } else {\n          xl = x3 - cx;\n        }\n        if(cy < y2 + ih * 0.5) {\n          yl = cy - y2;\n        } else {\n          yl = y3 - cy;\n        }\n        r = Math.min(xl, yl);\n      }\n    }\n    else if(size === 'closest-corner') {\n      let xl;\n      let yl;\n      if(cx < x2 + iw * 0.5) {\n        xl = cx - x2;\n      }\n      else {\n        xl = x3 - cx;\n      }\n      if(cy < y2 + ih * 0.5) {\n        yl = cy - y2;\n      }\n      else {\n        yl = y3 - cy;\n      }\n      r = Math.sqrt(Math.pow(xl, 2) + Math.pow(yl, 2));\n    }\n    else if(size === 'farthest-side') {\n      if(cx <= x2) {\n        r = x2 - cx + iw;\n      }\n      else if(cx >= x3) {\n        r = cx - x3 + iw;\n      }\n      else if(cy <= y2) {\n        r = y2 - cy + ih;\n      }\n      else if(cx >= y3) {\n        r = cy - y3 + ih;\n      }\n      else {\n        let xl = Math.max(x3 - cx, cx - x2);\n        let yl = Math.max(y3 - cy, cy - y2);\n        r = Math.max(xl, yl);\n      }\n    }\n    // 默认farthest-corner\n    else {\n      let xl;\n      let yl;\n      if(cx < x2 + iw * 0.5) {\n        xl = x3 - cx;\n      }\n      else {\n        xl = cx - x2;\n      }\n      if(cy < y2 + ih * 0.5) {\n        yl = y3 - cy;\n      }\n      else {\n        yl = cy - y2;\n      }\n      r = Math.sqrt(Math.pow(xl, 2) + Math.pow(yl, 2));\n    }\n  }\n  return [r, cx, cy];\n}\n\n// 当linear-gradient的值超过[0,1]区间限制时，计算其对应区间1的值\nfunction getCsStartLimit(c1, p1, c2, p2, length) {\n  let [ r1, g1, b1, a1 = 1 ] = c1;\n  let [ r2, g2, b2, a2 = 1 ] = c2;\n  let l1 = Math.abs(p1) * length;\n  let l2 = p2 * length;\n  let p = l1 / (l2 + l1);\n  let r = Math.floor(r1 + (r2 - r1) * p);\n  let g = Math.floor(g1 + (g2 - g1) * p);\n  let b = Math.floor(b1 + (b2 - b1) * p);\n  let a = a1 + (a2 - a1) * p;\n  return [r, g, b, a];\n}\n\nfunction getCsEndLimit(c1, p1, c2, p2, length) {\n  let [ r1, g1, b1, a1 = 1 ] = c1;\n  let [ r2, g2, b2, a2 = 1 ] = c2;\n  let l1 = p1 * length;\n  let l2 = p2 * length;\n  let p = (length - l1) / (l2 - l1);\n  let r = Math.floor(r1 + (r2 - r1) * p);\n  let g = Math.floor(g1 + (g2 - g1) * p);\n  let b = Math.floor(b1 + (b2 - b1) * p);\n  let a = a1 + (a2 - a1) * p;\n  return [r, g, b, a];\n}\n\nfunction getCsLimit(first, last, length) {\n  let c1 = util.rgb2int(first[0]);\n  let c2 = util.rgb2int(last[0]);\n  let [ r1, g1, b1, a1 = 1 ] = c1;\n  let [ r2, g2, b2, a2 = 1 ] = c2;\n  let l1 = Math.abs(first[1]) * length;\n  let l2 = last[1] * length;\n  let p = l1 / (l1 + l2);\n  let r = Math.floor(r1 + (r2 - r1) * p);\n  let g = Math.floor(g1 + (g2 - g1) * p);\n  let b = Math.floor(b1 + (b2 - b1) * p);\n  let a = a1 + (a2 - a1) * p;\n  first[0] = `rgba(${r},${g},${b},${a})`;\n  first[1] = 0;\n  p = (length + l1) / (l1 + l2);\n  r = Math.floor(r1 + (r2 - r1) * p);\n  g = Math.floor(g1 + (g2 - g1) * p);\n  b = Math.floor(b1 + (b2 - b1) * p);\n  a = a1 + (a2 - a1) * p;\n  last[0] = `rgba(${r},${g},${b},${a})`;\n  last[1] = 1;\n}\n\nexport default {\n  getLinearDeg,\n  getColorStop,\n  calLinearCoords,\n  calRadialRadius,\n};\n","/* 获取合适的虚线实体空白宽度ps/pd和数量n\n * 总长total，start边长bs，end边长be，内容长w，\n * 实体长范围[smin,smax]，空白长范围[dmin,dmax]\n */\nfunction calFitDashed(total, bs, be, w, smin, smax, dmin, dmax) {\n  let n = 1;\n  let ps = 1;\n  let pd = 1;\n  // 从最大实体空白长开始尝试\n  outer:\n  for(let i = smax; i >= smin; i--) {\n    for(let j = dmax; j >= dmin; j--) {\n      // 已知实体空白长度，n实体和n-1空白组成total，计算获取n数量\n      let per = i + j;\n      let num = Math.floor((total + j) / per);\n      let k = j;\n      // 可能除不尽，此时扩展空白长\n      if(num * per < j + total) {\n        let free = total - num * i;\n        k = free / (num - 1);\n        if(k > dmax) {\n          continue;\n        }\n      }\n      per = i + k;\n      // bs比实体大才有效，因为小的话必定和第一个实体完整相连\n      if(bs > 1 && bs > i) {\n        let mo = bs % per;\n        if(mo > i) {\n          continue;\n        }\n        if(be > 1) {\n          let mo = (bs + w) % per;\n          if(mo > i) {\n            continue;\n          }\n        }\n      }\n      if(be > 1) {\n        let mo = (bs + w) % per;\n        if(mo > i) {\n          continue;\n        }\n      }\n      if(num > 0) {\n        n = num;\n        ps = i;\n        pd = k;\n      }\n      break outer;\n    }\n  }\n  return {\n    n,\n    ps,\n    pd,\n  };\n}\n\n// dashed时n个实线和n-1虚线默认以3:1宽度组成，dotted则是n和n以1:1组成\nfunction calDashed(style, m1, m2, m3, m4, bw) {\n  let total = m4 - m1;\n  let w = m3 - m2;\n  let bs = m2 - m1;\n  let be = m4 - m3;\n  if(style === 'dotted') {\n    return calFitDashed(total, bs, be, w, bw, bw, Math.max(1, bw * 0.25), bw * 2);\n  }\n  else {\n    let { n, ps, pd } = calFitDashed(total, bs, be, w, bw, bw * 3, Math.max(1, bw * 0.25), bw * 2);\n    if(n === 1) {\n      return calFitDashed(total, bs, be, w, bw, bw, Math.max(1, bw * 0.25), bw * 2);\n    }\n    // 降级为dotted\n    return { n, ps, pd };\n  }\n}\n\nexport default {\n  calDashed,\n};\n","import Node from './Node';\nimport mode from '../mode';\nimport unit from '../style/unit';\nimport tf from '../style/transform';\nimport gradient from '../style/gradient';\nimport border from '../style/border';\nimport util from '../util';\n\nfunction renderBorder(renderMode, points, color, ctx, xom) {\n  if(renderMode === mode.CANVAS) {\n    points.forEach(point => {\n      ctx.beginPath();\n      ctx.fillStyle = color;\n      ctx.moveTo(point[0], point[1]);\n      for(let i = 2, len = point.length; i < len; i += 2) {\n        ctx.lineTo(point[i], point[i + 1]);\n      }\n      ctx.fill();\n      ctx.closePath();\n    });\n  }\n  else if(renderMode === mode.SVG) {\n    let s = '';\n    points.forEach(point => {\n      s += `M ${point[0]} ${point[1]}`;\n      for(let i = 2, len = point.length; i < len; i += 2) {\n        s += `L ${point[i]} ${point[i + 1]} `;\n      }\n    });\n    let item = {\n      type: 'item',\n      tagName: 'path',\n      props: [\n        ['d', s],\n        ['fill', color],\n      ],\n    };\n    xom.addBorder([\n      ['d', s],\n      ['fill', color],\n    ]);\n  }\n}\n\nclass Xom extends Node {\n  constructor(tagName, props) {\n    super();\n    props = props || [];\n    // 构建工具中都是arr，手写可能出现hash情况\n    if(Array.isArray(props)) {\n      this.props = util.arr2hash(props);\n      this.__props = props;\n    }\n    else {\n      this.props = props;\n      this.__props = util.hash2arr(props);\n    }\n    this.__tagName = tagName;\n    this.__style = this.props.style || {}; // style被解析后的k-v形式\n    this.__listener = {};\n    this.__props.forEach(item => {\n      let k = item[0];\n      if(/^on[a-zA-Z]/.test(k)) {\n        this.__listener[k.slice(2).toLowerCase()] = item[1];\n      }\n    });\n    // margin和padding的宽度\n    this.__mtw = 0;\n    this.__mrw = 0;\n    this.__mbw = 0;\n    this.__mlw = 0;\n    this.__ptw = 0;\n    this.__prw = 0;\n    this.__pbw = 0;\n    this.__plw = 0;\n    this.__matrix = null;\n  }\n\n  __layout(data) {\n    let { w } = data;\n    let { style: {\n      display,\n      width,\n      marginTop,\n      marginRight,\n      marginBottom,\n      marginLeft,\n      paddingTop,\n      paddingRight,\n      paddingBottom,\n      paddingLeft,\n    } } = this;\n    if(display === 'none') {\n      return;\n    }\n    if(width && width.unit !== unit.AUTO) {\n      switch(width.unit) {\n        case unit.PX:\n          w = width.value;\n          break;\n        case unit.PERCENT:\n          w *= width.value * 0.01;\n          break;\n      }\n    }\n    this.__mlw = this.__mpWidth(marginLeft, w);\n    this.__mtw = this.__mpWidth(marginTop, w);\n    this.__mrw = this.__mpWidth(marginRight, w);\n    this.__mbw = this.__mpWidth(marginBottom, w);\n    this.__plw = this.__mpWidth(paddingLeft, w);\n    this.__ptw = this.__mpWidth(paddingTop, w);\n    this.__prw = this.__mpWidth(paddingRight, w);\n    this.__pbw = this.__mpWidth(paddingBottom, w);\n    if(display === 'block') {\n      this.__layoutBlock(data);\n    }\n    else if(display === 'flex') {\n      this.__layoutFlex(data);\n    }\n    else if(display === 'inline') {\n      this.__layoutInline(data);\n    }\n  }\n\n  isGeom() {\n    return this.tagName.charAt(0) === '$';\n  }\n\n  // 获取margin/padding的实际值\n  __mpWidth(mp, w) {\n    if(mp.unit === unit.PX) {\n      return mp.value;\n    }\n    else if(mp.unit === unit.PERCENT) {\n      return mp.value * w * 0.01;\n    }\n    return 0;\n  }\n\n  __preLayout(data) {\n    let { x, y, w, h } = data;\n    this.__x = x;\n    this.__y = y;\n    let { style, mlw, mtw, mrw, mbw, plw, ptw, prw, pbw } = this;\n    let {\n      width,\n      height,\n      borderTopWidth,\n      borderRightWidth,\n      borderBottomWidth,\n      borderLeftWidth,\n    } = style;\n    // 除了auto外都是固定宽高度\n    let fixedWidth;\n    let fixedHeight;\n    if(width && width.unit !== unit.AUTO) {\n      fixedWidth = true;\n      switch(width.unit) {\n        case unit.PX:\n          w = width.value;\n          break;\n        case unit.PERCENT:\n          w *= width.value * 0.01;\n          break;\n      }\n    }\n    if(height && height.unit !== unit.AUTO) {\n      fixedHeight = true;\n      switch(height.unit) {\n        case unit.PX:\n          h = height.value;\n          break;\n        case unit.PERCENT:\n          h *= height.value * 0.01;\n          break;\n      }\n    }\n    // margin/padding/border影响x和y和尺寸\n    x += borderLeftWidth.value + mlw + plw;\n    data.x = x;\n    y += borderTopWidth.value + mtw + ptw;\n    data.y = y;\n    if(width.unit === unit.AUTO) {\n      w -= borderLeftWidth.value + borderRightWidth.value + mlw + mrw + plw + prw;\n    }\n    if(height.unit === unit.AUTO) {\n      h -= borderTopWidth.value + borderBottomWidth.value + mtw + mbw + ptw + pbw;\n    }\n    return {\n      fixedWidth,\n      fixedHeight,\n      x,\n      y,\n      w,\n      h,\n    };\n  }\n\n  render(renderMode) {\n    this.__renderMode = renderMode;\n    if(renderMode === mode.SVG) {\n      this.__virtualDom = {\n        bb: [],\n        children: [],\n        transform: [],\n      };\n    }\n    let { ctx, style, width, height, mlw, mrw, mtw, mbw, plw, ptw, prw, pbw } = this;\n    // 恢复默认，防止其它matrix影响\n    if(renderMode === mode.CANVAS) {\n      ctx.setTransform(1, 0, 0, 1, 0, 0);\n    }\n    let {\n      display,\n      position,\n      top,\n      right,\n      bottom,\n      left,\n      backgroundGradient: bgg,\n      backgroundColor: bgc,\n      borderTopWidth,\n      borderTopColor: btc,\n      borderTopStyle: bts,\n      borderRightWidth,\n      borderRightColor: brc,\n      borderRightStyle: brs,\n      borderBottomWidth,\n      borderBottomColor: bbc,\n      borderBottomStyle: bbs,\n      borderLeftWidth,\n      borderLeftColor: blc,\n      borderLeftStyle : bls,\n      transform,\n      transformOrigin,\n    } = style;\n    if(display === 'none') {\n      return;\n    }\n    // 除root节点外relative渲染时做偏移，百分比基于父元素，若父元素没有一定高则为0\n    if(position === 'relative' && this.parent) {\n      let { width, height } = this.parent;\n      let h = this.parent.style.height;\n      if(left.unit !== unit.AUTO) {\n        let diff = left.unit === unit.PX ? left.value : left.value * width * 0.01;\n        this.__offsetX(diff);\n      }\n      else if(right.unit !== unit.AUTO) {\n        let diff = right.unit === unit.PX ? right.value : right.value * width * 0.01;\n        this.__offsetX(-diff);\n      }\n      if(top.unit !== unit.AUTO) {\n        let diff = top.unit === unit.PX ? top.value : top.value * height * 0.01 * (h.unit === unit.AUTO ? 0 : 1);\n        this.__offsetY(diff);\n      }\n      else if(bottom.unit !== unit.AUTO) {\n        let diff = bottom.unit === unit.PX ? bottom.value : bottom.value * height * 0.01 * (h.unit === unit.AUTO ? 0 : 1);\n        this.__offsetY(-diff);\n      }\n    }\n    // 使用rx和ry渲染位置，考虑了relative和translate影响\n    let { rx: x, ry: y } = this;\n    let btw = borderTopWidth.value;\n    let brw = borderRightWidth.value;\n    let bbw = borderBottomWidth.value;\n    let blw = borderLeftWidth.value;\n    let x1 = x + mlw;\n    let x2 = x1 + blw;\n    let x3 = x2 + width + plw + prw;\n    let x4 = x3 + brw;\n    let y1 = y + mtw;\n    let y2 = y1 + btw;\n    let y3 = y2 + height + ptw + pbw;\n    let y4 = y3 + bbw;\n    let iw = width + plw + prw;\n    let ih = height + ptw + pbw;\n    // translate相对于自身\n    if(transform) {\n      let x4 = x + mlw + blw + iw + brw + mrw;\n      let y4 = y + mtw + btw + ih + bbw + mbw;\n      let ow = x4 - x;\n      let oh = y4 - y;\n      let tfo = tf.getOrigin(transformOrigin, x, y, ow, oh);\n      let list = tf.normalize(transform, tfo[0], tfo[1], ow, oh);\n      let matrix = tf.calMatrix(list, tfo[0], tfo[1]);\n      // 单位矩阵无需变换\n      if(matrix[0] !== 1\n        || matrix[1] !== 0\n        || matrix[2] !== 0\n        || matrix[3] !== 1\n        || matrix[4] !== 0\n        || matrix[5] !== 0) {\n        // canvas的matrix不叠加，需手动计算，另svg绘制自动叠加，但响应事件也需手动计算\n        let matrixSelf = matrix;\n        let parent = this.parent;\n        while(parent) {\n          if(parent.matrix) {\n            matrix = tf.mergeMatrix(matrix, parent.matrix);\n          }\n          parent = parent.parent;\n        }\n        this.__matrix = matrix;\n        if(renderMode === mode.CANVAS) {\n          ctx.setTransform(...matrix);\n        }\n        else if(renderMode === mode.SVG) {\n          this.addTransform(['matrix', matrixSelf.join(',')]);\n        }\n      }\n    }\n    // 先渲染渐变，没有则背景色\n    if(bgg) {\n      let { k, v } = bgg;\n      let cx = x2 + iw * 0.5;\n      let cy = y2 + ih * 0.5;\n      if(k === 'linear') {\n        let deg = gradient.getLinearDeg(v);\n        // 需计算角度 https://www.w3cplus.com/css3/do-you-really-understand-css-linear-gradients.html\n        let r = util.r2d(deg);\n        let length = Math.abs(iw * Math.sin(r)) + Math.abs(ih * Math.cos(r));\n        let [xx0, yy0, xx1, yy1] = gradient.calLinearCoords(deg, length * 0.5, cx, cy);\n        let list = gradient.getColorStop(v, length);\n        if(renderMode === mode.CANVAS) {\n          let lg = ctx.createLinearGradient(xx0, yy0, xx1, yy1);\n          list.forEach(item => {\n            lg.addColorStop(item[1], item[0]);\n          });\n          ctx.beginPath();\n          ctx.fillStyle = lg;\n          ctx.rect(x2, y2, iw, ih);\n          ctx.fill();\n          ctx.closePath();\n        }\n        else if(renderMode === mode.SVG) {\n          let uuid = this.defs.add({\n            tagName: 'linearGradient',\n            props: [\n              ['x1', xx0],\n              ['y1', yy0],\n              ['x2', xx1],\n              ['y2', yy1]\n            ],\n            stop: list,\n          });\n          this.addBackground([\n            ['x', x2],\n            ['y', y2],\n            ['width', iw],\n            ['height', ih],\n            ['fill', `url(#${uuid})`]\n          ]);\n        }\n      }\n      else if(k === 'radial') {\n        let [r, cx2, cy2] = gradient.calRadialRadius(v, iw, ih, cx, cy, x2, y2, x3, y3);\n        // 计算colorStop\n        let list = gradient.getColorStop(v, r * 2);\n        // 超限情况等同于只显示end的bgc\n        if(r <= 0) {\n          let end = list[list.length - 1];\n          end[1] = 0;\n          list = [end];\n          cx2 = x2;\n          cy2 = y2;\n          // 肯定大于最长直径\n          r = iw + ih;\n        }\n        if(renderMode === mode.CANVAS) {\n          let rg = ctx.createRadialGradient(cx2, cy2, 0, cx2, cy2, r);\n          list.forEach(item => {\n            rg.addColorStop(item[1], item[0]);\n          });\n          ctx.beginPath();\n          ctx.fillStyle = rg;\n          ctx.rect(x2, y2, iw, ih);\n          ctx.fill();\n          ctx.closePath();\n        }\n        else if(renderMode === mode.SVG) {\n          let uuid = this.defs.add({\n            tagName: 'radialGradient',\n            props: [\n              ['cx', cx2],\n              ['cy', cy2],\n              ['r', r]\n            ],\n            stop: list,\n          });\n          this.addBackground([\n            ['x', x2],\n            ['y', y2],\n            ['width', iw],\n            ['height', ih],\n            ['fill', `url(#${uuid})`]\n          ]);\n        }\n      }\n    }\n    else if(bgc && bgc !== 'transparent') {\n      if(renderMode === mode.CANVAS) {\n        ctx.beginPath();\n        ctx.fillStyle = bgc;\n        ctx.rect(x2, y2, iw, ih);\n        ctx.fill();\n        ctx.closePath();\n      }\n      else if(renderMode === mode.SVG) {\n        this.addBackground([\n          ['x', x2],\n          ['y', y2],\n          ['width', iw],\n          ['height', ih],\n          ['fill', bgc]\n        ]);\n      }\n    }\n    // 边框需考虑尖角，两条相交边平分45°夹角\n    if(btw > 0 && btc !== 'transparent') {\n      let points = [];\n      if(['dashed', 'dotted'].indexOf(bts) > -1) {\n        // 寻找一个合适的虚线线段长度和之间空白边距长度\n        let { n, ps, pd } = border.calDashed(bts, x1, x2, x3, x4, btw);\n        if(n <= 1) {\n          points.push([x1, y1, x4, y1, x3, y2, x2, y2]);\n        }\n        else {\n          let deg1 = Math.atan(btw / blw);\n          let deg2 = Math.atan(btw / brw);\n          for(let i = 0; i < n; i++) {\n            // 最后一个可能没有到底，延长之\n            let isLast = i === n - 1;\n            let xx1 = i ? (x1 + ps * i + pd * i) : x1;\n            let xx4 = xx1 + ps;\n            let yy1;\n            let yy2;\n            // 整个和borderLeft重叠\n            if(xx4 < x2) {\n              if(isLast) {\n                points.push([x1, y1, x4, y1, x3, y2, x2, y2]);\n              }\n              else {\n                yy1 = y1 + (xx1 - x1) * Math.tan(deg1);\n                yy2 = y1 + (xx4 - x1) * Math.tan(deg1);\n                points.push([xx1, y1, xx4, y1, xx4, yy2, xx1, yy1]);\n              }\n            }\n            // 整个和borderRight重叠\n            else if(xx1 > x3) {\n              yy1 = y1 + (x4 - xx1) * Math.tan(deg2);\n              yy2 = y1 + (x4 - xx4) * Math.tan(deg2);\n              if(isLast) {\n                points.push([xx1, y1, x4, y1, xx1, yy1]);\n              }\n              else {\n                points.push([xx1, y1, xx4, y1, xx4, yy2, xx1, yy1]);\n              }\n            }\n            // 不被整个重叠的情况再细分\n            else {\n              // 上部分和borderLeft重叠\n              if(xx1 < x2) {\n                yy1 = y1 + (xx1 - x1) * Math.tan(deg1);\n                if(isLast) {\n                  points.push([xx1, y1, x4, y1, x3, y2, x2, y2, xx1, yy1]);\n                }\n                else {\n                  // 下部分和borderRight重叠\n                  if(xx4 > x3) {\n                    points.push([xx1, y1, xx4, y1, x3, y2, x2, y2, xx1, yy1]);\n                  }\n                  // 下部独立\n                  else {\n                    points.push([xx1, y1, xx4, y1, xx4, y2, x2, y2, xx1, yy1]);\n                  }\n                }\n              }\n              // 下部分和borderRight重叠\n              else if(xx4 > x3) {\n                yy1 = y1 + (x4 - xx4) * Math.tan(deg2);\n                // 上部分和borderLeft重叠\n                if(xx1 < x2) {\n                  if(isLast) {\n                    points.push([xx1, y1, x4, y1, x3, y2, x2, y2, xx1, yy1]);\n                  }\n                  else {\n                    points.push([xx1, y1, xx4, y1, xx4, yy1, x3, y2, x2, y2, xx1, yy1]);\n                  }\n                }\n                // 上部独立\n                else {\n                  if(isLast) {\n                    points.push([xx1, y1, x4, y1, x3, y2, xx1, y2]);\n                  }\n                  else {\n                    points.push([xx1, y1, xx4, y1, xx4, yy1, x3, y2, xx1, y2]);\n                  }\n                }\n              }\n              // 完全独立\n              else {\n                if(isLast) {\n                  points.push([xx1, y1, x4, y1, x3, y2, xx1, y2]);\n                }\n                else {\n                  points.push([xx1, y1, xx4, y1, xx4, y2, xx1, y2]);\n                }\n              }\n            }\n          }\n        }\n      }\n      else {\n        points.push([x1, y1, x4, y1, x3, y2, x2, y2]);\n      }\n      renderBorder(renderMode, points, btc, ctx, this);\n    }\n    if(brw > 0 && brc !== 'transparent') {\n      let points = [];\n      if(['dashed', 'dotted'].indexOf(brs) > -1) {\n        // 寻找一个合适的虚线线段长度和之间空白边距长度\n        let { n, ps, pd } = border.calDashed(brs, y1, y2, y3, y4, brw);\n        if(n <= 1) {\n          points.push([x3, y2, x4, y1, x4, y4, x3, y3]);\n        }\n        else {\n          let deg1 = Math.atan(brw / btw);\n          let deg2 = Math.atan(brw / bbw);\n          for(let i = 0; i < n; i++) {\n            // 最后一个可能没有到底，延长之\n            let isLast = i === n - 1;\n            let yy1 = i ? (y1 + ps * i + pd * i) : y1;\n            let yy4 = yy1 + ps;\n            let xx1;\n            let xx2;\n            // 整个和borderTop重叠\n            if(yy4 < y2) {\n              if(isLast) {\n                points.push([x3, y2, x4, y1, x4, y4, x3, y3]);\n              }\n              else {\n                xx1 = x4 - (yy4 - y1) * Math.tan(deg1);\n                xx2 = x4 - (yy1 - y1) * Math.tan(deg1);\n                points.push([xx1, yy4, xx2, yy1, x4, yy1, x4, yy4]);\n              }\n            }\n            // 整个和borderBottom重叠\n            else if(yy1 > y3) {\n              xx1 = x3 + (yy1 - y3) * Math.tan(deg2);\n              xx2 = x3 + (yy4 - y3) * Math.tan(deg2);\n              if(isLast) {\n                points.push([xx1, yy1, x4, yy1, x4, y4]);\n              }\n              else {\n                points.push([xx1, yy1, x4, yy1, x4, yy4, xx2, yy4]);\n              }\n            }\n            // 不被整个重叠的情况再细分\n            else {\n              // 上部分和borderTop重叠\n              if(yy1 < y2) {\n                xx1 = x3 + (y2 - yy1) * Math.tan(deg1);\n                if(isLast) {\n                  points.push([x3, y2, xx1, yy1, x4, yy1, x4, y4, x3, y4]);\n                }\n                else {\n                  // 下部分和borderBottom重叠\n                  if(yy4 > y3) {\n                    points.push([x3, y2, xx1, yy1, x4, yy1, x4, yy4, xx1, yy4, x3, y3]);\n                  }\n                  // 下部独立\n                  else {\n                    points.push([x3, y2, xx1, yy1, x4, yy1, x4, yy4, x3, yy4]);\n                  }\n                }\n              }\n              // 下部分和borderBottom重叠\n              else if(yy4 > y3) {\n                xx1 = x3 + (yy4 - y3) * Math.tan(deg2);\n                // 上部分和borderTop重叠\n                if(yy1 < y2) {\n                  if(isLast) {\n                    points.push([x3, y2, xx1, yy1, x4, yy1, x4, y4, x3, y3]);\n                  }\n                  else {\n                    points.push([x3, y2, xx1, yy1, x4, yy1, x4, yy4, xx1, yy4, x3, y3]);\n                  }\n                }\n                // 上部独立\n                else {\n                  if(isLast) {\n                    points.push([x3, yy1, x4, yy1, x4, y4, x3, y3]);\n                  }\n                  else {\n                    points.push([x3, yy1, x4, yy1, x4, yy4, xx1, yy4, x3, y3]);\n                  }\n                }\n              }\n              // 完全独立\n              else {\n                if(isLast) {\n                  points.push([x3, yy1, x4, yy1, x4, y4, x3, y3]);\n                }\n                else {\n                  points.push([x3, yy1, x4, yy1, x4, yy4, x3, yy4]);\n                }\n              }\n            }\n          }\n        }\n      }\n      else {\n        points.push([x3, y2, x4, y1, x4, y4, x3, y3]);\n      }\n      renderBorder(renderMode, points, brc, ctx, this);\n    }\n    if(bbw > 0 && bbc !== 'transparent') {\n      let points = [];\n      // 寻找一个合适的虚线线段长度和之间空白边距长度\n      if(['dashed', 'dotted'].indexOf(bbs) > -1) {\n        // 寻找一个合适的虚线线段长度和之间空白边距长度\n        let { n, ps, pd } = border.calDashed(bbs, x1, x2, x3, x4, bbw);\n        let deg1 = Math.atan(bbw / blw);\n        let deg2 = Math.atan(bbw / brw);\n        for(let i = 0; i < n; i++) {\n          // 最后一个可能没有到底，延长之\n          let isLast = i === n - 1;\n          let xx1 = i ? (x1 + ps * i + pd * i) : x1;\n          let xx4 = xx1 + ps;\n          let yy1;\n          let yy2;\n          // 整个和borderLeft重叠\n          if(xx4 < x2) {\n            if(isLast) {\n              points.push([x1, y4, x2, y3, x3, y3, x4, y4]);\n            }\n            else {\n              yy1 = y4 - (xx1 - x1) * Math.tan(deg1);\n              yy2 = y4 - (xx4 - x1) * Math.tan(deg1);\n              points.push([xx1, yy1, xx4, yy2, xx4, y4, xx1, y4]);\n            }\n          }\n          // 整个和borderRight重叠\n          else if(xx1 > x3) {\n            yy1 = y4 - (xx1 - x1) * Math.tan(deg2);\n            yy2 = y4 - (xx4 - x1) * Math.tan(deg2);\n            if(isLast) {\n              points.push([xx1, yy1, x4, y4, xx1, y4]);\n            }\n            else {\n              points.push([xx1, yy1, xx4, yy2, xx4, y4, xx1, y4]);\n            }\n          }\n          // 不被整个重叠的情况再细分\n          else {\n            // 上部分和borderLeft重叠\n            if(xx1 < x2) {\n              yy1 = y3 + (xx1 - x1) * Math.tan(deg1);\n              if(isLast) {\n                points.push([xx1, yy1, x2, y3, x3, y3, x4, y4, xx1, y4]);\n              }\n              else {\n                // 下部分和borderRight重叠\n                if(xx4 > x3) {\n                  points.push([xx1, yy1, x2, y3, x3, y3, xx4, y4, xx1, y4]);\n                }\n                // 下部独立\n                else {\n                  points.push([xx1, yy1, x2, y3, xx4, y3, xx4, y4, xx1, y4]);\n                }\n              }\n            }\n            // 下部分和borderRight重叠\n            else if(xx4 > x3) {\n              yy1 = y4 - (x4 - xx4) * Math.tan(deg2);\n              // 上部分和borderLeft重叠\n              if(xx1 < x2) {\n                if(isLast) {\n                  points.push([xx1, yy1, x3, y3, x4, y4, xx1, y4]);\n                }\n                else {\n                  points.push([xx1, yy1, x3, y3, xx4, yy1, xx4, y4, xx1, y4]);\n                }\n              }\n              // 上部独立\n              else {\n                if(isLast) {\n                  points.push([xx1, y3, x3, y3, x4, y4, xx1, y4]);\n                }\n                else {\n                  points.push([xx1, y3, x3, y3, xx4, yy1, xx4, y4, xx1, y4]);\n                }\n              }\n            }\n            // 完全独立\n            else {\n              if(isLast) {\n                points.push([xx1, y3, x3, y3, x4, y4, xx1, y4]);\n              }\n              else {\n                points.push([xx1, y3, xx4, y3, xx4, y4, xx1, y4]);\n              }\n            }\n          }\n        }\n      }\n      else {\n        points.push([x1, y4, x2, y3, x3, y3, x4, y4]);\n      }\n      renderBorder(renderMode, points, bbc, ctx, this);\n    }\n    if(blw > 0 && blc !== 'transparent') {\n      let points = [];\n      if(['dashed', 'dotted'].indexOf(bls) > -1) {\n        // 寻找一个合适的虚线线段长度和之间空白边距长度\n        let { n, ps, pd } = border.calDashed(bls, y1, y2, y3, y4, blw);\n        if(n <= 1) {\n          points.push([x1, y1, x2, y2, x2, y3, x1, y4]);\n        }\n        else {\n          let deg1 = Math.atan(blw / btw);\n          let deg2 = Math.atan(blw / bbw);\n          for(let i = 0; i < n; i++) {\n            // 最后一个可能没有到底，延长之\n            let isLast = i === n - 1;\n            let yy1 = i ? (y1 + ps * i + pd * i) : y1;\n            let yy4 = yy1 + ps;\n            let xx1;\n            let xx2;\n            // 整个和borderTop重叠\n            if(yy4 < y2) {\n              if(isLast) {\n                points.push([x1, y1, x2, y2, x2, y3, x1, y4]);\n              }\n              else {\n                xx1 = x1 + (yy1 - y1) * Math.tan(deg1);\n                xx2 = x1 + (yy4 - y1) * Math.tan(deg1);\n                points.push([x1, yy1, xx1, yy1, xx2, yy4, x1, yy4]);\n              }\n            }\n            // 整个和borderBottom重叠\n            else if(yy1 > y3) {\n              xx1 = x1 + (y4 - yy1) * Math.tan(deg2);\n              xx2 = x1 + (y4 - yy4) * Math.tan(deg2);\n              if(isLast) {\n                points.push([x1, yy1, xx1, yy1, x1, y4]);\n              }\n              else {\n                points.push([x1, yy1, xx1, yy1, xx2, yy4, x1, yy4]);\n              }\n            }\n            // 不被整个重叠的情况再细分\n            else {\n              // 上部分和borderTop重叠\n              if(yy1 < y2) {\n                xx1 = x1 + (yy1 - y1) * Math.tan(deg1);\n                if(isLast) {\n                  points.push([x1, yy1, xx1, yy1, x2, y2, x2, y3, x1, y4]);\n                }\n                else {\n                  // 下部分和borderBottom重叠\n                  if(yy4 > y3) {\n                    points.push([x1, yy1, xx1, yy1, x2, y2, x2, y3, xx1, yy4, x1, yy4]);\n                  }\n                  // 下部独立\n                  else {\n                    points.push([x1, yy1, xx1, yy1, x2, y2, x2, yy4, x1, yy4]);\n                  }\n                }\n              }\n              // 下部分和borderBottom重叠\n              else if(yy4 > y3) {\n                xx1 = x1 + (y4 - yy4) * Math.tan(deg2);\n                // 上部分和borderTop重叠\n                if(yy1 < y2) {\n                  if(isLast) {\n                    points.push([x1, yy1, xx1, yy1, x2, y2, x2, y3, x1, y4]);\n                  }\n                  else {\n                    points.push([x1, yy1, xx1, yy1, x2, y2, x2, y3, xx1, yy4, x1, yy4]);\n                  }\n                }\n                // 上部独立\n                else {\n                  if(isLast) {\n                    points.push([x1, yy1, x2, yy1, x2, y3, x1, y4]);\n                  }\n                  else {\n                    points.push([x1, yy1, x2, yy1, x2, y3, xx1, yy4, x1, yy4]);\n                  }\n                }\n              }\n              // 完全独立\n              else {\n                if(isLast) {\n                  points.push([x1, yy1, x2, yy1, x2, y3, x1, y4]);\n                }\n                else {\n                  points.push([x1, yy1, x2, yy1, x2, yy4, x1, yy4]);\n                }\n              }\n            }\n          }\n        }\n      }\n      else {\n        points.push([x1, y1, x2, y2, x2, y3, x1, y4]);\n      }\n      renderBorder(renderMode, points, blc, ctx, this);\n    }\n  }\n\n  // 先查找到注册了事件的节点，再捕获冒泡判断增加性能\n  __emitEvent(e, force) {\n    let { event: { type }, x, y, covers } = e;\n    let { listener, children, style, outerWidth, outerHeight, matrix } = this;\n    if(style.display === 'none') {\n      return;\n    }\n    let cb;\n    if(listener.hasOwnProperty(type)) {\n      cb = listener[type];\n    }\n    // touchend之类强制的直接通知即可\n    if(force) {\n      children.forEach(child => {\n        if(child instanceof Xom && !child.isGeom()) {\n          child.__emitEvent(e, force);\n        }\n      });\n      cb && cb(e);\n      return;\n    }\n    let childWillResponse;\n    if(!this.isGeom()) {\n      // 先响应absolute/relative高优先级，从后往前遮挡顺序\n      for(let i = children.length - 1; i >= 0; i--) {\n        let child = children[i];\n        if(child instanceof Xom && ['absolute', 'relative'].indexOf(child.style.position) > -1) {\n          if(child.__emitEvent(e)) {\n            childWillResponse = true;\n          }\n        }\n      }\n      // 再看普通流，从后往前遮挡顺序\n      for(let i = children.length - 1; i >= 0; i--) {\n        let child = children[i];\n        if(child instanceof Xom && ['absolute', 'relative'].indexOf(child.style.position) === -1) {\n          if(child.__emitEvent(e)) {\n            childWillResponse = true;\n          }\n        }\n      }\n    }\n    // child触发则parent一定触发，否则判断事件坐标是否在节点内且未被遮挡\n    if(childWillResponse || this.willResponseEvent(e)) {\n      // 根据是否matrix存入遮罩坐标\n      covers.push({\n        x,\n        y,\n        w: outerWidth,\n        h: outerHeight,\n        matrix,\n      });\n      if(!e.target) {\n        e.target = this;\n      }\n      cb && cb(e);\n    }\n  }\n\n  willResponseEvent(e) {\n    let { x, y, covers } = e;\n    let { rx, ry, outerWidth, outerHeight, matrix } = this;\n    let inThis = tf.pointInQuadrilateral(x - rx, y - ry,\n      0, 0,\n      outerWidth,0,\n      0, outerHeight,\n      outerWidth, outerHeight,\n      matrix);\n    if(inThis) {\n      // 不能被遮挡\n      for(let i = 0, len = covers.length; i < len; i++) {\n        let { x: x2, y: y2, w, h, matrix } = covers[i];\n        if(tf.pointInQuadrilateral(x - rx, y - ry,\n          x2 - rx, y2 - ry,\n          x2 - rx + w,y2 - ry,\n          x2 - rx, y2 - ry + h,\n          x2 - rx + w, y2 - ry + h,\n          matrix)\n        ) {\n          return;\n        }\n      }\n      if(!e.target) {\n        e.target = this;\n      }\n      return true;\n    }\n  }\n\n  addBorder(props) {\n    this.virtualDom.bb.push({\n      type: 'item',\n      tagName: 'path',\n      props,\n    });\n  }\n\n  addBackground(props) {\n    this.virtualDom.bb.push({\n      type: 'item',\n      tagName: 'rect',\n      props,\n    });\n  }\n\n  addTransform(props) {\n    this.virtualDom.transform.push(props);\n  }\n\n  get tagName() {\n    return this.__tagName;\n  }\n  get mtw() {\n    return this.__mtw;\n  }\n  get mrw() {\n    return this.__mrw;\n  }\n  get mbw() {\n    return this.__mbw;\n  }\n  get mlw() {\n    return this.__mlw;\n  }\n  get ptw() {\n    return this.__ptw;\n  }\n  get prw() {\n    return this.__prw;\n  }\n  get pbw() {\n    return this.__pbw;\n  }\n  get plw() {\n    return this.__plw;\n  }\n  get outerWidth() {\n    let { mlw, mrw, plw, prw, style: {\n      borderLeftWidth,\n      borderRightWidth,\n    } } = this;\n    return this.width\n      + borderLeftWidth.value\n      + borderRightWidth.value\n      + mlw\n      + mrw\n      + plw\n      + prw;\n  }\n  get outerHeight() {\n    let { mtw, mbw, ptw, pbw, style: {\n      borderTopWidth,\n      borderBottomWidth,\n    } } = this;\n    return this.height\n      + borderTopWidth.value\n      + borderBottomWidth.value\n      + mtw\n      + mbw\n      + ptw\n      + pbw;\n  }\n  get listener() {\n    return this.__listener;\n  }\n  get renderMode() {\n    return this.__renderMode;\n  }\n  get matrix() {\n    return this.__matrix;\n  }\n}\n\nexport default Xom;\n","'use strict';\n\nexport default {\n  arial: {\n    lhr: 1.14990234375, // 默认line-height ratio，(67+1854+434)/2048\n    car: 1.1171875, // content-area ratio，(1854+434)/2048\n    blr: 0.9052734375, // base-line ratio，1854/2048\n    mdr: 0.64599609375, // middle ratio，(1854-1062/2)/2048\n    lgr: 0.03271484375, // line-gap ratio，67/2048\n  },\n};\n","const RESET = {\n  position: 'static',\n  display: 'block',\n  borderSizing: 'content-box',\n  top: 'auto',\n  right: 'auto',\n  bottom: 'auto',\n  left: 'auto',\n  marginTop: 0,\n  marginRight: 0,\n  marginBottom: 0,\n  marginLeft: 0,\n  paddingTop: 0,\n  paddingRight: 0,\n  paddingBottom: 0,\n  paddingLeft: 0,\n  fontSize: 16,\n  fontFamily: 'arial',\n  color: '#000',\n  fontStyle: 'normal',\n  fontWeight: 400,\n  lineHeight: 'normal',\n  borderTopWidth: 0,\n  borderRightWidth: 0,\n  borderBottomWidth: 0,\n  borderLeftWidth: 0,\n  borderTopColor: '#000',\n  borderRightColor: '#000',\n  borderBottomColor: '#000',\n  borderLeftColor: '#000',\n  borderTopStyle: 'solid',\n  borderRightStyle: 'solid',\n  borderBottomStyle: 'solid',\n  borderLeftStyle: 'solid',\n  borderTopLeftRadius: 0,\n  borderTopRightRadius: 0,\n  borderBottomLeftRadius: 0,\n  borderBottomRightRadius: 0,\n  verticalAlign: 'baseline',\n  width: 'auto',\n  height: 'auto',\n  flexGrow: 0,\n  flexShrink: 1,\n  flexBasis: 'auto',\n  flexDirection: 'row',\n  justifyContent: 'flex-start',\n  alignItems: 'stretch',\n  textAlign: 'left',\n  visibility: 'visible',\n  transformOrigin: 'center',\n  fill: '#000',\n  stroke: '#000',\n  strokeWidth: 0,\n  strokeDasharray: [],\n};\n\nlet reset = [];\n\nObject.keys(RESET).forEach(k => {\n  let v = RESET[k];\n  reset.push({\n    k,\n    v,\n  });\n});\n\nexport default reset;\n","import unit from './unit';\nimport font from './font';\nimport reset from './reset';\n\nfunction parserOneBorder(style, direction) {\n  let key = `border${direction}`;\n  if(!style[key]) {\n    return;\n  }\n  let w = /\\b\\d+px\\b/i.exec(style[key]);\n  if(w) {\n    style[key + 'Width'] = w[0];\n  }\n  let s = /\\b(solid|dashed|dotted)\\b/i.exec(style[key]);\n  if(s) {\n    style[key + 'Style'] = s[1];\n  }\n  let c = /#[0-9a-f]{3,6}/i.exec(style[key]);\n  if(c && [4, 7].indexOf(c[0].length) > -1) {\n    style[key + 'Color'] = c[0];\n  }\n  else if(/\\btransparent\\b/i.test(style[key])) {\n    style[key + 'Color'] = 'transparent';\n  }\n  else {\n    c = /rgba?\\(.+\\)/i.exec(style[key]);\n    if(c) {\n      style[key + 'Color'] = c[0];\n    }\n  }\n}\n\nfunction calUnit(obj, k, v) {\n  if(v === 'auto') {\n    obj[k] = {\n      unit: unit.AUTO,\n    };\n  }\n  else if(/px$/.test(v)) {\n    v = parseFloat(v) || 0;\n    obj[k] = {\n      value: v,\n      unit: unit.PX,\n    };\n  }\n  else if(/%$/.test(v)) {\n    // border不支持百分比\n    if(k.toString().indexOf('border') === 0) {\n      obj[k] = {\n        value: 0,\n        unit: unit.PX,\n      };\n    }\n    else {\n      v = parseFloat(v) || 0;\n      obj[k] = {\n        value: v,\n        unit: unit.PERCENT,\n      };\n    }\n  }\n  else {\n    v = parseFloat(v) || 0;\n    obj[k] = {\n      value: v,\n      unit: unit.PX,\n    };\n  }\n  return obj;\n}\n\nfunction normalize(style) {\n  // 默认reset\n  reset.forEach(item => {\n    if(!style.hasOwnProperty(item.k)) {\n      style[item.k] = item.v;\n    }\n  });\n  let temp = style.background;\n  // 处理缩写\n  if(temp) {\n    // 优先gradient，没有再考虑颜色\n    let gradient = /\\b(\\w+)-gradient\\((.+)\\)/.exec(temp);\n    if(gradient) {\n      style.backgroundGradient = {\n        k: gradient[1],\n        v: gradient[2].split(/\\s*,\\s*/),\n      };\n    }\n    else {\n      let bgc = /#[0-9a-f]{3,6}/i.exec(temp);\n      if(bgc && [4, 7].indexOf(bgc[0].length) > -1) {\n        style.backgroundColor = bgc[0];\n      } else {\n        bgc = /rgba?\\(.+\\)/i.exec(temp);\n        if(bgc) {\n          style.backgroundColor = bgc[0];\n        }\n      }\n    }\n  }\n  temp = style.flex;\n  if(temp) {\n    if(temp === 'none') {\n      style.flexGrow = 0;\n      style.flexShrink = 0;\n      style.flexBasis = 'auto';\n    }\n    else if(temp === 'auto') {\n      style.flexGrow = 1;\n      style.flexShrink = 1;\n      style.flexBasis = 'auto';\n    }\n    else if(/^[\\d.]+$/.test(temp)) {\n      style.flexGrow = parseFloat(temp);\n      style.flexShrink = 1;\n      style.flexBasis = 0;\n    }\n    else if(/^[\\d.]+px$/.test(temp)) {}\n    else if(/^[\\d.]+%$/.test(temp)) {}\n    else {\n      style.flexGrow = 0;\n      style.flexShrink = 1;\n      style.flexBasis = 'auto';\n    }\n  }\n  temp = style.border;\n  if(temp) {\n    style.borderTop = style.borderRight = style.borderBottom = style.borderLeft = temp;\n  }\n  temp = style.margin;\n  if(temp) {\n    let match = temp.toString().match(/(-?[\\d.]+(px|%)?)|(auto)/ig);\n    if(match) {\n      if(match.length === 1) {\n        match[3] = match[2] = match[1] = match[0];\n      }\n      else if(match.length === 2) {\n        match[2] = match[0];\n        match[3] = match[1];\n      }\n      else if(match.length === 3) {\n        match[3] = match[1];\n      }\n      style.marginTop = match[0];\n      style.marginRight = match[1];\n      style.marginBottom = match[2];\n      style.marginLeft = match[3];\n    }\n  }\n  temp = style.padding;\n  if(temp) {\n    let match = temp.toString().match(/(-?[\\d.]+(px|%)?)|(auto)/ig);\n    if(match) {\n      if(match.length === 1) {\n        match[3] = match[2] = match[1] = match[0];\n      }\n      else if(match.length === 2) {\n        match[2] = match[0];\n        match[3] = match[1];\n      }\n      else if(match.length === 3) {\n        match[3] = match[1];\n      }\n      style.paddingTop = match[0];\n      style.paddingRight = match[1];\n      style.paddingBottom = match[2];\n      style.paddingLeft = match[3];\n    }\n  }\n  temp = style.borderRadius;\n  if(temp) {\n    style.borderTopRightRadius = style.borderTopLeftRadius = style.borderBottomRightRadius = style.borderBottomLeftRadius = temp;\n  }\n  temp = style.transform;\n  if(temp) {\n    let match = temp.toString().match(/\\w+\\(.+?\\)/g);\n    if(match) {\n      let transform = style.transform = [];\n      match.forEach(item => {\n        let i = item.indexOf('(');\n        let k = item.slice(0, i);\n        let v = item.slice(i + 1, item.length - 1);\n        if(k === 'matrix') {\n          let arr = v.split(/\\s*,\\s*/);\n          arr = arr.map(item => parseFloat(item));\n          if(arr.length > 6) {\n            arr = arr.slice(0, 6);\n          }\n          else if(arr.length < 6) {\n            while(arr.length < 6) {\n              arr.push(0);\n            }\n          }\n          transform.push(['matrix', arr]);\n        }\n        else if(k === 'translateX') {\n          let arr = ['translateX', v];\n          transform.push(calUnit(arr, 1, v));\n        }\n        else if(k === 'translateY') {\n          let arr = ['translateY', v];\n          transform.push(calUnit(arr, 1, v));\n        }\n        else if(k === 'translate') {\n          let arr = v.split(/\\s*,\\s*/);\n          let arr1 = ['translateX', arr[0]];\n          let arr2 = ['translateY', arr[1]];\n          transform.push(calUnit(arr1, 1, v));\n          transform.push(calUnit(arr2, 1, v));\n        }\n        else if(k === 'scaleX') {\n          transform.push(['scaleX', parseFloat(v) || 0]);\n        }\n        else if(k === 'scaleY') {\n          transform.push(['scaleY', parseFloat(v) || 0]);\n        }\n        else if(k === 'scale') {\n          let arr = v.split(/\\s*,\\s*/);\n          transform.push(['scaleX', parseFloat(arr[0]) || 0]);\n          transform.push(['scaleX', parseFloat(arr[1]) || 0]);\n        }\n        else if(k === 'rotateZ' || k === 'rotate') {\n          transform.push(['rotate', parseFloat(v) || 0]);\n        }\n        else if(k === 'skewX') {\n          transform.push(['skewX', parseFloat(v) || 0]);\n        }\n        else if(k === 'skewY') {\n          transform.push(['skewY', parseFloat(v) || 0]);\n        }\n        else if(k === 'skew') {\n          let arr = v.split(/\\s*,\\s*/);\n          transform.push(['skewX', parseFloat(arr[0]) || 0]);\n          transform.push(['skewY', parseFloat(arr[1]) || 0]);\n        }\n      });\n    }\n  }\n  temp = style.transformOrigin;\n  if(temp) {\n    let match = temp.toString().match(/(-?[\\d.]+(px|%)?)|(left|top|right|bottom|center)/ig);\n    if(match) {\n      if(match.length === 1) {\n        match[1] = match[0];\n      }\n      let tfo = [];\n      for(let i = 0; i < 2; i++) {\n        let item = match[i];\n        if(/px$/.test(item)) {\n          tfo.push({\n            value: parseFloat(item),\n            unit: unit.PX,\n          });\n        }\n        else if(/%$/.test(item)) {\n          tfo.push({\n            value: parseFloat(item),\n            unit: unit.PERCENT,\n          });\n        }\n        else {\n          tfo.push({\n            value: item,\n            unit: unit.POSITION,\n          });\n        }\n      }\n      style.transformOrigin = tfo;\n    }\n  }\n  parserOneBorder(style, 'Top');\n  parserOneBorder(style, 'Right');\n  parserOneBorder(style, 'Bottom');\n  parserOneBorder(style, 'Left');\n  // 转化不同单位值为对象标准化\n  [\n    'marginTop',\n    'marginRight',\n    'marginBottom',\n    'marginLeft',\n    'paddingTop',\n    'paddingRight',\n    'paddingBottom',\n    'paddingLeft',\n    'borderTopWidth',\n    'borderRightWidth',\n    'borderBottomWidth',\n    'borderLeftWidth',\n    'borderTopLeftRadius',\n    'borderTopRightRadius',\n    'borderBottomLeftRadius',\n    'borderBottomRightRadius',\n    'top',\n    'right',\n    'bottom',\n    'left',\n    'width',\n    'height',\n    'flexBasis',\n  ].forEach(k => {\n    let v = style[k];\n    calUnit(style, k, v);\n  });\n  // 计算lineHeight为px值，最小范围\n  let lineHeight = style.lineHeight;\n  if(lineHeight === 'normal') {\n    lineHeight = {\n      value: style.fontSize * font.arial.lhr,\n      unit: unit.PX,\n    };\n  }\n  else if(/px$/.test(lineHeight)) {\n    lineHeight = parseFloat(lineHeight);\n    lineHeight = {\n      value: Math.max(style.fontSize, lineHeight),\n      unit: unit.PX,\n    };\n  }\n  // 纯数字比例\n  else {\n    lineHeight = parseFloat(lineHeight) || 'normal';\n    // 非法数字\n    if(lineHeight === 'normal') {\n      lineHeight = {\n        value: style.fontSize * font.arial.lhr,\n        unit: unit.PX,\n      };\n    }\n    else {\n      lineHeight = {\n        value: lineHeight * style.fontSize,\n        unit: unit.PX,\n      };\n    }\n  }\n  style.lineHeight = lineHeight;\n}\n\nfunction setFontStyle(style) {\n  let { fontStyle, fontWeight, fontSize, fontFamily } = style;\n  return `${fontStyle} ${fontWeight} ${fontSize}px/${fontSize}px ${fontFamily}`;\n}\n\nfunction getBaseLine(style) {\n  let normal = style.fontSize * font.arial.lhr;\n  return (style.lineHeight.value - normal) * 0.5 + style.fontSize * font.arial.blr;\n}\n\nexport default {\n  normalize,\n  setFontStyle,\n  getBaseLine,\n};\n","import css from '../style/css';\nimport mode from '../mode';\n\nclass LineBox {\n  constructor(parent, x, y, w, content, style) {\n    this.__parent = parent;\n    this.__x = x;\n    this.__y = y;\n    this.__width = w;\n    this.__content = content;\n    this.__style = style;\n    this.__virtualDom = {};\n  }\n\n  render(renderMode, ctx) {\n    let { style, content, x, y, parent: { ox, oy } } = this;\n    y += css.getBaseLine(style);\n    x += ox;\n    y += oy;\n    if(renderMode === mode.CANVAS) {\n      ctx.fillText(content, x, y);\n    }\n    else if(renderMode === mode.SVG) {\n      this.__virtualDom = {\n        type: 'item',\n        tagName: 'text',\n        props: [\n          ['x', x],\n          ['y', y],\n          ['fill', style.color],\n          ['font-size', `${style.fontSize}px`]\n        ],\n        content,\n      };\n    }\n  }\n\n  __offsetX(diff) {\n    this.__x += diff;\n  }\n\n  __offsetY(diff) {\n    this.__y += diff;\n  }\n\n  get x() {\n    return this.__x;\n  }\n  get y() {\n    return this.__y;\n  }\n  get width() {\n    return this.__width;\n  }\n  get content() {\n    return this.__content;\n  }\n  get style() {\n    return this.__style;\n  }\n  get baseLine() {\n    return css.getBaseLine(this.style);\n  }\n  get virtualDom() {\n    return this.__virtualDom;\n  }\n  get parent() {\n    return this.__parent;\n  }\n}\n\nexport default LineBox;\n","import Node from './Node';\nimport LineBox from './LineBox';\nimport css from '../style/css';\nimport mode from '../mode';\n\nconst CHAR_WIDTH_CACHE = {};\n\nclass Text extends Node {\n  constructor(content) {\n    super();\n    this.__content = content.toString();\n    this.__lineBoxes = [];\n    this.__charWidthList = [];\n    this.__charWidth = 0;\n    this.__textWidth = 0;\n  }\n\n  // 预先计算每个字的宽度\n  __measure() {\n    this.__charWidthList = [];\n    let { ctx, content, style, charWidthList, renderMode } = this;\n    if(renderMode === mode.CANVAS) {\n      ctx.font = css.setFontStyle(style);\n    }\n    let cache = CHAR_WIDTH_CACHE[style.fontSize] = CHAR_WIDTH_CACHE[style.fontSize] || {};\n    let length = content.length;\n    let sum = 0;\n    for(let i = 0; i < length; i++) {\n      let char = content.charAt(i);\n      let mw;\n      if(cache.hasOwnProperty(char)) {\n        mw = cache[char];\n      }\n      else if(renderMode === mode.CANVAS) {\n        mw = cache[char] = ctx.measureText(char).width;\n      }\n      else if(renderMode === mode.SVG) {\n        mw = cache[char] = mode.measure(char, style);\n      }\n      charWidthList.push(mw);\n      sum += mw;\n      this.__charWidth = Math.max(this.charWidth, mw);\n    }\n    this.__textWidth = sum;\n  }\n\n  __layout(data, isVirtual) {\n    let { x, y, w, h } = data;\n    this.__x = x;\n    this.__y = y;\n    let maxX = x;\n    let { ctx, content, style, lineBoxes, charWidthList, renderMode } = this;\n    // 顺序尝试分割字符串为lineBox，形成多行\n    let begin = 0;\n    let i = 0;\n    let count = 0;\n    let length = content.length;\n    while(i < length) {\n      count += charWidthList[i];\n      if (count === w) {\n        let lineBox = new LineBox(this, x, y, count, content.slice(begin, i + 1), style);\n        lineBoxes.push(lineBox);\n        maxX = Math.max(maxX, x + count);\n        y += this.style.lineHeight.value;\n        begin = i + 1;\n        i = begin + 1;\n        count = 0;\n      }\n      else if (count > w) {\n        // 宽度不足时无法跳出循环，至少也要塞个字符形成一行\n        if(i === begin) {\n          i = begin + 1;\n        }\n        let lineBox = new LineBox(this, x, y, count - charWidthList[i], content.slice(begin, i), style);\n        lineBoxes.push(lineBox);\n        maxX = Math.max(maxX, x + count - charWidthList[i]);\n        y += this.style.lineHeight.value;\n        begin = i;\n        i = i + 1;\n        count = 0;\n      }\n      else {\n        i++;\n      }\n    }\n    if(begin < length && begin < i) {\n      count = 0;\n      for(i = begin ;i < length; i++) {\n        count += charWidthList[i];\n      }\n      let lineBox = new LineBox(this, x, y, count, content.slice(begin, length), style);\n      lineBoxes.push(lineBox);\n      maxX = Math.max(maxX, x + count);\n      y += style.lineHeight.value;\n    }\n    this.__width = maxX - x;\n    this.__height = y - data.y;\n    if(isVirtual) {\n      this.__lineBoxes = [];\n    }\n    else {\n      let { textAlign } = style;\n      if(['center', 'right'].indexOf(textAlign) > -1) {\n        lineBoxes.forEach(lineBox => {\n          let diff = this.__width - lineBox.width;\n          if(diff > 0) {\n            lineBox.__offsetX(textAlign === 'center' ? diff * 0.5 : diff);\n          }\n        });\n      }\n    }\n  }\n\n  render(renderMode) {\n    const { ctx, style } = this;\n    if(renderMode === mode.CANVAS) {\n      ctx.font = css.setFontStyle(style);\n      ctx.fillStyle = style.color;\n    }\n    this.lineBoxes.forEach(item => {\n      item.render(renderMode, ctx);\n    });\n    if(renderMode === mode.SVG) {\n      this.__virtualDom = {\n        type: 'text',\n        children: this.lineBoxes.map(lineBox => lineBox.virtualDom),\n      };\n    }\n  }\n\n  __tryLayInline(w) {\n    return w - this.textWidth;\n  }\n\n  __calMaxAndMinWidth() {\n    let n = 0;\n    this.charWidthList.forEach(item => {\n      n = Math.max(n, item);\n    });\n    return { max: this.textWidth, min: n };\n  }\n\n  get content() {\n    return this.__content;\n  }\n  set content(v) {\n    this.__content = v;\n  }\n  get lineBoxes() {\n    return this.__lineBoxes;\n  }\n  get charWidthList() {\n    return this.__charWidthList;\n  }\n  get charWidth() {\n    return this.__charWidth;\n  }\n  get textWidth() {\n    return this.__textWidth;\n  }\n  get baseLine() {\n    let last = this.lineBoxes[this.lineBoxes.length - 1];\n    return last.y - this.y + last.baseLine;\n  }\n  get renderMode() {\n    return this.__renderMode;\n  }\n}\n\nexport default Text;\n","class LineGroup {\n  constructor(x, y) {\n    this.__list = [];\n    this.__x = x;\n    this.__y = y;\n    this.__baseLine = 0;\n  }\n\n  add(item) {\n    this.list.push(item);\n  }\n\n  __calBaseLine() {\n    let baseLine = 0;\n    this.list.forEach(item => {\n      baseLine = Math.max(baseLine, item.baseLine);\n    });\n    return baseLine;\n  }\n\n  verticalAlign() {\n    this.__baseLine = this.__calBaseLine();\n    // 仅当有2个和以上时才需要vertical对齐调整\n    if(this.list.length > 1) {\n      this.list.forEach(item => {\n        if(item.baseLine !== this.baseLine) {\n          item.__offsetY(this.baseLine - item.baseLine);\n        }\n      });\n    }\n  }\n\n  horizonAlign(diff) {\n    this.list.forEach(item => {\n      item.__offsetX(diff);\n    });\n  }\n\n  get list() {\n    return this.__list;\n  }\n  get x() {\n    return this.__x;\n  }\n  get y() {\n    return this.__y;\n  }\n  get width() {\n    let width = 0;\n    this.list.forEach(item => {\n      width += item.width;\n    });\n    return width;\n  }\n  get height() {\n    let height = 0;\n    this.list.forEach(item => {\n      height = Math.max(height, item.height);\n    });\n    return height;\n  }\n  get baseLine() {\n    return this.__baseLine;\n  }\n  get size() {\n    return this.__list.length;\n  }\n}\n\nexport default LineGroup;\n","import Xom from '../node/Xom';\nimport css from '../style/css';\nimport unit from '../style/unit';\nimport mode from '../mode';\n\nconst IMPLEMENT = {};\n\nclass Geom extends Xom {\n  constructor(tagName, props) {\n    super(tagName, props);\n  }\n\n  __initStyle() {\n    css.normalize(this.style);\n  }\n\n  __tryLayInline(w, total) {\n    // 无children，直接以style的width为宽度，不定义则为0\n    let { style: { width } } = this;\n    if(width.unit === unit.PX) {\n      return w - width.value;\n    }\n    else if(width.unit === unit.PERCENT) {\n      return w - total * width.value * 0.01;\n    }\n    return w;\n  }\n\n  __calAutoBasis(isDirectionRow, w, h) {\n    let b = 0;\n    let min = 0;\n    let max = 0;\n    let { style } = this;\n    // 计算需考虑style的属性\n    let {\n      width,\n      height,\n      borderTopWidth,\n      borderRightWidth,\n      borderBottomWidth,\n      borderLeftWidth,\n    } = style;\n    let main = isDirectionRow ? width : height;\n    if(main.unit !== unit.AUTO) {\n      b = max += main.value;\n    }\n    // border也得计算在内\n    if(isDirectionRow) {\n      let w = borderRightWidth.value + borderLeftWidth.value;\n      b += w;\n      max += w;\n      min += w;\n    }\n    else {\n      let h = borderTopWidth.value + borderBottomWidth.value;\n      b += h;\n      max += h;\n      min += h;\n    }\n    return { b, min, max };\n  }\n\n  __layoutBlock(data) {\n    let { fixedHeight, w, h } = this.__preLayout(data);\n    this.__width = w;\n    this.__height = fixedHeight ? h : 0;\n  }\n\n  __layoutFlex(data) {\n    // 无children所以等同于block\n    this.__layoutBlock(data);\n  }\n\n  __layoutInline(data) {\n    let { fixedWidth, fixedHeight, x, y, w, h } = this.__preLayout(data);\n    // 元素的width不能超过父元素w\n    this.__width = fixedWidth ? w : x - data.x;\n    this.__height = fixedHeight ? h : y - data.y;\n  }\n\n  __calAbs() {\n    return 0;\n  }\n\n  render(renderMode) {\n    super.render(renderMode);\n    if(renderMode === mode.SVG) {\n      this.__virtualDom = {\n        ...super.virtualDom,\n        type: 'geom',\n      };\n    }\n  }\n\n  get tagName() {\n    return this.__tagName;\n  }\n  get baseLine() {\n    return this.__height;\n  }\n\n  static getImplement(name) {\n    if(!IMPLEMENT.hasOwnProperty(name)) {\n      throw new Error(`Geom has not register: ${name}`);\n    }\n    return IMPLEMENT[name];\n  }\n  static register(name, implement) {\n    if(IMPLEMENT.hasOwnProperty(name)) {\n      throw new Error(`Geom has already register: ${name}`);\n    }\n    IMPLEMENT[name] = implement;\n  }\n}\n\nexport default Geom;\n","import Xom from './Xom';\nimport Text from './Text';\nimport LineGroup from './LineGroup';\nimport Geom from '../geom/Geom';\nimport util from '../util';\nimport css from '../style/css';\nimport unit from '../style/unit';\nimport mode from '../mode';\n\nconst TAG_NAME = {\n  'div': true,\n  'span': true,\n};\nconst INLINE = {\n  'span': true,\n};\n\nclass Dom extends Xom {\n  constructor(tagName, props, children) {\n    super(tagName, props);\n    this.__children = children;\n    this.__flowChildren = []; // 非绝对定位孩子\n    this.__absChildren = []; // 绝对定位孩子\n    this.__lineGroups = []; // 一行inline元素组成的LineGroup对象后的存放列表\n    this.__flowY = 0; // 文档流布局结束后的y坐标，供absolute布局默认位置使用\n  }\n\n  /**\n   * 1. 封装string为Text节点\n   * 2. 打平children中的数组，变成一维\n   * 3. 合并相连的Text节点\n   * 4. 检测inline不能包含block和flex\n   * 5. 设置parent和prev/next和ctx和defs和mode\n   */\n  __traverse(ctx, defs, renderMode) {\n    let list = [];\n    this.__traverseChildren(this.children, list, ctx, defs, renderMode);\n    for(let i = list.length - 1; i > 0; i--) {\n      let item = list[i];\n      if(item instanceof Text) {\n        let prev = list[i - 1];\n        if(prev instanceof Text) {\n          prev.content += item.content;\n          list.splice(i, 1);\n        }\n        else {\n          i--;\n        }\n      }\n    }\n    if(this.style.display === 'inline' && this.parent.style.display !== 'flex') {\n      for(let i = list.length - 1; i >= 0; i--) {\n        let item = list[i];\n        if(item instanceof Dom && item.style.display !== 'inline') {\n          throw new Error('inline can not contain block/flex');\n        }\n      }\n    }\n    let prev = null;\n    list.forEach(item => {\n      item.__ctx = ctx;\n      item.__defs = defs;\n      if(prev) {\n        prev.__next = item;\n      }\n      item.__parent = this;\n      item.__prev = prev;\n      if(item instanceof Text || item.style.position !== 'absolute') {\n        this.__flowChildren.push(item);\n      }\n      else {\n        this.__absChildren.push(item);\n      }\n    });\n    this.__children = list;\n  }\n\n  __traverseChildren(children, list, ctx, defs, renderMode) {\n    if(Array.isArray(children)) {\n      children.forEach(item => {\n        this.__traverseChildren(item, list, ctx, defs, renderMode);\n      });\n    }\n    else if(children instanceof Dom) {\n      list.push(children);\n      children.__traverse(ctx, defs, renderMode);\n    }\n    // 图形没有children\n    else if(children instanceof Geom) {\n      list.push(children);\n    }\n    // 排除掉空的文本\n    else if(!util.isNil(children)) {\n      let text = new Text(children);\n      text.__renderMode = renderMode;\n      list.push(text);\n    }\n  }\n\n  // 合并设置style，包括继承和默认值，修改一些自动值和固定值，测量所有文字的宽度\n  __initStyle() {\n    let style = this.__style;\n    // 仅支持flex/block/inline/none\n    if(!style.display || ['flex', 'block', 'inline', 'none'].indexOf(style.display) === -1) {\n      if(INLINE.hasOwnProperty(this.tagName)) {\n        style.display = 'inline';\n      }\n      else {\n        style.display = 'block';\n      }\n    }\n    // 继承父元素样式\n    let parent = this.parent;\n    if(parent) {\n      let parentStyle = parent.style;\n      ['fontSize', 'fontWeight', 'fontStyle', 'lineHeight', 'wordBreak', 'color', 'textAlign'].forEach(k => {\n        if(!style.hasOwnProperty(k) && parentStyle.hasOwnProperty(k)) {\n          style[k] = parentStyle[k];\n        }\n      });\n    }\n    // 标准化处理，默认值、简写属性\n    css.normalize(style);\n    this.children.forEach(item => {\n      if(item instanceof Xom) {\n        item.__initStyle();\n      }\n      else {\n        item.__style = style;\n        // 文字首先测量所有字符宽度\n        item.__measure();\n      }\n    });\n  }\n\n  // 给定父宽度情况下，尝试行内放下后的剩余宽度，为负数即放不下\n  __tryLayInline(w, total) {\n    let { flowChildren, style: { width } } = this;\n    if(width.unit === unit.PX) {\n      return w - width.value;\n    }\n    else if(width.unit === unit.PERCENT) {\n      return w - total * width.value * 0.01;\n    }\n    for(let i = 0; i < flowChildren.length; i++) {\n      // 当放不下时直接返回，无需继续多余的尝试计算\n      if(w < 0) {\n        return w;\n      }\n      let item = flowChildren[i];\n      if(item instanceof Xom) {\n        w -= item.__tryLayInline(w, total);\n      }\n      else {\n        w -= item.textWidth;\n      }\n    }\n    return w;\n  }\n\n  // 设置y偏移值，递归包括children，此举在flex行元素的child进行justify-content对齐用\n  __offsetX(diff) {\n    super.__offsetX(diff);\n    this.flowChildren.forEach(item => {\n      if(item) {\n        item.__offsetX(diff);\n      }\n    });\n  }\n\n  // 设置y偏移值，递归包括children，此举在初步确定inline布局后设置元素vertical-align用\n  __offsetY(diff) {\n    super.__offsetY(diff);\n    this.flowChildren.forEach(item => {\n      if(item) {\n        item.__offsetY(diff);\n      }\n    });\n  }\n\n  __calAutoBasis(isDirectionRow, w, h, isRecursion) {\n    let b = 0;\n    let min = 0;\n    let max = 0;\n    let { mtw, mrw, mbw, mlw, ptw, prw, pbw, plw, flowChildren, style } = this;\n    // 计算需考虑style的属性\n    let {\n      width,\n      height,\n      borderTopWidth,\n      borderRightWidth,\n      borderBottomWidth,\n      borderLeftWidth,\n    } = style;\n    let main = isDirectionRow ? width : height;\n    if(main.unit === unit.PX) {\n      b = max = main.value;\n      // 递归时children的长度会影响flex元素的最小宽度\n      if(isRecursion) {\n        min = b;\n      }\n    }\n    // 递归children取最大值\n    flowChildren.forEach(item => {\n      if(item instanceof Xom) {\n        let { b: b2, min: min2, max: max2 } = item.__calAutoBasis(isDirectionRow, w, h, true);\n        b = Math.max(b, b2);\n        min = Math.max(min, min2);\n        max = Math.max(max, max2);\n      }\n      else if(isDirectionRow) {\n        min = Math.max(item.charWidth, min);\n        max = Math.max(item.textWidth, max);\n      }\n      else {\n        item.__layout({\n          x: 0,\n          y: 0,\n          w,\n          h,\n        }, true);\n        min = Math.max(min, item.height);\n        max = Math.max(max, item.height);\n      }\n    });\n    // margin/padding/border也得计算在内\n    if(isDirectionRow) {\n      let w = borderRightWidth.value + borderLeftWidth.value + mlw + mrw + plw + prw;\n      b += w;\n      max += w;\n      min += w;\n    }\n    else {\n      let h = borderTopWidth.value + borderBottomWidth.value + mtw + mbw + ptw + pbw;\n      b += h;\n      max += h;\n      min += h;\n    }\n    return { b, min, max };\n  }\n\n  __calAbs(isDirectionRow) {\n    let max = 0;\n    let { mtw, mrw, mbw, mlw, ptw, prw, pbw, plw, flowChildren, style } = this;\n    // 计算需考虑style的属性\n    let {\n      width,\n      height,\n      borderTopWidth,\n      borderRightWidth,\n      borderBottomWidth,\n      borderLeftWidth,\n    } = style;\n    let main = isDirectionRow ? width : height;\n    if(main.unit === unit.PX) {\n      max = main.value;\n    }\n    // 递归children取最大值\n    flowChildren.forEach(item => {\n      if(item instanceof Xom) {\n        let max2 = item.__calAbs(isDirectionRow);\n        max = Math.max(max, max2);\n      }\n      else if(isDirectionRow) {\n        max = Math.max(item.textWidth, max);\n      }\n      else {\n        item.__layout({\n          x: 0,\n          y: 0,\n          w: Infinity,\n          h: Infinity,\n        }, true);\n        max = Math.max(max, item.height);\n      }\n    });\n    // margin/padding/border也得计算在内\n    if(isDirectionRow) {\n      let w = borderRightWidth.value + borderLeftWidth.value + mlw + mrw + plw + prw;\n      max += w;\n    }\n    else {\n      let h = borderTopWidth.value + borderBottomWidth.value + mtw + mbw + ptw + pbw;\n      max += h;\n    }\n    return max;\n  }\n\n  // 本身block布局时计算好所有子元素的基本位置\n  __layoutBlock(data) {\n    let { flowChildren, style, lineGroups } = this;\n    let {\n      width,\n      marginLeft,\n      marginRight,\n      textAlign,\n    } = style;\n    let { fixedHeight, x, y, w, h } = this.__preLayout(data);\n    // 递归布局，将inline的节点组成lineGroup一行\n    let lineGroup = new LineGroup(x, y);\n    flowChildren.forEach(item => {\n      if(item instanceof Xom) {\n        if(item.style.display === 'inline') {\n          // inline开头，不用考虑是否放得下直接放\n          if(x === data.x) {\n            lineGroup.add(item);\n            item.__layout({\n              x,\n              y,\n              w,\n              h,\n            });\n            x += item.outerWidth;\n          }\n          else {\n            // 非开头先尝试是否放得下\n            let fw = item.__tryLayInline(w - x, w);\n            // 放得下继续\n            if(fw >= 0) {\n              item.__layout({\n                x,\n                y,\n                w,\n                h,\n              });\n            }\n            // 放不下处理之前的lineGroup，并重新开头\n            else {\n              lineGroups.push(lineGroup);\n              lineGroup.verticalAlign();\n              x = data.x;\n              y += lineGroup.height;\n              item.__layout({\n                x: data.x,\n                y,\n                w,\n                h,\n              });\n              lineGroup = new LineGroup(x, y);\n            }\n            x += item.outerWidth;\n            lineGroup.add(item);\n          }\n        }\n        else {\n          // block先处理之前可能的lineGroup\n          if(lineGroup.size) {\n            lineGroups.push(lineGroup);\n            lineGroup.verticalAlign();\n            y += lineGroup.height;\n            lineGroup = new LineGroup(data.x, y);\n          }\n          item.__layout({\n            x: data.x,\n            y,\n            w,\n            h,\n          });\n          x = data.x;\n          y += item.outerHeight;\n        }\n      }\n      // 文字和inline类似\n      else {\n        // x开头，不用考虑是否放得下直接放\n        if(x === data.x) {\n          lineGroup.add(item);\n          item.__layout({\n            x,\n            y,\n            w,\n            h,\n          });\n          x += item.width;\n        }\n        else {\n          // 非开头先尝试是否放得下\n          let fw = item.__tryLayInline(w - x, w);\n          // 放得下继续\n          if(fw >= 0) {\n            item.__layout({\n              x,\n              y,\n              w,\n              h,\n            });\n          }\n          // 放不下处理之前的lineGroup，并重新开头\n          else {\n            lineGroups.push(lineGroup);\n            lineGroup.verticalAlign();\n            x = data.x;\n            y += lineGroup.height;\n            item.__layout({\n              x: data.x,\n              y,\n              w,\n              h,\n            });\n            lineGroup = new LineGroup(x, y);\n          }\n          x += item.width;\n          lineGroup.add(item);\n        }\n      }\n    });\n    // 结束后处理可能遗留的最后的lineGroup\n    if(lineGroup.size) {\n      lineGroups.push(lineGroup);\n      lineGroup.verticalAlign();\n      y += lineGroup.height;\n    }\n    // text-align\n    if(['center', 'right'].indexOf(textAlign) > -1) {\n      lineGroups.forEach(lineGroup => {\n        let diff = w - lineGroup.width;\n        if(diff > 0) {\n          lineGroup.horizonAlign(textAlign === 'center' ? diff * 0.5 : diff);\n        }\n      });\n    }\n    this.__width = w;\n    this.__height = fixedHeight ? h : y - data.y;\n    this.__flowY = y;\n    // 处理margin:xx auto居中对齐\n    if(marginLeft.unit === unit.AUTO && marginRight.unit === unit.AUTO && width.unit !== unit.AUTO) {\n      let ow = this.outerWidth;\n      if(ow < data.w) {\n        this.__offsetX((data.w - ow) * 0.5);\n      }\n    }\n  }\n\n  // 弹性布局时的计算位置\n  __layoutFlex(data) {\n    let { flowChildren, style } = this;\n    let {\n      marginLeft,\n      marginRight,\n      flexDirection,\n      justifyContent,\n      alignItems,\n    } = style;\n    let { fixedWidth, fixedHeight, x, y, w, h } = this.__preLayout(data);\n    let isDirectionRow = flexDirection === 'row';\n    // column时height可能为auto，此时取消伸展，退化为类似block布局，但所有子元素强制block\n    if(!isDirectionRow && !fixedHeight) {\n      flowChildren.forEach(item => {\n        if(item instanceof Xom) {\n          const { style, style: { display, flexDirection, width }} = item;\n          // column的flex的child如果是inline，变为block\n          if(display === 'inline') {\n            style.display = 'block';\n          }\n          // 竖向flex的child如果是横向flex，宽度自动的话要等同于父flex的宽度\n          else if(display === 'flex' && flexDirection === 'row' && width.unit === unit.AUTO) {\n            width.value = w;\n            width.unit = unit.PX;\n          }\n          item.__layout({\n            x,\n            y,\n            w,\n            h,\n          });\n          y += item.outerHeight;\n        }\n        else {\n          item.__layout({\n            x,\n            y,\n            w,\n            h,\n          });\n          y += item.outerHeight;\n        }\n      });\n      this.__width = w;\n      this.__height = y - data.y;\n      return;\n    }\n    // 计算伸缩基数\n    let growList = [];\n    let shrinkList = [];\n    let basisList = [];\n    let minList = [];\n    let growSum = 0;\n    let shrinkSum = 0;\n    let basisSum = 0;\n    let maxSum = 0;\n    flowChildren.forEach(item => {\n      if(item instanceof Xom) {\n        let { flexGrow, flexShrink, flexBasis } = item.style;\n        growList.push(flexGrow);\n        shrinkList.push(flexShrink);\n        growSum += flexGrow;\n        shrinkSum += flexShrink;\n        let { b, min, max } = item.__calAutoBasis(isDirectionRow, w, h);\n        // 根据basis不同，计算方式不同\n        if(flexBasis.unit === unit.AUTO) {\n          basisList.push(max);\n          basisSum += max;\n        }\n        else if(flexBasis.unit === unit.PX) {\n          b = flexBasis.value;\n          basisList.push(b);\n          basisSum += b;\n        }\n        else if(flexBasis.unit === unit.PERCENT) {\n          b = (isDirectionRow ? w : h) * flexBasis.value;\n          basisList.push(b);\n          basisSum += b;\n        }\n        maxSum += max;\n        minList.push(min);\n      }\n      else {\n        growList.push(0);\n        shrinkList.push(1);\n        shrinkSum += 1;\n        if(isDirectionRow) {\n          basisList.push(item.textWidth);\n          basisSum += item.textWidth;\n          maxSum += item.textWidth;\n          minList.push(item.charWidth);\n        }\n        else {\n          item.__layout({\n            x: 0,\n            y: 0,\n            w,\n            h,\n          }, true);\n          basisList.push(item.height);\n          basisSum += item.height;\n          maxSum += item.height;\n          minList.push(item.height);\n        }\n      }\n    });\n    let maxCross = 0;\n    // 判断是否超出，决定使用grow还是shrink\n    let isOverflow = maxSum > (isDirectionRow ? w : h);\n    flowChildren.forEach((item, i) => {\n      let main;\n      let shrink = shrinkList[i];\n      let grow = growList[i];\n      // 计算主轴长度\n      if(isOverflow) {\n        let overflow = basisSum - (isDirectionRow ? w : h);\n        main = shrink ? (basisList[i] - overflow * shrink / shrinkSum) : basisList[i];\n      }\n      else {\n        let free = (isDirectionRow ? w : h) - basisSum;\n        main = grow ? (basisList[i] + free * grow / growSum) : basisList[i];\n      }\n      // 主轴长度的最小值不能小于元素的最小长度，比如横向时的字符宽度\n      main = Math.max(main, minList[i]);\n      if(item instanceof Xom) {\n        const { style, mlw, mtw, mrw, mbw, plw, ptw, prw, pbw, style: {\n          display,\n          flexDirection,\n          width,\n          height,\n          borderTopWidth,\n          borderRightWidth,\n          borderBottomWidth,\n          borderLeftWidth,\n        }} = item;\n        if(isDirectionRow) {\n          // row的flex的child如果是inline，变为block\n          if(display === 'inline') {\n            style.display = 'block';\n          }\n          // 横向flex的child如果是竖向flex，高度自动的话要等同于父flex的高度\n          else if(display === 'flex' && flexDirection === 'column' && fixedHeight && height.unit === unit.AUTO) {\n            height.value = h;\n            height.unit = unit.PX;\n          }\n          item.__layout({\n            x,\n            y,\n            w: main,\n            h,\n          })\n        }\n        else {\n          // column的flex的child如果是inline，变为block\n          if(display === 'inline') {\n            style.display = 'block';\n          }\n          // 竖向flex的child如果是横向flex，宽度自动的话要等同于父flex的宽度\n          else if(display === 'flex' && flexDirection === 'row' && width.unit === unit.AUTO) {\n            width.value = w;\n            width.unit = unit.PX;\n          }\n          item.__layout({\n            x,\n            y,\n            w,\n            h: main,\n          });\n        }\n        // 重设因伸缩而导致的主轴长度\n        if(isOverflow && shrink) {\n          if(isDirectionRow) {\n            item.__width = main - mlw - mrw - plw - prw - borderLeftWidth.value - borderRightWidth.value;\n          }\n          else {\n            item.__height = main - mtw - mbw - ptw - pbw - borderTopWidth.value - borderBottomWidth.value;\n          }\n        }\n        else if(!isOverflow && grow) {\n          if(isDirectionRow) {\n            item.__width = main - mlw - mrw - plw - prw - borderLeftWidth.value - borderRightWidth.value;\n          }\n          else {\n            item.__height = main - mtw - mbw - ptw - pbw - borderTopWidth.value - borderBottomWidth.value;\n          }\n        }\n      }\n      else {\n        item.__layout({\n          x,\n          y,\n          w: isDirectionRow ? main : w,\n          h: isDirectionRow ? h : main,\n        });\n      }\n      if(isDirectionRow) {\n        x += item.outerWidth;\n        maxCross = Math.max(maxCross, item.outerHeight);\n      }\n      else {\n        y += item.outerHeight;\n        maxCross = Math.max(maxCross, item.outerWidth);\n      }\n    });\n    // 计算主轴剩余时要用真实剩余空间而不能用伸缩剩余空间\n    let diff = isDirectionRow ? w - x + data.x : h - y + data.y;\n    // 主轴侧轴对齐方式\n    if(!isOverflow && growSum === 0 && diff > 0) {\n      let len = flowChildren.length;\n      if(justifyContent === 'flex-end') {\n        for(let i = 0; i < len; i++) {\n          let child = flowChildren[i];\n          isDirectionRow ? child.__offsetX(diff) : child.__offsetY(diff);\n        }\n      }\n      else if(justifyContent === 'center') {\n        let center = diff * 0.5;\n        for(let i = 0; i < len; i++) {\n          let child = flowChildren[i];\n          isDirectionRow ? child.__offsetX(center) : child.__offsetY(center);\n        }\n      }\n      else if(justifyContent === 'space-between') {\n        let between = diff / (len - 1);\n        for(let i = 1; i < len; i++) {\n          let child = flowChildren[i];\n          isDirectionRow ? child.__offsetX(between * i) : child.__offsetY(between * i);\n        }\n      }\n      else if(justifyContent === 'space-around') {\n        let around = diff / (len + 1);\n        for(let i = 0; i < len; i++) {\n          let child = flowChildren[i];\n          isDirectionRow ? child.__offsetX(around * (i + 1)) : child.__offsetY(around * (i + 1));\n        }\n      }\n    }\n    // 子元素侧轴伸展\n    if(isDirectionRow) {\n      // 父元素固定高度，子元素可能超过，侧轴最大长度取固定高度\n      if(fixedHeight) {\n        maxCross = h;\n      }\n      y += maxCross;\n    }\n    else {\n      if(fixedWidth) {\n        maxCross = w;\n      }\n    }\n    // 侧轴对齐\n    if(alignItems === 'stretch') {\n      // 短侧轴的children伸张侧轴长度至相同，超过的不动，固定宽高的也不动\n      flowChildren.forEach(item => {\n        let { style, mlw, mtw, mrw, mbw, ptw, prw, plw, pbw } = item;\n        if(isDirectionRow) {\n          if(style.height.unit === unit.AUTO) {\n            item.__height = maxCross - mtw - mbw - ptw - pbw\n              - style.borderTopWidth.value\n              - style.borderBottomWidth.value;\n          }\n        }\n        else {\n          if(style.width.unit === unit.AUTO) {\n            item.__width = maxCross - mlw - mrw - plw - prw\n              - style.borderRightWidth.value\n              - style.borderLeftWidth.value;\n          }\n        }\n      });\n    }\n    else if(alignItems === 'center') {\n      flowChildren.forEach(item => {\n        let diff = maxCross - item.outerHeight;\n        if(diff > 0) {\n          item.__offsetY(diff * 0.5);\n        }\n      });\n    }\n    else if(alignItems === 'flex-end') {\n      flowChildren.forEach(item => {\n        let diff = maxCross - item.outerHeight;\n        if(diff > 0) {\n          item.__offsetY(diff);\n        }\n      });\n    }\n    this.__width = w;\n    this.__height = fixedHeight ? h : y - data.y;\n    this.__flowY = y;\n    // 处理margin:xx auto居中对齐\n    if(marginLeft.unit === unit.AUTO && marginRight.unit === unit.AUTO && width.unit !== unit.AUTO) {\n      let ow = this.outerWidth;\n      if(ow < data.w) {\n        this.__offsetX((data.w - ow) * 0.5);\n      }\n    }\n  }\n\n  // inline比较特殊，先简单顶部对其，后续还需根据vertical和lineHeight计算y偏移\n  __layoutInline(data) {\n    let { flowChildren, style, lineGroups } = this;\n    let {\n      width,\n      marginLeft,\n      marginRight,\n      textAlign,\n    } = style;\n    let { fixedWidth, fixedHeight, x, y, w, h } = this.__preLayout(data);\n    let maxX = x;\n    // 递归布局，将inline的节点组成lineGroup一行\n    let lineGroup = new LineGroup(x, y);\n    flowChildren.forEach(item => {\n      if(item instanceof Xom) {\n        // 绝对定位跳过\n        if(item.style.position === 'absolute') {\n          this.absChildren.push(item);\n          return;\n        }\n        item.style.display = 'inline';\n        // inline开头，不用考虑是否放得下直接放\n        if(x === data.x) {\n          lineGroup.add(item);\n          item.__layout({\n            x,\n            y,\n            w,\n            h,\n          });\n          x += item.outerWidth;\n          maxX = Math.max(maxX, x);\n        }\n        else {\n          // 非开头先尝试是否放得下\n          let fw = item.__tryLayInline(w - x, w);\n          // 放得下继续\n          if(fw >= 0) {\n            item.__layout({\n              x,\n              y,\n              w,\n              h,\n            });\n          }\n          // 放不下处理之前的lineGroup，并重新开头\n          else {\n            lineGroups.push(lineGroup);\n            lineGroup.verticalAlign();\n            x = data.x;\n            y += lineGroup.height;\n            item.__layout({\n              x: data.x,\n              y,\n              w,\n              h,\n            });\n            lineGroup = new LineGroup(x, y);\n          }\n          x += item.outerWidth;\n          maxX = Math.max(maxX, x);\n          lineGroup.add(item);\n        }\n      }\n      // inline里的其它只有文本\n      else {\n        if(x === data.x) {\n          lineGroup.add(item);\n          item.__layout({\n            x,\n            y,\n            w,\n            h,\n          });\n          x += item.width;\n          maxX = Math.max(maxX, x);\n        }\n        else {\n          // 非开头先尝试是否放得下\n          let fw = item.__tryLayInline(w - x, w);\n          // 放得下继续\n          if(fw >= 0) {\n            item.__layout({\n              x,\n              y,\n              w,\n              h,\n            });\n          }\n          // 放不下处理之前的lineGroup，并重新开头\n          else {\n            lineGroups.push(lineGroup);\n            lineGroup.verticalAlign();\n            x = data.x;\n            y += lineGroup.height;\n            item.__layout({\n              x: data.x,\n              y,\n              w,\n              h,\n            });\n            lineGroup = new LineGroup(x, y);\n          }\n          x += item.width;\n          maxX = Math.max(maxX, x);\n          lineGroup.add(item);\n        }\n      }\n    });\n    // 结束后处理可能遗留的最后的lineGroup，children为空时可能size为空\n    if(lineGroup.size) {\n      lineGroups.push(lineGroup);\n      lineGroup.verticalAlign();\n      y += lineGroup.height;\n    }\n    // text-align\n    if(['center', 'right'].indexOf(textAlign) > -1) {\n      lineGroups.forEach(lineGroup => {\n        let diff = w - lineGroup.width;\n        if(diff > 0) {\n          lineGroup.horizonAlign(textAlign === 'center' ? diff * 0.5 : diff);\n        }\n      });\n    }\n    // 元素的width不能超过父元素w\n    this.__width = fixedWidth ? w : maxX - data.x;\n    this.__height = fixedHeight ? h : y - data.y;\n    this.__flowY = y;\n    // 处理margin:xx auto居中对齐\n    if(marginLeft.unit === unit.AUTO && marginRight.unit === unit.AUTO && width.unit !== unit.AUTO) {\n      let ow = this.outerWidth;\n      if(ow < data.w) {\n        this.__offsetX((data.w - ow) * 0.5);\n      }\n    }\n  }\n\n  // 只针对绝对定位children布局\n  __layoutAbs(container) {\n    let { x, y, flowY, width, height, children, absChildren, style, mlw, mtw, plw, ptw, prw, pbw } = this;\n    let {\n      borderTopWidth,\n      borderLeftWidth,\n    } = style;\n    x += mlw + borderLeftWidth.value;\n    y += mtw + borderTopWidth.value;\n    let pw = width + plw + prw;\n    let ph = height + ptw + pbw;\n    // 递归进行，遇到absolute/relative的设置新容器\n    children.forEach(item => {\n      if(item instanceof Dom) {\n        item.__layoutAbs(['absolute', 'relative'].indexOf(item.style.position) > -1 ? item : container);\n      }\n    });\n    // 对absolute的元素进行相对容器布局\n    absChildren.forEach(item => {\n      let { style, style: {\n        left, top, right, bottom, width: width2, height: height2\n      } } = item;\n      let x2, y2, w2, h2;\n      // width优先级高于right高于left，即最高left+right，其次left+width，再次right+width，然后仅申明单个，最次全部auto\n      if(left.unit !== unit.AUTO && right.unit !== unit.AUTO) {\n        x2 = left.unit === unit.PX ? x + left.value : x + width * left.value * 0.01;\n        w2 = right.unit === unit.PX ? x + pw - right.value - x2 : x + pw - width * right.value * 0.01 - x2;\n      }\n      else if(left.unit !== unit.AUTO && width2.unit !== unit.AUTO) {\n        x2 = left.unit === unit.PX ? x + left.value : x + width * left.value * 0.01;\n        w2 = width2.unit === unit.PX ? width2.value : width;\n      }\n      else if(right.unit !== unit.AUTO && width2.unit !== unit.AUTO) {\n        w2 = width2.unit === unit.PX ? width2.value : width;\n        let widthPx = width2.unit === unit.PX ? width2.value : width * width2.value * 0.01;\n        x2 = right.unit === unit.PX ? x + pw - right.value - widthPx : x + pw - width * right.value * 0.01 - widthPx;\n      }\n      else if(left.unit !== unit.AUTO) {\n        x2 = left.unit === unit.PX ? x + left.value : x + width * left.value * 0.01;\n        w2 = item.__calAbs(true);\n      }\n      else if(right.unit !== unit.AUTO) {\n        w2 = item.__calAbs(true);\n        x2 = right.unit === unit.PX ? x + pw - right.value - w2 : x + pw - width * right.value * 0.01 - w2;\n      }\n      else if(width2.unit !== unit.AUTO) {\n        x2 = x;\n        w2 = width2.unit === unit.PX ? width2.value : width;\n      }\n      else {\n        x2 = x;\n        w2 = item.__calAbs(true);\n      }\n      // top/bottom/height优先级同上\n      if(top.unit !== unit.AUTO && bottom.unit !== unit.AUTO) {\n        y2 = top.unit === unit.PX ? y + top.value : y + height * top.value * 0.01;\n        h2 = bottom.unit === unit.PX ? y + ph - bottom.value - y2 : y + ph - height * bottom.value * 0.01 - y2;\n        style.height = {\n          value: h2,\n          unit: unit.PX,\n        };\n      }\n      else if(top.unit !== unit.AUTO && height2.unit !== unit.AUTO) {\n        y2 = top.unit === unit.PX ? y + top.value : y + height * top.value * 0.01;\n        h2 = height2.unit === unit.PX ? height2.value : height;\n      }\n      else if(bottom.unit !== unit.AUTO && height2.unit !== unit.AUTO) {\n        h2 = height2.unit === unit.PX ? height2.value : height;\n        let heightPx = height2.unit === unit.PX ? height2.value : height * height2.value * 0.01;\n        y2 = bottom.unit === unit.PX ? y + ph - bottom.value - heightPx : y + ph - height * bottom.value * 0.01 - heightPx;\n      }\n      else if(top.unit !== unit.AUTO) {\n        y2 = top.unit === unit.PX ? y + top.value : y + height * top.value * 0.01;\n        h2 = item.__calAbs();\n      }\n      else if(bottom.unit !== unit.AUTO) {\n        h2 = item.__calAbs();\n        y2 = bottom.unit === unit.PX ? y + ph - bottom.value - h2 : y + ph - height * bottom.value * 0.01 - h2;\n      }\n      else if(height2.unit !== unit.AUTO) {\n        y2 = flowY + mtw + borderTopWidth.value;\n        h2 = height2.unit === unit.PX ? height2.value : height;\n      }\n      else {\n        y2 = flowY + mtw + borderTopWidth.value;\n        h2 = item.__calAbs();\n      }\n      // absolute时inline强制block\n      if(style.display === 'inline') {\n        style.display = 'block';\n      }\n      item.__layout({\n        x: x2,\n        y: y2,\n        w: w2,\n        h: h2,\n      });\n    });\n  }\n\n  render(renderMode) {\n    super.render(renderMode);\n    let { style: { display }, flowChildren, children } = this;\n    if(display === 'none') {\n      return;\n    }\n    // 先绘制static\n    flowChildren.forEach(item => {\n      if(item instanceof Text || item.style.position === 'static') {\n        item.render(renderMode);\n      }\n    });\n    // 再绘制relative和absolute\n    children.forEach(item => {\n      if((item instanceof Xom) && ['relative', 'absolute'].indexOf(item.style.position) > -1) {\n        item.render(renderMode);\n      }\n    });\n    if(renderMode === mode.SVG) {\n      this.__virtualDom = {\n        ...super.virtualDom,\n        type: 'dom',\n        children: this.children.map(item => item.virtualDom),\n      };\n    }\n  }\n\n  get tagName() {\n    return this.__tagName;\n  }\n  get children() {\n    return this.__children;\n  }\n  get flowChildren() {\n    return this.__flowChildren;\n  }\n  get absChildren() {\n    return this.__absChildren;\n  }\n  get lineGroups() {\n    return this.__lineGroups;\n  }\n  get baseLine() {\n    let len = this.lineGroups.length;\n    if(len) {\n      let last = this.lineGroups[len - 1];\n      return last.y - this.y + last.baseLine;\n    }\n    return this.y;\n  }\n  get flowY() {\n    return this.__flowY;\n  }\n\n  static isValid(s) {\n    return TAG_NAME.hasOwnProperty(s);\n  }\n}\n\nexport default Dom;\n","import util from './util';\n\nfunction diff(elem, ovd, nvd) {\n  let cns = elem.childNodes;\n  diffDefs(cns[0], ovd.defs, nvd.defs);\n  diffBb(cns[1], ovd.bb, nvd.bb);\n  diffD2D(elem, ovd, nvd, true);\n}\n\nfunction diffDefs(elem, od, nd) {\n  let ol = od.length;\n  let nl = nd.length;\n  let i = 0;\n  let cns = elem.childNodes;\n  for(; i < Math.min(ol, nl); i++) {\n    diffDef(cns[i], od[i], nd[i]);\n  }\n}\n\nfunction diffDef(elem, od, nd) {\n  if(od.k !== nd.k) {\n    elem.insertAdjacentHTML('afterend', util.joinDef(nd));\n    elem.parentNode.removeChild(elem);\n  }\n  else {\n    for(let i = 0; i < 4; i++) {\n      if(od.c[i] !== nd.c[i]) {\n        elem.setAttribute(['x1', 'y1', 'x2', 'y2'][i], nd.c[i]);\n      }\n    }\n    let ol = od.v.length;\n    let nl = nd.v.length;\n    let i = 0;\n    let cns = elem.childNodes;\n    for(; i < Math.min(ol, nl); i++) {\n      let o = od.v[i];\n      let n = nd.v[i];\n      if(o[0] !== n[0]) {\n        cns[i].setAttribute('stop-color', n[0]);\n      }\n      if(o[1] !== n[1]) {\n        cns[i].setAttribute('offset', n[1]);\n      }\n    }\n    if(i < ol) {\n      for(; i < ol; i++) {\n        removeAt(elem, cns, i);\n      }\n    }\n    else if(i < nl) {\n      for(; i < nl; i++) {\n        insertAt(elem, cns, i, util.joinDef(nd.v[i]));\n      }\n    }\n  }\n}\n\nfunction diffChild(elem, ovd, nvd) {\n  if(ovd.type === 'dom') {\n    if(nvd.type === 'dom') {\n      diffD2D(elem, ovd, nvd);\n    }\n    else if(nvd.type === 'text') {\n      replaceWith(elem, nvd);\n    }\n    else if(nvd.type === 'geom') {\n      diffD2G(elem, ovd, nvd);\n    }\n  }\n  else if(nvd.type === 'text') {\n    if(nvd.type === 'dom') {\n      replaceWith(elem, nvd);\n    }\n    else if(nvd.type === 'text') {\n      diffT2T(elem, ovd, nvd);\n    }\n    else if(nvd.type === 'geom') {\n      replaceWith(elem, nvd);\n    }\n  }\n  else if(nvd.type === 'geom') {\n    if(nvd.type === 'dom') {\n      diffG2D(elem, ovd, nvd);\n    }\n    else if(nvd.type === 'text') {\n      replaceWith(elem, nvd);\n    }\n    else if(nvd.type === 'geom') {\n      diffG2G(elem, ovd, nvd);\n    }\n  }\n}\n\nfunction diffD2D(elem, ovd, nvd, root) {\n  if(!root) {\n    diffBb(elem.firstChild, ovd.bb, nvd.bb);\n  }\n  let ol = ovd.children.length;\n  let nl = nvd.children.length;\n  let i = 0;\n  let lastChild = elem.lastChild;\n  let cns = lastChild.childNodes;\n  for(; i < Math.min(ol, nl); i++) {\n    diffChild(cns[i], ovd.children[i], nvd.children[i]);\n  }\n  if(i < ol) {\n    for(; i < ol; i++) {\n      removeAt(lastChild, cns, i);\n    }\n  }\n  else if(i < nl) {\n    for(; i < nl; i++) {\n      insertAt(lastChild, cns, i, util.joinVd(nvd.children[i]));\n    }\n  }\n}\n\nfunction diffD2G(elem, ovd, nvd) {\n  diffBb(elem.firstChild, ovd.bb, nvd.bb);\n  replaceWith(elem.lastChild, nvd.content);\n}\n\nfunction diffT2T(elem, ovd, nvd) {\n  let ol = ovd.children.length;\n  let nl = nvd.children.length;\n  let i = 0;\n  for(; i < Math.min(ol, nl); i++) {\n    diffItem(elem, i, ovd.children[i], nvd.children[i], true);\n  }\n  let cns = elem.childNodes;\n  if(i < ol) {\n    for(; i < ol; i++) {\n      removeAt(elem, cns, i);\n    }\n  }\n  else if(i < nl) {\n    for(; i < nl; i++) {\n      insertAt(elem, cns, i, util.joinVd(nvd.children[i]));\n    }\n  }\n}\n\nfunction diffG2D(elem, ovd, nvd) {\n  diffBb(elem.firstChild, ovd.bb, nvd.bb);\n  replaceWith(elem.lastChild, nvd.children);\n}\n\nfunction diffG2G(elem, ovd, nvd) {\n  if(!equalArr(ovd.transform, nvd.transform)) {\n    let transform = util.joinTransform(nvd.transform);\n    if(elem.getAttribute('transform') !== transform) {\n      elem.setAttribute('transform', transform);\n    }\n  }\n  diffBb(elem.firstChild, ovd.bb, nvd.bb);\n  let ol = ovd.content.length;\n  let nl = nvd.content.length;\n  let i = 0;\n  let lastChild = elem.lastChild;\n  let cns = lastChild.childNodes;\n  for(; i < Math.min(ol, nl); i++) {\n    diffItem(lastChild, i, ovd.content[i], nvd.content[i]);\n  }\n  if(i < ol) {\n    for(; i < ol; i++) {\n      removeAt(lastChild, cns, i);\n    }\n  }\n  else if(i < nl) {\n    for(; i < nl; i++) {\n      insertAt(lastChild, cns, i, util.joinVd(nvd.content[i]));\n    }\n  }\n}\n\nfunction diffBb(elem, obb, nbb) {\n  let ol = obb.length;\n  let nl = nbb.length;\n  let i = 0;\n  for(; i < Math.min(ol, nl); i++) {\n    diffItem(elem, i, obb[i], nbb[i]);\n  }\n  let cns = elem.childNodes;\n  if(i < ol) {\n    for(; i < ol; i++) {\n      removeAt(elem, cns, i);\n    }\n  }\n  else if(i < nl) {\n    for(; i < nl; i++) {\n      insertAt(elem, cns, i, util.joinVd(nbb[i]));\n    }\n  }\n}\n\nfunction diffItem(elem, i, ovd, nvd, isText) {\n  let cns = elem.childNodes;\n  if(ovd.tagName !== nvd.tagName) {\n    replaceWith(cns[i], nvd);\n  }\n  else {\n    let op = {};\n    for(let j = 0, len = ovd.props.length; j < len; j++) {\n      let prop = ovd.props[j];\n      let [k, v] = prop;\n      op[k] = v;\n    }\n    for(let j = 0, len = nvd.props.length; j < len; j++) {\n      let prop = nvd.props[j];\n      let [k, v] = prop;\n      // 已有不等更新，没有添加\n      if(op.hasOwnProperty(k)) {\n        if(op[k] !== v) {\n          cns[i].setAttribute(k, v);\n        }\n        delete op[k];\n      }\n      else {\n        cns[i].setAttribute(k, v);\n      }\n    }\n    // 多余的删除\n    for(var k in op) {\n      if(op.hasOwnProperty(k)) {\n        cns[i].removeAttribute(k);\n      }\n    }\n    if(isText && ovd.content !== nvd.content) {\n      cns[i].textContent = nvd.content;\n    }\n  }\n}\n\nfunction replaceWith(elem, vd) {\n  let res;\n  if(Array.isArray(vd)) {\n    res = '';\n    vd.forEach(item => {\n      res += util.joinVd(item);\n    });\n  }\n  else {\n    res = util.joinVd(vd);\n  }\n  elem.insertAdjacentHTML('afterend', res);\n  elem.parentNode.removeChild(elem);\n}\n\nfunction insertAt(elem, cns, index, html) {\n  if(index >= cns.length) {\n    elem.insertAdjacentHTML('beforeend', html);\n  }\n  else {\n    cns[index].insertAdjacentHTML('beforebegin', html);\n  }\n}\n\nfunction removeAt(elem, cns, index) {\n  if(cns[index]) {\n    elem.removeChild(cns[index]);\n  }\n}\n\nfunction equalArr(a, b) {\n  if(a.length !== b.length) {\n    return false;\n  }\n  for(let i = 0, len = a.length; i < len; i++) {\n    if(a[i] !== b[i]) {\n      return false;\n    }\n  }\n  return true;\n}\n\nexport default diff;\n","class Defs {\n  constructor(uuid) {\n    this.id = uuid;\n    this.count = 0;\n    this.list = [];\n  }\n  add(data) {\n    data.uuid = `karas-defs-${this.id}-${this.count++}`;\n    this.list.push(data);\n    return data.uuid;\n  }\n  clear() {\n    this.list = [];\n    this.count = 0;\n  }\n\n  get value() {\n    return this.list;\n  }\n\n  static getInstance(uuid) {\n    return new Defs(uuid);\n  }\n}\n\nexport default Defs;\n","import Dom from '../node/Dom';\nimport util from '../util';\nimport mode from '../mode';\nimport domDiff from '../domDiff';\nimport Defs from './Defs';\n\nfunction getDom(dom) {\n  if(util.isString(dom)) {\n    let o = document.querySelector(dom);\n    if(!o) {\n      throw new Error('can not find dom of selector: ' + dom);\n    }\n    return o;\n  }\n  if(!dom) {\n    throw new Error('can not find dom: ' + dom);\n  }\n  return dom;\n}\n\nfunction renderProp(k, v) {\n  let s = Array.isArray(v) ? util.joinSourceArray(v) : util.stringify(v);\n  if(k === 'className') {\n    k = 'class';\n  }\n  return ' ' + k + '=\"' + util.encodeHtml(s, true) + '\"';\n}\n\nlet uuid = 0;\n\nclass Root extends Dom {\n  constructor(tagName, props, children) {\n    super(tagName, props, children);\n    this.__node = null; // 真实DOM引用\n  }\n\n  __initProps() {\n    if(this.props.width !== undefined) {\n      let value = parseInt(this.props.width);\n      if(!isNaN(value) && value > 0) {\n        this.__width = value;\n      }\n    }\n    if(this.props.height !== undefined) {\n      let value = parseInt(this.props.height);\n      if(!isNaN(value) && value > 0) {\n        this.__height = value;\n      }\n    }\n  }\n\n  __genHtml() {\n    let res = `<${this.tagName}`;\n    // 拼接处理属性\n    for(let i = 0, len = this.__props.length; i < len; i++) {\n      let item = this.__props[i];\n      res += renderProp(item[0], item[1]);\n    }\n    res += `></${this.tagName}>`;\n    return res;\n  }\n\n  // 类似touchend/touchcancel这种无需判断是否发生于元素上，直接强制响应\n  __cb(e, force) {\n    if(e.touches && e.touches.length > 1) {\n      return;\n    }\n    let { node } = this;\n    let { x, y, top, right } = node.getBoundingClientRect();\n    x = x || top || 0;\n    y = y || right || 0;\n    let { clientX, clientY } = e.touches ? (e.touches[0] || {}) : e;\n    x = clientX - x;\n    y = clientY - y;\n    this.__emitEvent({\n      event: e,\n      x,\n      y,\n      covers: [],\n    }, force);\n  }\n\n  __initEvent() {\n    let { node } = this;\n    ['click', 'dblclick', 'mousedown', 'mousemove', 'mouseup', 'touchstart', 'touchmove', 'touchend', 'touchcancel'].forEach(type => {\n      node.addEventListener(type, e => {\n        this.__cb(e, ['touchend', 'touchcancel'].indexOf(type) > -1);\n      });\n    });\n  }\n\n  appendTo(dom) {\n    dom = getDom(dom);\n    this.__initProps();\n    // 已有root节点\n    if(dom.nodeName.toUpperCase() === this.tagName.toUpperCase()) {\n      this.__node = dom;\n      if(this.width) {\n        dom.setAttribute('width', this.width);\n      }\n      if(this.height) {\n        dom.setAttribute('height', this.height);\n      }\n    }\n    // 没有canvas/svg节点则生成一个新的\n    else {\n      this.__node = dom.querySelector(this.tagName);\n      if(!this.__node) {\n        dom.innerHTML = this.__genHtml();\n        this.__node = dom.querySelector(this.tagName);\n      }\n    }\n    this.__uuid = this.__node.__uuid || uuid++;\n    this.__defs = Defs.getInstance(this.__uuid);\n    this.__defs.clear();\n    // 没有设置width/height则采用css计算形式\n    if(!this.width || !this.height) {\n      let css = window.getComputedStyle(dom, null);\n      if(!this.width) {\n        this.__width = parseInt(css.getPropertyValue('width'));\n        dom.setAttribute('width', this.width);\n      }\n      if(!this.height) {\n        this.__height = parseInt(css.getPropertyValue('height'));\n        dom.setAttribute('height', this.height);\n      }\n    }\n    // 只有canvas有ctx，svg用真实dom\n    let renderMode;\n    if(this.tagName === 'canvas') {\n      this.__ctx = this.__node.getContext('2d');\n      this.__ctx.clearRect(0, 0, this.width, this.height);\n      renderMode = mode.CANVAS;\n    }\n    else if(this.tagName === 'svg') {\n      renderMode = mode.SVG;\n    }\n    // canvas/svg作为根节点一定是block或flex，不会是inline\n    let { style } = this;\n    if(['flex', 'block'].indexOf(style.display) === -1) {\n      style.display = 'block';\n    }\n    // 同理position不能为absolute\n    if(style.position === 'absolute') {\n      style.position = 'static';\n    }\n    this.__traverse(this.__ctx, this.__defs, renderMode);\n    // canvas的宽高固定初始化\n    style.width = this.width;\n    style.height = this.height;\n    this.__initStyle();\n    this.__layout({\n      x: 0,\n      y: 0,\n      w: this.width,\n      h: this.height,\n    });\n    this.__layoutAbs(this);\n    this.render(renderMode);\n    if(renderMode === mode.SVG) {\n      let nvd = this.virtualDom;\n      let nd = this.__defs.value;\n      nvd.defs = nd;\n      if(this.node.__karasInit) {\n        domDiff(this.node, this.node.__ovd, nvd);\n      } else {\n        this.node.innerHTML = util.joinVirtualDom(nvd, nd);\n      }\n      this.node.__ovd = nvd;\n      this.node.__od = nd;\n    }\n    if(!this.node.__karasInit) {\n      this.node.__karasInit = true;\n      this.__initEvent();\n    }\n  }\n\n  get node() {\n    return this.__node;\n  }\n  get imageData() {\n    return this.__imageData;\n  }\n}\n\nexport default Root;\n","import Geom from './Geom';\nimport mode from '../mode';\n\nclass Line extends Geom {\n  constructor(tagName, props) {\n    super(tagName, props);\n    // start和end表明线段的首尾坐标，control表明控制点坐标\n    this.__start = [];\n    this.__end = [];\n    this.__control = [];\n    if(Array.isArray(this.props.start)) {\n      this.__start = this.props.start;\n    }\n    if(Array.isArray(this.props.end)) {\n      this.__end = this.props.end;\n    }\n    if(Array.isArray(this.props.control)) {\n      this.__control = this.props.control;\n    }\n  }\n\n  render(renderMode) {\n    super.render(renderMode);\n    let { rx: x, ry: y, width, height, mlw, mtw, plw, ptw, style, ctx, start, end, control, virtualDom } = this;\n    if(start.length < 2 || end.length < 2) {\n      return;\n    }\n    let {\n      display,\n      borderTopWidth,\n      borderRightWidth,\n      borderBottomWidth,\n      borderLeftWidth,\n      stroke,\n      strokeWidth,\n      strokeDasharray,\n    } = style;\n    if(display === 'none') {\n      return;\n    }\n    let originX = x + borderLeftWidth.value + mlw + plw;\n    let originY = y + borderTopWidth.value + mtw + ptw;\n    let x1 = originX + start[0] * width;\n    let y1 = originY + start[1] * height;\n    let x2 = originX + end[0] * width;\n    let y2 = originY + end[1] * height;\n    let curve = 0;\n    let cx1, cy1, cx2, cy2;\n    if(Array.isArray(control[0])) {\n      curve++;\n      cx1 = originX + control[0][0] * width;\n      cy1 = originY + control[0][1] * height;\n    }\n    if(Array.isArray(control[1])) {\n      curve++;\n      cx2 = originX + control[1][0] * width;\n      cy2 = originY + control[1][1] * height;\n    }\n    if(renderMode === mode.CANVAS) {\n      ctx.strokeStyle = stroke;\n      ctx.lineWidth = strokeWidth;\n      ctx.setLineDash(strokeDasharray);\n      ctx.beginPath();\n      ctx.moveTo(x1, y1);\n      if(curve === 2) {\n        ctx.bezierCurveTo(cx1, cy1, cx2, cy2, x2, y2);\n      }\n      else if(curve === 1) {\n        ctx.quadraticCurveTo(cx1, cy1, x2, y2);\n      }\n      else {\n        ctx.lineTo(x2, y2);\n      }\n      ctx.stroke();\n      ctx.closePath();\n    }\n    else if(renderMode === mode.SVG) {\n      if(curve === 2) {\n        virtualDom.children.push({\n          type: 'item',\n          tagName: 'path',\n          props: [\n            ['d', `M${x1} ${y1} C${cx1} ${cy1} ${cx2} ${cy2} ${x2} ${y2}`],\n            ['fill', 'none'],\n            ['stroke', stroke],\n            ['stroke-width', strokeWidth],\n            ['stroke-dasharray', strokeDasharray]\n          ],\n        });\n      }\n      else if(curve === 1) {\n        virtualDom.children.push({\n          type: 'item',\n          tagName: 'path',\n          props: [\n            ['d', `M${x1} ${y1} Q${cx1} ${cy1} ${x2} ${y2}`],\n            ['fill', 'none'],\n            ['stroke', stroke],\n            ['stroke-width', strokeWidth],\n            ['stroke-dasharray', strokeDasharray]\n          ],\n        });\n      }\n      else {\n        virtualDom.children.push({\n          type: 'item',\n          tagName: 'line',\n          props: [\n            ['x1', x1],\n            ['y1', y1],\n            ['x2', x2],\n            ['y2', y2],\n            ['stroke', stroke],\n            ['stroke-width', strokeWidth],\n            ['stroke-dasharray', strokeDasharray]\n          ],\n        });\n      }\n    }\n  }\n\n  get start() {\n    return this.__start;\n  }\n  get end() {\n    return this.__end;\n  }\n  get control() {\n    return this.__control;\n  }\n}\n\nexport default Line;\n","import Geom from './Geom';\nimport mode from '../mode';\n\nclass Polyline extends Geom {\n  constructor(tagName, props) {\n    super(tagName, props);\n    // 折线所有点的列表\n    this.__points = [];\n    if(Array.isArray(this.props.points)) {\n      this.__points = this.props.points;\n    }\n    // 原点位置，4个角，默认左下\n    if(['TOP_LEFT', 'TOP_RIGHT', 'BOTTOM_LEFT', 'BOTTOM_RIGHT'].indexOf(this.props.origin) > -1) {\n      this.__origin = this.props.origin;\n    }\n    else {\n      this.__origin = 'BOTTOM_LEFT';\n    }\n  }\n\n  render(renderMode) {\n    super.render(renderMode);\n    let { rx: x, ry: y, width, height, mlw, mtw, plw, ptw, style, ctx, points, origin, virtualDom } = this;\n    if(points.length < 2) {\n      return;\n    }\n    for(let i = 0, len = points.length; i < len; i++) {\n      if(!Array.isArray(points[i]) || points[i].length < 2) {\n        return;\n      }\n    }\n    let {\n      display,\n      borderTopWidth,\n      borderLeftWidth,\n      stroke,\n      strokeWidth,\n      strokeDasharray,\n    } = style;\n    if(display === 'none') {\n      return;\n    }\n    let originX = x + borderLeftWidth.value + mlw + plw;\n    let originY = y + borderTopWidth.value + mtw + ptw;\n    let pts = this.__pts = [];\n    if(origin === 'TOP_LEFT') {\n      points.forEach(item => {\n        pts.push([\n          originX + item[0] * width,\n          originY + item[1] * height\n        ]);\n      });\n    }\n    else if(origin === 'TOP_RIGHT') {\n      points.forEach(item => {\n        pts.push([\n          originX + width - item[0] * width,\n          originY + item[1] * height\n        ]);\n      });\n    }\n    else if(origin === 'BOTTOM_LEFT') {\n      points.forEach(item => {\n        pts.push([\n          originX + item[0] * width,\n          originY + height - item[1] * height\n        ]);\n      });\n    }\n    else if(origin === 'BOTTOM_RIGHT') {\n      points.forEach(item => {\n        pts.push([\n          originX + width - item[0] * width,\n          originY + height - item[1] * height\n        ]);\n      });\n    }\n    if(renderMode === mode.CANVAS) {\n      ctx.strokeStyle = stroke;\n      ctx.lineWidth = strokeWidth;\n      ctx.setLineDash(strokeDasharray);\n      ctx.beginPath();\n      ctx.moveTo(pts[0][0], originY + pts[0][1]);\n      for(let i = 1, len = pts.length; i < len; i++) {\n        let point = pts[i];\n        ctx.lineTo(point[0], point[1]);\n      }\n      if(strokeWidth && stroke !== 'transparent') {\n        ctx.stroke();\n      }\n      ctx.closePath();\n    }\n    else if(renderMode === mode.SVG) {\n      let points = '';\n      for(let i = 0, len = pts.length; i < len; i++) {\n        let point = pts[i];\n        points += `${point[0]},${point[1]} `;\n      }\n      virtualDom.children.push({\n        type: 'item',\n        tagName: 'polyline',\n        props: [\n          ['points', points],\n          ['fill', 'none'],\n          ['stroke', stroke],\n          ['stroke-width', strokeWidth],\n          ['stroke-dasharray', strokeDasharray]\n        ],\n      });\n    }\n  }\n\n  getPointsByX(x) {\n    let min = Infinity;\n    let len = this.__pts.length;\n    let res = [];\n    for(let i = 0; i < len; i++) {\n      let diff = Math.abs(this.__pts[i][0] - x);\n      if(diff < min) {\n        min = diff;\n      }\n    }\n    for(let i = 0; i < len; i++) {\n      let diff = Math.abs(this.__pts[i][0] - x);\n      if(diff === min) {\n        res.push({\n          index: i,\n          x: this.__pts[i][0],\n          y: this.__pts[i][1],\n        });\n      }\n    }\n    return res;\n  }\n\n  get points() {\n    return this.__points;\n  }\n  get origin() {\n    return this.__origin;\n  }\n}\n\nexport default Polyline;\n","import Geom from './Geom';\nimport mode from '../mode';\n\nclass Polygon extends Geom {\n  constructor(tagName, props) {\n    super(tagName, props);\n    // 所有点的列表\n    this.__points = [];\n    if(Array.isArray(this.props.points)) {\n      this.__points = this.props.points;\n    }\n  }\n\n  render(renderMode) {\n    super.render(renderMode);\n    let { rx: x, ry: y, width, height, mlw, mtw, plw, ptw, style, ctx, points, virtualDom } = this;\n    if(points.length < 3) {\n      return;\n    }\n    for(let i = 0, len = points.length; i < len; i++) {\n      if(!Array.isArray(points[i]) || points[i].length < 2) {\n        return;\n      }\n    }\n    let {\n      display,\n      borderTopWidth,\n      borderLeftWidth,\n      stroke,\n      strokeWidth,\n      strokeDasharray,\n      fill,\n    } = style;\n    if(display === 'none') {\n      return;\n    }\n    let originX = x + borderLeftWidth.value + mlw + plw;\n    let originY = y + borderTopWidth.value + mtw + ptw;\n    points.forEach(item => {\n      item[0] = originX + item[0] * width;\n      item[1] = originY + item[1] * height;\n    });\n    if(renderMode === mode.CANVAS) {\n      ctx.strokeStyle = stroke;\n      ctx.lineWidth = strokeWidth;\n      ctx.fillStyle = fill;\n      ctx.setLineDash(strokeDasharray);\n      ctx.beginPath();\n      ctx.moveTo(points[0][0], originY + points[0][1]);\n      for(let i = 1, len = points.length; i < len; i++) {\n        let point = points[i];\n        ctx.lineTo(point[0], point[1]);\n      }\n      ctx.fill();\n      if(strokeWidth && stroke !== 'transparent') {\n        ctx.stroke();\n      }\n      ctx.closePath();\n    }\n    else if(renderMode === mode.SVG) {\n      let points = '';\n      for(let i = 0, len = points.length; i < len; i++) {\n        let point = points[i];\n        points += `${point[0]},${point[1]} `;\n      }\n      virtualDom.children.push({\n        type: 'item',\n        tagName: 'polygon',\n        props: [\n          ['points', points],\n          ['fill', fill],\n          ['stroke', stroke],\n          ['stroke-width', strokeWidth],\n          ['stroke-dasharray', strokeDasharray]\n        ],\n      });\n    }\n  }\n\n  get points() {\n    return this.__points;\n  }\n}\n\nexport default Polygon;\n","import Geom from './Geom';\nimport mode from '../mode';\n\nconst OFFSET = Math.PI * 0.5;\n\nfunction getCoordByDegree(x, y, r, d) {\n  while(d > 360) {\n    d -= 360;\n  }\n  while(d < 0) {\n    d += 360;\n  }\n  if(d >= 0 && d < 90) {\n    return [\n      x + Math.sin(d * Math.PI / 180) * r,\n      y - Math.cos(d * Math.PI / 180) * r\n    ];\n  }\n  else if(d >= 90 && d < 180) {\n    return [\n      x + Math.cos((d - 90) * Math.PI / 180) * r,\n      y + Math.sin((d - 90) * Math.PI / 180) * r,\n    ];\n  }\n  else if(d >= 180 && d < 270) {\n    return [\n      x - Math.cos((270 - d) * Math.PI / 180) * r,\n      y + Math.sin((270 - d) * Math.PI / 180) * r,\n    ];\n  }\n  else {\n    return [\n      x - Math.sin((360 - d) * Math.PI / 180) * r,\n      y - Math.cos((360 - d) * Math.PI / 180) * r,\n    ];\n  }\n}\n\nclass Sector extends Geom {\n  constructor(tagName, props) {\n    super(tagName, props);\n    // 角度\n    this.__start = 0;\n    this.__end = 0;\n    if(this.props.start) {\n      this.__start = parseFloat(this.props.start);\n      if(isNaN(this.start)) {\n        this.__start = 0;\n      }\n    }\n    if(this.props.end) {\n      this.__end = parseFloat(this.props.end);\n      if(isNaN(this.end)) {\n        this.__end = 0;\n      }\n    }\n    // 半径0~1，默认1\n    this.__r = 1;\n    if(this.props.r) {\n      this.__r = parseFloat(this.props.r);\n      if(isNaN(this.r)) {\n        this.__r = 1;\n      }\n    }\n  }\n\n  render(renderMode) {\n    super.render(renderMode);\n    let { rx: x, ry: y, width, height, mlw, mtw, plw, ptw, style, ctx, start, end, r, virtualDom } = this;\n    if(start === end) {\n      return;\n    }\n    let {\n      display,\n      borderTopWidth,\n      borderLeftWidth,\n      stroke,\n      strokeWidth,\n      strokeDasharray,\n      fill,\n    } = style;\n    if(display === 'none') {\n      return;\n    }\n    let originX = x + borderLeftWidth.value + mlw + plw;\n    let originY = y + borderTopWidth.value + mtw + ptw;\n    originX += width * 0.5;\n    originY += height * 0.5;\n    r *= Math.min(width, height) * 0.5;\n    if(renderMode === mode.CANVAS) {\n      ctx.strokeStyle = stroke;\n      ctx.lineWidth = strokeWidth;\n      ctx.fillStyle = fill;\n      ctx.setLineDash(strokeDasharray);\n      ctx.beginPath();\n      ctx.moveTo(originX, originY);\n      ctx.arc(originX, originY, r, start * Math.PI / 180 - OFFSET, end * Math.PI / 180 - OFFSET);\n      ctx.fill();\n      if(strokeWidth && stroke !== 'transparent') {\n        ctx.stroke();\n      }\n      ctx.closePath();\n    }\n    else if(renderMode === mode.SVG) {\n      let x1, y1, x2, y2;\n      [ x1, y1 ] = getCoordByDegree(originX, originY, r, start);\n      [ x2, y2 ] = getCoordByDegree(originX, originY, r, end);\n      let large = (end - start) > 180 ? 1 : 0;\n      virtualDom.children.push({\n        type: 'item',\n        tagName: 'path',\n        props: [\n          ['d', `M${originX} ${originY} L${x1} ${y1} A${r} ${r} 0 ${large} 1 ${x2} ${y2} z`],\n          ['fill', fill],\n          ['stroke', stroke],\n          ['stroke-width', strokeWidth],\n          ['stroke-dasharray', strokeDasharray]\n        ],\n      });\n    }\n  }\n\n  get start() {\n    return this.__start;\n  }\n  get end() {\n    return this.__end;\n  }\n  get r() {\n    return this.__r;\n  }\n}\n\nexport default Sector;\n","import Geom from './Geom';\nimport mode from '../mode';\n\nclass Rect extends Geom {\n  constructor(tagName, props) {\n    super(tagName, props);\n  }\n\n  render(renderMode) {\n    super.render(renderMode);\n    let { rx: x, ry: y, width, height, mlw, mtw, plw, ptw, style, ctx, virtualDom } = this;\n    let {\n      display,\n      borderTopWidth,\n      borderLeftWidth,\n      stroke,\n      strokeWidth,\n      strokeDasharray,\n      fill,\n    } = style;\n    if(display === 'none') {\n      return;\n    }\n    let originX = x + borderLeftWidth.value + mlw + plw;\n    let originY = y + borderTopWidth.value + mtw + ptw;\n    if(renderMode === mode.CANVAS) {\n      ctx.strokeStyle = stroke;\n      ctx.lineWidth = strokeWidth;\n      ctx.fillStyle = fill;\n      ctx.setLineDash(strokeDasharray);\n      ctx.beginPath();\n      ctx.moveTo(originX, originY);\n      ctx.lineTo(originX + width, originY);\n      ctx.lineTo(originX + width, originY + height);\n      ctx.lineTo(originX, originY + height);\n      ctx.fill();\n      if(strokeWidth && stroke !== 'transparent') {\n        ctx.stroke();\n      }\n      ctx.closePath();\n    }\n    else if(renderMode === mode.SVG) {\n      virtualDom.children.push({\n        type: 'item',\n        tagName: 'rect',\n        props: [\n          ['x', x],\n          ['y', y],\n          ['width', width],\n          ['height', height],\n          ['fill', fill],\n          ['stroke', stroke],\n          ['stroke-width', strokeWidth],\n          ['stroke-dasharray', strokeDasharray]\n        ],\n      });\n    }\n  }\n}\n\nexport default Rect;\n","import Geom from './Geom';\nimport mode from '../mode';\n\nclass Circle extends Geom {\n  constructor(tagName, props) {\n    super(tagName, props);\n    // 半径0~1，默认1\n    this.__r = 1;\n    if(this.props.r) {\n      this.__r = parseFloat(this.props.r);\n      if(isNaN(this.r)) {\n        this.__r = 1;\n      }\n    }\n  }\n\n  render(renderMode) {\n    super.render(renderMode);\n    let { rx: x, ry: y, width, height, mlw, mtw, plw, ptw, style, ctx, r, virtualDom } = this;\n    let {\n      display,\n      borderTopWidth,\n      borderLeftWidth,\n      stroke,\n      strokeWidth,\n      strokeDasharray,\n      fill,\n    } = style;\n    if(display === 'none') {\n      return;\n    }\n    let originX = x + borderLeftWidth.value + mlw + plw;\n    let originY = y + borderTopWidth.value + mtw + ptw;\n    originX += width * 0.5;\n    originY += height * 0.5;\n    r *= Math.min(width, height) * 0.5;\n    if(renderMode === mode.CANVAS) {\n      ctx.strokeStyle = stroke;\n      ctx.lineWidth = strokeWidth;\n      ctx.fillStyle = fill;\n      ctx.setLineDash(strokeDasharray);\n      ctx.beginPath();\n      ctx.arc(originX, originY, r, 0, 2 * Math.PI);\n      if(fill !== 'transparent') {\n        ctx.fill();\n      }\n      if(strokeWidth && stroke !== 'transparent') {\n        ctx.stroke();\n      }\n      ctx.closePath();\n    }\n    else if(renderMode === mode.SVG) {\n      virtualDom.children.push({\n        type: 'item',\n        tagName: 'circle',\n        props: [\n          ['cx', originX],\n          ['cy', originY],\n          ['r', r],\n          ['fill', fill],\n          ['stroke', stroke],\n          ['stroke-width', strokeWidth],\n          ['stroke-dasharray', strokeDasharray]\n        ],\n      });\n    }\n  }\n\n  get r() {\n    return this.__r;\n  }\n}\n\nexport default Circle;\n","import Geom from './Geom';\nimport mode from '../mode';\n\nclass Ellipse extends Geom {\n  constructor(tagName, props) {\n    super(tagName, props);\n    // 半径0~1，默认1\n    this.__rx = 1;\n    if(this.props.rx) {\n      this.__rx = parseFloat(this.props.rx);\n      if(isNaN(this.rx)) {\n        this.__rx = 1;\n      }\n    }\n    this.__ry = 1;\n    if(this.props.ry) {\n      this.__ry = parseFloat(this.props.ry);\n      if(isNaN(this.rx)) {\n        this.__ry = 1;\n      }\n    }\n  }\n\n  render(renderMode) {\n    super.render(renderMode);\n    let { rx: x, ry: y, width, height, mlw, mtw, plw, ptw, style, ctx, rx, ry, virtualDom } = this;\n    let {\n      display,\n      borderTopWidth,\n      borderLeftWidth,\n      stroke,\n      strokeWidth,\n      strokeDasharray,\n      fill,\n    } = style;\n    if(display === 'none') {\n      return;\n    }\n    let originX = x + borderLeftWidth.value + mlw + plw;\n    let originY = y + borderTopWidth.value + mtw + ptw;\n    originX += width * 0.5;\n    originY += height * 0.5;\n    rx *= width * 0.5;\n    ry *= height * 0.5;\n    if(renderMode === mode.CANVAS) {\n      ctx.strokeStyle = stroke;\n      ctx.lineWidth = strokeWidth;\n      ctx.fillStyle = fill;\n      ctx.setLineDash(strokeDasharray);\n      ctx.beginPath();\n      ctx.moveTo(originX, originY);\n      ctx.ellipse && ctx.ellipse(originX, originY, rx, ry, 0, 0, 2 * Math.PI);\n      ctx.fill();\n      if(strokeWidth && stroke !== 'transparent') {\n        ctx.stroke();\n      }\n      ctx.closePath();\n    }\n    else if(renderMode === mode.SVG) {\n      virtualDom.children.push({\n        type: 'item',\n        tagName: 'ellipse',\n        props: [\n          ['cx', originX],\n          ['cy', originY],\n          ['rx', rx],\n          ['ry', ry],\n          ['fill', fill],\n          ['stroke', stroke],\n          ['stroke-width', strokeWidth],\n          ['stroke-dasharray', strokeDasharray]\n        ],\n      });\n    }\n  }\n\n  get rx() {\n    return this.__rx;\n  }\n  get ry() {\n    return this.__ry;\n  }\n}\n\nexport default Ellipse;\n","import Geom from './Geom';\nimport mode from '../mode';\n\nclass Grid extends Geom {\n  constructor(tagName, props) {\n    super(tagName, props);\n    // x,y被分为几格\n    this.__nx = 0;\n    if(this.props.nx) {\n      this.__nx = parseFloat(this.props.nx);\n      if(isNaN(this.nx)) {\n        this.__nx = 0;\n      }\n    }\n    this.__ny = 0;\n    if(this.props.ny) {\n      this.__ny = parseFloat(this.props.ny);\n      if(isNaN(this.ny)) {\n        this.__ny = 0;\n      }\n    }\n  }\n\n  render(renderMode) {\n    super.render(renderMode);\n    let { rx: x, ry: y, width, height, mlw, mtw, plw, ptw, style, ctx, nx, ny, virtualDom } = this;\n    if(width <= 0 || height <= 0) {\n      return;\n    }\n    if(nx < 3 && ny < 3) {\n      return;\n    }\n    let {\n      display,\n      borderTopWidth,\n      borderLeftWidth,\n      stroke,\n      strokeWidth,\n      strokeDasharray,\n    } = style;\n    if(display === 'none') {\n      return;\n    }\n    let originX = x + borderLeftWidth.value + mlw + plw;\n    let originY = y + borderTopWidth.value + mtw + ptw;\n    let endX = originX + width;\n    let endY = originY + height;\n    let lx = [];\n    let ly = [];\n    if(nx >= 3) {\n      let per = width / (nx - 1);\n      for(let i = 0; i < nx; i++) {\n        ly.push(originX + i * per);\n      }\n    }\n    if(ny >= 3) {\n      let per = height / (ny - 1);\n      for(let i = 0; i < ny; i++) {\n        lx.push(originY + i * per);\n      }\n    }\n    if(renderMode === mode.CANVAS) {\n      ctx.strokeStyle = stroke;\n      ctx.lineWidth = strokeWidth;\n      ctx.setLineDash(strokeDasharray);\n      ctx.beginPath();\n      lx.forEach(item => {\n        ctx.moveTo(originX, item);\n        ctx.lineTo(endX, item);\n      });\n      ly.forEach(item => {\n        ctx.moveTo(item, originY);\n        ctx.lineTo(item, endY);\n      });\n      if(strokeWidth && stroke !== 'transparent') {\n        ctx.stroke();\n      }\n      ctx.closePath();\n    }\n    else if(renderMode === mode.SVG) {\n      lx.forEach(item => {\n        virtualDom.children.push({\n          type: 'item',\n          tagName: 'line',\n          props: [\n            ['x1', originX],\n            ['y1', item],\n            ['x2', endX],\n            ['y2', item],\n            ['stroke', stroke],\n            ['stroke-width', strokeWidth],\n            ['stroke-dasharray', strokeDasharray]\n          ],\n        });\n      });\n      ly.forEach(item => {\n        virtualDom.children.push({\n          type: 'item',\n          tagName: 'line',\n          props: [\n            ['x1', item],\n            ['y1', originY],\n            ['x2', item],\n            ['y2', endY],\n            ['stroke', stroke],\n            ['stroke-width', strokeWidth],\n            ['stroke-dasharray', strokeDasharray]\n          ],\n        });\n      });\n    }\n  }\n\n  get nx() {\n    return this.__nx;\n  }\n  get ny() {\n    return this.__ny;\n  }\n  get dash() {\n    return this.__dash;\n  }\n}\n\nexport default Grid;\n","import Dom from './node/Dom';\nimport Root from './node/Root';\nimport mode from './mode';\nimport Geom from './geom/Geom';\nimport Line from './geom/Line';\nimport Polyline from './geom/Polyline';\nimport Polygon from './geom/Polygon';\nimport Sector from './geom/Sector';\nimport Rect from './geom/Rect';\nimport Circle from './geom/Circle';\nimport Ellipse from './geom/Ellipse';\nimport Grid from './geom/Grid';\n\nGeom.register('$line', Line);\nGeom.register('$polyline', Polyline);\nGeom.register('$polygon', Polygon);\nGeom.register('$sector', Sector);\nGeom.register('$rect', Rect);\nGeom.register('$circle', Circle);\nGeom.register('$ellipse', Ellipse);\nGeom.register('$grid', Grid);\n\nlet karas = {\n  render(root, dom) {\n    if(!(root instanceof Root)) {\n      throw new Error('render root muse be canvas or svg');\n    }\n    if(dom) {\n      root.appendTo(dom);\n    }\n    return root;\n  },\n  createVd(tagName, props, children) {\n    if(['canvas', 'svg'].indexOf(tagName) > -1) {\n      return new Root(tagName, props, children);\n    }\n    if(Dom.isValid(tagName)) {\n      return new Dom(tagName, props, children);\n    }\n    throw new Error('can not use marker: ' + tagName);\n  },\n  createGm(tagName, props) {\n    let klass = Geom.getImplement(tagName);\n    return new klass(tagName, props);\n  },\n  createCp(cp, props) {\n    return new cp(props);\n  },\n  Geom,\n  mode,\n};\n\nif(typeof window != 'undefined') {\n  window.karas = karas;\n}\n\nexport default karas;\n"],"names":["div","Node","__x","__y","__ox","__oy","__width","__height","__prev","__next","__ctx","__defs","__parent","__style","__baseLine","__virtualDom","diff","this","x","ox","y","oy","parent","root","CANVAS","SVG","measure","s","style","document","createElement","position","left","top","visibility","body","appendChild","fontSize","innerText","css","window","getComputedStyle","parseFloat","width","AUTO","PX","PERCENT","POSITION","toString","isType","type","obj","call","isNumber","stringify","isNil","v","joinVd","vd","props","forEach","item","tagName","content","children","bb","joinTransform","transform","joinDef","def","uuid","stop","util","isObject","isString","isFunction","isBoolean","isDate","joinSourceArray","arr","res","i","len","length","Array","isArray","encodeHtml","prop","replace","joinVirtualDom","nd","r2d","n","Math","PI","rgb2int","color","charAt","slice","push","parseInt","c","match","arr2hash","hash","list","Object","keys","j","k","hash2arr","multiply","a","b","m","p","col","transformPoint","matrix","d","vectorProduct","x1","y1","x2","y2","calMatrix","tan","sin","cos","pointInQuadrilateral","x3","y3","x4","y4","normalize","w","h","unit","value","getOrigin","transformOrigin","tfo","mergeMatrix","getLinearDeg","deg","exec","unshift","getColorStop","trim","split","test","start","end","per","prev","splice","allBefore","allAfter","first","last","c1","c2","r1","g1","b1","a1","r2","g2","b2","a2","l1","abs","l2","r","floor","g","getCsLimit","next","p1","p2","getCsStartLimit","getCsEndLimit","calLinearCoords","cx","cy","x0","y0","calRadialRadius","iw","ih","xl","yl","size","at","indexOf","by","min","sqrt","pow","max","calFitDashed","total","bs","be","smin","smax","dmin","dmax","ps","pd","outer","num","calDashed","m1","m2","m3","m4","bw","renderBorder","renderMode","points","ctx","xom","mode","point","beginPath","fillStyle","moveTo","lineTo","fill","closePath","addBorder","Xom","__props","__tagName","_this","__listener","toLowerCase","__mtw","__mrw","__mbw","__mlw","__ptw","__prw","__pbw","__plw","__matrix","data","display","marginTop","marginRight","marginBottom","marginLeft","paddingTop","paddingRight","paddingBottom","paddingLeft","__mpWidth","__layoutBlock","__layoutFlex","__layoutInline","mp","fixedWidth","fixedHeight","mlw","mtw","mrw","mbw","plw","ptw","prw","pbw","height","borderTopWidth","borderRightWidth","borderBottomWidth","borderLeftWidth","__renderMode","setTransform","right","bottom","bgg","backgroundGradient","bgc","backgroundColor","btc","borderTopColor","bts","borderTopStyle","brc","borderRightColor","brs","borderRightStyle","bbc","borderBottomColor","bbs","borderBottomStyle","blc","borderLeftColor","bls","borderLeftStyle","__offsetX","__offsetY","rx","ry","btw","brw","bbw","blw","ow","oh","tf","matrixSelf","addTransform","join","gradient","xx0","yy0","xx1","yy1","lg","createLinearGradient","addColorStop","rect","defs","add","addBackground","cx2","cy2","rg","createRadialGradient","border","deg1","atan","deg2","isLast","xx4","yy2","yy4","xx2","e","force","event","covers","listener","outerWidth","outerHeight","cb","childWillResponse","hasOwnProperty","child","isGeom","__emitEvent","willResponseEvent","target","virtualDom","lhr","car","blr","mdr","lgr","RESET","borderSizing","fontFamily","fontStyle","fontWeight","lineHeight","borderTopLeftRadius","borderTopRightRadius","borderBottomLeftRadius","borderBottomRightRadius","verticalAlign","flexGrow","flexShrink","flexBasis","flexDirection","justifyContent","alignItems","textAlign","stroke","strokeWidth","strokeDasharray","reset","parserOneBorder","direction","key","calUnit","temp","background","flex","borderTop","borderRight","borderBottom","borderLeft","margin","padding","borderRadius","map","arr1","arr2","font","setFontStyle","getBaseLine","normal","LineBox","__content","fillText","CHAR_WIDTH_CACHE","Text","__lineBoxes","__charWidthList","__charWidth","__textWidth","charWidthList","cache","sum","char","mw","measureText","charWidth","isVirtual","maxX","lineBoxes","begin","count","lineBox","_this2","render","textWidth","baseLine","LineGroup","__list","__calBaseLine","IMPLEMENT","Geom","isDirectionRow","main","__preLayout","name","Error","implement","TAG_NAME","INLINE","Dom","__children","__flowChildren","__absChildren","__lineGroups","__flowY","__traverseChildren","_this3","__traverse","text","parentStyle","__initStyle","__measure","flowChildren","__tryLayInline","isRecursion","__calAutoBasis","min2","max2","__layout","__calAbs","Infinity","lineGroups","lineGroup","horizonAlign","growList","shrinkList","basisList","minList","growSum","shrinkSum","basisSum","maxSum","maxCross","isOverflow","shrink","grow","overflow","free","center","between","around","_this4","absChildren","container","flowY","pw","ph","__layoutAbs","w2","h2","width2","height2","widthPx","heightPx","elem","ovd","nvd","cns","childNodes","od","ol","nl","diffDef","diffDefs","diffBb","diffD2D","insertAdjacentHTML","parentNode","removeChild","setAttribute","o","removeAt","insertAt","diffChild","replaceWith","firstChild","lastChild","diffD2G","diffItem","diffT2T","diffG2D","equalArr","getAttribute","diffG2G","obb","nbb","isText","op","removeAttribute","textContent","index","html","Defs","id","Root","__node","undefined","isNaN","touches","node","getBoundingClientRect","clientX","clientY","addEventListener","__cb","dom","querySelector","getDom","__initProps","nodeName","toUpperCase","innerHTML","__genHtml","__uuid","getInstance","clear","getPropertyValue","getContext","clearRect","__karasInit","domDiff","__ovd","__od","__initEvent","__imageData","Line","__start","__end","__control","control","cx1","cy1","originX","originY","curve","strokeStyle","lineWidth","setLineDash","bezierCurveTo","quadraticCurveTo","Polyline","__points","origin","__origin","pts","__pts","Polygon","OFFSET","getCoordByDegree","Sector","__r","arc","large","Rect","Circle","Ellipse","__rx","__ry","ellipse","Grid","__nx","nx","__ny","ny","endX","endY","lx","ly","__dash","register","karas","appendTo","createVd","isValid","createGm","getImplement","createCp","cp"],"mappings":"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"}