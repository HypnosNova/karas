{"version":3,"file":"index.js","sources":["src/node/Node.js","src/node/mode.js","src/node/Xom.js","src/style/unit.js","src/style/font.js","src/style/reset.js","src/util.js","src/style/css.js","src/node/LineBox.js","src/node/Text.js","src/node/LineGroup.js","src/geom/Geom.js","src/node/Dom.js","src/node/CS.js","src/geom/Line.js","src/geom/Polygon.js","src/index.js"],"sourcesContent":["class Node {\n  constructor() {\n    this.__x = 0;\n    this.__y = 0;\n    this.__width = 0;\n    this.__height = 0;\n    this.__prev = null;\n    this.__next = null;\n    this.__ctx = null; // canvas的context\n    this.__parent = null;\n    this.__style = {}; // style被解析后的k-v形式\n    this.__baseLine = 0;\n  }\n\n  __offsetX(diff) {\n    this.__x += diff;\n  }\n\n  __offsetY(diff) {\n    this.__y += diff;\n  }\n\n  get x() {\n    return this.__x;\n  }\n  get y() {\n    return this.__y;\n  }\n  get width() {\n    return this.__width;\n  }\n  get height() {\n    return this.__height;\n  }\n  get outerWidth() {\n    return this.__width;\n  }\n  get outerHeight() {\n    return this.__height;\n  }\n  get prev() {\n    return this.__prev;\n  }\n  get next() {\n    return this.__next;\n  }\n  get parent() {\n    return this.__parent;\n  }\n  get style() {\n    return this.__style;\n  }\n  get ctx() {\n    return this.__ctx;\n  }\n  get baseLine() {\n    return this.__baseLine;\n  }\n}\n\nexport default Node;\n","let mode = 0;\nlet measureDom;\nlet svgHtml;\n\nexport default {\n  setCanvas() {\n    mode = 0;\n  },\n  setSvg() {\n    mode = 1;\n    svgHtml = '';\n  },\n  isCanvas() {\n    return mode === 0;\n  },\n  isSvg() {\n    return mode === 1;\n  },\n  appendHtml(s) {\n    svgHtml += s;\n  },\n  get html() {\n    return svgHtml;\n  },\n  get measure() {\n    if(!measureDom) {\n      measureDom = document.createElement('div');\n      measureDom.style.position = 'absolute';\n      measureDom.style.left = '99999px';\n      measureDom.style.top = '-99999px';\n      measureDom.style.visibility = 'hidden';\n      document.body.appendChild(measureDom);\n    }\n    return measureDom;\n  }\n};\n","import Node from './Node';\nimport mode from './mode';\n\nfunction arr2hash(arr) {\n  let hash = {};\n  for(let i = 0, len = arr.length; i < len; i++) {\n    let item = arr[i];\n    if(Array.isArray(item)) {\n      hash[item[0]] = item[1];\n    }\n    else {\n      for(let list = Object.keys(item), j = list.length - 1; j >= 0; j--) {\n        let k = list[j];\n        hash[k] = item[k];\n      }\n    }\n  }\n  return hash;\n}\n\nfunction hash2arr(hash) {\n  let arr = [];\n  for(let list = Object.keys(hash), i = 0, len = list.length; i < len; i++) {\n    let k = list[i];\n    arr.push([k, hash[k]]);\n  }\n  return arr;\n}\n\nfunction spread(arr) {\n  for(let i = 0, len = arr.length; i < len; i++) {\n    let item = arr[i];\n    if(!Array.isArray(item)) {\n      let temp = [];\n      for(let list = Object.keys(item), j = 0, len = list.length; j < len; j++) {\n        let k = list[j];\n        temp.push([k, item[k]]);\n      }\n      arr.splice(i, 1, ...temp);\n    }\n  }\n  return arr;\n}\n\nclass Xom extends Node {\n  constructor(tagName, props) {\n    super();\n    props = props || [];\n    // 构建工具中都是arr，手写可能出现hash情况\n    if(Array.isArray(props)) {\n      this.props = arr2hash(props);\n      this.__props = spread(props);\n    }\n    else {\n      this.props = props;\n      this.__props = hash2arr(props);\n    }\n    this.__tagName = tagName;\n    this.__style = this.props.style || {}; // style被解析后的k-v形式\n  }\n\n  __preLay(data) {\n    let { style } = this;\n    if(style.display === 'block') {\n      this.__preLayBlock(data);\n    }\n    else if(style.display === 'flex') {\n      this.__preLayFlex(data);\n    }\n    else {\n      this.__preLayInline(data);\n    }\n  }\n\n  render() {\n    let { ctx, style, x, y, width, height, outerWidth, outerHeight } = this;\n    let {\n      backgroundColor,\n      borderTopWidth,\n      borderTopColor,\n      borderRightWidth,\n      borderRightColor,\n      borderBottomWidth,\n      borderBottomColor,\n      borderLeftWidth,\n      borderLeftColor,\n    } = style;\n    if(backgroundColor) {\n      let x1 = x;\n      if(borderLeftWidth) {\n        x1 += borderLeftWidth.value;\n      }\n      let y1 = y;\n      if(borderTopWidth) {\n        y1 += borderTopWidth.value;\n      }\n      if(mode.isCanvas()) {\n        ctx.beginPath();\n        ctx.fillStyle = backgroundColor;\n        ctx.rect(x1, y1, width, height);\n        ctx.fill();\n        ctx.closePath();\n      }\n      else if(mode.isSvg()) {\n        mode.appendHtml(`<rect x=\"${x1}\" y=\"${y1}\" width=\"${width}\" height=\"${height}\" fill=\"${backgroundColor}\"/>`);\n      }\n    }\n    if(borderTopWidth.value) {\n      let y1 = y + borderTopWidth.value * 0.5;\n      if(mode.isCanvas()) {\n        ctx.beginPath();\n        ctx.lineWidth = borderTopWidth.value;\n        ctx.strokeStyle = borderTopColor;\n        ctx.moveTo(x + borderLeftWidth.value, y1);\n        ctx.lineTo(x + borderLeftWidth.value + width, y1);\n        ctx.stroke();\n        ctx.closePath();\n      }\n      else {\n        mode.appendHtml(`<line x1=\"${x}\" y1=\"${y1}\" x2=\"${x + outerWidth}\" y2=\"${y1}\" stroke-width=\"${borderTopWidth.value}\" stroke=\"${borderTopColor}\"/>`);\n      }\n    }\n    if(borderRightWidth.value) {\n      let x1 = x + width + borderLeftWidth.value + borderRightWidth.value * 0.5;\n      let y2 = y + outerHeight;\n      if(mode.isCanvas()) {\n        ctx.beginPath();\n        ctx.lineWidth = borderRightWidth.value;\n        ctx.strokeStyle = borderRightColor;\n        ctx.moveTo(x1, y);\n        ctx.lineTo(x1, y2);\n        ctx.stroke();\n        ctx.closePath();\n      }\n      else {\n        mode.appendHtml(`<line x1=\"${x1}\" y1=\"${y}\" x2=\"${x1}\" y2=\"${y2}\" stroke-width=\"${borderRightWidth.value}\" stroke=\"${borderRightColor}\"/>`);\n      }\n    }\n    if(borderBottomWidth.value) {\n      let y1 = y + height + borderTopWidth.value + borderBottomWidth.value * 0.5;\n      if(mode.isCanvas()) {\n        ctx.beginPath();\n        ctx.lineWidth = borderBottomWidth.value;\n        ctx.strokeStyle = borderBottomColor;\n        ctx.moveTo(x + borderLeftWidth.value, y1);\n        ctx.lineTo(x + borderLeftWidth.value + width, y1);\n        ctx.stroke();\n        ctx.closePath();\n      }\n      else {\n        mode.appendHtml(`<line x1=\"${x}\" y1=\"${y1}\" x2=\"${x + outerWidth}\" y2=\"${y1}\" stroke-width=\"${borderBottomWidth.value}\" stroke=\"${borderBottomColor}\"/>`);\n      }\n    }\n    if(borderLeftWidth.value) {\n      let x1 = x + borderLeftWidth.value * 0.5;\n      if(mode.isCanvas()) {\n        ctx.beginPath();\n        ctx.lineWidth = borderLeftWidth.value;\n        ctx.strokeStyle = borderLeftColor;\n        ctx.moveTo(x1, y);\n        ctx.lineTo(x1, y + height + borderTopWidth.value + borderBottomWidth.value);\n        ctx.stroke();\n        ctx.closePath();\n      }\n      else {\n        mode.appendHtml(`<line x1=\"${x1}\" y1=\"${y}\" x2=\"${x1}\" y2=\"${y + outerHeight}\" stroke-width=\"${borderLeftWidth.value}\" stroke=\"${borderLeftColor}\"/>`);\n      }\n    }\n  }\n\n  get tagName() {\n    return this.__tagName;\n  }\n  get outerWidth() {\n    let { style: { borderLeftWidth, borderRightWidth } } = this;\n    return this.width + borderLeftWidth.value + borderRightWidth.value;\n  }\n  get outerHeight() {\n    let { style: { borderTopWidth, borderBottomWidth } } = this;\n    return this.height + borderTopWidth.value + borderBottomWidth.value;\n  }\n}\n\nexport default Xom;\n","export default {\n  AUTO: 0,\n  PX: 1,\n  PERCENT: 2,\n};\n","'use strict';\n\nexport default {\n  arial: {\n    lhr: 1.14990234375, // 默认line-height ratio，(67+1854+434)/2048\n    car: 1.1171875, // content-area ratio，(1854+434)/2048\n    blr: 0.9052734375, // base-line ratio，1854/2048\n    mdr: 0.64599609375, // middle ratio，(1854-1062/2)/2048\n    lgr: 0.03271484375, // line-gap ratio，67/2048\n  },\n};\n","const RESET = {\n  display: 'block',\n  borderSizing: 'content-box',\n  marginTop: 0,\n  marginRight: 0,\n  marginBottom: 0,\n  marginLeft: 0,\n  paddingTop: 0,\n  paddingRight: 0,\n  paddingBottom: 0,\n  paddingLeft: 0,\n  fontSize: 24,\n  fontFamily: 'arial',\n  color: '#000',\n  fontStyle: 'normal',\n  fontWeight: 400,\n  lineHeight: 'normal',\n  borderTopWidth: 0,\n  borderRightWidth: 0,\n  borderBottomWidth: 0,\n  borderLeftWidth: 0,\n  borderTopStyle: 'solid',\n  borderRightStyle: 'solid',\n  borderBottomStyle: 'solid',\n  borderLeftStyle: 'solid',\n  verticalAlign: 'baseline',\n  width: 'auto',\n  height: 'auto',\n  flexGrow: 0,\n  flexShrink: 1,\n  flexBasis: 'auto',\n  flexDirection: 'row',\n  justifyContent: 'flex-start',\n  alignItem: 'stretch',\n  textAlign: 'left',\n  stroke: '#000',\n  strokeWidth: 1,\n};\n\nlet reset = [];\n\nObject.keys(RESET).forEach(k => {\n  let v = RESET[k];\n  reset.push({\n    k,\n    v,\n  });\n});\n\nexport default reset;\n","let toString = {}.toString;\nfunction isType(type) {\n  return function(obj) {\n    return toString.call(obj) === '[object ' + type + ']';\n  }\n}\n\nlet isNumber = isType('Number');\n\nfunction joinSourceArray(arr) {\n  var res = '';\n  for(var i = 0, len = arr.length; i < len; i++) {\n    var item = arr[i];\n    if(Array.isArray(item)) {\n      res += joinSourceArray(item);\n    }\n    else {\n      res += stringify(item);\n    }\n  }\n  return res;\n}\n\nfunction stringify(s) {\n  if(isNil(s)) {\n    return '';\n  }\n  return s.toString();\n}\n\nfunction encodeHtml(s, prop) {\n  if(prop) {\n    return s.replace(/\"/g, '&quot;');\n  }\n  return s.replace(/&/g, '&amp;').replace(/</g, '&lt;');\n}\n\nfunction isNil(v) {\n  return v === undefined || v === null;\n}\n\nlet util = {\n  isObject: isType('Object'),\n  isString: isType('String'),\n  isFunction: isType('Function'),\n  isNumber,\n  isBoolean: isType('Boolean'),\n  isDate: isType('Date'),\n  stringify,\n  joinSourceArray(arr) {\n    return joinSourceArray(arr);\n  },\n  encodeHtml,\n  isNil,\n};\n\nexport default util;\n","import unit from './unit';\nimport font from './font';\nimport reset from './reset';\nimport util from '../util';\n\nfunction parserOneBorder(style, direction) {\n  let key = `border${direction}`;\n  if(!style[key]) {\n    return;\n  }\n  let w = /\\b\\d+px\\b/i.exec(style[key]);\n  if(w) {\n    style[key + 'Width'] = w[0];\n  }\n  let s = /\\bsolid\\b/i.exec(style[key]);\n  if(s) {\n    style[key + 'Style'] = s[0];\n  }\n  let c = /#[0-9a-f]{3,6}/i.exec(style[key]);\n  if(c && [4, 7].indexOf(c[0].length) > -1) {\n    style[key + 'Color'] = c[0];\n  }\n}\n\nfunction normalize(style) {\n  // 默认reset\n  reset.forEach(item => {\n    if(!style.hasOwnProperty(item.k)) {\n      style[item.k] = item.v;\n    }\n  });\n  // 处理缩写\n  // TODO: 重复声明时优先级\n  if(style.background) {\n    let bgc = /#[0-9a-f]{3,6}/i.exec(style.background);\n    if(bgc && [4, 7].indexOf(bgc[0].length) > -1) {\n      style.backgroundColor = bgc[0];\n    }\n  }\n  if(style.flex) {\n    if(style.flex === 'none') {\n      style.flexGrow = 0;\n      style.flexShrink = 0;\n      style.flexBasis = 'auto';\n    }\n    else if(style.flex === 'auto') {\n      style.flexGrow = 1;\n      style.flexShrink = 1;\n      style.flexBasis = 'auto';\n    }\n    else if(/^[\\d.]+$/.test(style.flex)) {\n      style.flexGrow = parseFloat(style.flex);\n      style.flexShrink = 1;\n      style.flexBasis = 0;\n    }\n    else if(/^[\\d.]+px$/.test(style.flex)) {}\n    else if(/^[\\d.]+%$/.test(style.flex)) {}\n    else {\n      style.flexGrow = 0;\n      style.flexShrink = 1;\n      style.flexBasis = 'auto';\n    }\n  }\n  if(style.border) {\n    style.borderTop = style.borderRight = style.borderBottom = style.borderLeft = style.border;\n  }\n  parserOneBorder(style, 'Top');\n  parserOneBorder(style, 'Right');\n  parserOneBorder(style, 'Bottom');\n  parserOneBorder(style, 'Left');\n  // 转化不同单位值为对象标准化\n  [\n    'marginTop',\n    'marginRight',\n    'marginDown',\n    'marginLeft',\n    'paddingTop',\n    'paddingRight',\n    'paddingDown',\n    'paddingLeft',\n    'borderTopWidth',\n    'borderRightWidth',\n    'borderBottomWidth',\n    'borderLeftWidth',\n    'width',\n    'height',\n    'flexBasis',\n  ].forEach(k => {\n    let v = style[k];\n    // 编译工具前置解析优化跳出\n    if(!util.isNil(v) && v.unit) {\n      return;\n    }\n    if(v === 'auto') {\n      style[k] = {\n        unit: unit.AUTO,\n      };\n    }\n    else if(/%$/.test(v)) {\n      v = parseFloat(v) || 0;\n      if(v <= 0) {\n        style[k] = {\n          value: 0,\n          unit: unit.PX,\n        };\n      }\n      else {\n        style[k] = {\n          value: v,\n          unit: unit.PERCENT,\n        };\n      }\n    }\n    else {\n      v = parseFloat(v) || 0;\n      style[k] = {\n        value: Math.max(v, 0),\n        unit: unit.PX,\n      };\n    }\n  });\n  // 计算lineHeight为px值，最小范围\n  let lineHeight = style.lineHeight;\n  if(lineHeight === 'normal') {\n    lineHeight = {\n      value: style.fontSize * font.arial.lhr,\n      unit: unit.PX,\n    };\n  }\n  else if(/px$/.test(lineHeight)) {\n    lineHeight = parseFloat(lineHeight);\n    lineHeight = {\n      value: Math.max(style.fontSize, lineHeight),\n      unit: unit.PX,\n    };\n  }\n  // 纯数字比例\n  else {\n    lineHeight = parseFloat(lineHeight) || 'normal';\n    // 非法数字\n    if(lineHeight === 'normal') {\n      lineHeight = {\n        value: style.fontSize * font.arial.lhr,\n        unit: unit.PX,\n      };\n    }\n    else {\n      lineHeight = {\n        value: lineHeight * style.fontSize,\n        unit: unit.PX,\n      };\n    }\n  }\n  style.lineHeight = lineHeight;\n}\n\nfunction setFontStyle(style) {\n  let { fontStyle, fontWeight, fontSize, fontFamily } = style;\n  return `${fontStyle} ${fontWeight} ${fontSize}px/${fontSize}px ${fontFamily}`;\n}\n\nfunction getBaseLine(style) {\n  let normal = style.fontSize * font.arial.lhr;\n  return (style.lineHeight.value - normal) * 0.5 + style.fontSize * font.arial.blr;\n}\n\nexport default {\n  normalize,\n  setFontStyle,\n  getBaseLine,\n};\n","import css from '../style/css';\nimport mode from './mode';\n\nclass LineBox {\n  constructor(ctx, x, y, content, style) {\n    this.__ctx = ctx;\n    this.__x = x;\n    this.__y = y;\n    this.__content = content;\n    this.__style = style;\n  }\n\n  render() {\n    let { ctx, style, content, x, y } = this;\n    if(mode.isCanvas()) {\n      ctx.fillStyle = style.color;\n      ctx.fillText(content, x, y + css.getBaseLine(style));\n    }\n    else if(mode.isSvg()) {\n      mode.appendHtml(`<text x=\"${x}\" y=\"${y + css.getBaseLine(style)}\" fill=\"${style.color}\" font-size=\"${style.fontSize}px\">${content}</text>`);\n    }\n  }\n\n  __offsetX(diff) {\n    this.__x += diff;\n  }\n\n  __offsetY(diff) {\n    this.__y += diff;\n  }\n\n  get ctx() {\n    return this.__ctx;\n  }\n  get x() {\n    return this.__x;\n  }\n  get y() {\n    return this.__y;\n  }\n  get content() {\n    return this.__content;\n  }\n  get style() {\n    return this.__style;\n  }\n  get baseLine() {\n    return css.getBaseLine(this.style);\n  }\n}\n\nexport default LineBox;\n","import Node from './Node';\nimport LineBox from './LineBox';\nimport css from '../style/css';\nimport mode from './mode';\n\nconst CHAR_WIDTH_CACHE = {};\n\nclass Text extends Node {\n  constructor(content) {\n    super();\n    this.__content = content.toString();\n    this.__lineBoxes = [];\n    this.__charWidthList = [];\n    this.__charWidth = 0;\n    this.__textWidth = 0;\n  }\n\n  // 预先计算每个字的宽度\n  __measure() {\n    this.__charWidthList = [];\n    let { ctx, content, style, charWidthList } = this;\n    if(mode.isCanvas()) {\n      ctx.font = css.setFontStyle(style);\n    }\n    let cache = CHAR_WIDTH_CACHE[style.fontSize] = CHAR_WIDTH_CACHE[style.fontSize] || {};\n    let length = content.length;\n    let sum = 0;\n    for(let i = 0; i < length; i++) {\n      let char = content.charAt(i);\n      let mw;\n      if(cache.hasOwnProperty(char)) {\n        mw = cache[char];\n      }\n      else if(mode.isCanvas()) {\n        mw = ctx.measureText(char).width;\n      }\n      else if(mode.isSvg()) {\n        let dom = mode.measure;\n        dom.style.fontSize = style.fontSize + 'px';\n        dom.innerText = char;\n        let css = window.getComputedStyle(dom, null);\n        mw = parseFloat(css.width);\n      }\n      charWidthList.push(mw);\n      sum += mw;\n      this.__charWidth = Math.max(this.charWidth, mw);\n    }\n    this.__textWidth = sum;\n  }\n\n  __preLay(data, isVirtual) {\n    let { x, y, w, h } = data;\n    this.__x = x;\n    this.__y = y;\n    let maxX = x;\n    let { ctx, content, style, lineBoxes, charWidthList } = this;\n    // 顺序尝试分割字符串为lineBox，形成多行\n    let begin = 0;\n    let i = 0;\n    let count = 0;\n    let length = content.length;\n    while(i < length) {\n      count += charWidthList[i];\n      if (count === w) {\n        let lineBox = new LineBox(ctx, x, y, content.slice(begin, i + 1), style);\n        lineBoxes.push(lineBox);\n        maxX = Math.max(maxX, x + count);\n        y += this.style.lineHeight.value;\n        begin = i + 1;\n        i = begin + 1;\n        count = 0;\n      }\n      else if (count > w) {\n        // 宽度不足时无法跳出循环，至少也要塞个字符形成一行\n        if(i === begin) {\n          i = begin + 1;\n        }\n        let lineBox = new LineBox(ctx, x, y, content.slice(begin, i), style);\n        lineBoxes.push(lineBox);\n        maxX = Math.max(maxX, x + count - charWidthList[i]);\n        y += this.style.lineHeight.value;\n        begin = i;\n        i = i + 1;\n        count = 0;\n      }\n      else {\n        i++;\n      }\n    }\n    if(begin < length && begin < i) {\n      let lineBox = new LineBox(ctx, x, y, content.slice(begin, i), style);\n      lineBoxes.push(lineBox);\n      maxX = Math.max(maxX, x + count);\n      y += this.style.lineHeight.value;\n    }\n    this.__width = maxX - x;\n    this.__height = y - data.y;\n    if(isVirtual) {\n      this.__lineBoxes = [];\n    }\n  }\n\n  render() {\n    if(mode.isCanvas()) {\n      this.ctx.font = css.setFontStyle(this.style);\n    }\n    this.lineBoxes.forEach(item => {\n      item.render();\n    });\n  }\n\n  __tryLayInline(w) {\n    this.ctx.font = css.setFontStyle(this.style);\n    let tw = this.ctx.measureText(this.content).width;\n    return w - tw;\n  }\n\n  __offsetX(diff) {\n    super.__offsetX(diff);\n    this.lineBoxes.forEach(item => {\n      item.__offsetX(diff);\n    });\n  }\n\n  __offsetY(diff) {\n    super.__offsetY(diff);\n    this.lineBoxes.forEach(item => {\n      item.__offsetY(diff);\n    });\n  }\n\n  __calMaxAndMinWidth() {\n    let n = 0;\n    this.charWidthList.forEach(item => {\n      n = Math.max(n, item);\n    });\n    return { max: this.textWidth, min: n };\n  }\n\n  get content() {\n    return this.__content;\n  }\n  set content(v) {\n    this.__content = v;\n  }\n  get lineBoxes() {\n    return this.__lineBoxes;\n  }\n  get charWidthList() {\n    return this.__charWidthList;\n  }\n  get charWidth() {\n    return this.__charWidth;\n  }\n  get textWidth() {\n    return this.__textWidth;\n  }\n  get baseLine() {\n    let last = this.lineBoxes[this.lineBoxes.length - 1];\n    return last.y - this.y + last.baseLine;\n  }\n}\n\nexport default Text;\n","class LineGroup {\n  constructor(x, y) {\n    this.__list = [];\n    this.__x = x;\n    this.__y = y;\n    this.__height = 0;\n    this.__baseLine = 0;\n  }\n\n  add(item) {\n    this.list.push(item);\n  }\n\n  __calBaseLine() {\n    let baseLine = 0;\n    this.list.forEach(item => {\n      baseLine = Math.max(baseLine, item.baseLine);\n    });\n    return baseLine;\n  }\n\n  __calHeight() {\n    let height = 0;\n    this.list.forEach(item => {\n      height = Math.max(height, item.height);\n    });\n    return height;\n  }\n\n  verticalAlign() {\n    this.__height = this.__calHeight();\n    this.__baseLine = this.__calBaseLine();\n    // 仅当有2个和以上时才需要vertical对齐调整\n    if(this.list.length > 1) {\n      this.list.forEach(item => {\n        if(item.baseLine !== this.baseLine) {\n          item.__offsetY(this.baseLine - item.baseLine);\n        }\n      });\n    }\n  }\n\n  get list() {\n    return this.__list;\n  }\n  get x() {\n    return this.__x;\n  }\n  get y() {\n    return this.__y;\n  }\n  get height() {\n    return this.__height;\n  }\n  get baseLine() {\n    return this.__baseLine;\n  }\n  get size() {\n    return this.__list.length;\n  }\n}\n\nexport default LineGroup;\n","import Xom from '../node/Xom';\nimport css from '../style/css';\nimport unit from '../style/unit';\n\nconst TAG_NAME = {\n  '$line': true,\n  '$polygon': true,\n};\n\nclass Geom extends Xom {\n  constructor(tagName, props) {\n    super(tagName, props);\n  }\n\n  __initStyle() {\n    css.normalize(this.style);\n  }\n\n  __calAutoBasis(isDirectionRow, w, h) {\n    let b = 0;\n    let min = 0;\n    let max = 0;\n    let { style } = this;\n    // 计算需考虑style的属性\n    let {\n      width,\n      height,\n      borderTopWidth,\n      borderRightWidth,\n      borderBottomWidth,\n      borderLeftWidth,\n    } = style;\n    let main = isDirectionRow ? width : height;\n    if(main.unit !== unit.AUTO) {\n      b = max += main.value;\n    }\n    // border也得计算在内\n    if(isDirectionRow) {\n      let w = borderRightWidth.value + borderLeftWidth.value;\n      b += w;\n      max += w;\n      min += w;\n    }\n    else {\n      let h = borderTopWidth.value + borderBottomWidth.value;\n      b += h;\n      max += h;\n      min += h;\n    }\n    return { b, min, max };\n  }\n\n  __preLayBlock(data) {}\n\n  __preLayFlex(data) {}\n\n  __preLayInline(data) {\n    let { x, y, w, h } = data;\n    this.__x = x;\n    this.__y = y;\n    let { style } = this;\n    let {\n      width,\n      height,\n      borderTopWidth,\n      borderRightWidth,\n      borderBottomWidth,\n      borderLeftWidth,\n    } = style;\n    // 除了auto外都是固定高度\n    let fixedWidth;\n    let fixedHeight;\n    if(width && width.unit !== unit.AUTO) {\n      fixedWidth = true;\n      switch(width.unit) {\n        case unit.PX:\n          w = width.value;\n          break;\n      }\n    }\n    if(height && height.unit !== unit.AUTO) {\n      fixedHeight = true;\n      switch(height.unit) {\n        case unit.PX:\n          h = height.value;\n          break;\n      }\n    }\n    // border影响x和y\n    x += borderLeftWidth.value;\n    data.x = x;\n    y += borderTopWidth.value;\n    data.y = y;\n    w -= borderLeftWidth.value + borderRightWidth.value;\n    h -= borderTopWidth.value + borderBottomWidth.value;\n    // 元素的width不能超过父元素w\n    this.__width = fixedWidth ? w : x - data.x;\n    this.__height = fixedHeight ? h : y - data.y;\n  }\n\n  render() {\n    super.render();\n  }\n\n  get tagName() {\n    return this.__tagName;\n  }\n  get baseLine() {\n    return 0;\n  }\n\n  static isValid(s) {\n    return TAG_NAME.hasOwnProperty(s);\n  }\n}\n\nexport default Geom;\n","import Xom from './Xom';\nimport Text from './Text';\nimport LineGroup from './LineGroup';\nimport Geom from '../geom/Geom';\nimport util from '../util';\nimport css from '../style/css';\nimport unit from '../style/unit';\n\nconst TAG_NAME = {\n  'div': true,\n  'span': true,\n};\nconst INLINE = {\n  'span': true,\n};\n\nclass Dom extends Xom {\n  constructor(tagName, props, children) {\n    super(tagName, props);\n    this.__children = children;\n    this.__lineGroups = []; // 一行inline元素组成的LineGroup对象后的存放列表\n  }\n\n  /**\n   * 1. 封装string为Text节点\n   * 2. 打平children中的数组，变成一维\n   * 3. 合并相连的Text节点\n   * 4. 检测inline不能包含block\n   * 5. 设置parent和prev/next和ctx\n   */\n  __traverse(ctx) {\n    let list = [];\n    this.__traverseChildren(this.children, list, ctx);\n    for(let i = list.length - 1; i > 0; i--) {\n      let item = list[i];\n      if(item instanceof Text) {\n        let prev = list[i - 1];\n        if(prev instanceof Text) {\n          prev.content += item.content;\n          list.splice(i, 1);\n        }\n        else {\n          i--;\n        }\n      }\n    }\n    if(this.style.display === 'inline' && this.parent.style.display !== 'flex') {\n      for(let i = list.length - 1; i >= 0; i--) {\n        let item = list[i];\n        if(item instanceof Dom && item.style.display !== 'inline') {\n          throw new Error('inline can not contain block');\n        }\n      }\n    }\n    let prev = null;\n    list.forEach(item => {\n      item.__ctx = ctx;\n      if(prev) {\n        prev.__next = item;\n      }\n      item.__parent = this;\n      item.__prev = prev;\n    });\n    this.__children = list;\n  }\n\n  __traverseChildren(children, list, ctx) {\n    if(Array.isArray(children)) {\n      children.forEach(item => {\n        this.__traverseChildren(item, list, ctx);\n      });\n    }\n    else if(children instanceof Dom) {\n      list.push(children);\n      children.__traverse(ctx);\n    }\n    // 图形没有children\n    else if(children instanceof Geom) {\n      list.push(children);\n    }\n    // 排除掉空的文本\n    else if(!util.isNil(children)) {\n      list.push(new Text(children));\n    }\n  }\n\n  // 合并设置style，包括继承和默认值，修改一些自动值和固定值，测量所有文字的宽度\n  __initStyle() {\n    let style = this.__style;\n    // 仅支持flex/block/inline/none\n    if(!style.display || ['flex', 'block', 'inline', 'none'].indexOf(style.display) === -1) {\n      if(INLINE.hasOwnProperty(this.tagName)) {\n        style.display = 'inline';\n      }\n      else {\n        style.display = 'block';\n      }\n    }\n    // 继承父元素样式\n    let parent = this.parent;\n    if(parent) {\n      let parentStyle = parent.style;\n      ['fontSize', 'fontWeight', 'fontStyle', 'lineHeight', 'wordBreak', 'color', 'textAlign'].forEach(k => {\n        if(!style.hasOwnProperty(k) && parentStyle.hasOwnProperty(k)) {\n          style[k] = parentStyle[k];\n        }\n      });\n    }\n    // 标准化处理，默认值、简写属性\n    css.normalize(style);\n    this.children.forEach(item => {\n      if(item instanceof Dom || item instanceof Geom) {\n        item.__initStyle();\n      }\n      else {\n        item.__style = style;\n        // 文字首先测量所有字符宽度\n        item.__measure();\n      }\n    });\n  }\n\n  // 给定父宽度情况下，尝试行内放下后的剩余宽度，为负数即放不下\n  __tryLayInline(w) {\n    let { children } = this;\n    for(let i = 0; i < children.length; i++) {\n      // 当放不下时直接返回，无需继续多余的尝试计算\n      if(w < 0) {\n        return w;\n      }\n      let item = children[i];\n      if(item instanceof Dom || item instanceof Geom) {\n        w = item.__tryLayInline(w);\n      }\n      else {\n        w -= item.textWidth;\n      }\n    }\n    return w;\n  }\n\n  // 设置y偏移值，递归包括children，此举在flex行元素的child进行justify-content对齐用\n  __offsetX(diff) {\n    super.__offsetX(diff);\n    this.children.forEach(item => {\n      if(item) {\n        item.__offsetX(diff);\n      }\n    });\n  }\n\n  // 设置y偏移值，递归包括children，此举在初步确定inline布局后设置元素vertical-align用\n  __offsetY(diff) {\n    super.__offsetY(diff);\n    this.children.forEach(item => {\n      if(item) {\n        item.__offsetY(diff);\n      }\n    });\n  }\n\n  __calAutoBasis(isDirectionRow, w, h, isRecursion) {\n    let b = 0;\n    let min = 0;\n    let max = 0;\n    let { children, style } = this;\n    // 计算需考虑style的属性\n    let {\n      width,\n      height,\n      borderTopWidth,\n      borderRightWidth,\n      borderBottomWidth,\n      borderLeftWidth,\n    } = style;\n    let main = isDirectionRow ? width : height;\n    if(main.unit !== unit.AUTO) {\n      b = max += main.value;\n      // 递归时children的长度会影响flex元素的最小宽度\n      if(isRecursion) {\n        min = b;\n      }\n    }\n    // 递归children取最大值\n    children.forEach(item => {\n      if(item instanceof Dom || item instanceof Geom) {\n        let { b: b2, min: min2, max: max2 } = item.__calAutoBasis(isDirectionRow, w, h, true);\n        b = Math.max(b, b2);\n        min = Math.max(min, min2);\n        max = Math.max(max, max2);\n      }\n      else if(isDirectionRow) {\n        min = Math.max(item.charWidth, min);\n        max = Math.max(item.textWidth, max);\n      }\n      else {\n        item.__preLay({\n          x: 0,\n          y: 0,\n          w,\n          h,\n        }, true);\n        min = Math.max(min, item.height);\n        max = Math.max(max, item.height);\n      }\n    });\n    // border也得计算在内\n    if(isDirectionRow) {\n      let w = borderRightWidth.value + borderLeftWidth.value;\n      b += w;\n      max += w;\n      min += w;\n    }\n    else {\n      let h = borderTopWidth.value + borderBottomWidth.value;\n      b += h;\n      max += h;\n      min += h;\n    }\n    return { b, min, max };\n  }\n\n  // 本身block布局时计算好所有子元素的基本位置\n  __preLayBlock(data) {\n    let { x, y, w, h } = data;\n    this.__x = x;\n    this.__y = y;\n    this.__width = w;\n    let { children, style } = this;\n    let {\n      width,\n      height,\n      borderTopWidth,\n      borderRightWidth,\n      borderBottomWidth,\n      borderLeftWidth,\n    } = style;\n    // 除了auto外都是固定高度\n    let fixedHeight;\n    if(width && width.unit !== unit.AUTO) {\n      switch(width.unit) {\n        case unit.PX:\n          w = width.value;\n          break;\n      }\n    }\n    if(height && height.unit !== unit.AUTO) {\n      fixedHeight = true;\n      switch(height.unit) {\n        case unit.PX:\n          h = height.value;\n          break;\n        case unit.PERCENT:\n          h *= height.value * 0.01;\n          break;\n      }\n    }\n    // border影响x和y和尺寸\n    x += borderLeftWidth.value;\n    data.x = x;\n    y += borderTopWidth.value;\n    data.y = y;\n    w -= borderLeftWidth.value + borderRightWidth.value;\n    h -= borderTopWidth.value + borderBottomWidth.value;\n    // 递归布局，将inline的节点组成lineGroup一行\n    let lineGroup = new LineGroup(x, y);\n    children.forEach(item => {\n      if(item instanceof Dom) {\n        if(item.style.display === 'inline') {\n          // inline开头，不用考虑是否放得下直接放\n          if(x === data.x) {\n            lineGroup.add(item);\n            item.__preLayInline({\n              x,\n              y,\n              w,\n              h,\n            });\n            x += item.outerWidth;\n          }\n          else {\n            // 非开头先尝试是否放得下\n            let fw = item.__tryLayInline(w - x);\n            // 放得下继续\n            if(fw >= 0) {\n              item.__preLayInline({\n                x,\n                y,\n                w,\n              });\n            }\n            // 放不下处理之前的lineGroup，并重新开头\n            else {\n              this.lineGroups.push(lineGroup);\n              lineGroup.verticalAlign();\n              x = data.x;\n              y += lineGroup.height;\n              item.__preLayInline({\n                x: data.x,\n                y,\n                w,\n              });\n              lineGroup = new LineGroup(x, y);\n            }\n            x += item.outerWidth;\n            lineGroup.add(item);\n          }\n        }\n        else {\n          // block先处理之前可能的lineGroup\n          if(lineGroup.size) {\n            this.lineGroups.push(lineGroup);\n            lineGroup.verticalAlign();\n            y += lineGroup.height;\n            lineGroup = new LineGroup(data.x, y);\n          }\n          item.__preLay({\n            x: data.x,\n            y,\n            w,\n            h,\n          });\n          x = data.x;\n          y += item.outerHeight;\n        }\n      }\n      else if(item instanceof Geom) {\n        // 图形也是block先处理之前可能的行\n        if(lineGroup.size) {\n          this.lineGroups.push(lineGroup);\n          lineGroup.verticalAlign();\n          y += lineGroup.height;\n          lineGroup = new LineGroup(data.x, y);\n        }\n        item.__preLay({\n          x: data.x,\n          y,\n          w,\n        });\n        x = data.x;\n        y += item.outerHeight;\n      }\n      // 文字和inline类似\n      else {\n        // x开头，不用考虑是否放得下直接放\n        if(x === data.x) {\n          lineGroup.add(item);\n          item.__preLay({\n            x,\n            y,\n            w,\n            h,\n          });\n          x += item.width;\n        }\n        else {\n          // 非开头先尝试是否放得下\n          let fw = item.__tryLayInline(w - x);\n          // 放得下继续\n          if(fw >= 0) {\n            item.__preLay({\n              x,\n              y,\n              w,\n              h,\n            });\n          }\n          // 放不下处理之前的lineGroup，并重新开头\n          else {\n            this.lineGroups.push(lineGroup);\n            lineGroup.verticalAlign();\n            x = data.x;\n            y += lineGroup.height;\n            item.__preLay({\n              x: data.x,\n              y,\n              w,\n              h,\n            });\n            lineGroup = new LineGroup(x, y);\n          }\n          x += item.width;\n          lineGroup.add(item);\n        }\n      }\n    });\n    // 结束后处理可能遗留的最后的lineGroup\n    if(lineGroup.size) {\n      this.lineGroups.push(lineGroup);\n      lineGroup.verticalAlign();\n      y += lineGroup.height;\n    }\n    this.__width = w;\n    this.__height = fixedHeight ? h : y - data.y;\n  }\n\n  // 弹性布局时的计算位置\n  __preLayFlex(data) {\n    let { x, y, w, h } = data;\n    this.__x = x;\n    this.__y = y;\n    this.__width = w;\n    let { children, style } = this;\n    let {\n      width,\n      height,\n      flexDirection,\n      borderTopWidth,\n      borderRightWidth,\n      borderBottomWidth,\n      borderLeftWidth,\n      justifyContent,\n    } = style;\n    // 除了auto外都是固定高度\n    let fixedHeight;\n    if(width && width.unit !== unit.AUTO) {\n      switch(width.unit) {\n        case unit.PX:\n          w = width.value;\n          break;\n      }\n    }\n    if(height && height.unit !== unit.AUTO) {\n      fixedHeight = true;\n      switch(height.unit) {\n        case unit.PX:\n          h = height.value;\n          break;\n        case unit.PERCENT:\n          h *= height.value * 0.01;\n          break;\n      }\n    }\n    // border影响x和y和尺寸\n    x += borderLeftWidth.value;\n    data.x = x;\n    y += borderTopWidth.value;\n    data.y = y;\n    w -= borderLeftWidth.value + borderRightWidth.value;\n    h -= borderTopWidth.value + borderBottomWidth.value;\n    let isDirectionRow = flexDirection === 'row';\n    // column时height可能为auto，此时取消伸展，退化为类似block布局，但所有子元素强制block\n    if(!isDirectionRow && !fixedHeight) {\n      children.forEach(item => {\n        if(item instanceof Dom || item instanceof Geom) {\n          const { style, style: { display, flexDirection, width, height }} = item;\n          // column的flex的child如果是inline，变为block\n          if(display === 'inline') {\n            style.display = 'block';\n          }\n          // 竖向flex的child如果是横向flex，宽度自动的话要等同于父flex的宽度\n          else if(display === 'flex' && flexDirection === 'row' && width.unit === unit.AUTO) {\n            width.value = w;\n            width.unit = unit.PX;\n          }\n          item.__preLay({\n            x,\n            y,\n            w,\n            h,\n          });\n          y += item.outerHeight;\n        }\n        else {\n          item.__preLay({\n            x,\n            y,\n            w,\n            h,\n          });\n          y += item.outerHeight;\n        }\n      });\n      this.__width = w;\n      this.__height = y - data.y;\n      return;\n    }\n    // 计算伸缩基数\n    let growList = [];\n    let shrinkList = [];\n    let basisList = [];\n    let minList = [];\n    let growSum = 0;\n    let shrinkSum = 0;\n    let basisSum = 0;\n    let maxSum = 0;\n    children.forEach(item => {\n      if(item instanceof Dom || item instanceof Geom) {\n        let { flexGrow, flexShrink, flexBasis } = item.style;\n        growList.push(flexGrow);\n        shrinkList.push(flexShrink);\n        growSum += flexGrow;\n        shrinkSum += flexShrink;\n        let { b, min, max } = item.__calAutoBasis(isDirectionRow, w, h);\n        // 根据basis不同，计算方式不同\n        if(flexBasis.unit === unit.AUTO) {\n          basisList.push(max);\n          basisSum += max;\n        }\n        else if(flexBasis.unit === unit.PX) {\n          b = flexBasis.value;\n          basisList.push(b);\n          basisSum += b;\n        }\n        else if(flexBasis.unit === unit.PERCENT) {\n          b = (isDirectionRow ? w : h) * flexBasis.value;\n          basisList.push(b);\n          basisSum += b;\n        }\n        maxSum += max;\n        minList.push(min);\n      }\n      else {\n        growList.push(0);\n        shrinkList.push(1);\n        shrinkSum += 1;\n        if(isDirectionRow) {\n          basisList.push(item.textWidth);\n          basisSum += item.textWidth;\n          maxSum += item.textWidth;\n          minList.push(item.charWidth);\n        }\n        else {\n          item.__preLay({\n            x: 0,\n            y: 0,\n            w,\n            h,\n          }, true);\n          basisList.push(item.height);\n          basisSum += item.height;\n          maxSum += item.height;\n          minList.push(item.height);\n        }\n      }\n    });\n    let maxCross = 0;\n    let free = 0;\n    // 判断是否超出，决定使用grow还是shrink\n    let isOverflow = maxSum > (isDirectionRow ? w : h);\n    children.forEach((item, i) => {\n      let main;\n      let shrink = shrinkList[i];\n      let grow = growList[i];\n      // 计算主轴长度\n      if(isOverflow) {\n        let overflow = basisSum - (isDirectionRow ? w : h);\n        main = shrink ? (basisList[i] - overflow * shrink / shrinkSum) : basisList[i];\n      }\n      else {\n        free = (isDirectionRow ? w : h) - basisSum;\n        main = grow ? (basisList[i] + free * grow / growSum) : basisList[i];\n      }\n      // 主轴长度的最小值不能小于元素的最小长度，比如横向时的字符宽度\n      main = Math.max(main, minList[i]);\n      if(item instanceof Dom || item instanceof Geom) {\n        const { style, style: { display, flexDirection, width, height }} = item;\n        if(isDirectionRow) {\n          // row的flex的child如果是block，则等同于inline-block布局\n          if(display === 'block') {\n            style.display = 'inline';\n          }\n          // 横向flex的child如果是竖向flex，高度自动的话要等同于父flex的高度\n          else if(display === 'flex' && flexDirection === 'column' && fixedHeight && height.unit === unit.AUTO) {\n            height.value = h;\n            height.unit = unit.PX;\n          }\n          item.__preLay({\n            x,\n            y,\n            w: main,\n            h,\n          })\n        }\n        else {\n          // column的flex的child如果是inline，变为block\n          if(display === 'inline') {\n            style.display = 'block';\n          }\n          // 竖向flex的child如果是横向flex，宽度自动的话要等同于父flex的宽度\n          else if(display === 'flex' && flexDirection === 'row' && width.unit === unit.AUTO) {\n            width.value = w;\n            width.unit = unit.PX;\n          }\n          item.__preLay({\n            x,\n            y,\n            w,\n            h: main,\n          });\n        }\n        // 重设因伸缩而导致的主轴长度\n        if(isOverflow && shrink) {\n          if(isDirectionRow) {\n            item.__width = main;\n          }\n          else {\n            item.__height = main;\n          }\n        }\n        else if(!isOverflow && grow) {\n          if(isDirectionRow) {\n            item.__width = main;\n          }\n          else {\n            item.__height = main;\n          }\n        }\n      }\n      else {\n        item.__preLay({\n          x,\n          y,\n          w: isDirectionRow ? main : w,\n          h: isDirectionRow ? h : main,\n        });\n      }\n      if(isDirectionRow) {\n        x += item.outerWidth;\n        maxCross = Math.max(maxCross, item.outerHeight);\n      }\n      else {\n        y += item.outerHeight;\n        x = data.x;\n        maxCross = Math.max(maxCross, item.outerWidth);\n      }\n    });\n    // 主轴侧轴对齐方式\n    if(!isOverflow && growSum === 0 && free > 0) {\n      let len = children.length;\n      if(justifyContent === 'flex-end') {\n        for(let i = 0; i < len; i++) {\n          let child = children[i];\n          isDirectionRow ? child.__offsetX(free) : child.__offsetY(free);\n        }\n      }\n      else if(justifyContent === 'center') {\n        let center = free * 0.5;\n        for(let i = 0; i < len; i++) {\n          let child = children[i];\n          isDirectionRow ? child.__offsetX(center) : child.__offsetY(center);\n        }\n      }\n      else if(justifyContent === 'space-between') {\n        let between = free / (len - 1);\n        for(let i = 1; i < len; i++) {\n          let child = children[i];\n          isDirectionRow ? child.__offsetX(between * i) : child.__offsetY(between * i);\n        }\n      }\n      else if(justifyContent === 'space-around') {\n        let around = free / (len + 1);\n        for(let i = 0; i < len; i++) {\n          let child = children[i];\n          isDirectionRow ? child.__offsetX(around * (i + 1)) : child.__offsetY(around * (i + 1));\n        }\n      }\n    }\n    // 子元素侧轴伸展\n    if(isDirectionRow) {\n      // 父元素固定高度，子元素可能超过，侧轴最大长度取固定高度\n      if(fixedHeight) {\n        maxCross = h;\n      }\n      y += maxCross;\n    }\n    // 所有短侧轴的children伸张侧轴长度至相同，超过的不动，固定宽高的也不动\n    children.forEach(item => {\n      let { style } = item;\n      if(isDirectionRow) {\n        if(item.style.height.unit === unit.AUTO) {\n          item.__height = maxCross - style.borderTopWidth.value - style.borderBottomWidth.value;\n        }\n      }\n      else {\n        if(item.style.width.unit === unit.AUTO) {\n          item.__width = maxCross - style.borderRightWidth.value - style.borderLeftWidth.value;\n        }\n      }\n    });\n    this.__width = w;\n    this.__height = fixedHeight ? h : y - data.y;\n  }\n\n  // inline比较特殊，先简单顶部对其，后续还需根据vertical和lineHeight计算y偏移\n  __preLayInline(data) {\n    let { x, y, w, h } = data;\n    this.__x = x;\n    this.__y = y;\n    let maxX = x;\n    let { children, style } = this;\n    let {\n      width,\n      height,\n      borderTopWidth,\n      borderRightWidth,\n      borderBottomWidth,\n      borderLeftWidth,\n    } = style;\n    // 除了auto外都是固定高度\n    let fixedWidth;\n    let fixedHeight;\n    if(width && width.unit !== unit.AUTO) {\n      fixedWidth = true;\n      switch(width.unit) {\n        case unit.PX:\n          w = width.value;\n          break;\n      }\n    }\n    if(height && height.unit !== unit.AUTO) {\n      fixedHeight = true;\n      switch(height.unit) {\n        case unit.PX:\n          h = height.value;\n          break;\n      }\n    }\n    // border影响x和y\n    x += borderLeftWidth.value;\n    data.x = x;\n    y += borderTopWidth.value;\n    data.y = y;\n    w -= borderLeftWidth.value + borderRightWidth.value;\n    h -= borderTopWidth.value + borderBottomWidth.value;\n    // 递归布局，将inline的节点组成lineGroup一行\n    let lineGroup = new LineGroup(x, y);\n    children.forEach(item => {\n      if(item instanceof Dom) {\n        // inline开头，不用考虑是否放得下直接放\n        if(x === data.x) {\n          lineGroup.add(item);\n          item.__preLayInline({\n            x,\n            y,\n            w,\n          });\n          x += item.outerWidth;\n          maxX = Math.max(maxX, x);\n        }\n        else {\n          // 非开头先尝试是否放得下\n          let fw = item.__tryLayInline(w - x);\n          // 放得下继续\n          if(fw >= 0) {\n            item.__preLayInline({\n              x,\n              y,\n              w,\n            });\n          }\n          // 放不下处理之前的lineGroup，并重新开头\n          else {\n            this.lineGroups.push(lineGroup);\n            lineGroup.verticalAlign();\n            x = data.x;\n            y += lineGroup.height;\n            item.__preLayInline({\n              x: data.x,\n              y,\n              w,\n            });\n            lineGroup = new LineGroup(x, y);\n          }\n          x += item.outerWidth;\n          maxX = Math.max(maxX, x);\n          lineGroup.add(item);\n        }\n      }\n      // inline里的其它只有文本\n      else {\n        if(x === data.x) {\n          lineGroup.add(item);\n          item.__preLay({\n            x,\n            y,\n            w,\n            h,\n          });\n          x += item.width;\n          maxX = Math.max(maxX, x);\n        }\n        else {\n          // 非开头先尝试是否放得下\n          let fw = item.__tryLayInline(w - x);\n          // 放得下继续\n          if(fw >= 0) {\n            item.__preLay({\n              x,\n              y,\n              w,\n              h,\n            });\n          }\n          // 放不下处理之前的lineGroup，并重新开头\n          else {\n            this.lineGroups.push(lineGroup);\n            lineGroup.verticalAlign();\n            x = data.x;\n            y += lineGroup.height;\n            item.__preLay({\n              x: data.x,\n              y,\n              w,\n              h,\n            });\n            lineGroup = new LineGroup(x, y);\n          }\n          x += item.width;\n          maxX = Math.max(maxX, x);\n          lineGroup.add(item);\n        }\n      }\n    });\n    // 结束后处理可能遗留的最后的lineGroup，children为空时可能size为空\n    if(lineGroup.size) {\n      this.lineGroups.push(lineGroup);\n      lineGroup.verticalAlign();\n      y += lineGroup.height;\n    }\n    // 元素的width不能超过父元素w\n    this.__width = fixedWidth ? w : maxX - data.x;\n    this.__height = fixedHeight ? h : y - data.y;\n  }\n\n  render() {\n    super.render();\n    this.children.forEach(item => {\n      if(item) {\n        item.render();\n      }\n    });\n  }\n\n  get tagName() {\n    return this.__tagName;\n  }\n  get children() {\n    return this.__children;\n  }\n  get lineGroups() {\n    return this.__lineGroups;\n  }\n  get baseLine() {\n    let len = this.lineGroups.length;\n    if(len) {\n      let last = this.lineGroups[len - 1];\n      return last.y - this.y + last.baseLine;\n    }\n    return this.y;\n  }\n\n  static isValid(s) {\n    return TAG_NAME.hasOwnProperty(s);\n  }\n}\n\nexport default Dom;\n","import Dom from '../node/Dom';\nimport util from '../util';\nimport mode from './mode';\n\nfunction getDom(dom) {\n  if(util.isString(dom)) {\n    let o = document.querySelector(dom);\n    if(!o) {\n      throw new Error('can not find dom of selector: ' + dom);\n    }\n    return o;\n  }\n  if(!dom) {\n    throw new Error('can not find dom: ' + dom);\n  }\n  return dom;\n}\n\nfunction renderProp(k, v) {\n  let s = Array.isArray(v) ? util.joinSourceArray(v) : util.stringify(v);\n  if(k === 'className') {\n    k = 'class';\n  }\n  return ' ' + k + '=\"' + util.encodeHtml(s, true) + '\"';\n}\n\nclass CS extends Dom {\n  constructor(tagName, props, children) {\n    super(tagName, props, children);\n    this.__node = null; // 真实DOM引用\n  }\n\n  __initProps() {\n    if(this.props.width !== undefined) {\n      let value = parseInt(this.props.width);\n      if(!isNaN(value) && value > 0) {\n        this.__width = value;\n      }\n    }\n    if(this.props.height !== undefined) {\n      let value = parseInt(this.props.height);\n      if(!isNaN(value) && value > 0) {\n        this.__height = value;\n      }\n    }\n  }\n\n  __genHtml() {\n    let res = `<${this.tagName}`;\n    // 拼接处理属性\n    for(let i = 0, len = this.__props.length; i < len; i++) {\n      let item = this.__props[i];\n      res += renderProp(item[0], item[1]);\n    }\n    res += `></${this.tagName}>`;\n    return res;\n  }\n\n  appendTo(dom) {\n    dom = getDom(dom);\n    this.__initProps();\n    // 已有canvas节点\n    if(dom.nodeName.toUpperCase() === this.tagName.toUpperCase()) {\n      this.__node = dom;\n      if(this.width) {\n        dom.setAttribute('width', this.width);\n      }\n      if(this.height) {\n        dom.setAttribute('height', this.height);\n      }\n    }\n    // 没有canvas节点则生成一个新的\n    else {\n      let s = this.__genHtml();\n      dom.insertAdjacentHTML('beforeend', s);\n      let canvas = dom.querySelectorAll(this.tagName);\n      this.__node = canvas[canvas.length - 1];\n    }\n    // 没有设置width/height则采用css计算形式\n    if(!this.width || !this.height) {\n      let css = window.getComputedStyle(dom, null);\n      if(!this.width) {\n        this.__width = parseInt(css.getPropertyValue('width'));\n        dom.setAttribute('width', this.width);\n      }\n      if(!this.height) {\n        this.__height = parseInt(css.getPropertyValue('height'));\n        dom.setAttribute('height', this.height);\n      }\n    }\n    // canvas作为根节点一定是block或flex，不会是inline\n    let { style } = this;\n    if(['flex', 'block'].indexOf(style.display) === -1) {\n      style.display = 'block';\n    }\n    // 只有canvas有ctx，svg用真实dom\n    if(this.tagName === 'canvas') {\n      this.__ctx = this.__node.getContext('2d');\n      mode.setCanvas();\n    }\n    else if(this.tagName === 'svg') {\n      mode.setSvg();\n    }\n    this.__traverse(this.__ctx);\n    // canvas的宽高固定初始化\n    style.width = this.width;\n    style.height = this.height;\n    this.__initStyle();\n    this.__preLay({\n      x: 0,\n      y: 0,\n      w: this.width,\n      h: this.height,\n    });\n    this.render();\n    if(mode.isSvg()) {\n      this.__node.innerHTML = mode.html;\n    }\n  }\n\n  get node() {\n    return this.__node;\n  }\n}\n\nexport default CS;\n","import Geom from './Geom';\nimport mode from '../node/mode';\n\nclass Line extends Geom {\n  constructor(props) {\n    super('$line', props);\n    this.__start = [0, 0];\n    this.__end = [1, 1];\n    if(Array.isArray(this.props.start)) {\n      this.__start = this.props.start;\n    }\n    if(Array.isArray(this.props.end)) {\n      this.__end = this.props.end;\n    }\n  }\n\n  render() {\n    super.render();\n    let { x, y, width, height, style, ctx, start, end } = this;\n    let {\n      borderTopWidth,\n      borderLeftWidth,\n      stroke,\n      strokeWidth,\n    } = style;\n    let originX = x + borderLeftWidth.value;\n    let originY = y + borderTopWidth.value;\n    let x1 = originX + start[0] * width;\n    let y1 = originY + start[1] * height;\n    let x2 = originX + end[0] * width;\n    let y2 = originY + end[1] * height;\n    if(mode.isCanvas()) {\n      ctx.strokeStyle = stroke;\n      ctx.lineWidth = strokeWidth;\n      ctx.beginPath();\n      ctx.moveTo(x1, y1);\n      ctx.lineTo(x2, y2);\n      ctx.stroke();\n      ctx.closePath();\n    }\n    else if(mode.isSvg()) {\n      mode.appendHtml(`<line x1=\"${x1}\" y1=\"${y1}\" x2=\"${x2}\" y2=\"${y2}\" stroke-width=\"${strokeWidth}\" stroke=\"${stroke}\"/>`);\n    }\n  }\n\n  get start() {\n    return this.__start;\n  }\n  get end() {\n    return this.__end;\n  }\n}\n\nexport default Line;\n","import Geom from './Geom';\nimport mode from '../node/mode';\n\nclass Polygon extends Geom {\n  constructor(props) {\n    super('$polygon', props);\n    this.__pointList = [];\n    if(Array.isArray(this.props.pointList)) {\n      this.__pointList = this.props.pointList;\n    }\n  }\n\n  render() {\n    super.render();\n    let { x, y, width, height, style, ctx, pointList } = this;\n    let {\n      borderTopWidth,\n      borderLeftWidth,\n      stroke,\n      strokeWidth,\n    } = style;\n    let originX = x + borderLeftWidth.value;\n    let originY = y + borderTopWidth.value;\n    if(mode.isCanvas()) {\n      ctx.strokeStyle = stroke;\n      ctx.lineWidth = strokeWidth;\n      ctx.beginPath();\n      ctx.moveTo(originX + pointList[0][0] * width, originY + pointList[0][1] * height);\n      for(let i = 1, len = pointList.length; i < len; i++) {\n        let point = pointList[i];\n        ctx.lineTo(originX + point[0] * width, originY + point[1] * height);\n      }\n      ctx.stroke();\n      ctx.closePath();\n    }\n    else if(mode.isSvg()) {\n      let points = '';\n      for(let i = 0, len = pointList.length; i < len; i++) {\n        let point = pointList[i];\n        points += `${originX + point[0] * width},${originY + point[1] * height} `;\n      }\n      mode.appendHtml(`<polyline fill=\"none\" points=\"${points}\" stroke-width=\"${strokeWidth}\" stroke=\"${stroke}\"/>`);\n    }\n  }\n\n  get pointList() {\n    return this.__pointList;\n  }\n}\n\nexport default Polygon;\n","import Dom from './node/Dom';\nimport CS from './node/CS';\nimport Geom from './geom/Geom';\nimport Line from './geom/Line';\nimport Polygon from './geom/Polygon';\n\nlet karas = {\n  render(cs, dom) {\n    if(!(cs instanceof CS)) {\n      throw new Error('render root muse be canvas or svg');\n    }\n    if(dom) {\n      cs.appendTo(dom);\n    }\n    return cs;\n  },\n  createVd(tagName, props, children) {\n    if(['canvas', 'svg'].indexOf(tagName) > -1) {\n      return new CS(tagName, props, children);\n    }\n    if(Dom.isValid(tagName)) {\n      return new Dom(tagName, props, children);\n    }\n    throw new Error('can not use marker: ' + tagName);\n  },\n  createGm(tagName, props) {\n    if(Geom.isValid(tagName)) {\n      switch(tagName) {\n        case '$line':\n          return new Line(props);\n        case '$polygon':\n          return new Polygon(props);\n      }\n    }\n    throw new Error('can not use geom marker: ' + tagName);\n  },\n  createCp(tagName, props, children) {},\n};\n\nif(typeof window != 'undefined') {\n  window.karas = karas;\n}\n\nexport default karas;\n"],"names":["Node","__x","__y","__width","__height","__prev","__next","__ctx","__parent","__style","__baseLine","diff","mode","measureDom","svgHtml","setCanvas","setSvg","isCanvas","isSvg","appendHtml","s","html","measure","document","createElement","style","position","left","top","visibility","body","appendChild","arr2hash","arr","hash","i","len","length","item","Array","isArray","list","Object","keys","j","k","hash2arr","push","spread","temp","splice","Xom","tagName","props","__props","__tagName","data","display","__preLayBlock","__preLayFlex","__preLayInline","ctx","x","y","width","height","outerWidth","outerHeight","backgroundColor","borderTopWidth","borderTopColor","borderRightWidth","borderRightColor","borderBottomWidth","borderBottomColor","borderLeftWidth","borderLeftColor","x1","value","y1","beginPath","fillStyle","rect","fill","closePath","lineWidth","strokeStyle","moveTo","lineTo","stroke","y2","AUTO","PX","PERCENT","arial","lhr","car","blr","mdr","lgr","RESET","borderSizing","marginTop","marginRight","marginBottom","marginLeft","paddingTop","paddingRight","paddingBottom","paddingLeft","fontSize","fontFamily","color","fontStyle","fontWeight","lineHeight","borderTopStyle","borderRightStyle","borderBottomStyle","borderLeftStyle","verticalAlign","flexGrow","flexShrink","flexBasis","flexDirection","justifyContent","alignItem","textAlign","strokeWidth","reset","forEach","v","toString","isType","type","obj","call","isNumber","joinSourceArray","res","stringify","isNil","encodeHtml","prop","replace","undefined","util","isObject","isString","isFunction","isBoolean","isDate","parserOneBorder","direction","key","w","exec","c","indexOf","normalize","hasOwnProperty","background","bgc","flex","test","parseFloat","border","borderTop","borderRight","borderBottom","borderLeft","unit","Math","max","font","setFontStyle","getBaseLine","normal","LineBox","content","__content","fillText","css","CHAR_WIDTH_CACHE","Text","__lineBoxes","__charWidthList","__charWidth","__textWidth","charWidthList","cache","sum","char","charAt","mw","measureText","dom","innerText","window","getComputedStyle","charWidth","isVirtual","h","maxX","lineBoxes","begin","count","lineBox","slice","render","tw","__offsetX","__offsetY","n","textWidth","min","last","baseLine","LineGroup","__list","__calHeight","__calBaseLine","TAG_NAME","Geom","isDirectionRow","b","main","fixedWidth","fixedHeight","INLINE","Dom","children","__children","__lineGroups","__traverseChildren","prev","parent","Error","__traverse","parentStyle","__initStyle","__measure","__tryLayInline","isRecursion","__calAutoBasis","b2","min2","max2","__preLay","lineGroup","add","fw","lineGroups","size","growList","shrinkList","basisList","minList","growSum","shrinkSum","basisSum","maxSum","maxCross","free","isOverflow","shrink","grow","overflow","child","center","between","around","getDom","o","querySelector","renderProp","CS","__node","parseInt","isNaN","__initProps","nodeName","toUpperCase","setAttribute","__genHtml","insertAdjacentHTML","canvas","querySelectorAll","getPropertyValue","getContext","innerHTML","Line","__start","__end","start","end","originX","originY","x2","Polygon","__pointList","pointList","point","points","karas","cs","appendTo","createVd","isValid","createGm","createCp"],"mappings":"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"}