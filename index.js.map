{"version":3,"file":"index.js","sources":["src/node/Node.js","src/style/unit.js","src/style/font.js","src/style/reset.js","src/util.js","src/style/css.js","src/node/LineBox.js","src/node/Text.js","src/node/LineGroup.js","src/geom/Geom.js","src/node/Dom.js","src/node/Canvas.js","src/geom/Line.js","src/geom/Polygon.js","src/index.js"],"sourcesContent":["function arr2hash(arr) {\n  let hash = {};\n  for(let i = 0, len = arr.length; i < len; i++) {\n    let item = arr[i];\n    if(Array.isArray(item)) {\n      hash[item[0]] = item[1];\n    }\n    else {\n      for(let list = Object.keys(item), j = list.length - 1; j >= 0; j--) {\n        let k = list[j];\n        hash[k] = item[k];\n      }\n    }\n  }\n  return hash;\n}\n\nfunction hash2arr(hash) {\n  let arr = [];\n  for(let list = Object.keys(hash), i = 0, len = list.length; i < len; i++) {\n    let k = list[i];\n    arr.push([k, hash[k]]);\n  }\n  return arr;\n}\n\nfunction spread(arr) {\n  for(let i = 0, len = arr.length; i < len; i++) {\n    let item = arr[i];\n    if(!Array.isArray(item)) {\n      let temp = [];\n      for(let list = Object.keys(item), j = 0, len = list.length; j < len; j++) {\n        let k = list[j];\n        temp.push([k, item[k]]);\n      }\n      arr.splice(i, 1, ...temp);\n    }\n  }\n  return arr;\n}\n\nclass Node {\n  constructor(props) {\n    props = props || [];\n    // 构建工具中都是arr，手写可能出现hash情况\n    if(Array.isArray(props)) {\n      this.props = arr2hash(props);\n      this.__props = spread(props);\n    }\n    else {\n      this.props = props;\n      this.__props = hash2arr(props);\n    }\n    this.__x = 0;\n    this.__y = 0;\n    this.__width = 0;\n    this.__height = 0;\n    this.__prev = null;\n    this.__next = null;\n    this.__ctx = null; // canvas的context\n    this.__parent = null;\n    this.__style = this.props.style || {}; // style被解析后的k-v形式\n    this.__baseLine = 0;\n  }\n\n  get x() {\n    return this.__x;\n  }\n  get y() {\n    return this.__y;\n  }\n  get width() {\n    return this.__width;\n  }\n  get height() {\n    return this.__height;\n  }\n  get prev() {\n    return this.__prev;\n  }\n  get next() {\n    return this.__next;\n  }\n  get parent() {\n    return this.__parent;\n  }\n  get style() {\n    return this.__style;\n  }\n  get ctx() {\n    return this.__ctx;\n  }\n  get baseLine() {\n    return this.__baseLine;\n  }\n}\n\nexport default Node;\n","export default {\n  AUTO: 0,\n  PX: 1,\n  PERCENT: 2,\n};\n","'use strict';\n\nexport default {\n  arial: {\n    lhr: 1.14990234375, // 默认line-height ratio，(67+1854+434)/2048\n    car: 1.1171875, // content-area ratio，(1854+434)/2048\n    blr: 0.9052734375, // base-line ratio，1854/2048\n    mdr: 0.64599609375, // middle ratio，(1854-1062/2)/2048\n    lgr: 0.03271484375, // line-gap ratio，67/2048\n  },\n};\n","const RESET = {\n  display: 'block',\n  borderSizing: 'content-box',\n  marginTop: 0,\n  marginRight: 0,\n  marginBottom: 0,\n  marginLeft: 0,\n  paddingTop: 0,\n  paddingRight: 0,\n  paddingBottom: 0,\n  paddingLeft: 0,\n  fontSize: 16,\n  fontFamily: 'arial',\n  color: '#000',\n  fontStyle: 'normal',\n  fontWeight: 400,\n  lineHeight: 'normal',\n  borderTopWidth: 0,\n  borderRightWidth: 0,\n  borderBottomWidth: 0,\n  borderLeftWidth: 0,\n  borderTopStyle: 'solid',\n  borderRightStyle: 'solid',\n  borderBottomStyle: 'solid',\n  borderLeftStyle: 'solid',\n  verticalAlign: 'baseline',\n  width: 'auto',\n  height: 'auto',\n  flexGrow: 0,\n  flexShrink: 1,\n  flexBasis: 'auto',\n  flexDirection: 'row',\n  justifyContent: 'flex-start',\n  alignItem: 'stretch',\n  textAlign: 'left',\n  stroke: '#000',\n  strokeWidth: 1,\n};\n\nlet reset = [];\n\nObject.keys(RESET).forEach(k => {\n  let v = RESET[k];\n  reset.push({\n    k,\n    v,\n  });\n});\n\nexport default reset;\n","let toString = {}.toString;\nfunction isType(type) {\n  return function(obj) {\n    return toString.call(obj) === '[object ' + type + ']';\n  }\n}\n\nlet isNumber = isType('Number');\n\nfunction joinSourceArray(arr) {\n  var res = '';\n  for(var i = 0, len = arr.length; i < len; i++) {\n    var item = arr[i];\n    if(Array.isArray(item)) {\n      res += joinSourceArray(item);\n    }\n    else {\n      res += stringify(item);\n    }\n  }\n  return res;\n}\n\nfunction stringify(s) {\n  if(isNil(s)) {\n    return '';\n  }\n  return s.toString();\n}\n\nfunction encodeHtml(s, prop) {\n  if(prop) {\n    return s.replace(/\"/g, '&quot;');\n  }\n  return s.replace(/&/g, '&amp;').replace(/</g, '&lt;');\n}\n\nfunction isNil(v) {\n  return v === undefined || v === null;\n}\n\nlet util = {\n  isObject: isType('Object'),\n  isString: isType('String'),\n  isFunction: isType('Function'),\n  isNumber,\n  isBoolean: isType('Boolean'),\n  isDate: isType('Date'),\n  stringify,\n  joinSourceArray(arr) {\n    return joinSourceArray(arr);\n  },\n  encodeHtml,\n  isNil,\n};\n\nexport default util;\n","import unit from './unit';\nimport font from './font';\nimport reset from './reset';\nimport util from '../util';\n\nfunction parserOneBorder(style, direction) {\n  let key = `border${direction}`;\n  if(!style[key]) {\n    return;\n  }\n  let w = /\\b\\d+px\\b/i.exec(style[key]);\n  if(w) {\n    style[key + 'Width'] = w[0];\n  }\n  let s = /\\bsolid\\b/i.exec(style[key]);\n  if(s) {\n    style[key + 'Style'] = s[0];\n  }\n  let c = /#[0-9a-f]{3,6}/i.exec(style[key]);\n  if(c && [4, 7].indexOf(c[0].length) > -1) {\n    style[key + 'Color'] = c[0];\n  }\n}\n\nfunction normalize(style) {\n  // 默认reset\n  reset.forEach(item => {\n    if(!style.hasOwnProperty(item.k)) {\n      style[item.k] = item.v;\n    }\n  });\n  // 处理缩写\n  // TODO: 重复声明时优先级\n  if(style.background) {\n    let bgc = /#[0-9a-f]{3,6}/i.exec(style.background);\n    if(bgc && [4, 7].indexOf(bgc[0].length) > -1) {\n      style.backgroundColor = bgc[0];\n    }\n  }\n  if(style.flex) {\n    if(style.flex === 'none') {\n      style.flexGrow = 0;\n      style.flexShrink = 0;\n      style.flexBasis = 'auto';\n    }\n    else if(style.flex === 'auto') {\n      style.flexGrow = 1;\n      style.flexShrink = 1;\n      style.flexBasis = 'auto';\n    }\n    else if(/^[\\d.]+$/.test(style.flex)) {\n      style.flexGrow = parseFloat(style.flex);\n      style.flexShrink = 1;\n      style.flexBasis = 0;\n    }\n    else if(/^[\\d.]+px$/.test(style.flex)) {}\n    else if(/^[\\d.]+%$/.test(style.flex)) {}\n    else {\n      style.flexGrow = 0;\n      style.flexShrink = 1;\n      style.flexBasis = 'auto';\n    }\n  }\n  if(style.border) {\n    style.borderTop = style.borderRight = style.borderBottom = style.borderLeft = style.border;\n  }\n  parserOneBorder(style, 'Top');\n  parserOneBorder(style, 'Right');\n  parserOneBorder(style, 'Bottom');\n  parserOneBorder(style, 'Left');\n  // 转化不同单位值为对象标准化\n  [\n    'marginTop',\n    'marginRight',\n    'marginDown',\n    'marginLeft',\n    'paddingTop',\n    'paddingRight',\n    'paddingDown',\n    'paddingLeft',\n    'borderTopWidth',\n    'borderRightWidth',\n    'borderBottomWidth',\n    'borderLeftWidth',\n    'width',\n    'height',\n    'flexBasis',\n  ].forEach(k => {\n    let v = style[k];\n    // 编译工具前置解析优化跳出\n    if(!util.isNil(v) && v.unit) {\n      return;\n    }\n    if(v === 'auto') {\n      style[k] = {\n        unit: unit.AUTO,\n      };\n    }\n    else if(/%$/.test(v)) {\n      v = parseFloat(v) || 0;\n      if(v <= 0) {\n        style[k] = {\n          value: 0,\n          unit: unit.PX,\n        };\n      }\n      else {\n        style[k] = {\n          value: v,\n          unit: unit.PERCENT,\n        };\n      }\n    }\n    else {\n      v = parseFloat(v) || 0;\n      style[k] = {\n        value: Math.max(v, 0),\n        unit: unit.PX,\n      };\n    }\n  });\n  // 计算lineHeight为px值，最小范围\n  let lineHeight = style.lineHeight;\n  if(lineHeight === 'normal') {\n    lineHeight = {\n      value: style.fontSize * font.arial.lhr,\n      unit: unit.PX,\n    };\n  }\n  else if(/px$/.test(lineHeight)) {\n    lineHeight = parseFloat(lineHeight);\n    lineHeight = {\n      value: Math.max(style.fontSize, lineHeight),\n      unit: unit.PX,\n    };\n  }\n  // 纯数字比例\n  else {\n    lineHeight = parseFloat(lineHeight) || 'normal';\n    // 非法数字\n    if(lineHeight === 'normal') {\n      lineHeight = {\n        value: style.fontSize * font.arial.lhr,\n        unit: unit.PX,\n      };\n    }\n    else {\n      lineHeight = {\n        value: lineHeight * style.fontSize,\n        unit: unit.PX,\n      };\n    }\n  }\n  style.lineHeight = lineHeight;\n}\n\nfunction setFontStyle(style) {\n  let { fontStyle, fontWeight, fontSize, fontFamily } = style;\n  return `${fontStyle} ${fontWeight} ${fontSize}px/${fontSize}px ${fontFamily}`;\n}\n\nfunction getBaseLine(style) {\n  let normal = style.fontSize * font.arial.lhr;\n  return (style.lineHeight.value - normal) * 0.5 + style.fontSize * font.arial.blr;\n}\n\nexport default {\n  normalize,\n  setFontStyle,\n  getBaseLine,\n};\n","import css from '../style/css';\n\nclass LineBox {\n  constructor(ctx, x, y, content, style) {\n    this.__ctx = ctx;\n    this.__x = x;\n    this.__y = y;\n    this.__content = content;\n    this.__style = style;\n  }\n\n  render() {\n    this.ctx.fillStyle = this.style.color;\n    this.ctx.fillText(this.content, this.x, this.y + css.getBaseLine(this.style));\n  }\n\n  __offsetX(diff) {\n    this.__x += diff;\n  }\n\n  __offsetY(diff) {\n    this.__y += diff;\n  }\n\n  get ctx() {\n    return this.__ctx;\n  }\n  get x() {\n    return this.__x;\n  }\n  get y() {\n    return this.__y;\n  }\n  get content() {\n    return this.__content;\n  }\n  get style() {\n    return this.__style;\n  }\n  get baseLine() {\n    return css.getBaseLine(this.style);\n  }\n}\n\nexport default LineBox;\n","import Node from './Node';\nimport LineBox from './LineBox';\nimport css from '../style/css';\n\nconst CHAR_WIDTH_CACHE = {};\n\nclass Text extends Node {\n  constructor(content) {\n    super();\n    this.__content = content.toString();\n    this.__lineBoxes = [];\n    this.__charWidthList = [];\n    this.__charWidth = 0;\n    this.__textWidth = 0;\n  }\n\n  // 预先计算每个字的宽度\n  __measure() {\n    this.__charWidthList = [];\n    let { ctx, content, style, charWidthList } = this;\n    ctx.font = css.setFontStyle(style);\n    let cache = CHAR_WIDTH_CACHE[style.fontSize] = CHAR_WIDTH_CACHE[style.fontSize] || {};\n    let length = content.length;\n    let sum = 0;\n    for(let i = 0; i < length; i++) {\n      let char = content.charAt(i);\n      let mw = cache.hasOwnProperty(char) ? cache[char] : ctx.measureText(char).width;\n      charWidthList.push(mw);\n      sum += mw;\n      this.__charWidth = Math.max(this.charWidth, mw);\n    }\n    this.__textWidth = sum;\n  }\n\n  __preLay(data, isVirtual) {\n    let { x, y, w, h } = data;\n    this.__x = x;\n    this.__y = y;\n    let maxX = x;\n    let { ctx, content, style, lineBoxes, charWidthList } = this;\n    // 顺序尝试分割字符串为lineBox，形成多行\n    let begin = 0;\n    let i = 0;\n    let count = 0;\n    let length = content.length;\n    while(i < length) {\n      count += charWidthList[i];\n      if (count === w) {\n        let lineBox = new LineBox(ctx, x, y, content.slice(begin, i + 1), style);\n        lineBoxes.push(lineBox);\n        maxX = Math.max(maxX, x + count);\n        y += this.style.lineHeight.value;\n        begin = i + 1;\n        i = begin + 1;\n        count = 0;\n      }\n      else if (count > w) {\n        // 宽度不足时无法跳出循环，至少也要塞个字符形成一行\n        if(i === begin) {\n          i = begin + 1;\n        }\n        let lineBox = new LineBox(ctx, x, y, content.slice(begin, i), style);\n        lineBoxes.push(lineBox);\n        maxX = Math.max(maxX, x + count - charWidthList[i]);\n        y += this.style.lineHeight.value;\n        begin = i;\n        i = i + 1;\n        count = 0;\n      }\n      else {\n        i++;\n      }\n    }\n    if(begin < length && begin < i) {\n      let lineBox = new LineBox(ctx, x, y, content.slice(begin, i), style);\n      lineBoxes.push(lineBox);\n      maxX = Math.max(maxX, x + count);\n      y += this.style.lineHeight.value;\n    }\n    this.__width = maxX - x;\n    this.__height = y - data.y;\n    if(isVirtual) {\n      this.__lineBoxes = [];\n    }\n  }\n\n  render() {\n    this.ctx.font = css.setFontStyle(this.style);\n    this.lineBoxes.forEach(item => {\n      item.render();\n    });\n  }\n\n  __tryLayInline(w) {\n    this.ctx.font = css.setFontStyle(this.style);\n    let tw = this.ctx.measureText(this.content).width;\n    return w - tw;\n  }\n\n  __offsetX(diff) {\n    this.__x += diff;\n    this.lineBoxes.forEach(item => {\n      item.__offsetX(diff);\n    });\n  }\n\n  __offsetY(diff) {\n    this.__y += diff;\n    this.lineBoxes.forEach(item => {\n      item.__offsetY(diff);\n    });\n  }\n\n  __calMaxAndMinWidth() {\n    let n = 0;\n    this.charWidthList.forEach(item => {\n      n = Math.max(n, item);\n    });\n    return { max: this.textWidth, min: n };\n  }\n\n  get content() {\n    return this.__content;\n  }\n  set content(v) {\n    this.__content = v;\n  }\n  get lineBoxes() {\n    return this.__lineBoxes;\n  }\n  get charWidthList() {\n    return this.__charWidthList;\n  }\n  get charWidth() {\n    return this.__charWidth;\n  }\n  get textWidth() {\n    return this.__textWidth;\n  }\n  get baseLine() {\n    let last = this.lineBoxes[this.lineBoxes.length - 1];\n    return last.y - this.y + last.baseLine;\n  }\n  get outerWidth() {\n    return this.__width;\n  }\n  get outerHeight() {\n    return this.__height;\n  }\n}\n\nexport default Text;\n","class LineGroup {\n  constructor(x, y) {\n    this.__list = [];\n    this.__x = x;\n    this.__y = y;\n    this.__height = 0;\n    this.__baseLine = 0;\n  }\n\n  add(item) {\n    this.list.push(item);\n  }\n\n  __calBaseLine() {\n    let baseLine = 0;\n    this.list.forEach(item => {\n      baseLine = Math.max(baseLine, item.baseLine);\n    });\n    return baseLine;\n  }\n\n  __calHeight() {\n    let height = 0;\n    this.list.forEach(item => {\n      height = Math.max(height, item.height);\n    });\n    return height;\n  }\n\n  verticalAlign() {\n    this.__height = this.__calHeight();\n    this.__baseLine = this.__calBaseLine();\n    // 仅当有2个和以上时才需要vertical对齐调整\n    if(this.list.length > 1) {\n      this.list.forEach(item => {\n        if(item.baseLine !== this.baseLine) {\n          item.__offsetY(this.baseLine - item.baseLine);\n        }\n      });\n    }\n  }\n\n  get list() {\n    return this.__list;\n  }\n  get x() {\n    return this.__x;\n  }\n  get y() {\n    return this.__y;\n  }\n  get height() {\n    return this.__height;\n  }\n  get baseLine() {\n    return this.__baseLine;\n  }\n  get size() {\n    return this.__list.length;\n  }\n}\n\nexport default LineGroup;\n","import Node from '../node/Node';\nimport css from '../style/css';\nimport unit from '../style/unit';\n\nconst TAG_NAME = {\n  '$line': true,\n  '$polygon': true,\n};\n\nclass Geom extends Node {\n  constructor(props) {\n    super(props);\n  }\n\n  __initStyle() {\n    css.normalize(this.style);\n  }\n\n  __calAutoBasis(isDirectionRow, w, h) {\n    let b = 0;\n    let min = 0;\n    let max = 0;\n    let { style } = this;\n    // 计算需考虑style的属性\n    let {\n      width,\n      height,\n      borderTopWidth,\n      borderRightWidth,\n      borderBottomWidth,\n      borderLeftWidth,\n    } = style;\n    let main = isDirectionRow ? width : height;\n    if(main.unit !== unit.AUTO) {\n      b = max += main.value;\n    }\n    // border也得计算在内\n    if(isDirectionRow) {\n      let w = borderRightWidth.value + borderLeftWidth.value;\n      b += w;\n      max += w;\n      min += w;\n    }\n    else {\n      let h = borderTopWidth.value + borderBottomWidth.value;\n      b += h;\n      max += h;\n      min += h;\n    }\n    return { b, min, max };\n  }\n\n  __preLay(data) {\n    let { style } = this;\n    if(style.display === 'block') {\n      this.__preLayBlock(data);\n    }\n    else if(style.display === 'flex') {\n      this.__preLayFlex(data);\n    }\n    else {\n      this.__preLayInline(data);\n    }\n  }\n\n  __preLayInline(data) {\n    let { x, y, w, h } = data;\n    this.__x = x;\n    this.__y = y;\n    let { style } = this;\n    let {\n      width,\n      height,\n      borderTopWidth,\n      borderRightWidth,\n      borderBottomWidth,\n      borderLeftWidth,\n    } = style;\n    // 除了auto外都是固定高度\n    let fixedWidth;\n    let fixedHeight;\n    if(width && width.unit !== unit.AUTO) {\n      fixedWidth = true;\n      switch(width.unit) {\n        case unit.PX:\n          w = width.value;\n          break;\n      }\n    }\n    if(height && height.unit !== unit.AUTO) {\n      fixedHeight = true;\n      switch(height.unit) {\n        case unit.PX:\n          h = height.value;\n          break;\n      }\n    }\n    // border影响x和y\n    x += borderLeftWidth.value;\n    data.x = x;\n    y += borderTopWidth.value;\n    data.y = y;\n    w -= borderLeftWidth.value + borderRightWidth.value;\n    h -= borderTopWidth.value + borderBottomWidth.value;\n    // 元素的width不能超过父元素w\n    this.__width = fixedWidth ? w : x - data.x;\n    this.__height = fixedHeight ? h : y - data.y;\n  }\n\n  render() {\n    let { ctx, style, x, y, width, height } = this;\n    let {\n      backgroundColor,\n      borderTopWidth,\n      borderTopColor,\n      borderRightWidth,\n      borderRightColor,\n      borderBottomWidth,\n      borderBottomColor,\n      borderLeftWidth,\n      borderLeftColor,\n    } = style;\n    if(backgroundColor) {\n      ctx.beginPath();\n      ctx.fillStyle = backgroundColor;\n      ctx.rect(this.x, this.y, this.width, this.height);\n      ctx.fill();\n      ctx.closePath();\n    }\n    if(borderTopWidth.value) {\n      ctx.beginPath();\n      ctx.lineWidth = borderTopWidth.value;\n      ctx.strokeStyle = borderTopColor;\n      let y2 = y + borderTopWidth.value * 0.5;\n      ctx.moveTo(x + borderLeftWidth.value, y2);\n      ctx.lineTo(x + borderLeftWidth.value + width, y2);\n      ctx.stroke();\n      ctx.closePath();\n    }\n    if(borderRightWidth.value) {\n      ctx.beginPath();\n      ctx.lineWidth = borderRightWidth.value;\n      ctx.strokeStyle = borderRightColor;\n      let x2 = x + width + borderLeftWidth.value + borderRightWidth.value * 0.5;\n      ctx.moveTo(x2, y);\n      ctx.lineTo(x2, y + height + borderTopWidth.value + borderBottomWidth.value);\n      ctx.stroke();\n      ctx.closePath();\n    }\n    if(borderBottomWidth.value) {\n      ctx.beginPath();\n      ctx.lineWidth = borderBottomWidth.value;\n      ctx.strokeStyle = borderBottomColor;\n      let y2 = y + height + borderTopWidth.value + borderBottomWidth.value * 0.5;\n      ctx.moveTo(x + borderLeftWidth.value, y2);\n      ctx.lineTo(x + borderLeftWidth.value + width, y2);\n      ctx.stroke();\n      ctx.closePath();\n    }\n    if(borderLeftWidth.value) {\n      ctx.beginPath();\n      ctx.lineWidth = borderLeftWidth.value;\n      ctx.strokeStyle = borderLeftColor;\n      ctx.moveTo(x + borderLeftWidth.value * 0.5, y);\n      ctx.lineTo(x + borderLeftWidth.value * 0.5, y + height + borderTopWidth.value + borderBottomWidth.value);\n      ctx.stroke();\n      ctx.closePath();\n    }\n  }\n\n  get tagName() {\n    return this.__tagName;\n  }\n  get baseLine() {\n    return 0;\n  }\n  get outerWidth() {\n    let { style: { borderLeftWidth, borderRightWidth } } = this;\n    return this.width + borderLeftWidth.value + borderRightWidth.value;\n  }\n  get outerHeight() {\n    let { style: { borderTopWidth, borderBottomWidth } } = this;\n    return this.height + borderTopWidth.value + borderBottomWidth.value;\n  }\n\n  static isValid(s) {\n    return TAG_NAME.hasOwnProperty(s);\n  }\n}\n\nexport default Geom;\n","import Node from './Node';\nimport Text from './Text';\nimport LineGroup from './LineGroup';\nimport Geom from '../geom/Geom';\nimport util from '../util';\nimport css from '../style/css';\nimport unit from '../style/unit';\n\nconst TAG_NAME = {\n  'div': true,\n  'span': true,\n};\nconst INLINE = {\n  'span': true,\n};\n\nclass Dom extends Node {\n  constructor(tagName, props, children) {\n    super(props);\n    this.__tagName = tagName;\n    this.__children = children;\n    this.__lineGroups = []; // 一行inline元素组成的LineGroup对象后的存放列表\n  }\n\n  /**\n   * 1. 封装string为Text节点\n   * 2. 打平children中的数组，变成一维\n   * 3. 合并相连的Text节点\n   * 4. 检测inline不能包含block\n   * 5. 设置parent和prev/next和ctx\n   */\n  __traverse(ctx) {\n    let list = [];\n    this.__traverseChildren(this.children, list, ctx);\n    for(let i = list.length - 1; i > 0; i--) {\n      let item = list[i];\n      if(item instanceof Text) {\n        let prev = list[i - 1];\n        if(prev instanceof Text) {\n          prev.content += item.content;\n          list.splice(i, 1);\n        }\n        else {\n          i--;\n        }\n      }\n    }\n    if(this.style.display === 'inline' && this.parent.style.display !== 'flex') {\n      for(let i = list.length - 1; i >= 0; i--) {\n        let item = list[i];\n        if(item instanceof Dom && item.style.display !== 'inline') {\n          throw new Error('inline can not contain block');\n        }\n      }\n    }\n    let prev = null;\n    list.forEach(item => {\n      item.__ctx = ctx;\n      if(prev) {\n        prev.__next = item;\n      }\n      item.__parent = this;\n      item.__prev = prev;\n    });\n    this.__children = list;\n  }\n\n  __traverseChildren(children, list, ctx) {\n    if(Array.isArray(children)) {\n      children.forEach(item => {\n        this.__traverseChildren(item, list, ctx);\n      });\n    }\n    else if(children instanceof Dom) {\n      list.push(children);\n      children.__traverse(ctx);\n    }\n    // 图形没有children\n    else if(children instanceof Geom) {\n      list.push(children);\n    }\n    // 排除掉空的文本\n    else if(!util.isNil(children)) {\n      list.push(new Text(children));\n    }\n  }\n\n  // 合并设置style，包括继承和默认值，修改一些自动值和固定值，测量所有文字的宽度\n  __initStyle() {\n    let style = this.__style;\n    // 仅支持flex/block/inline\n    if(!style.display || ['flex', 'block', 'inline'].indexOf(style.display) === -1) {\n      if(INLINE.hasOwnProperty(this.tagName)) {\n        style.display = 'inline';\n      }\n      else {\n        style.display = 'block';\n      }\n    }\n    // 继承父元素样式\n    let parent = this.parent;\n    if(parent) {\n      let parentStyle = parent.style;\n      ['fontSize', 'fontWeight', 'fontStyle', 'lineHeight', 'wordBreak', 'color', 'textAlign'].forEach(k => {\n        if(!style.hasOwnProperty(k) && parentStyle.hasOwnProperty(k)) {\n          style[k] = parentStyle[k];\n        }\n      });\n    }\n    // 标准化处理，默认值、简写属性\n    css.normalize(style);\n    this.children.forEach(item => {\n      if(item instanceof Dom) {\n        item.__initStyle();\n      }\n      else if(item instanceof Geom) {\n        item.__initStyle();\n      }\n      else {\n        item.__style = style;\n        // 文字首先测量所有字符宽度\n        item.__measure();\n      }\n    });\n  }\n\n  // 给定父宽度情况下，尝试行内放下后的剩余宽度，为负数即放不下\n  __tryLayInline(w) {\n    let { children } = this;\n    for(let i = 0; i < children.length; i++) {\n      // 当放不下时直接返回，无需继续多余的尝试计算\n      if(w < 0) {\n        return w;\n      }\n      let item = children[i];\n      if(item instanceof Dom || item instanceof Geom) {\n        w = item.__tryLayInline(w);\n      }\n      else {\n        w -= item.textWidth;\n      }\n    }\n    return w;\n  }\n\n  // 设置y偏移值，递归包括children，此举在flex行元素的child进行justify-content对齐用\n  __offsetX(diff) {\n    this.__x += diff;\n    this.children.forEach(item => {\n      if(item) {\n        item.__offsetX(diff);\n      }\n    });\n  }\n\n  // 设置y偏移值，递归包括children，此举在初步确定inline布局后设置元素vertical-align用\n  __offsetY(diff) {\n    this.__y += diff;\n    this.children.forEach(item => {\n      if(item) {\n        item.__offsetY(diff);\n      }\n    });\n  }\n\n  __calAutoBasis(isDirectionRow, w, h, isRecursion) {\n    let b = 0;\n    let min = 0;\n    let max = 0;\n    let { children, style } = this;\n    // 计算需考虑style的属性\n    let {\n      width,\n      height,\n      borderTopWidth,\n      borderRightWidth,\n      borderBottomWidth,\n      borderLeftWidth,\n    } = style;\n    let main = isDirectionRow ? width : height;\n    if(main.unit !== unit.AUTO) {\n      b = max += main.value;\n      // 递归时children的长度会影响flex元素的最小宽度\n      if(isRecursion) {\n        min = b;\n      }\n    }\n    // 递归children取最大值\n    children.forEach(item => {\n      if(item instanceof Dom || item instanceof Geom) {\n        let { b: b2, min: min2, max: max2 } = item.__calAutoBasis(isDirectionRow, w, h, true);\n        b = Math.max(b, b2);\n        min = Math.max(min, min2);\n        max = Math.max(max, max2);\n      }\n      else if(isDirectionRow) {\n        min = Math.max(item.charWidth, min);\n        max = Math.max(item.textWidth, max);\n      }\n      else {\n        item.__preLay({\n          x: 0,\n          y: 0,\n          w,\n          h,\n        }, true);\n        min = Math.max(min, item.height);\n        max = Math.max(max, item.height);\n      }\n    });\n    // border也得计算在内\n    if(isDirectionRow) {\n      let w = borderRightWidth.value + borderLeftWidth.value;\n      b += w;\n      max += w;\n      min += w;\n    }\n    else {\n      let h = borderTopWidth.value + borderBottomWidth.value;\n      b += h;\n      max += h;\n      min += h;\n    }\n    return { b, min, max };\n  }\n\n  __preLay(data) {\n    let { style } = this;\n    if(style.display === 'block') {\n      this.__preLayBlock(data);\n    }\n    else if(style.display === 'flex') {\n      this.__preLayFlex(data);\n    }\n    else {\n      this.__preLayInline(data);\n    }\n  }\n\n  // 本身block布局时计算好所有子元素的基本位置\n  __preLayBlock(data) {\n    let { x, y, w, h } = data;\n    this.__x = x;\n    this.__y = y;\n    this.__width = w;\n    let { children, style } = this;\n    let {\n      width,\n      height,\n      borderTopWidth,\n      borderRightWidth,\n      borderBottomWidth,\n      borderLeftWidth,\n    } = style;\n    // 除了auto外都是固定高度\n    let fixedHeight;\n    if(width && width.unit !== unit.AUTO) {\n      switch(width.unit) {\n        case unit.PX:\n          w = width.value;\n          break;\n      }\n    }\n    if(height && height.unit !== unit.AUTO) {\n      fixedHeight = true;\n      switch(height.unit) {\n        case unit.PX:\n          h = height.value;\n          break;\n        case unit.PERCENT:\n          h *= height.value * 0.01;\n          break;\n      }\n    }\n    // border影响x和y和尺寸\n    x += borderLeftWidth.value;\n    data.x = x;\n    y += borderTopWidth.value;\n    data.y = y;\n    w -= borderLeftWidth.value + borderRightWidth.value;\n    h -= borderTopWidth.value + borderBottomWidth.value;\n    // 递归布局，将inline的节点组成lineGroup一行\n    let lineGroup = new LineGroup(x, y);\n    children.forEach(item => {\n      if(item instanceof Dom) {\n        if(item.style.display === 'inline') {\n          // inline开头，不用考虑是否放得下直接放\n          if(x === data.x) {\n            lineGroup.add(item);\n            item.__preLayInline({\n              x,\n              y,\n              w,\n              h,\n            });\n            x += item.outerWidth;\n          }\n          else {\n            // 非开头先尝试是否放得下\n            let fw = item.__tryLayInline(w - x);\n            // 放得下继续\n            if(fw >= 0) {\n              item.__preLayInline({\n                x,\n                y,\n                w,\n              });\n            }\n            // 放不下处理之前的lineGroup，并重新开头\n            else {\n              this.lineGroups.push(lineGroup);\n              lineGroup.verticalAlign();\n              x = data.x;\n              y += lineGroup.height;\n              item.__preLayInline({\n                x: data.x,\n                y,\n                w,\n              });\n              lineGroup = new LineGroup(x, y);\n            }\n            x += item.outerWidth;\n            lineGroup.add(item);\n          }\n        }\n        else {\n          // block先处理之前可能的lineGroup\n          if(lineGroup.size) {\n            this.lineGroups.push(lineGroup);\n            lineGroup.verticalAlign();\n            y += lineGroup.height;\n            lineGroup = new LineGroup(data.x, y);\n          }\n          item.__preLay({\n            x: data.x,\n            y,\n            w,\n            h,\n          });\n          x = data.x;\n          y += item.outerHeight;\n        }\n      }\n      else if(item instanceof Geom) {\n        // 图形也是block先处理之前可能的行\n        if(lineGroup.size) {\n          this.lineGroups.push(lineGroup);\n          lineGroup.verticalAlign();\n          y += lineGroup.height;\n          lineGroup = new LineGroup(data.x, y);\n        }\n        item.__preLay({\n          x: data.x,\n          y,\n          w,\n        });\n        x = data.x;\n        y += item.outerHeight;\n      }\n      // 文字和inline类似\n      else {\n        // x开头，不用考虑是否放得下直接放\n        if(x === data.x) {\n          lineGroup.add(item);\n          item.__preLay({\n            x,\n            y,\n            w,\n            h,\n          });\n          x += item.width;\n        }\n        else {\n          // 非开头先尝试是否放得下\n          let fw = item.__tryLayInline(w - x);\n          // 放得下继续\n          if(fw >= 0) {\n            item.__preLay({\n              x,\n              y,\n              w,\n              h,\n            });\n          }\n          // 放不下处理之前的lineGroup，并重新开头\n          else {\n            this.lineGroups.push(lineGroup);\n            lineGroup.verticalAlign();\n            x = data.x;\n            y += lineGroup.height;\n            item.__preLay({\n              x: data.x,\n              y,\n              w,\n              h,\n            });\n            lineGroup = new LineGroup(x, y);\n          }\n          x += item.width;\n          lineGroup.add(item);\n        }\n      }\n    });\n    // 结束后处理可能遗留的最后的lineGroup\n    if(lineGroup.size) {\n      this.lineGroups.push(lineGroup);\n      lineGroup.verticalAlign();\n      y += lineGroup.height;\n    }\n    this.__width = w;\n    this.__height = fixedHeight ? h : y - data.y;\n  }\n\n  // 弹性布局时的计算位置\n  __preLayFlex(data) {\n    let { x, y, w, h } = data;\n    this.__x = x;\n    this.__y = y;\n    this.__width = w;\n    let { children, style } = this;\n    let {\n      width,\n      height,\n      flexDirection,\n      borderTopWidth,\n      borderRightWidth,\n      borderBottomWidth,\n      borderLeftWidth,\n      justifyContent,\n    } = style;\n    // 除了auto外都是固定高度\n    let fixedHeight;\n    if(width && width.unit !== unit.AUTO) {\n      switch(width.unit) {\n        case unit.PX:\n          w = width.value;\n          break;\n      }\n    }\n    if(height && height.unit !== unit.AUTO) {\n      fixedHeight = true;\n      switch(height.unit) {\n        case unit.PX:\n          h = height.value;\n          break;\n        case unit.PERCENT:\n          h *= height.value * 0.01;\n          break;\n      }\n    }\n    // border影响x和y和尺寸\n    x += borderLeftWidth.value;\n    data.x = x;\n    y += borderTopWidth.value;\n    data.y = y;\n    w -= borderLeftWidth.value + borderRightWidth.value;\n    h -= borderTopWidth.value + borderBottomWidth.value;\n    let isDirectionRow = flexDirection === 'row';\n    // column时height可能为auto，此时取消伸展，退化为类似block布局，但所有子元素强制block\n    if(!isDirectionRow && !fixedHeight) {\n      children.forEach(item => {\n        if(item instanceof Dom || item instanceof Geom) {\n          const { style, style: { display, flexDirection, width, height }} = item;\n          // column的flex的child如果是inline，变为block\n          if(display === 'inline') {\n            style.display = 'block';\n          }\n          // 竖向flex的child如果是横向flex，宽度自动的话要等同于父flex的宽度\n          else if(display === 'flex' && flexDirection === 'row' && width.unit === unit.AUTO) {\n            width.value = w;\n            width.unit = unit.PX;\n          }\n          item.__preLay({\n            x,\n            y,\n            w,\n            h,\n          });\n          y += item.outerHeight;\n        }\n        else {\n          item.__preLay({\n            x,\n            y,\n            w,\n            h,\n          });\n          y += item.outerHeight;\n        }\n      });\n      this.__width = w;\n      this.__height = y - data.y;\n      return;\n    }\n    // 计算伸缩基数\n    let growList = [];\n    let shrinkList = [];\n    let basisList = [];\n    let minList = [];\n    let growSum = 0;\n    let shrinkSum = 0;\n    let basisSum = 0;\n    let maxSum = 0;\n    children.forEach(item => {\n      if(item instanceof Dom || item instanceof Geom) {\n        let { flexGrow, flexShrink, flexBasis } = item.style;\n        growList.push(flexGrow);\n        shrinkList.push(flexShrink);\n        growSum += flexGrow;\n        shrinkSum += flexShrink;\n        let { b, min, max } = item.__calAutoBasis(isDirectionRow, w, h);\n        // 根据basis不同，计算方式不同\n        if(flexBasis.unit === unit.AUTO) {\n          basisList.push(max);\n          basisSum += max;\n        }\n        else if(flexBasis.unit === unit.PX) {\n          b = flexBasis.value;\n          basisList.push(b);\n          basisSum += b;\n        }\n        else if(flexBasis.unit === unit.PERCENT) {\n          b = (isDirectionRow ? w : h) * flexBasis.value;\n          basisList.push(b);\n          basisSum += b;\n        }\n        maxSum += max;\n        minList.push(min);\n      }\n      else {\n        growList.push(0);\n        shrinkList.push(1);\n        shrinkSum += 1;\n        if(isDirectionRow) {\n          basisList.push(item.textWidth);\n          basisSum += item.textWidth;\n          maxSum += item.textWidth;\n          minList.push(item.charWidth);\n        }\n        else {\n          item.__preLay({\n            x: 0,\n            y: 0,\n            w,\n            h,\n          }, true);\n          basisList.push(item.height);\n          basisSum += item.height;\n          maxSum += item.height;\n          minList.push(item.height);\n        }\n      }\n    });\n    let maxCross = 0;\n    let free = 0;\n    // 判断是否超出，决定使用grow还是shrink\n    let isOverflow = maxSum > (isDirectionRow ? w : h);\n    children.forEach((item, i) => {\n      let main;\n      let shrink = shrinkList[i];\n      let grow = growList[i];\n      // 计算主轴长度\n      if(isOverflow) {\n        let overflow = basisSum - (isDirectionRow ? w : h);\n        main = shrink ? (basisList[i] - overflow * shrink / shrinkSum) : basisList[i];\n      }\n      else {\n        free = (isDirectionRow ? w : h) - basisSum;\n        main = grow ? (basisList[i] + free * grow / growSum) : basisList[i];\n      }\n      // 主轴长度的最小值不能小于元素的最小长度，比如横向时的字符宽度\n      main = Math.max(main, minList[i]);\n      if(item instanceof Dom || item instanceof Geom) {\n        const { style, style: { display, flexDirection, width, height }} = item;\n        if(isDirectionRow) {\n          // row的flex的child如果是block，则等同于inline-block布局\n          if(display === 'block') {\n            style.display = 'inline';\n          }\n          // 横向flex的child如果是竖向flex，高度自动的话要等同于父flex的高度\n          else if(display === 'flex' && flexDirection === 'column' && fixedHeight && height.unit === unit.AUTO) {\n            height.value = h;\n            height.unit = unit.PX;\n          }\n          item.__preLay({\n            x,\n            y,\n            w: main,\n            h,\n          })\n        }\n        else {\n          // column的flex的child如果是inline，变为block\n          if(display === 'inline') {\n            style.display = 'block';\n          }\n          // 竖向flex的child如果是横向flex，宽度自动的话要等同于父flex的宽度\n          else if(display === 'flex' && flexDirection === 'row' && width.unit === unit.AUTO) {\n            width.value = w;\n            width.unit = unit.PX;\n          }\n          item.__preLay({\n            x,\n            y,\n            w,\n            h: main,\n          });\n        }\n        // 重设因伸缩而导致的主轴长度\n        if(isOverflow && shrink) {\n          if(isDirectionRow) {\n            item.__width = main;\n          }\n          else {\n            item.__height = main;\n          }\n        }\n        else if(!isOverflow && grow) {\n          if(isDirectionRow) {\n            item.__width = main;\n          }\n          else {\n            item.__height = main;\n          }\n        }\n      }\n      else {\n        item.__preLay({\n          x,\n          y,\n          w: isDirectionRow ? main : w,\n          h: isDirectionRow ? h : main,\n        });\n      }\n      if(isDirectionRow) {\n        x += item.outerWidth;\n        maxCross = Math.max(maxCross, item.outerHeight);\n      }\n      else {\n        y += item.outerHeight;\n        x = data.x;\n        maxCross = Math.max(maxCross, item.outerWidth);\n      }\n    });\n    // 主轴侧轴对齐方式\n    if(!isOverflow && growSum === 0 && free > 0) {\n      let len = children.length;\n      if(justifyContent === 'flex-end') {\n        for(let i = 0; i < len; i++) {\n          let child = children[i];\n          isDirectionRow ? child.__offsetX(free) : child.__offsetY(free);\n        }\n      }\n      else if(justifyContent === 'center') {\n        let center = free * 0.5;\n        for(let i = 0; i < len; i++) {\n          let child = children[i];\n          isDirectionRow ? child.__offsetX(center) : child.__offsetY(center);\n        }\n      }\n      else if(justifyContent === 'space-between') {\n        let between = free / (len - 1);\n        for(let i = 1; i < len; i++) {\n          let child = children[i];\n          isDirectionRow ? child.__offsetX(between * i) : child.__offsetY(between * i);\n        }\n      }\n      else if(justifyContent === 'space-around') {\n        let around = free / (len + 1);\n        for(let i = 0; i < len; i++) {\n          let child = children[i];\n          isDirectionRow ? child.__offsetX(around * (i + 1)) : child.__offsetY(around * (i + 1));\n        }\n      }\n    }\n    // 子元素侧轴伸展\n    if(isDirectionRow) {\n      // 父元素固定高度，子元素可能超过，侧轴最大长度取固定高度\n      if(fixedHeight) {\n        maxCross = h;\n      }\n      y += maxCross;\n    }\n    // 所有短侧轴的children伸张侧轴长度至相同，超过的不动，固定宽高的也不动\n    children.forEach(item => {\n      let { style } = item;\n      if(isDirectionRow) {\n        if(item.style.height.unit === unit.AUTO) {\n          item.__height = maxCross - style.borderTopWidth.value - style.borderBottomWidth.value;\n        }\n      }\n      else {\n        if(item.style.width.unit === unit.AUTO) {\n          item.__width = maxCross - style.borderRightWidth.value - style.borderLeftWidth.value;\n        }\n      }\n    });\n    this.__width = w;\n    this.__height = fixedHeight ? h : y - data.y;\n  }\n\n  // inline比较特殊，先简单顶部对其，后续还需根据vertical和lineHeight计算y偏移\n  __preLayInline(data) {\n    let { x, y, w, h } = data;\n    this.__x = x;\n    this.__y = y;\n    let maxX = x;\n    let { children, style } = this;\n    let {\n      width,\n      height,\n      borderTopWidth,\n      borderRightWidth,\n      borderBottomWidth,\n      borderLeftWidth,\n    } = style;\n    // 除了auto外都是固定高度\n    let fixedWidth;\n    let fixedHeight;\n    if(width && width.unit !== unit.AUTO) {\n      fixedWidth = true;\n      switch(width.unit) {\n        case unit.PX:\n          w = width.value;\n          break;\n      }\n    }\n    if(height && height.unit !== unit.AUTO) {\n      fixedHeight = true;\n      switch(height.unit) {\n        case unit.PX:\n          h = height.value;\n          break;\n      }\n    }\n    // border影响x和y\n    x += borderLeftWidth.value;\n    data.x = x;\n    y += borderTopWidth.value;\n    data.y = y;\n    w -= borderLeftWidth.value + borderRightWidth.value;\n    h -= borderTopWidth.value + borderBottomWidth.value;\n    // 递归布局，将inline的节点组成lineGroup一行\n    let lineGroup = new LineGroup(x, y);\n    children.forEach(item => {\n      if(item instanceof Dom) {\n        // inline开头，不用考虑是否放得下直接放\n        if(x === data.x) {\n          lineGroup.add(item);\n          item.__preLayInline({\n            x,\n            y,\n            w,\n          });\n          x += item.outerWidth;\n          maxX = Math.max(maxX, x);\n        }\n        else {\n          // 非开头先尝试是否放得下\n          let fw = item.__tryLayInline(w - x);\n          // 放得下继续\n          if(fw >= 0) {\n            item.__preLayInline({\n              x,\n              y,\n              w,\n            });\n          }\n          // 放不下处理之前的lineGroup，并重新开头\n          else {\n            this.lineGroups.push(lineGroup);\n            lineGroup.verticalAlign();\n            x = data.x;\n            y += lineGroup.height;\n            item.__preLayInline({\n              x: data.x,\n              y,\n              w,\n            });\n            lineGroup = new LineGroup(x, y);\n          }\n          x += item.outerWidth;\n          maxX = Math.max(maxX, x);\n          lineGroup.add(item);\n        }\n      }\n      // inline里的其它只有文本\n      else {\n        if(x === data.x) {\n          lineGroup.add(item);\n          item.__preLay({\n            x,\n            y,\n            w,\n            h,\n          });\n          x += item.width;\n          maxX = Math.max(maxX, x);\n        }\n        else {\n          // 非开头先尝试是否放得下\n          let fw = item.__tryLayInline(w - x);\n          // 放得下继续\n          if(fw >= 0) {\n            item.__preLay({\n              x,\n              y,\n              w,\n              h,\n            });\n          }\n          // 放不下处理之前的lineGroup，并重新开头\n          else {\n            this.lineGroups.push(lineGroup);\n            lineGroup.verticalAlign();\n            x = data.x;\n            y += lineGroup.height;\n            item.__preLay({\n              x: data.x,\n              y,\n              w,\n              h,\n            });\n            lineGroup = new LineGroup(x, y);\n          }\n          x += item.width;\n          maxX = Math.max(maxX, x);\n          lineGroup.add(item);\n        }\n      }\n    });\n    // 结束后处理可能遗留的最后的lineGroup，children为空时可能size为空\n    if(lineGroup.size) {\n      this.lineGroups.push(lineGroup);\n      lineGroup.verticalAlign();\n      y += lineGroup.height;\n    }\n    // 元素的width不能超过父元素w\n    this.__width = fixedWidth ? w : maxX - data.x;\n    this.__height = fixedHeight ? h : y - data.y;\n  }\n\n  render() {\n    let { ctx, style, children, x, y, width, height } = this;\n    let {\n      backgroundColor,\n      borderTopWidth,\n      borderTopColor,\n      borderRightWidth,\n      borderRightColor,\n      borderBottomWidth,\n      borderBottomColor,\n      borderLeftWidth,\n      borderLeftColor,\n    } = style;\n    if(backgroundColor) {\n      ctx.beginPath();\n      ctx.fillStyle = backgroundColor;\n      ctx.rect(this.x, this.y, this.width, this.height);\n      ctx.fill();\n      ctx.closePath();\n    }\n    if(borderTopWidth.value) {\n      ctx.beginPath();\n      ctx.lineWidth = borderTopWidth.value;\n      ctx.strokeStyle = borderTopColor;\n      let y2 = y + borderTopWidth.value * 0.5;\n      ctx.moveTo(x + borderLeftWidth.value, y2);\n      ctx.lineTo(x + borderLeftWidth.value + width, y2);\n      ctx.stroke();\n      ctx.closePath();\n    }\n    if(borderRightWidth.value) {\n      ctx.beginPath();\n      ctx.lineWidth = borderRightWidth.value;\n      ctx.strokeStyle = borderRightColor;\n      let x2 = x + width + borderLeftWidth.value + borderRightWidth.value * 0.5;\n      ctx.moveTo(x2, y);\n      ctx.lineTo(x2, y + height + borderTopWidth.value + borderBottomWidth.value);\n      ctx.stroke();\n      ctx.closePath();\n    }\n    if(borderBottomWidth.value) {\n      ctx.beginPath();\n      ctx.lineWidth = borderBottomWidth.value;\n      ctx.strokeStyle = borderBottomColor;\n      let y2 = y + height + borderTopWidth.value + borderBottomWidth.value * 0.5;\n      ctx.moveTo(x + borderLeftWidth.value, y2);\n      ctx.lineTo(x + borderLeftWidth.value + width, y2);\n      ctx.stroke();\n      ctx.closePath();\n    }\n    if(borderLeftWidth.value) {\n      ctx.beginPath();\n      ctx.lineWidth = borderLeftWidth.value;\n      ctx.strokeStyle = borderLeftColor;\n      ctx.moveTo(x + borderLeftWidth.value * 0.5, y);\n      ctx.lineTo(x + borderLeftWidth.value * 0.5, y + height + borderTopWidth.value + borderBottomWidth.value);\n      ctx.stroke();\n      ctx.closePath();\n    }\n    children.forEach(item => {\n      if(item) {\n        item.render();\n      }\n    });\n  }\n\n  get tagName() {\n    return this.__tagName;\n  }\n  get children() {\n    return this.__children;\n  }\n  get lineGroups() {\n    return this.__lineGroups;\n  }\n  get baseLine() {\n    let len = this.lineGroups.length;\n    if(len) {\n      let last = this.lineGroups[len - 1];\n      return last.y - this.y + last.baseLine;\n    }\n    return this.y;\n  }\n  get outerWidth() {\n    let { style: { borderLeftWidth, borderRightWidth } } = this;\n    return this.width + borderLeftWidth.value + borderRightWidth.value;\n  }\n  get outerHeight() {\n    let { style: { borderTopWidth, borderBottomWidth } } = this;\n    return this.height + borderTopWidth.value + borderBottomWidth.value;\n  }\n\n  static isValid(s) {\n    return TAG_NAME.hasOwnProperty(s);\n  }\n}\n\nexport default Dom;\n","import Dom from './Dom';\nimport util from '../util';\n\nfunction getDom(dom) {\n  if(util.isString(dom)) {\n    let o = document.querySelector(dom);\n    if(!o) {\n      throw new Error('can not find dom of selector: ' + dom);\n    }\n    return o;\n  }\n  if(!dom) {\n    throw new Error('can not find dom: ' + dom);\n  }\n  return dom;\n}\n\nfunction renderProp(k, v) {\n  let s = Array.isArray(v) ? util.joinSourceArray(v) : util.stringify(v);\n  if(k === 'className') {\n    k = 'class';\n  }\n  return ' ' + k + '=\"' + util.encodeHtml(s, true) + '\"';\n}\n\nclass Canvas extends Dom {\n  constructor(props, children) {\n    super('canvas', props, children);\n    this.__node = null; // 真实DOM引用\n  }\n  initProps() {\n    if(this.props.width !== undefined) {\n      let value = parseInt(this.props.width);\n      if(!isNaN(value) && value > 0) {\n        this.__width = value;\n      }\n    }\n    if(this.props.height !== undefined) {\n      let value = parseInt(this.props.height);\n      if(!isNaN(value) && value > 0) {\n        this.__height = value;\n      }\n    }\n  }\n  genHtml() {\n    let res = '<canvas';\n    // 拼接处理属性\n    for(let i = 0, len = this.__props.length; i < len; i++) {\n      let item = this.__props[i];\n      res += renderProp(item[0], item[1]);\n    }\n    res += '></canvas>';\n    return res;\n  }\n  appendTo(dom) {\n    dom = getDom(dom);\n    this.initProps();\n    // 已有canvas节点\n    if(dom.nodeName.toUpperCase() === 'CANVAS') {\n      this.__node = dom;\n      if(this.width) {\n        dom.setAttribute('width', this.width);\n      }\n      if(this.height) {\n        dom.setAttribute('height', this.height);\n      }\n    }\n    // 没有canvas节点则生成一个新的\n    else {\n      let s = this.genHtml();\n      dom.insertAdjacentHTML('beforeend', s);\n      let canvas = dom.querySelectorAll('canvas');\n      this.__node = canvas[canvas.length - 1];\n    }\n    // 没有设置width/height则采用css计算形式\n    if(!this.width || !this.height) {\n      let css = window.getComputedStyle(dom, null);\n      if(!this.width) {\n        this.__width = parseInt(css.getPropertyValue('width'));\n        dom.setAttribute('width', this.width);\n      }\n      if(!this.height) {\n        this.__height = parseInt(css.getPropertyValue('height'));\n        dom.setAttribute('height', this.height);\n      }\n    }\n    // canvas作为根节点一定是block或flex，不会是inline\n    let { style } = this;\n    if(['flex', 'block', 'none'].indexOf(style.display) === -1) {\n      style.display = 'block';\n    }\n    this.__ctx = this.__node.getContext('2d');\n    this.__traverse(this.__ctx);\n    // canvas的宽高固定初始化\n    style.width = this.width;\n    style.height = this.height;\n    this.__initStyle();\n    this.__preLay({\n      x: 0,\n      y: 0,\n      w: this.width,\n      h: this.height,\n    });\n    this.render();\n  }\n\n  get node() {\n    return this.__node;\n  }\n}\n\nexport default Canvas;\n","import Geom from './Geom';\n\nclass Line extends Geom {\n  constructor(props) {\n    super(props);\n    this.__tagName = '$line';\n    this.__start = [0, 0];\n    this.__end = [1, 1];\n    if(Array.isArray(this.props.start)) {\n      this.__start = this.props.start;\n    }\n    if(Array.isArray(this.props.end)) {\n      this.__end = this.props.end;\n    }\n  }\n\n  render() {\n    super.render();\n    let { x, y, width, height, style, ctx, start, end } = this;\n    let {\n      borderTopWidth,\n      borderLeftWidth,\n      stroke,\n      strokeWidth,\n    } = style;\n    let originX = x + borderLeftWidth.value;\n    let originY = y + borderTopWidth.value;\n    ctx.strokeStyle = stroke;\n    ctx.lineWidth = strokeWidth;\n    ctx.beginPath();\n    ctx.moveTo(originX + start[0] * width, originY + start[1] * height);\n    ctx.lineTo(originX + end[0] * width, originY + end[1] * height);\n    ctx.stroke();\n    ctx.closePath();\n  }\n\n  get start() {\n    return this.__start;\n  }\n  get end() {\n    return this.__end;\n  }\n}\n\nexport default Line;\n","import Geom from './Geom';\n\nclass Polygon extends Geom {\n  constructor(props) {\n    super(props);\n    this.__tagName = '$polygon';\n    this.__pointList = [];\n    if(Array.isArray(this.props.pointList)) {\n      this.__pointList = this.props.pointList;\n    }\n  }\n\n  render() {\n    super.render();\n    let { x, y, width, height, style, ctx, pointList } = this;\n    let {\n      borderTopWidth,\n      borderLeftWidth,\n      stroke,\n      strokeWidth,\n    } = style;\n    let originX = x + borderLeftWidth.value;\n    let originY = y + borderTopWidth.value;\n    ctx.strokeStyle = stroke;\n    ctx.lineWidth = strokeWidth;\n    ctx.beginPath();\n    ctx.moveTo(originX + pointList[0][0] * width, originY + pointList[0][1] * height);\n    for(let i = 1, len = pointList.length; i < len; i++) {\n      let point = pointList[i];\n      ctx.lineTo(originX + point[0] * width, originY + point[1] * height);\n    }\n    ctx.stroke();\n    ctx.closePath();\n  }\n\n  get pointList() {\n    return this.__pointList;\n  }\n}\n\nexport default Polygon;\n","import Dom from './node/Dom';\nimport Canvas from './node/Canvas';\nimport Geom from './geom/Geom';\nimport Line from './geom/Line';\nimport Polygon from './geom/Polygon';\n\nlet karas = {\n  render(canvas, dom) {\n    if(!canvas instanceof Canvas) {\n      throw new Error('render root muse be canvas');\n    }\n    if(dom) {\n      canvas.appendTo(dom);\n    }\n    return canvas;\n  },\n  createVd(tagName, props, children) {\n    if(tagName === 'canvas') {\n      return new Canvas(props, children);\n    }\n    if(Dom.isValid(tagName)) {\n      return new Dom(tagName, props, children);\n    }\n    throw new Error('can not use marker: ' + tagName);\n  },\n  createGm(tagName, props) {\n    if(Geom.isValid(tagName)) {\n      switch(tagName) {\n        case '$line':\n          return new Line(props);\n        case '$polygon':\n          return new Polygon(props);\n      }\n    }\n    throw new Error('can not use geom marker: ' + tagName);\n  },\n  createCp(tagName, props, children) {},\n};\n\nif(typeof window != 'undefined') {\n  window.karas = karas;\n}\n\nexport default karas;\n"],"names":["arr2hash","arr","hash","i","len","length","item","Array","isArray","list","Object","keys","j","k","hash2arr","push","spread","temp","splice","Node","props","__props","__x","__y","__width","__height","__prev","__next","__ctx","__parent","__style","style","__baseLine","AUTO","PX","PERCENT","arial","lhr","car","blr","mdr","lgr","RESET","display","borderSizing","marginTop","marginRight","marginBottom","marginLeft","paddingTop","paddingRight","paddingBottom","paddingLeft","fontSize","fontFamily","color","fontStyle","fontWeight","lineHeight","borderTopWidth","borderRightWidth","borderBottomWidth","borderLeftWidth","borderTopStyle","borderRightStyle","borderBottomStyle","borderLeftStyle","verticalAlign","width","height","flexGrow","flexShrink","flexBasis","flexDirection","justifyContent","alignItem","textAlign","stroke","strokeWidth","reset","forEach","v","toString","isType","type","obj","call","isNumber","joinSourceArray","res","stringify","s","isNil","encodeHtml","prop","replace","undefined","util","isObject","isString","isFunction","isBoolean","isDate","parserOneBorder","direction","key","w","exec","c","indexOf","normalize","hasOwnProperty","background","bgc","backgroundColor","flex","test","parseFloat","border","borderTop","borderRight","borderBottom","borderLeft","unit","value","Math","max","font","setFontStyle","getBaseLine","normal","LineBox","ctx","x","y","content","__content","fillStyle","fillText","css","diff","CHAR_WIDTH_CACHE","Text","__lineBoxes","__charWidthList","__charWidth","__textWidth","charWidthList","cache","sum","char","charAt","mw","measureText","charWidth","data","isVirtual","h","maxX","lineBoxes","begin","count","lineBox","slice","render","tw","__offsetX","__offsetY","n","textWidth","min","last","baseLine","LineGroup","__list","__calHeight","__calBaseLine","TAG_NAME","Geom","isDirectionRow","b","main","__preLayBlock","__preLayFlex","__preLayInline","fixedWidth","fixedHeight","borderTopColor","borderRightColor","borderBottomColor","borderLeftColor","beginPath","rect","fill","closePath","lineWidth","strokeStyle","y2","moveTo","lineTo","x2","__tagName","INLINE","Dom","tagName","children","__children","__lineGroups","__traverseChildren","prev","parent","Error","__traverse","parentStyle","__initStyle","__measure","__tryLayInline","isRecursion","__calAutoBasis","b2","min2","max2","__preLay","lineGroup","add","outerWidth","fw","lineGroups","size","outerHeight","growList","shrinkList","basisList","minList","growSum","shrinkSum","basisSum","maxSum","maxCross","free","isOverflow","shrink","grow","overflow","child","center","between","around","getDom","dom","o","document","querySelector","renderProp","Canvas","__node","parseInt","isNaN","initProps","nodeName","toUpperCase","setAttribute","genHtml","insertAdjacentHTML","canvas","querySelectorAll","window","getComputedStyle","getPropertyValue","getContext","Line","__start","__end","start","end","originX","originY","Polygon","__pointList","pointList","point","karas","appendTo","createVd","isValid","createGm","createCp"],"mappings":"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"}